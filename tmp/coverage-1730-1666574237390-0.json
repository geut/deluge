{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":8127,"endOffset":8198,"count":36}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":8203,"endOffset":8252,"count":375}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8257,"endOffset":8302,"count":27}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":9865,"endOffset":9932,"count":9}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":10590,"endOffset":10618,"count":1202}],"isBlockCoverage":true},{"functionName":"SafeWeakMap","ranges":[{"startOffset":10761,"endOffset":10789,"count":6}],"isBlockCoverage":true},{"functionName":"SafeSet","ranges":[{"startOffset":10917,"endOffset":10945,"count":1199}],"isBlockCoverage":true},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":11367,"endOffset":11423,"count":1}],"isBlockCoverage":true},{"functionName":"SafeWeakRef","ranges":[{"startOffset":11575,"endOffset":11613,"count":61}],"isBlockCoverage":true},{"functionName":"SafePromise","ranges":[{"startOffset":11760,"endOffset":11802,"count":78}],"isBlockCoverage":true},{"functionName":"primordials.PromisePrototypeCatch","ranges":[{"startOffset":11847,"endOffset":11934,"count":6}],"isBlockCoverage":true},{"functionName":"primordials.SafePromisePrototypeFinally","ranges":[{"startOffset":12431,"endOffset":12704,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12576,"endOffset":12700,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12606,"endOffset":12655,"count":4}],"isBlockCoverage":true},{"functionName":"arrayToSafePromiseIterable","ranges":[{"startOffset":12897,"endOffset":13132,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13000,"endOffset":13122,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13040,"endOffset":13121,"count":9},{"startOffset":13085,"endOffset":13094,"count":6},{"startOffset":13095,"endOffset":13114,"count":3}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAll","ranges":[{"startOffset":13302,"endOffset":13529,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13440,"endOffset":13525,"count":18}],"isBlockCoverage":true}]},{"scriptId":"9","url":"node:internal/bootstrap/loaders","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5239,"endOffset":5501,"count":1238},{"startOffset":5341,"endOffset":5481,"count":8}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":5646,"endOffset":5800,"count":8126},{"startOffset":5782,"endOffset":5797,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":7482,"endOffset":7598,"count":4162},{"startOffset":7566,"endOffset":7593,"count":192}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":7749,"endOffset":7826,"count":450}],"isBlockCoverage":true},{"functionName":"getSchemeOnlyModuleNames","ranges":[{"startOffset":7837,"endOffset":7912,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":7984,"endOffset":8678,"count":194},{"startOffset":8047,"endOffset":8239,"count":0},{"startOffset":8303,"endOffset":8600,"count":13},{"startOffset":8562,"endOffset":8566,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":8682,"endOffset":9323,"count":196},{"startOffset":8720,"endOffset":8739,"count":183},{"startOffset":8739,"endOffset":9322,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9050,"endOffset":9163,"count":13}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":9619,"endOffset":9963,"count":207},{"startOffset":9738,"endOffset":9953,"count":8126},{"startOffset":9815,"endOffset":9824,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":9967,"endOffset":10552,"count":2037},{"startOffset":10016,"endOffset":10031,"count":64},{"startOffset":10033,"endOffset":10067,"count":1979},{"startOffset":10067,"endOffset":10206,"count":58},{"startOffset":10206,"endOffset":10241,"count":1},{"startOffset":10242,"endOffset":10263,"count":57},{"startOffset":10417,"endOffset":10551,"count":58}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":10750,"endOffset":11121,"count":1848},{"startOffset":10808,"endOffset":10839,"count":5},{"startOffset":10839,"endOffset":11023,"count":1843},{"startOffset":11023,"endOffset":11078,"count":0},{"startOffset":11078,"endOffset":11120,"count":1843}],"isBlockCoverage":true}]},{"scriptId":"10","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3516,"endOffset":3783,"count":4},{"startOffset":3644,"endOffset":3782,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4149,"endOffset":4180,"count":2}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/errors","functions":[{"functionName":"prepareStackTrace","ranges":[{"startOffset":2155,"endOffset":3643,"count":2},{"startOffset":2332,"endOffset":2448,"count":0},{"startOffset":2579,"endOffset":3075,"count":0},{"startOffset":3224,"endOffset":3642,"count":0}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":3685,"endOffset":4392,"count":2},{"startOffset":4020,"endOffset":4391,"count":0}],"isBlockCoverage":true},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5382,"endOffset":5678,"count":81},{"startOffset":5525,"endOffset":5568,"count":0},{"startOffset":5647,"endOffset":5675,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":9878,"endOffset":10880,"count":21}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10625,"endOffset":10703,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":11028,"endOffset":11293,"count":6}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":11915,"endOffset":12786,"count":21},{"startOffset":12327,"endOffset":12785,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":12804,"endOffset":12884,"count":137}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":12941,"endOffset":13093,"count":137}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13146,"endOffset":13548,"count":27}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":13878,"endOffset":15119,"count":6},{"startOffset":13961,"endOffset":13979,"count":0},{"startOffset":14173,"endOffset":14242,"count":0},{"startOffset":14857,"endOffset":14979,"count":18},{"startOffset":14905,"endOffset":14923,"count":12},{"startOffset":14925,"endOffset":14948,"count":6},{"startOffset":14948,"endOffset":14979,"count":12},{"startOffset":15051,"endOffset":15077,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47574,"endOffset":47727,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52834,"endOffset":53150,"count":6},{"startOffset":52903,"endOffset":53009,"count":0},{"startOffset":53114,"endOffset":53140,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/util","functions":[{"functionName":"toUSVString","ranges":[{"startOffset":1324,"endOffset":1636,"count":4},{"startOffset":1593,"endOffset":1635,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2383,"endOffset":3577,"count":8},{"startOffset":2457,"endOffset":2477,"count":0},{"startOffset":2566,"endOffset":2620,"count":0},{"startOffset":2652,"endOffset":2681,"count":7},{"startOffset":3331,"endOffset":3553,"count":6}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":2707,"endOffset":3189,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":3920,"endOffset":3994,"count":1},{"startOffset":3966,"endOffset":3992,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":4173,"endOffset":4304,"count":2183},{"startOffset":4243,"endOffset":4261,"count":973},{"startOffset":4263,"endOffset":4277,"count":1211},{"startOffset":4277,"endOffset":4303,"count":972}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":4306,"endOffset":6057,"count":972},{"startOffset":4360,"endOffset":4604,"count":0},{"startOffset":4609,"endOffset":4739,"count":0},{"startOffset":4744,"endOffset":5148,"count":0},{"startOffset":5189,"endOffset":5205,"count":0},{"startOffset":5254,"endOffset":5270,"count":0},{"startOffset":5299,"endOffset":5315,"count":0},{"startOffset":5364,"endOffset":5380,"count":0},{"startOffset":5445,"endOffset":5461,"count":0},{"startOffset":5510,"endOffset":5526,"count":0},{"startOffset":5544,"endOffset":5690,"count":0},{"startOffset":5695,"endOffset":5842,"count":0},{"startOffset":5847,"endOffset":6001,"count":0},{"startOffset":6006,"endOffset":6051,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":6690,"endOffset":6846,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6741,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":8855,"endOffset":10421,"count":8},{"startOffset":8975,"endOffset":9031,"count":1},{"startOffset":9118,"endOffset":9394,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":9594,"endOffset":10113,"count":0}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":733,"endOffset":792,"count":3746}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":794,"endOffset":856,"count":3581}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1480,"endOffset":1806,"count":1253},{"startOffset":1573,"endOffset":1741,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1851,"endOffset":2232,"count":2489},{"startOffset":1971,"endOffset":2025,"count":0},{"startOffset":2065,"endOffset":2119,"count":0},{"startOffset":2162,"endOffset":2228,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2278,"endOffset":2853,"count":3746},{"startOffset":2450,"endOffset":2518,"count":0},{"startOffset":2544,"endOffset":2732,"count":0},{"startOffset":2769,"endOffset":2849,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2897,"endOffset":3401,"count":2331},{"startOffset":2959,"endOffset":3023,"count":0},{"startOffset":3048,"endOffset":3293,"count":0},{"startOffset":3309,"endOffset":3323,"count":0},{"startOffset":3325,"endOffset":3399,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":3405,"endOffset":3537,"count":48892},{"startOffset":3481,"endOffset":3535,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3539,"endOffset":4007,"count":1246},{"startOffset":3637,"endOffset":3691,"count":0},{"startOffset":3712,"endOffset":3726,"count":0},{"startOffset":3744,"endOffset":3758,"count":0},{"startOffset":3799,"endOffset":3820,"count":0},{"startOffset":3823,"endOffset":4005,"count":0}],"isBlockCoverage":true},{"functionName":"validateBoolean","ranges":[{"startOffset":4384,"endOffset":4519,"count":1166},{"startOffset":4462,"endOffset":4517,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4731,"endOffset":5290,"count":2064},{"startOffset":4847,"endOffset":4854,"count":2061},{"startOffset":4855,"endOffset":4875,"count":3},{"startOffset":4921,"endOffset":4928,"count":2061},{"startOffset":4929,"endOffset":4952,"count":3},{"startOffset":4993,"endOffset":5000,"count":2061},{"startOffset":5001,"endOffset":5019,"count":3},{"startOffset":5040,"endOffset":5057,"count":2061},{"startOffset":5083,"endOffset":5105,"count":2061},{"startOffset":5145,"endOffset":5215,"count":0},{"startOffset":5218,"endOffset":5286,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5332,"endOffset":5610,"count":2346},{"startOffset":5394,"endOffset":5457,"count":0},{"startOffset":5490,"endOffset":5608,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6028,"endOffset":6258,"count":1244},{"startOffset":6093,"endOffset":6256,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":6262,"endOffset":6596,"count":972},{"startOffset":6430,"endOffset":6449,"count":0},{"startOffset":6451,"endOffset":6594,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":6740,"endOffset":7119,"count":3},{"startOffset":6835,"endOffset":6862,"count":0},{"startOffset":6899,"endOffset":6940,"count":0},{"startOffset":7035,"endOffset":7098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7573,"endOffset":7689,"count":1178},{"startOffset":7631,"endOffset":7687,"count":0}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/util/types","functions":[{"functionName":"isTypedArray","ranges":[{"startOffset":131,"endOffset":234,"count":16}],"isBlockCoverage":true},{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":3151}],"isBlockCoverage":true},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1346,"endOffset":1460,"count":122}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":1208},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":519,"endOffset":991,"count":1},{"startOffset":610,"endOffset":947,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":885,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":973,"endOffset":984,"count":5}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1419,"endOffset":1427,"count":8797}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1430,"endOffset":1995,"count":5},{"startOffset":1505,"endOffset":1967,"count":3},{"startOffset":1524,"endOffset":1920,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1613,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2215,"endOffset":3240,"count":8}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":2246,"endOffset":2342,"count":5}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2357,"endOffset":2751,"count":5},{"startOffset":2604,"endOffset":2634,"count":3},{"startOffset":2641,"endOffset":2680,"count":1},{"startOffset":2687,"endOffset":2741,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2781,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2869,"endOffset":3064,"count":5},{"startOffset":2917,"endOffset":2947,"count":3},{"startOffset":2954,"endOffset":2993,"count":1},{"startOffset":3000,"endOffset":3054,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3135,"endOffset":3169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":2848,"endOffset":6158,"count":3},{"startOffset":2938,"endOffset":6120,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3392,"endOffset":3496,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3554,"endOffset":3743,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4032,"endOffset":4556,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4693,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5124,"endOffset":5312,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5372,"endOffset":5563,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5623,"endOffset":5828,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":5918,"endOffset":6107,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6292,"endOffset":6361,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6744,"endOffset":6800,"count":3}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":7708,"endOffset":7786,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7894,"endOffset":7942,"count":3}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9836,"endOffset":10433,"count":6},{"startOffset":9887,"endOffset":9947,"count":2},{"startOffset":9949,"endOffset":10020,"count":4},{"startOffset":10090,"endOffset":10109,"count":4},{"startOffset":10111,"endOffset":10244,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13314,"endOffset":15616,"count":7},{"startOffset":13459,"endOffset":13497,"count":0},{"startOffset":13505,"endOffset":13539,"count":0},{"startOffset":13563,"endOffset":13592,"count":0},{"startOffset":13598,"endOffset":13635,"count":0},{"startOffset":13707,"endOffset":14674,"count":0},{"startOffset":14742,"endOffset":14755,"count":4},{"startOffset":14755,"endOffset":15075,"count":3},{"startOffset":15002,"endOffset":15020,"count":0},{"startOffset":15022,"endOffset":15071,"count":0},{"startOffset":15075,"endOffset":15598,"count":0},{"startOffset":15598,"endOffset":15615,"count":3}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":15619,"endOffset":17512,"count":5},{"startOffset":15799,"endOffset":15883,"count":0},{"startOffset":16068,"endOffset":16329,"count":2},{"startOffset":16532,"endOffset":17492,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":17690,"endOffset":17782,"count":5}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":19609,"endOffset":20903,"count":1},{"startOffset":19758,"endOffset":19770,"count":0},{"startOffset":19843,"endOffset":19855,"count":0},{"startOffset":19885,"endOffset":19914,"count":0},{"startOffset":19967,"endOffset":20001,"count":0},{"startOffset":20176,"endOffset":20877,"count":0}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":3926,"endOffset":4085,"count":167}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4101,"endOffset":4223,"count":903},{"startOffset":4175,"endOffset":4221,"count":808}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8533,"endOffset":9497,"count":53},{"startOffset":8662,"endOffset":8713,"count":0},{"startOffset":8715,"endOffset":9496,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10309,"endOffset":10464,"count":1246},{"startOffset":10395,"endOffset":10462,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":10991,"endOffset":11066,"count":1244}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11307,"endOffset":11396,"count":2}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":11696,"endOffset":12028,"count":1244},{"startOffset":11739,"endOffset":11773,"count":0},{"startOffset":11812,"endOffset":11991,"count":879},{"startOffset":11860,"endOffset":11873,"count":159},{"startOffset":11991,"endOffset":12027,"count":365}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12030,"endOffset":12576,"count":53},{"startOffset":12156,"endOffset":12205,"count":29},{"startOffset":12205,"endOffset":12251,"count":24},{"startOffset":12251,"endOffset":12264,"count":8},{"startOffset":12264,"endOffset":12397,"count":24},{"startOffset":12397,"endOffset":12523,"count":0},{"startOffset":12523,"endOffset":12575,"count":24}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12578,"endOffset":13031,"count":53},{"startOffset":12664,"endOffset":12688,"count":52},{"startOffset":12690,"endOffset":12809,"count":1},{"startOffset":12727,"endOffset":12751,"count":0},{"startOffset":12809,"endOffset":12991,"count":52},{"startOffset":12886,"endOffset":12927,"count":0},{"startOffset":12963,"endOffset":12987,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":14473,"endOffset":14527,"count":16}],"isBlockCoverage":true},{"functionName":"isEncoding","ranges":[{"startOffset":14895,"endOffset":15046,"count":1211}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16262,"endOffset":16530,"count":51},{"startOffset":16384,"endOffset":16392,"count":35},{"startOffset":16468,"endOffset":16476,"count":17}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":16665,"endOffset":16729,"count":2}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":16742,"endOffset":16788,"count":1256}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":17111,"endOffset":17157,"count":2}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":18602,"endOffset":18653,"count":51}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18666,"endOffset":18732,"count":22}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":20048,"endOffset":21872,"count":1310},{"startOffset":20135,"endOffset":20434,"count":1258},{"startOffset":20174,"endOffset":20198,"count":1256},{"startOffset":20198,"endOffset":20254,"count":2},{"startOffset":20254,"endOffset":20434,"count":0},{"startOffset":20439,"endOffset":20858,"count":1},{"startOffset":20503,"endOffset":20858,"count":0},{"startOffset":20863,"endOffset":21017,"count":0},{"startOffset":21022,"endOffset":21178,"count":0},{"startOffset":21183,"endOffset":21564,"count":51},{"startOffset":21257,"endOffset":21283,"count":0},{"startOffset":21343,"endOffset":21455,"count":0},{"startOffset":21465,"endOffset":21564,"count":0},{"startOffset":21569,"endOffset":21701,"count":0},{"startOffset":21706,"endOffset":21866,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":23425,"endOffset":24004,"count":1296},{"startOffset":23497,"endOffset":23545,"count":38},{"startOffset":23545,"endOffset":23597,"count":1258},{"startOffset":23597,"endOffset":23607,"count":0},{"startOffset":23607,"endOffset":23670,"count":1258},{"startOffset":23637,"endOffset":23647,"count":0},{"startOffset":23670,"endOffset":23696,"count":1258},{"startOffset":23696,"endOffset":23708,"count":0},{"startOffset":23714,"endOffset":23724,"count":1258},{"startOffset":23724,"endOffset":23745,"count":0},{"startOffset":23745,"endOffset":23771,"count":1258},{"startOffset":23771,"endOffset":23781,"count":0},{"startOffset":23781,"endOffset":23817,"count":1258},{"startOffset":23817,"endOffset":23851,"count":0},{"startOffset":23851,"endOffset":23922,"count":1258},{"startOffset":23922,"endOffset":23963,"count":0},{"startOffset":23963,"endOffset":24003,"count":1258}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26353,"endOffset":26453,"count":1438}],"isBlockCoverage":true},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29752,"endOffset":30016,"count":167},{"startOffset":29820,"endOffset":29848,"count":0},{"startOffset":29871,"endOffset":29878,"count":0}],"isBlockCoverage":true},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30294,"endOffset":30430,"count":534}],"isBlockCoverage":true},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30685,"endOffset":30757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/encoding","functions":[{"functionName":"validateDecoder","ranges":[{"startOffset":1325,"endOffset":1450,"count":2},{"startOffset":1406,"endOffset":1448,"count":0}],"isBlockCoverage":true},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8696,"endOffset":8875,"count":1},{"startOffset":8807,"endOffset":8874,"count":0}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10382,"endOffset":11187,"count":1},{"startOffset":10692,"endOffset":10739,"count":0},{"startOffset":10823,"endOffset":10846,"count":0},{"startOffset":10887,"endOffset":10915,"count":0},{"startOffset":11017,"endOffset":11064,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":11194,"endOffset":12032,"count":2},{"startOffset":11306,"endOffset":11357,"count":0},{"startOffset":11394,"endOffset":11573,"count":0},{"startOffset":11788,"endOffset":11791,"count":0},{"startOffset":11909,"endOffset":11991,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1408,"endOffset":1876,"count":1}],"isBlockCoverage":true},{"functionName":"hrtime","ranges":[{"startOffset":1925,"endOffset":2427,"count":37},{"startOffset":1996,"endOffset":2346,"count":18},{"startOffset":2058,"endOffset":2123,"count":0},{"startOffset":2292,"endOffset":2301,"count":0},{"startOffset":2321,"endOffset":2333,"count":0},{"startOffset":2346,"endOffset":2426,"count":19}],"isBlockCoverage":true},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":11332,"endOffset":11662,"count":1},{"startOffset":11412,"endOffset":11587,"count":0},{"startOffset":11619,"endOffset":11660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/console/constructor","functions":[{"functionName":"value","ranges":[{"startOffset":5714,"endOffset":6356,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5923,"endOffset":6018,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6030,"endOffset":6060,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6189,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6300,"endOffset":6330,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6447,"endOffset":7849,"count":1}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10609,"endOffset":11498,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10677,"endOffset":11495,"count":0}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20366,"endOffset":20509,"count":1}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:internal/url","functions":[{"functionName":"URLContext","ranges":[{"startOffset":3712,"endOffset":3935,"count":2454}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":4337,"endOffset":7204,"count":2439},{"startOffset":4452,"endOffset":7142,"count":0}],"isBlockCoverage":true},{"functionName":"onParseComplete","ranges":[{"startOffset":14679,"endOffset":15372,"count":2439},{"startOffset":14934,"endOffset":14944,"count":0},{"startOffset":15007,"endOffset":15017,"count":0},{"startOffset":15098,"endOffset":15102,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":15374,"endOffset":15449,"count":15}],"isBlockCoverage":true},{"functionName":"onParsePathComplete","ranges":[{"startOffset":16634,"endOffset":17128,"count":1343},{"startOffset":16900,"endOffset":16968,"count":0}],"isBlockCoverage":true},{"functionName":"URL","ranges":[{"startOffset":17486,"endOffset":17890,"count":2454},{"startOffset":17633,"endOffset":17685,"count":497}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17979,"endOffset":18072,"count":4004}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19288,"endOffset":20547,"count":2046},{"startOffset":19627,"endOffset":20094,"count":2044},{"startOffset":19802,"endOffset":19951,"count":0},{"startOffset":19981,"endOffset":20016,"count":0},{"startOffset":20066,"endOffset":20088,"count":0},{"startOffset":20123,"endOffset":20156,"count":2},{"startOffset":20156,"endOffset":20367,"count":2044},{"startOffset":20192,"endOffset":20214,"count":0},{"startOffset":20215,"endOffset":20236,"count":0},{"startOffset":20238,"endOffset":20268,"count":0},{"startOffset":20420,"endOffset":20443,"count":0},{"startOffset":20501,"endOffset":20527,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":20604,"endOffset":20650,"count":522}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":20654,"endOffset":20700,"count":1524}],"isBlockCoverage":true},{"functionName":"get origin","ranges":[{"startOffset":20961,"endOffset":21530,"count":207},{"startOffset":21100,"endOffset":21328,"count":0},{"startOffset":21335,"endOffset":21347,"count":0},{"startOffset":21354,"endOffset":21367,"count":0},{"startOffset":21374,"endOffset":21388,"count":0},{"startOffset":21395,"endOffset":21406,"count":0},{"startOffset":21413,"endOffset":21494,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":21534,"endOffset":21587,"count":309}],"isBlockCoverage":true},{"functionName":"get hostname","ranges":[{"startOffset":23214,"endOffset":23271,"count":215}],"isBlockCoverage":true},{"functionName":"get pathname","ranges":[{"startOffset":24004,"endOffset":24209,"count":615},{"startOffset":24086,"endOffset":24105,"count":50},{"startOffset":24105,"endOffset":24143,"count":565},{"startOffset":24143,"endOffset":24153,"count":0},{"startOffset":24153,"endOffset":24208,"count":565}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":24213,"endOffset":24427,"count":1343},{"startOffset":24324,"endOffset":24331,"count":0}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":24431,"endOffset":24567,"count":4},{"startOffset":24506,"endOffset":24521,"count":0},{"startOffset":24539,"endOffset":24566,"count":0}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":24571,"endOffset":25088,"count":4},{"startOffset":24752,"endOffset":25034,"count":0}],"isBlockCoverage":true},{"functionName":"get hash","ranges":[{"startOffset":25165,"endOffset":25311,"count":4},{"startOffset":25244,"endOffset":25262,"count":0},{"startOffset":25280,"endOffset":25310,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":25315,"endOffset":25756,"count":4},{"startOffset":25526,"endOffset":25755,"count":0}],"isBlockCoverage":true},{"functionName":"initSearchParams","ranges":[{"startOffset":27644,"endOffset":27784,"count":2443},{"startOffset":27741,"endOffset":27783,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":38419,"endOffset":38923,"count":215},{"startOffset":38482,"endOffset":38538,"count":0},{"startOffset":38616,"endOffset":38882,"count":14692},{"startOffset":38647,"endOffset":38878,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":38925,"endOffset":39272,"count":215},{"startOffset":38992,"endOffset":39013,"count":12},{"startOffset":39013,"endOffset":39115,"count":203},{"startOffset":39051,"endOffset":39115,"count":0},{"startOffset":39153,"endOffset":39194,"count":0},{"startOffset":39214,"endOffset":39241,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":40032,"endOffset":40748,"count":1343},{"startOffset":40119,"endOffset":40184,"count":0},{"startOffset":40306,"endOffset":40373,"count":0},{"startOffset":40425,"endOffset":40490,"count":0},{"startOffset":40542,"endOffset":40614,"count":0},{"startOffset":40666,"endOffset":40727,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":40750,"endOffset":42001,"count":1343},{"startOffset":40838,"endOffset":40884,"count":0},{"startOffset":40886,"endOffset":41488,"count":0},{"startOffset":41787,"endOffset":41850,"count":1342},{"startOffset":41810,"endOffset":41849,"count":0},{"startOffset":41852,"endOffset":41905,"count":1},{"startOffset":41913,"endOffset":41929,"count":1}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":42003,"endOffset":42122,"count":3383},{"startOffset":42096,"endOffset":42119,"count":207}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":42124,"endOffset":42269,"count":3151},{"startOffset":42207,"endOffset":42228,"count":3147},{"startOffset":42228,"endOffset":42268,"count":4}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1825,"endOffset":1902,"count":1210405}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2137,"endOffset":4085,"count":15413},{"startOffset":2354,"endOffset":4069,"count":1210078},{"startOffset":2387,"endOffset":2429,"count":1194665},{"startOffset":2429,"endOffset":2520,"count":15413},{"startOffset":2472,"endOffset":2478,"count":15086},{"startOffset":2478,"endOffset":2520,"count":327},{"startOffset":2520,"endOffset":2553,"count":1194992},{"startOffset":2553,"endOffset":3970,"count":162177},{"startOffset":2585,"endOffset":2598,"count":139293},{"startOffset":2600,"endOffset":2625,"count":23909},{"startOffset":2625,"endOffset":3927,"count":138268},{"startOffset":2647,"endOffset":3682,"count":220},{"startOffset":2676,"endOffset":2702,"count":219},{"startOffset":2703,"endOffset":2777,"count":0},{"startOffset":2778,"endOffset":2852,"count":0},{"startOffset":2886,"endOffset":3363,"count":219},{"startOffset":3006,"endOffset":3082,"count":1},{"startOffset":3082,"endOffset":3280,"count":218},{"startOffset":3363,"endOffset":3532,"count":1},{"startOffset":3391,"endOffset":3532,"count":0},{"startOffset":3542,"endOffset":3571,"count":1},{"startOffset":3571,"endOffset":3674,"count":0},{"startOffset":3682,"endOffset":3927,"count":138048},{"startOffset":3728,"endOffset":3797,"count":122636},{"startOffset":3797,"endOffset":3872,"count":15412},{"startOffset":3927,"endOffset":3970,"count":161958},{"startOffset":3970,"endOffset":4065,"count":1032815},{"startOffset":3998,"endOffset":4012,"count":14085},{"startOffset":4014,"endOffset":4035,"count":1579},{"startOffset":4035,"endOffset":4065,"count":1031236}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":33774,"endOffset":34691,"count":15078},{"startOffset":33897,"endOffset":33917,"count":40892},{"startOffset":33924,"endOffset":34245,"count":25814},{"startOffset":33962,"endOffset":33974,"count":0},{"startOffset":34071,"endOffset":34098,"count":1},{"startOffset":34098,"endOffset":34245,"count":25813},{"startOffset":34630,"endOffset":34680,"count":0},{"startOffset":34681,"endOffset":34686,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":34757,"endOffset":35370,"count":335},{"startOffset":34843,"endOffset":34854,"count":0},{"startOffset":35182,"endOffset":35276,"count":2},{"startOffset":35225,"endOffset":35263,"count":0},{"startOffset":35264,"endOffset":35269,"count":0},{"startOffset":35276,"endOffset":35310,"count":333},{"startOffset":35310,"endOffset":35322,"count":6},{"startOffset":35322,"endOffset":35358,"count":333},{"startOffset":35359,"endOffset":35365,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":35437,"endOffset":35593,"count":3243}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":35662,"endOffset":36076,"count":334},{"startOffset":35711,"endOffset":35722,"count":0},{"startOffset":35781,"endOffset":35988,"count":670},{"startOffset":35917,"endOffset":35930,"count":334},{"startOffset":35930,"endOffset":35974,"count":336},{"startOffset":36025,"endOffset":36036,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":36166,"endOffset":38526,"count":19},{"startOffset":36279,"endOffset":36289,"count":0},{"startOffset":36416,"endOffset":36426,"count":0},{"startOffset":36699,"endOffset":36706,"count":0},{"startOffset":36780,"endOffset":37015,"count":570},{"startOffset":36928,"endOffset":36934,"count":0},{"startOffset":36991,"endOffset":37009,"count":76},{"startOffset":37347,"endOffset":37529,"count":0},{"startOffset":37537,"endOffset":37994,"count":0},{"startOffset":38000,"endOffset":38525,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":38592,"endOffset":38668,"count":10129}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":38734,"endOffset":39410,"count":5131},{"startOffset":38817,"endOffset":38828,"count":0},{"startOffset":39002,"endOffset":39255,"count":77457},{"startOffset":39073,"endOffset":39157,"count":5131},{"startOffset":39157,"endOffset":39249,"count":72326},{"startOffset":39283,"endOffset":39310,"count":0},{"startOffset":39347,"endOffset":39359,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":39503,"endOffset":41903,"count":1180},{"startOffset":39558,"endOffset":39585,"count":0},{"startOffset":39714,"endOffset":39731,"count":0},{"startOffset":39732,"endOffset":39760,"count":0},{"startOffset":39762,"endOffset":41277,"count":0},{"startOffset":41325,"endOffset":41810,"count":19348},{"startOffset":41396,"endOffset":41620,"count":1180},{"startOffset":41620,"endOffset":41804,"count":18168},{"startOffset":41642,"endOffset":41804,"count":1180},{"startOffset":41838,"endOffset":41848,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":41969,"endOffset":43659,"count":16},{"startOffset":42302,"endOffset":43264,"count":165},{"startOffset":42398,"endOffset":42644,"count":16},{"startOffset":42618,"endOffset":42644,"count":0},{"startOffset":42644,"endOffset":42667,"count":149},{"startOffset":42667,"endOffset":42824,"count":16},{"startOffset":42824,"endOffset":42854,"count":149},{"startOffset":42854,"endOffset":43054,"count":16},{"startOffset":42983,"endOffset":43046,"count":0},{"startOffset":43054,"endOffset":43258,"count":133},{"startOffset":43081,"endOffset":43258,"count":99},{"startOffset":43503,"endOffset":43535,"count":0},{"startOffset":43536,"endOffset":43574,"count":0},{"startOffset":43577,"endOffset":43601,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":43886,"endOffset":46358,"count":99},{"startOffset":44036,"endOffset":44047,"count":0},{"startOffset":44217,"endOffset":44247,"count":0},{"startOffset":44567,"endOffset":45529,"count":497},{"startOffset":44663,"endOffset":44909,"count":71},{"startOffset":44883,"endOffset":44909,"count":0},{"startOffset":44909,"endOffset":44932,"count":426},{"startOffset":44932,"endOffset":45089,"count":85},{"startOffset":45089,"endOffset":45119,"count":426},{"startOffset":45119,"endOffset":45319,"count":0},{"startOffset":45319,"endOffset":45523,"count":426},{"startOffset":45346,"endOffset":45523,"count":0},{"startOffset":45551,"endOffset":46205,"count":85},{"startOffset":45589,"endOffset":45602,"count":14},{"startOffset":45603,"endOffset":45606,"count":14},{"startOffset":45607,"endOffset":45618,"count":71},{"startOffset":45646,"endOffset":45743,"count":0},{"startOffset":45744,"endOffset":45919,"count":0},{"startOffset":46000,"endOffset":46199,"count":0},{"startOffset":46236,"endOffset":46291,"count":71},{"startOffset":46291,"endOffset":46337,"count":28}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/event_target","functions":[{"functionName":"EventEmitterMixin","ranges":[{"startOffset":26886,"endOffset":27308,"count":1}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":26955,"endOffset":27096,"count":2}],"isBlockCoverage":true}]},{"scriptId":"45","url":"node:util","functions":[{"functionName":"inherits","ranges":[{"startOffset":5863,"endOffset":6500,"count":1},{"startOffset":5948,"endOffset":6005,"count":0},{"startOffset":6064,"endOffset":6131,"count":0},{"startOffset":6174,"endOffset":6304,"count":0}],"isBlockCoverage":true}]},{"scriptId":"48","url":"node:internal/perf/utils","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":499,"endOffset":563,"count":1}],"isBlockCoverage":true}]},{"scriptId":"49","url":"node:timers","functions":[{"functionName":"clearTimeout","ranges":[{"startOffset":5182,"endOffset":5548,"count":1230},{"startOffset":5225,"endOffset":5244,"count":0},{"startOffset":5246,"endOffset":5313,"count":0},{"startOffset":5376,"endOffset":5546,"count":0}],"isBlockCoverage":true}]},{"scriptId":"51","url":"node:stream","functions":[{"functionName":"get","ranges":[{"startOffset":3813,"endOffset":3845,"count":3}],"isBlockCoverage":true}]},{"scriptId":"56","url":"node:internal/streams/destroy","functions":[{"functionName":"undestroy","ranges":[{"startOffset":3046,"endOffset":3661,"count":2}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":4608,"endOffset":5014,"count":4},{"startOffset":4705,"endOffset":5013,"count":0}],"isBlockCoverage":true}]},{"scriptId":"57","url":"node:internal/streams/duplex","functions":[{"functionName":"Duplex","ranges":[{"startOffset":1996,"endOffset":2420,"count":2},{"startOffset":2060,"endOffset":2087,"count":0},{"startOffset":2242,"endOffset":2264,"count":1},{"startOffset":2308,"endOffset":2330,"count":1}],"isBlockCoverage":true}]},{"scriptId":"58","url":"node:internal/streams/readable","functions":[{"functionName":"ReadableState","ranges":[{"startOffset":2497,"endOffset":6226,"count":2},{"startOffset":2896,"endOffset":2939,"count":0},{"startOffset":3472,"endOffset":3508,"count":0},{"startOffset":6125,"endOffset":6224,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6229,"endOffset":7126,"count":2},{"startOffset":6297,"endOffset":6326,"count":0},{"startOffset":6649,"endOffset":6675,"count":0},{"startOffset":6730,"endOffset":6762,"count":0},{"startOffset":6819,"endOffset":6855,"count":0},{"startOffset":6879,"endOffset":6891,"count":0},{"startOffset":6899,"endOffset":6946,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7013,"endOffset":7122,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":27732,"endOffset":28639,"count":3},{"startOffset":27864,"endOffset":28196,"count":0},{"startOffset":28225,"endOffset":28622,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":35822,"endOffset":35952,"count":1}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/streams/legacy","functions":[{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":4}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:internal/streams/buffer_list","functions":[{"functionName":"BufferList","ranges":[{"startOffset":254,"endOffset":338,"count":2}],"isBlockCoverage":true}]},{"scriptId":"62","url":"node:internal/streams/state","functions":[{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":4},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":4},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":832,"count":4},{"startOffset":546,"endOffset":758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/streams/writable","functions":[{"functionName":"WritableState","ranges":[{"startOffset":2460,"endOffset":6983,"count":2},{"startOffset":2855,"endOffset":2898,"count":0},{"startOffset":3449,"endOffset":3485,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6985,"endOffset":7117,"count":2}],"isBlockCoverage":true},{"functionName":"Writable","ranges":[{"startOffset":7411,"endOffset":8948,"count":2},{"startOffset":8052,"endOffset":8106,"count":0},{"startOffset":8112,"endOffset":8141,"count":0},{"startOffset":8280,"endOffset":8308,"count":0},{"startOffset":8362,"endOffset":8392,"count":0},{"startOffset":8447,"endOffset":8479,"count":0},{"startOffset":8532,"endOffset":8560,"count":0},{"startOffset":8617,"endOffset":8653,"count":0},{"startOffset":8684,"endOffset":8731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8798,"endOffset":8944,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":23211,"endOffset":23345,"count":1}],"isBlockCoverage":true}]},{"scriptId":"76","url":"node:internal/perf/performance","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":4727,"endOffset":4931,"count":1}],"isBlockCoverage":true}]},{"scriptId":"81","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":586,"endOffset":916,"count":1},{"startOffset":647,"endOffset":914,"count":0}],"isBlockCoverage":true}]},{"scriptId":"83","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5442,"endOffset":5702,"count":22875},{"startOffset":5641,"endOffset":5661,"count":1497}],"isBlockCoverage":true},{"functionName":"accessSync","ranges":[{"startOffset":6464,"endOffset":6702,"count":1}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7869,"endOffset":8399,"count":9},{"startOffset":7944,"endOffset":7973,"count":0},{"startOffset":8281,"endOffset":8307,"count":0},{"startOffset":8309,"endOffset":8362,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":10583,"endOffset":10813,"count":1244},{"startOffset":10726,"endOffset":10738,"count":0},{"startOffset":10740,"endOffset":10795,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10815,"endOffset":11126,"count":1244},{"startOffset":10933,"endOffset":10985,"count":0},{"startOffset":11072,"endOffset":11084,"count":0},{"startOffset":11086,"endOffset":11103,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11128,"endOffset":11383,"count":1244},{"startOffset":11326,"endOffset":11338,"count":0},{"startOffset":11340,"endOffset":11357,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11607,"endOffset":13005,"count":1249},{"startOffset":11776,"endOffset":11782,"count":0},{"startOffset":11911,"endOffset":11921,"count":1244},{"startOffset":11922,"endOffset":11925,"count":0},{"startOffset":12055,"endOffset":12078,"count":0},{"startOffset":12078,"endOffset":12330,"count":1244},{"startOffset":12330,"endOffset":12699,"count":0},{"startOffset":12699,"endOffset":12759,"count":1244},{"startOffset":12759,"endOffset":12855,"count":0},{"startOffset":12855,"endOffset":12917,"count":1244},{"startOffset":12877,"endOffset":12917,"count":0},{"startOffset":12917,"endOffset":12943,"count":1244},{"startOffset":12943,"endOffset":12986,"count":1206},{"startOffset":12986,"endOffset":13004,"count":1244}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13550,"endOffset":13690,"count":1245}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":14682,"endOffset":15078,"count":1250}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":17747,"endOffset":18748,"count":1244},{"startOffset":17889,"endOffset":18095,"count":0},{"startOffset":18119,"endOffset":18140,"count":0},{"startOffset":18231,"endOffset":18250,"count":0},{"startOffset":18283,"endOffset":18413,"count":0}],"isBlockCoverage":true},{"functionName":"writeSync","ranges":[{"startOffset":22649,"endOffset":23791,"count":1},{"startOffset":22880,"endOffset":23030,"count":0},{"startOffset":23110,"endOffset":23135,"count":0},{"startOffset":23235,"endOffset":23271,"count":0},{"startOffset":23462,"endOffset":23741,"count":0}],"isBlockCoverage":true},{"functionName":"mkdirSync","ranges":[{"startOffset":34690,"endOffset":35396,"count":1},{"startOffset":34837,"endOffset":34862,"count":0},{"startOffset":35003,"endOffset":35023,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":36511,"endOffset":36933,"count":4},{"startOffset":36922,"endOffset":36930,"count":0}],"isBlockCoverage":true},{"functionName":"hasNoEntryError","ranges":[{"startOffset":38786,"endOffset":39001,"count":223},{"startOffset":38835,"endOffset":38918,"count":131},{"startOffset":38918,"endOffset":38937,"count":92},{"startOffset":38937,"endOffset":38982,"count":0},{"startOffset":38982,"endOffset":39000,"count":92}],"isBlockCoverage":true},{"functionName":"lstatSync","ranges":[{"startOffset":39717,"endOffset":40141,"count":1},{"startOffset":40019,"endOffset":40042,"count":0},{"startOffset":40044,"endOffset":40071,"count":0}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":40356,"endOffset":40777,"count":253},{"startOffset":40655,"endOffset":40678,"count":223},{"startOffset":40680,"endOffset":40707,"count":131},{"startOffset":40707,"endOffset":40776,"count":122}],"isBlockCoverage":true},{"functionName":"writeFileSync","ranges":[{"startOffset":58246,"endOffset":58956,"count":1},{"startOffset":58514,"endOffset":58523,"count":0},{"startOffset":58559,"endOffset":58565,"count":0},{"startOffset":58650,"endOffset":58656,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":64357,"endOffset":64567,"count":1187},{"startOffset":64424,"endOffset":64547,"count":2374},{"startOffset":64502,"endOffset":64541,"count":1187},{"startOffset":64547,"endOffset":64566,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":64572,"endOffset":64859,"count":1186},{"startOffset":64657,"endOffset":64687,"count":0},{"startOffset":64707,"endOffset":64858,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":65265,"endOffset":65340,"count":11564}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":65514,"endOffset":69426,"count":1630},{"startOffset":65638,"endOffset":65656,"count":0},{"startOffset":65782,"endOffset":65787,"count":1628},{"startOffset":65817,"endOffset":65852,"count":444},{"startOffset":65852,"endOffset":66414,"count":1186},{"startOffset":66414,"endOffset":66586,"count":0},{"startOffset":66586,"endOffset":66723,"count":1186},{"startOffset":66723,"endOffset":69353,"count":11564},{"startOffset":66835,"endOffset":66966,"count":1187},{"startOffset":66966,"endOffset":67124,"count":10377},{"startOffset":67211,"endOffset":67239,"count":11558},{"startOffset":67219,"endOffset":67224,"count":11540},{"startOffset":67241,"endOffset":67394,"count":10067},{"startOffset":67348,"endOffset":67372,"count":0},{"startOffset":67394,"endOffset":67455,"count":1497},{"startOffset":67455,"endOffset":67460,"count":1479},{"startOffset":67497,"endOffset":67546,"count":0},{"startOffset":67546,"endOffset":68850,"count":1497},{"startOffset":67898,"endOffset":67986,"count":1496},{"startOffset":67942,"endOffset":67947,"count":1478},{"startOffset":67986,"endOffset":68407,"count":1},{"startOffset":68346,"endOffset":68399,"count":0},{"startOffset":68407,"endOffset":68770,"count":1},{"startOffset":68814,"endOffset":68844,"count":1},{"startOffset":68850,"endOffset":69142,"count":1},{"startOffset":69142,"endOffset":69165,"count":0},{"startOffset":69167,"endOffset":69349,"count":0},{"startOffset":69353,"endOffset":69362,"count":1186},{"startOffset":69362,"endOffset":69367,"count":1184}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":78028,"endOffset":78219,"count":178},{"startOffset":78076,"endOffset":78217,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":80434,"endOffset":80502,"count":45}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":80559,"endOffset":80629,"count":45}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":80821,"endOffset":80897,"count":44}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":80962,"endOffset":81040,"count":44}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":81643,"endOffset":81739,"count":46}],"isBlockCoverage":true}]},{"scriptId":"84","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3564,"endOffset":3764,"count":2843},{"startOffset":3615,"endOffset":3646,"count":1211},{"startOffset":3648,"endOffset":3762,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":3783,"endOffset":3858,"count":29}],"isBlockCoverage":true},{"functionName":"isDirectory","ranges":[{"startOffset":3862,"endOffset":3923,"count":8}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":3927,"endOffset":3984,"count":29}],"isBlockCoverage":true},{"functionName":"isSymbolicLink","ranges":[{"startOffset":4129,"endOffset":4194,"count":29}],"isBlockCoverage":true},{"functionName":"getDirents","ranges":[{"startOffset":5430,"endOffset":6533,"count":4},{"startOffset":5539,"endOffset":6380,"count":0},{"startOffset":6448,"endOffset":6509,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5988,"endOffset":6233,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":6535,"endOffset":7257,"count":29},{"startOffset":6622,"endOffset":7061,"count":0},{"startOffset":7099,"endOffset":7209,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6835,"endOffset":6990,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7259,"endOffset":7884,"count":2886},{"startOffset":7343,"endOffset":7375,"count":2843},{"startOffset":7377,"endOffset":7409,"count":43},{"startOffset":7409,"endOffset":7446,"count":2843},{"startOffset":7446,"endOffset":7564,"count":1206},{"startOffset":7564,"endOffset":7686,"count":1637},{"startOffset":7603,"endOffset":7686,"count":0},{"startOffset":7686,"endOffset":7800,"count":2843},{"startOffset":7800,"endOffset":7864,"count":0},{"startOffset":7864,"endOffset":7883,"count":2843}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":7942,"endOffset":8471,"count":5368},{"startOffset":8012,"endOffset":8147,"count":6},{"startOffset":8147,"endOffset":8179,"count":5362},{"startOffset":8179,"endOffset":8469,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8612,"endOffset":9201,"count":3151},{"startOffset":8842,"endOffset":8862,"count":0},{"startOffset":8932,"endOffset":9000,"count":0},{"startOffset":9019,"endOffset":9200,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9944,"endOffset":10251,"count":127}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10287,"endOffset":10344,"count":25}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10376,"endOffset":10433,"count":78}],"isBlockCoverage":true},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":10758,"endOffset":10815,"count":11}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11032,"endOffset":11114,"count":488}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11548,"endOffset":11612,"count":508}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":12784,"endOffset":13326,"count":127}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13667,"endOffset":13897,"count":114},{"startOffset":13704,"endOffset":13782,"count":0},{"startOffset":13784,"endOffset":13851,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14016,"endOffset":15094,"count":122},{"startOffset":14097,"endOffset":14622,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15096,"endOffset":16352,"count":1252},{"startOffset":15177,"endOffset":15232,"count":0},{"startOffset":15255,"endOffset":15281,"count":5},{"startOffset":15281,"endOffset":15306,"count":1247},{"startOffset":15306,"endOffset":15333,"count":1246},{"startOffset":15338,"endOffset":15349,"count":0},{"startOffset":15371,"endOffset":15408,"count":0},{"startOffset":15413,"endOffset":15439,"count":0},{"startOffset":15444,"endOffset":15456,"count":0},{"startOffset":15478,"endOffset":15514,"count":0},{"startOffset":15520,"endOffset":15567,"count":1},{"startOffset":15572,"endOffset":15583,"count":0},{"startOffset":15605,"endOffset":15662,"count":0},{"startOffset":15668,"endOffset":15714,"count":0},{"startOffset":15719,"endOffset":15730,"count":0},{"startOffset":15752,"endOffset":15807,"count":0},{"startOffset":15813,"endOffset":15861,"count":0},{"startOffset":15866,"endOffset":15877,"count":0},{"startOffset":15899,"endOffset":15957,"count":0},{"startOffset":15962,"endOffset":15973,"count":0},{"startOffset":15995,"endOffset":16053,"count":0},{"startOffset":16059,"endOffset":16106,"count":0},{"startOffset":16111,"endOffset":16122,"count":0},{"startOffset":16144,"endOffset":16200,"count":0},{"startOffset":16205,"endOffset":16216,"count":0},{"startOffset":16238,"endOffset":16294,"count":0},{"startOffset":16298,"endOffset":16351,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17329,"endOffset":17708,"count":1244},{"startOffset":17385,"endOffset":17452,"count":0},{"startOffset":17473,"endOffset":17540,"count":0},{"startOffset":17581,"endOffset":17704,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17766,"endOffset":18170,"count":1},{"startOffset":17829,"endOffset":17908,"count":0},{"startOffset":17948,"endOffset":18036,"count":0},{"startOffset":18058,"endOffset":18125,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18212,"endOffset":18482,"count":3151},{"startOffset":18274,"endOffset":18296,"count":0},{"startOffset":18298,"endOffset":18384,"count":0},{"startOffset":18460,"endOffset":18480,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18527,"endOffset":18662,"count":1521}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18705,"endOffset":18826,"count":2490},{"startOffset":18756,"endOffset":18775,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23237,"endOffset":23814,"count":1},{"startOffset":23364,"endOffset":23461,"count":0},{"startOffset":23545,"endOffset":23588,"count":0},{"startOffset":23589,"endOffset":23603,"count":0},{"startOffset":23605,"endOffset":23813,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23877,"endOffset":24249,"count":1},{"startOffset":23948,"endOffset":24010,"count":0},{"startOffset":24011,"endOffset":24055,"count":0},{"startOffset":24056,"endOffset":24112,"count":0},{"startOffset":24117,"endOffset":24248,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24549,"endOffset":25107,"count":1244},{"startOffset":24655,"endOffset":25105,"count":0}],"isBlockCoverage":true}]},{"scriptId":"89","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":373,"endOffset":534,"count":2}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":728,"endOffset":901,"count":1},{"startOffset":807,"endOffset":899,"count":0}],"isBlockCoverage":true}]},{"scriptId":"92","url":"node:vm","functions":[{"functionName":"compileFunction","ranges":[{"startOffset":9621,"endOffset":11910,"count":1164},{"startOffset":10331,"endOffset":10380,"count":0},{"startOffset":10484,"endOffset":10745,"count":0},{"startOffset":11207,"endOffset":11280,"count":0},{"startOffset":11307,"endOffset":11364,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9845,"endOffset":9896,"count":5820}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10854,"endOffset":10986,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":11835,"endOffset":11868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":464,"endOffset":598,"count":1231},{"startOffset":521,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":733,"endOffset":877,"count":2},{"startOffset":789,"endOffset":849,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":879,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":962,"endOffset":1228,"count":1231},{"startOffset":1084,"endOffset":1185,"count":4},{"startOffset":1185,"endOffset":1225,"count":1227}],"isBlockCoverage":true}]},{"scriptId":"96","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1386,"endOffset":2985,"count":1},{"startOffset":1538,"endOffset":1672,"count":0},{"startOffset":1678,"endOffset":1872,"count":0},{"startOffset":2179,"endOffset":2207,"count":0},{"startOffset":2209,"endOffset":2429,"count":0},{"startOffset":2611,"endOffset":2864,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2801,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3598,"endOffset":3689,"count":2},{"startOffset":3652,"endOffset":3687,"count":0}],"isBlockCoverage":true},{"functionName":"getStderr","ranges":[{"startOffset":4385,"endOffset":5076,"count":20},{"startOffset":4422,"endOffset":4436,"count":19},{"startOffset":4436,"endOffset":4670,"count":1},{"startOffset":4670,"endOffset":4728,"count":0},{"startOffset":4728,"endOffset":5075,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4742,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5078,"endOffset":7652,"count":1},{"startOffset":5113,"endOffset":5126,"count":0},{"startOffset":5181,"endOffset":5370,"count":0},{"startOffset":5376,"endOffset":5510,"count":0},{"startOffset":5844,"endOffset":5872,"count":0},{"startOffset":5874,"endOffset":6044,"count":0},{"startOffset":6319,"endOffset":6543,"count":0}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":6500,"endOffset":6509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7122,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"onpause","ranges":[{"startOffset":7170,"endOffset":7410,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupStdin","ranges":[{"startOffset":7425,"endOffset":7498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":2}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":904,"count":2},{"startOffset":459,"endOffset":484,"count":0},{"startOffset":486,"endOffset":902,"count":0}],"isBlockCoverage":true},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":906,"endOffset":1101,"count":1},{"startOffset":1008,"endOffset":1044,"count":0},{"startOffset":1046,"endOffset":1099,"count":0}],"isBlockCoverage":true}]},{"scriptId":"98","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3322,"endOffset":3425,"count":3},{"startOffset":3374,"endOffset":3403,"count":1}],"isBlockCoverage":true}]},{"scriptId":"99","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"100","url":"node:internal/bootstrap/pre_execution","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19111,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":611,"endOffset":2795,"count":1},{"startOffset":2561,"endOffset":2578,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":2797,"endOffset":2853,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2855,"endOffset":4965,"count":1},{"startOffset":3634,"endOffset":3686,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":4967,"endOffset":5247,"count":13},{"startOffset":5088,"endOffset":5245,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":5249,"endOffset":5474,"count":1}],"isBlockCoverage":true},{"functionName":"setupFetch","ranges":[{"startOffset":5510,"endOffset":5985,"count":1},{"startOffset":5598,"endOffset":5984,"count":0}],"isBlockCoverage":true},{"functionName":"setupWebCrypto","ranges":[{"startOffset":6091,"endOffset":7306,"count":1},{"startOffset":6252,"endOffset":7304,"count":0}],"isBlockCoverage":true},{"functionName":"get crypto","ranges":[{"startOffset":6419,"endOffset":6591,"count":0}],"isBlockCoverage":false},{"functionName":"setupCustomEvent","ranges":[{"startOffset":7414,"endOffset":7700,"count":1},{"startOffset":7579,"endOffset":7699,"count":0}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":7812,"endOffset":8489,"count":1},{"startOffset":8282,"endOffset":8459,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":8491,"endOffset":8716,"count":1},{"startOffset":8593,"endOffset":8715,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":8718,"endOffset":8962,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8920,"endOffset":8954,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":8964,"endOffset":9196,"count":1},{"startOffset":9115,"endOffset":9194,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":9258,"endOffset":9393,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":9395,"endOffset":9702,"count":1},{"startOffset":9530,"endOffset":9701,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9662,"endOffset":9698,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":9704,"endOffset":9963,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":9965,"endOffset":10108,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":10110,"endOffset":10691,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":10886,"endOffset":13481,"count":1},{"startOffset":11598,"endOffset":11900,"count":16},{"startOffset":11643,"endOffset":11875,"count":0},{"startOffset":12217,"endOffset":12413,"count":0},{"startOffset":12441,"endOffset":12835,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13109,"endOffset":13145,"count":244}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13151,"endOffset":13193,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13344,"endOffset":13379,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13385,"endOffset":13426,"count":0}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":13483,"endOffset":14048,"count":1},{"startOffset":13559,"endOffset":14046,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":14050,"endOffset":14320,"count":1},{"startOffset":14137,"endOffset":14318,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":14322,"endOffset":16145,"count":1},{"startOffset":14448,"endOffset":16143,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":16147,"endOffset":16376,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":16378,"endOffset":16721,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":16723,"endOffset":17839,"count":1},{"startOffset":16953,"endOffset":16960,"count":0},{"startOffset":17592,"endOffset":17837,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":17841,"endOffset":18027,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":18029,"endOffset":18286,"count":1},{"startOffset":18114,"endOffset":18284,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":18288,"endOffset":18635,"count":1},{"startOffset":18482,"endOffset":18633,"count":0}],"isBlockCoverage":true}]},{"scriptId":"101","url":"node:internal/inspector_async_hook","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1972,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":75,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1259,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1842,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9046,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":260,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":620,"endOffset":645,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1639,"endOffset":1813,"count":1166},{"startOffset":1712,"endOffset":1783,"count":1}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1815,"endOffset":2459,"count":1},{"startOffset":2026,"endOffset":2180,"count":0},{"startOffset":2223,"endOffset":2429,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":2461,"endOffset":3717,"count":1166},{"startOffset":2638,"endOffset":2658,"count":0},{"startOffset":2661,"endOffset":2668,"count":0},{"startOffset":2728,"endOffset":2852,"count":0},{"startOffset":2983,"endOffset":3715,"count":61},{"startOffset":3077,"endOffset":3083,"count":58},{"startOffset":3084,"endOffset":3115,"count":3},{"startOffset":3297,"endOffset":3711,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheGeneratedSourceMap","ranges":[{"startOffset":3719,"endOffset":4461,"count":0}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":4526,"endOffset":5046,"count":61},{"startOffset":4663,"endOffset":4738,"count":50},{"startOffset":4745,"endOffset":4825,"count":0},{"startOffset":4836,"endOffset":5044,"count":11}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":5236,"endOffset":5581,"count":61}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5538,"endOffset":5577,"count":23495}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":5583,"endOffset":5833,"count":11},{"startOffset":5781,"endOffset":5831,"count":3}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":5927,"endOffset":6598,"count":50},{"startOffset":6330,"endOffset":6336,"count":0},{"startOffset":6458,"endOffset":6514,"count":0},{"startOffset":6518,"endOffset":6596,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":6783,"endOffset":7110,"count":58}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6861,"endOffset":6967,"count":128}],"isBlockCoverage":true},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":7548,"endOffset":7795,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":7797,"endOffset":8086,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":8088,"endOffset":8908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:internal/util/iterable_weak_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":399,"endOffset":516,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":521,"endOffset":1032,"count":61},{"startOffset":596,"endOffset":800,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1036,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1096,"endOffset":1145,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":1149,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":1820,"endOffset":1873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"node:internal/modules/cjs/helpers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6862,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":810,"endOffset":835,"count":1}],"isBlockCoverage":true},{"functionName":"loadNativeModule","ranges":[{"startOffset":1126,"endOffset":1431,"count":1373},{"startOffset":1228,"endOffset":1250,"count":194},{"startOffset":1252,"endOffset":1429,"count":194}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":1680,"endOffset":3678,"count":1193},{"startOffset":1794,"endOffset":3070,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1932,"endOffset":3065,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":3092,"endOffset":3154,"count":4036}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3163,"endOffset":3309,"count":61}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":3343,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":3863,"endOffset":4018,"count":15},{"startOffset":3945,"endOffset":3998,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":4020,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":5940,"endOffset":6128,"count":1166},{"startOffset":6047,"endOffset":6093,"count":1164},{"startOffset":6093,"endOffset":6127,"count":2}],"isBlockCoverage":true},{"functionName":"hasEsmSyntax","ranges":[{"startOffset":6198,"endOffset":6700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2545,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":292,"endOffset":674,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":678,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":847,"endOffset":898,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":902,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":994,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1047,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1139,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1190,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1271,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1320,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1461,"endOffset":1533,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1537,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1659,"endOffset":1723,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1727,"endOffset":1888,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":1892,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":1982,"endOffset":2114,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2119,"endOffset":2290,"count":1},{"startOffset":2185,"endOffset":2288,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2292,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2418,"endOffset":2492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41236,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2266,"endOffset":2335,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":4617,"endOffset":5027,"count":6797},{"startOffset":4715,"endOffset":4809,"count":1433},{"startOffset":4791,"endOffset":4805,"count":357},{"startOffset":4809,"endOffset":4882,"count":6440},{"startOffset":4882,"endOffset":4896,"count":1076},{"startOffset":4898,"endOffset":5008,"count":329},{"startOffset":5008,"endOffset":5026,"count":6440}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":5029,"endOffset":5225,"count":3878},{"startOffset":5101,"endOffset":5111,"count":3841},{"startOffset":5128,"endOffset":5181,"count":3841},{"startOffset":5138,"endOffset":5180,"count":2664},{"startOffset":5187,"endOffset":5223,"count":2627}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":5272,"endOffset":5524,"count":1212}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5814,"endOffset":5840,"count":65}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5893,"endOffset":5940,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":6252,"endOffset":6329,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6495,"endOffset":6617,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":6622,"endOffset":6755,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6821,"endOffset":6849,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6854,"endOffset":6908,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6977,"endOffset":7013,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7018,"endOffset":7080,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7113,"endOffset":7143,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleParent","ranges":[{"startOffset":7302,"endOffset":7370,"count":0}],"isBlockCoverage":false},{"functionName":"setModuleParent","ranges":[{"startOffset":7372,"endOffset":7445,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8043,"endOffset":8068,"count":1}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":8416,"endOffset":9226,"count":8224},{"startOffset":8596,"endOffset":8612,"count":7910},{"startOffset":8612,"endOffset":8710,"count":314},{"startOffset":8710,"endOffset":8716,"count":0},{"startOffset":8717,"endOffset":8732,"count":314},{"startOffset":8760,"endOffset":8826,"count":155},{"startOffset":8826,"endOffset":9109,"count":159},{"startOffset":9109,"endOffset":9224,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":9228,"endOffset":9771,"count":3142},{"startOffset":9363,"endOffset":9708,"count":7414},{"startOffset":9570,"endOffset":9583,"count":0},{"startOffset":9647,"endOffset":9704,"count":3142},{"startOffset":9708,"endOffset":9770,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":9773,"endOffset":11050,"count":247},{"startOffset":9895,"endOffset":9976,"count":78},{"startOffset":9976,"endOffset":10070,"count":169},{"startOffset":10070,"endOffset":10114,"count":21},{"startOffset":10115,"endOffset":10182,"count":11},{"startOffset":10208,"endOffset":11031,"count":0},{"startOffset":11031,"endOffset":11049,"count":169}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":11395,"endOffset":11605,"count":2682},{"startOffset":11483,"endOffset":11490,"count":1116},{"startOffset":11490,"endOffset":11514,"count":1566},{"startOffset":11514,"endOffset":11524,"count":0},{"startOffset":11526,"endOffset":11569,"count":0},{"startOffset":11569,"endOffset":11604,"count":1566}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":11607,"endOffset":11738,"count":1624}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":11813,"endOffset":12019,"count":1619},{"startOffset":11895,"endOffset":12001,"count":2349},{"startOffset":11967,"endOffset":11997,"count":1254},{"startOffset":12001,"endOffset":12018,"count":365}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":12108,"endOffset":12576,"count":1179},{"startOffset":12332,"endOffset":12558,"count":1184},{"startOffset":12383,"endOffset":12392,"count":1},{"startOffset":12392,"endOffset":12530,"count":1183},{"startOffset":12530,"endOffset":12554,"count":1174},{"startOffset":12558,"endOffset":12575,"count":5}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":12578,"endOffset":12867,"count":1984},{"startOffset":12630,"endOffset":12643,"count":2},{"startOffset":12643,"endOffset":12701,"count":1982},{"startOffset":12701,"endOffset":12865,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":12869,"endOffset":13718,"count":1984},{"startOffset":12928,"endOffset":12941,"count":2},{"startOffset":12941,"endOffset":13011,"count":1982},{"startOffset":13011,"endOffset":13016,"count":0},{"startOffset":13029,"endOffset":13057,"count":1982},{"startOffset":13059,"endOffset":13072,"count":1575},{"startOffset":13072,"endOffset":13109,"count":407},{"startOffset":13109,"endOffset":13122,"count":0},{"startOffset":13122,"endOffset":13169,"count":407},{"startOffset":13169,"endOffset":13195,"count":0},{"startOffset":13195,"endOffset":13361,"count":407},{"startOffset":13257,"endOffset":13332,"count":0},{"startOffset":13361,"endOffset":13716,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":13879,"endOffset":14596,"count":1727},{"startOffset":14086,"endOffset":14101,"count":1164},{"startOffset":14120,"endOffset":14127,"count":1164},{"startOffset":14127,"endOffset":14228,"count":563},{"startOffset":14238,"endOffset":14594,"count":170},{"startOffset":14441,"endOffset":14590,"count":6},{"startOffset":14506,"endOffset":14569,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":14662,"endOffset":17283,"count":1985},{"startOffset":14772,"endOffset":14795,"count":16},{"startOffset":14795,"endOffset":14858,"count":1969},{"startOffset":14835,"endOffset":14858,"count":0},{"startOffset":14995,"endOffset":15008,"count":356},{"startOffset":15008,"endOffset":15151,"count":1629},{"startOffset":15175,"endOffset":15259,"count":1627},{"startOffset":15259,"endOffset":15321,"count":1629},{"startOffset":15321,"endOffset":17264,"count":2558},{"startOffset":15419,"endOffset":15439,"count":2547},{"startOffset":15441,"endOffset":15450,"count":820},{"startOffset":15450,"endOffset":15478,"count":1738},{"startOffset":15478,"endOffset":15608,"count":1727},{"startOffset":15579,"endOffset":15602,"count":164},{"startOffset":15608,"endOffset":15737,"count":1568},{"startOffset":15737,"endOffset":16915,"count":1566},{"startOffset":15759,"endOffset":16692,"count":57},{"startOffset":15792,"endOffset":15960,"count":56},{"startOffset":15826,"endOffset":15886,"count":0},{"startOffset":15960,"endOffset":16684,"count":1},{"startOffset":15992,"endOffset":16624,"count":0},{"startOffset":16715,"endOffset":16909,"count":1509},{"startOffset":16805,"endOffset":16843,"count":1440},{"startOffset":16915,"endOffset":16935,"count":1568},{"startOffset":16935,"endOffset":16946,"count":356},{"startOffset":16948,"endOffset":17164,"count":247},{"startOffset":17058,"endOffset":17096,"count":2},{"startOffset":17164,"endOffset":17184,"count":1568},{"startOffset":17184,"endOffset":17260,"count":1459},{"startOffset":17264,"endOffset":17282,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":17527,"endOffset":19043,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":19135,"endOffset":20274,"count":1216},{"startOffset":19413,"endOffset":19438,"count":0},{"startOffset":19731,"endOffset":20152,"count":82600},{"startOffset":19827,"endOffset":20022,"count":10564},{"startOffset":19864,"endOffset":19981,"count":9247},{"startOffset":20022,"endOffset":20146,"count":72036},{"startOffset":20042,"endOffset":20146,"count":27756},{"startOffset":20077,"endOffset":20103,"count":18509},{"startOffset":20103,"endOffset":20138,"count":9247}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":20308,"endOffset":21551,"count":1984},{"startOffset":20385,"endOffset":20442,"count":0},{"startOffset":20444,"endOffset":20510,"count":0},{"startOffset":20595,"endOffset":20794,"count":1371},{"startOffset":20675,"endOffset":20725,"count":1015},{"startOffset":20726,"endOffset":20793,"count":0},{"startOffset":20796,"endOffset":21023,"count":613},{"startOffset":20842,"endOffset":20857,"count":611},{"startOffset":20859,"endOffset":20923,"count":611},{"startOffset":21012,"endOffset":21018,"count":0},{"startOffset":21023,"endOffset":21091,"count":1371},{"startOffset":21092,"endOffset":21111,"count":1371},{"startOffset":21113,"endOffset":21362,"count":0},{"startOffset":21362,"endOffset":21550,"count":1371}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":21554,"endOffset":21737,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21950,"endOffset":22322,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":22327,"endOffset":22568,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":22574,"endOffset":23218,"count":3},{"startOffset":22743,"endOffset":23036,"count":0},{"startOffset":23038,"endOffset":23190,"count":0}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":23630,"endOffset":26622,"count":4041},{"startOffset":23713,"endOffset":24490,"count":4039},{"startOffset":24133,"endOffset":24486,"count":1932},{"startOffset":24323,"endOffset":24373,"count":0},{"startOffset":24418,"endOffset":24486,"count":0},{"startOffset":24490,"endOffset":24543,"count":2109},{"startOffset":24543,"endOffset":24804,"count":0},{"startOffset":24804,"endOffset":24957,"count":2109},{"startOffset":24957,"endOffset":25317,"count":734},{"startOffset":25037,"endOffset":25265,"count":5},{"startOffset":25133,"endOffset":25160,"count":2},{"startOffset":25170,"endOffset":25220,"count":3},{"startOffset":25220,"endOffset":25265,"count":2},{"startOffset":25265,"endOffset":25313,"count":729},{"startOffset":25317,"endOffset":25379,"count":1371},{"startOffset":25379,"endOffset":25401,"count":192},{"startOffset":25402,"endOffset":25460,"count":192},{"startOffset":25462,"endOffset":25491,"count":192},{"startOffset":25491,"endOffset":25590,"count":1179},{"startOffset":25590,"endOffset":25621,"count":1177},{"startOffset":25638,"endOffset":25697,"count":0},{"startOffset":25697,"endOffset":25763,"count":1179},{"startOffset":25763,"endOffset":25832,"count":1177},{"startOffset":25832,"endOffset":26594,"count":1179},{"startOffset":25937,"endOffset":26340,"count":0},{"startOffset":26522,"endOffset":26590,"count":0},{"startOffset":26594,"endOffset":26621,"count":1179}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":26651,"endOffset":29864,"count":2176},{"startOffset":26759,"endOffset":26835,"count":0},{"startOffset":26896,"endOffset":26953,"count":192},{"startOffset":26964,"endOffset":26989,"count":192},{"startOffset":26989,"endOffset":27039,"count":1984},{"startOffset":27039,"endOffset":27058,"count":0},{"startOffset":27060,"endOffset":28137,"count":0},{"startOffset":28137,"endOffset":28232,"count":1984},{"startOffset":28232,"endOffset":28280,"count":0},{"startOffset":28282,"endOffset":28798,"count":0},{"startOffset":28798,"endOffset":28959,"count":1984},{"startOffset":28959,"endOffset":29155,"count":0},{"startOffset":29155,"endOffset":29302,"count":1984},{"startOffset":29302,"endOffset":29318,"count":1978},{"startOffset":29318,"endOffset":29863,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":29867,"endOffset":30589,"count":164},{"startOffset":30041,"endOffset":30160,"count":0},{"startOffset":30252,"endOffset":30262,"count":0},{"startOffset":30264,"endOffset":30421,"count":0},{"startOffset":30454,"endOffset":30588,"count":0}],"isBlockCoverage":true},{"functionName":"createEsmNotFoundErr","ranges":[{"startOffset":30591,"endOffset":30881,"count":0}],"isBlockCoverage":false},{"functionName":"Module.load","ranges":[{"startOffset":30970,"endOffset":31791,"count":1179},{"startOffset":31305,"endOffset":31335,"count":0},{"startOffset":31341,"endOffset":31383,"count":0},{"startOffset":31657,"endOffset":31705,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":31909,"endOffset":32208,"count":4039},{"startOffset":31969,"endOffset":32087,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":32388,"endOffset":33401,"count":1164},{"startOffset":32461,"endOffset":32869,"count":0},{"startOffset":33281,"endOffset":33399,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":32642,"endOffset":32856,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":33039,"endOffset":33267,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":33601,"endOffset":35450,"count":1164},{"startOffset":33677,"endOffset":33687,"count":0},{"startOffset":33689,"endOffset":33856,"count":0},{"startOffset":34037,"endOffset":34061,"count":0},{"startOffset":34063,"endOffset":34799,"count":0},{"startOffset":35022,"endOffset":35048,"count":2},{"startOffset":35073,"endOffset":35212,"count":0},{"startOffset":35414,"endOffset":35431,"count":2}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":35509,"endOffset":37269,"count":1164},{"startOffset":35670,"endOffset":35678,"count":2},{"startOffset":35680,"endOffset":35745,"count":2},{"startOffset":35745,"endOffset":35805,"count":1162},{"startOffset":35854,"endOffset":37229,"count":1159},{"startOffset":35995,"endOffset":37225,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":37333,"endOffset":37697,"count":15},{"startOffset":37428,"endOffset":37438,"count":0},{"startOffset":37440,"endOffset":37549,"count":0},{"startOffset":37614,"endOffset":37695,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":37761,"endOffset":38079,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":38082,"endOffset":38543,"count":29},{"startOffset":38262,"endOffset":38304,"count":0},{"startOffset":38342,"endOffset":38378,"count":0}],"isBlockCoverage":true},{"functionName":"createRequire","ranges":[{"startOffset":38651,"endOffset":39204,"count":29},{"startOffset":38804,"endOffset":39000,"count":1},{"startOffset":38864,"endOffset":38996,"count":0},{"startOffset":39000,"endOffset":39160,"count":28},{"startOffset":39040,"endOffset":39124,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":39265,"endOffset":40229,"count":1},{"startOffset":39306,"endOffset":39331,"count":0},{"startOffset":39383,"endOffset":39406,"count":0},{"startOffset":39614,"endOffset":39656,"count":0},{"startOffset":39955,"endOffset":40096,"count":0}],"isBlockCoverage":true},{"functionName":"Module._preloadModules","ranges":[{"startOffset":40257,"endOffset":40839,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":40873,"endOffset":41088,"count":0}],"isBlockCoverage":false},{"functionName":"isBuiltin","ranges":[{"startOffset":41110,"endOffset":41182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":983,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":279,"endOffset":954,"count":319},{"startOffset":332,"endOffset":369,"count":5},{"startOffset":369,"endOffset":601,"count":314},{"startOffset":601,"endOffset":904,"count":159},{"startOffset":635,"endOffset":769,"count":1},{"startOffset":694,"endOffset":747,"count":0},{"startOffset":797,"endOffset":900,"count":0},{"startOffset":904,"endOffset":953,"count":314}],"isBlockCoverage":true}]},{"scriptId":"108","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2985,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":450,"endOffset":746,"count":1}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":791,"endOffset":1238,"count":2},{"startOffset":1182,"endOffset":1237,"count":0}],"isBlockCoverage":true},{"functionName":"initializeLoader","ranges":[{"startOffset":1650,"endOffset":2628,"count":1},{"startOffset":1710,"endOffset":1721,"count":0},{"startOffset":1888,"endOffset":2627,"count":0}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":2648,"endOffset":2983,"count":1},{"startOffset":2756,"endOffset":2981,"count":0}],"isBlockCoverage":true}]},{"scriptId":"109","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26217,"count":1}],"isBlockCoverage":false},{"functionName":"nextHookFactory","ranges":[{"startOffset":3347,"endOffset":5428,"count":12},{"startOffset":3948,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"chainAdvancedTooFar","ranges":[{"startOffset":4266,"endOffset":4433,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.__proto__","ranges":[{"startOffset":4475,"endOffset":5362,"count":12},{"startOffset":5303,"endOffset":5334,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5870,"endOffset":6869,"count":1}],"isBlockCoverage":false},{"functionName":"ESMLoader","ranges":[{"startOffset":6874,"endOffset":7491,"count":1},{"startOffset":6950,"endOffset":7010,"count":0},{"startOffset":7069,"endOffset":7126,"count":0},{"startOffset":7257,"endOffset":7487,"count":0}],"isBlockCoverage":true},{"functionName":"pluckHooks","ranges":[{"startOffset":7585,"endOffset":9042,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomLoaders","ranges":[{"startOffset":9306,"endOffset":10289,"count":0}],"isBlockCoverage":false},{"functionName":"eval","ranges":[{"startOffset":10293,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":11769,"endOffset":12708,"count":6},{"startOffset":11979,"endOffset":12247,"count":0},{"startOffset":12512,"endOffset":12574,"count":0}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":13346,"endOffset":14214,"count":6},{"startOffset":13932,"endOffset":13972,"count":1}],"isBlockCoverage":true},{"functionName":"moduleProvider","ranges":[{"startOffset":13434,"endOffset":13874,"count":6},{"startOffset":13704,"endOffset":13784,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":14924,"endOffset":16298,"count":3},{"startOffset":16036,"endOffset":16297,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15842,"endOffset":15860,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15876,"endOffset":15913,"count":3}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":16788,"endOffset":20009,"count":6},{"startOffset":18389,"endOffset":18420,"count":0},{"startOffset":18450,"endOffset":18473,"count":0},{"startOffset":18475,"endOffset":18546,"count":0},{"startOffset":18682,"endOffset":18714,"count":0},{"startOffset":18850,"endOffset":18930,"count":0},{"startOffset":18984,"endOffset":19174,"count":0},{"startOffset":19200,"endOffset":19423,"count":0},{"startOffset":19461,"endOffset":19616,"count":0},{"startOffset":19648,"endOffset":19683,"count":2},{"startOffset":19684,"endOffset":19718,"count":2},{"startOffset":19719,"endOffset":19754,"count":2},{"startOffset":19761,"endOffset":19937,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":17064,"endOffset":17817,"count":6},{"startOffset":17142,"endOffset":17396,"count":0},{"startOffset":17562,"endOffset":17734,"count":0}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":17846,"endOffset":18083,"count":12},{"startOffset":17936,"endOffset":18077,"count":0}],"isBlockCoverage":true},{"functionName":"preload","ranges":[{"startOffset":20013,"endOffset":22653,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":22657,"endOffset":22746,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":23429,"endOffset":26132,"count":6},{"startOffset":23598,"endOffset":23636,"count":5},{"startOffset":23637,"endOffset":23671,"count":0},{"startOffset":23678,"endOffset":23799,"count":0},{"startOffset":25030,"endOffset":25061,"count":0},{"startOffset":25091,"endOffset":25114,"count":0},{"startOffset":25116,"endOffset":25187,"count":0},{"startOffset":25277,"endOffset":25312,"count":4},{"startOffset":25326,"endOffset":25474,"count":0},{"startOffset":25509,"endOffset":25762,"count":0},{"startOffset":25910,"endOffset":26076,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":24157,"endOffset":24426,"count":6}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":24455,"endOffset":24692,"count":12},{"startOffset":24545,"endOffset":24686,"count":0}],"isBlockCoverage":true}]},{"scriptId":"110","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1444,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":263,"endOffset":288,"count":1}],"isBlockCoverage":true},{"functionName":"ModuleMap","ranges":[{"startOffset":507,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":584,"endOffset":727,"count":6},{"startOffset":714,"endOffset":722,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":730,"endOffset":1253,"count":6},{"startOffset":882,"endOffset":918,"count":0},{"startOffset":920,"endOffset":990,"count":0},{"startOffset":1074,"endOffset":1080,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":1256,"endOffset":1413,"count":12},{"startOffset":1386,"endOffset":1394,"count":0}],"isBlockCoverage":true}]},{"scriptId":"111","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8059,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":877,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1245,"endOffset":3022,"count":6}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1813,"endOffset":2649,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2269,"endOffset":2520,"count":3}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3026,"endOffset":3171,"count":3}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3175,"endOffset":6784,"count":3},{"startOffset":3625,"endOffset":3802,"count":0},{"startOffset":3859,"endOffset":6537,"count":0},{"startOffset":6584,"endOffset":6780,"count":6}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3274,"endOffset":3524,"count":6},{"startOffset":3335,"endOffset":3360,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":6788,"endOffset":7979,"count":3},{"startOffset":6963,"endOffset":7939,"count":0}],"isBlockCoverage":true}]},{"scriptId":"112","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3624,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1295,"endOffset":1333,"count":5}],"isBlockCoverage":true},{"functionName":"validateAssertions","ranges":[{"startOffset":1754,"endOffset":2908,"count":6},{"startOffset":1935,"endOffset":2080,"count":0},{"startOffset":2345,"endOffset":2405,"count":0},{"startOffset":2411,"endOffset":2519,"count":0},{"startOffset":2525,"endOffset":2902,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3140,"endOffset":3554,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40878,"count":1}],"isBlockCoverage":false},{"functionName":"emitFolderMapDeprecation","ranges":[{"startOffset":2767,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":3382,"endOffset":4046,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":4192,"endOffset":5288,"count":1},{"startOffset":4354,"endOffset":5286,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":5358,"endOffset":5710,"count":4},{"startOffset":5467,"endOffset":5675,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":5913,"endOffset":5979,"count":11},{"startOffset":5965,"endOffset":5979,"count":5}],"isBlockCoverage":true},{"functionName":"getPackageConfig","ranges":[{"startOffset":6113,"endOffset":7451,"count":12},{"startOffset":6241,"endOffset":6267,"count":7},{"startOffset":6267,"endOffset":6350,"count":5},{"startOffset":6350,"endOffset":6625,"count":2},{"startOffset":6625,"endOffset":6695,"count":3},{"startOffset":6695,"endOffset":6874,"count":0},{"startOffset":6874,"endOffset":6996,"count":3},{"startOffset":6996,"endOffset":7015,"count":0},{"startOffset":7017,"endOffset":7070,"count":3},{"startOffset":7070,"endOffset":7087,"count":1},{"startOffset":7087,"endOffset":7120,"count":3},{"startOffset":7120,"endOffset":7137,"count":0},{"startOffset":7137,"endOffset":7215,"count":3},{"startOffset":7215,"endOffset":7237,"count":2},{"startOffset":7239,"endOffset":7253,"count":2},{"startOffset":7253,"endOffset":7450,"count":3}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":7523,"endOffset":8623,"count":7},{"startOffset":7641,"endOffset":8294,"count":10},{"startOffset":7781,"endOffset":7787,"count":0},{"startOffset":7946,"endOffset":7967,"count":7},{"startOffset":7967,"endOffset":8284,"count":3},{"startOffset":8284,"endOffset":8290,"count":0},{"startOffset":8294,"endOffset":8622,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":8684,"endOffset":8782,"count":1},{"startOffset":8771,"endOffset":8779,"count":0}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":9170,"endOffset":11009,"count":1},{"startOffset":9289,"endOffset":10518,"count":0},{"startOffset":10584,"endOffset":10768,"count":0},{"startOffset":10886,"endOffset":11008,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":11072,"endOffset":11203,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":11321,"endOffset":11578,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDirectoryEntry","ranges":[{"startOffset":11641,"endOffset":12172,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":12352,"endOffset":13969,"count":4},{"startOffset":12492,"endOffset":12635,"count":0},{"startOffset":12747,"endOffset":13223,"count":0},{"startOffset":13288,"endOffset":13324,"count":0},{"startOffset":13361,"endOffset":13488,"count":0},{"startOffset":13515,"endOffset":13629,"count":0},{"startOffset":13874,"endOffset":13879,"count":0}],"isBlockCoverage":true},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":14081,"endOffset":14296,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":14406,"endOffset":14605,"count":6},{"startOffset":14579,"endOffset":14601,"count":0}],"isBlockCoverage":true},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":14753,"endOffset":15103,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":15105,"endOffset":15487,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":15761,"endOffset":17638,"count":165},{"startOffset":15901,"endOffset":15912,"count":0},{"startOffset":15913,"endOffset":15949,"count":0},{"startOffset":15955,"endOffset":16028,"count":0},{"startOffset":16078,"endOffset":16689,"count":0},{"startOffset":16785,"endOffset":16858,"count":0},{"startOffset":17081,"endOffset":17154,"count":0},{"startOffset":17194,"endOffset":17637,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16465,"endOffset":16478,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17335,"endOffset":17348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17566,"endOffset":17579,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":17693,"endOffset":17833,"count":210},{"startOffset":17785,"endOffset":17830,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":17835,"endOffset":20037,"count":400},{"startOffset":18017,"endOffset":18160,"count":165},{"startOffset":18160,"endOffset":19922,"count":235},{"startOffset":18192,"endOffset":19019,"count":95},{"startOffset":18223,"endOffset":18249,"count":0},{"startOffset":18558,"endOffset":18706,"count":0},{"startOffset":18746,"endOffset":18773,"count":0},{"startOffset":18808,"endOffset":18865,"count":0},{"startOffset":18899,"endOffset":18961,"count":0},{"startOffset":18969,"endOffset":19019,"count":0},{"startOffset":19019,"endOffset":19922,"count":140},{"startOffset":19172,"endOffset":19400,"count":210},{"startOffset":19230,"endOffset":19394,"count":0},{"startOffset":19443,"endOffset":19847,"count":200},{"startOffset":19500,"endOffset":19522,"count":110},{"startOffset":19524,"endOffset":19841,"count":140},{"startOffset":19794,"endOffset":19803,"count":0},{"startOffset":19847,"endOffset":19922,"count":0},{"startOffset":19922,"endOffset":20036,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":20173,"endOffset":21108,"count":171},{"startOffset":20305,"endOffset":20317,"count":0},{"startOffset":20373,"endOffset":20386,"count":0},{"startOffset":20526,"endOffset":21077,"count":396},{"startOffset":20636,"endOffset":20693,"count":171},{"startOffset":20693,"endOffset":21073,"count":225},{"startOffset":20749,"endOffset":21073,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":21318,"endOffset":23986,"count":171},{"startOffset":21530,"endOffset":21557,"count":0},{"startOffset":21620,"endOffset":21674,"count":165},{"startOffset":21675,"endOffset":21729,"count":165},{"startOffset":21731,"endOffset":22051,"count":165},{"startOffset":21935,"endOffset":22008,"count":0},{"startOffset":22051,"endOffset":22190,"count":6},{"startOffset":22190,"endOffset":23377,"count":18},{"startOffset":22304,"endOffset":22434,"count":0},{"startOffset":22436,"endOffset":23124,"count":0},{"startOffset":23162,"endOffset":23217,"count":0},{"startOffset":23218,"endOffset":23266,"count":0},{"startOffset":23268,"endOffset":23373,"count":0},{"startOffset":23377,"endOffset":23396,"count":6},{"startOffset":23396,"endOffset":23921,"count":0},{"startOffset":23921,"endOffset":23985,"count":6}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":23988,"endOffset":24519,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":24648,"endOffset":27417,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":27473,"endOffset":27586,"count":5}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":27748,"endOffset":28800,"count":2},{"startOffset":27939,"endOffset":28167,"count":0},{"startOffset":28229,"endOffset":28281,"count":0},{"startOffset":28458,"endOffset":28483,"count":0},{"startOffset":28510,"endOffset":28629,"count":0},{"startOffset":28690,"endOffset":28743,"count":0}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":28934,"endOffset":31056,"count":2},{"startOffset":29040,"endOffset":29099,"count":0},{"startOffset":29101,"endOffset":29147,"count":0},{"startOffset":29451,"endOffset":29497,"count":0},{"startOffset":29498,"endOffset":29531,"count":0},{"startOffset":29533,"endOffset":29666,"count":0},{"startOffset":29841,"endOffset":30847,"count":7},{"startOffset":30023,"endOffset":30300,"count":5},{"startOffset":30100,"endOffset":30137,"count":0},{"startOffset":30300,"endOffset":30446,"count":2},{"startOffset":30446,"endOffset":30479,"count":1},{"startOffset":30481,"endOffset":30756,"count":1},{"startOffset":30756,"endOffset":30847,"count":0},{"startOffset":30847,"endOffset":31055,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":31117,"endOffset":31227,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":31229,"endOffset":31500,"count":10},{"startOffset":31299,"endOffset":31482,"count":2},{"startOffset":31357,"endOffset":31369,"count":0},{"startOffset":31482,"endOffset":31499,"count":8}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":31502,"endOffset":31685,"count":10},{"startOffset":31588,"endOffset":31601,"count":0},{"startOffset":31630,"endOffset":31642,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":31856,"endOffset":32647,"count":4},{"startOffset":32182,"endOffset":32228,"count":1},{"startOffset":32228,"endOffset":32524,"count":3},{"startOffset":32273,"endOffset":32351,"count":0},{"startOffset":32412,"endOffset":32520,"count":2},{"startOffset":32566,"endOffset":32582,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":32793,"endOffset":34250,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":34312,"endOffset":35502,"count":6},{"startOffset":34406,"endOffset":35500,"count":5},{"startOffset":34513,"endOffset":35496,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLProtocol","ranges":[{"startOffset":35504,"endOffset":35702,"count":4},{"startOffset":35581,"endOffset":35608,"count":0},{"startOffset":35609,"endOffset":35642,"count":0},{"startOffset":35644,"endOffset":35700,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":35704,"endOffset":36192,"count":4},{"startOffset":35797,"endOffset":35831,"count":2},{"startOffset":35832,"endOffset":35866,"count":0},{"startOffset":35867,"endOffset":36010,"count":0},{"startOffset":36015,"endOffset":36190,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":36194,"endOffset":40108,"count":6},{"startOffset":36310,"endOffset":36329,"count":5},{"startOffset":36319,"endOffset":36329,"count":0},{"startOffset":36331,"endOffset":37122,"count":0},{"startOffset":37164,"endOffset":37269,"count":5},{"startOffset":37226,"endOffset":37265,"count":0},{"startOffset":37353,"endOffset":37412,"count":1},{"startOffset":37412,"endOffset":37460,"count":5},{"startOffset":37460,"endOffset":37645,"count":4},{"startOffset":37535,"endOffset":37637,"count":0},{"startOffset":37652,"endOffset":37694,"count":0},{"startOffset":37699,"endOffset":37734,"count":2},{"startOffset":38068,"endOffset":38087,"count":0},{"startOffset":38152,"endOffset":38182,"count":4},{"startOffset":38184,"endOffset":38210,"count":2},{"startOffset":38210,"endOffset":38336,"count":4},{"startOffset":38336,"endOffset":38857,"count":1},{"startOffset":38814,"endOffset":38853,"count":0},{"startOffset":38857,"endOffset":39012,"count":4},{"startOffset":39012,"endOffset":39034,"count":1},{"startOffset":39035,"endOffset":39053,"count":3},{"startOffset":39060,"endOffset":39864,"count":0},{"startOffset":39864,"endOffset":40107,"count":4}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":40474,"endOffset":40874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4134,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1124,"endOffset":1155,"count":2}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1162,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":1502,"endOffset":2843,"count":5},{"startOffset":1708,"endOffset":1718,"count":2},{"startOffset":1719,"endOffset":1731,"count":3},{"startOffset":1736,"endOffset":2840,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":2979,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":3408,"endOffset":3652,"count":5},{"startOffset":3571,"endOffset":3583,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":3811,"endOffset":4035,"count":2},{"startOffset":4022,"endOffset":4032,"count":0}],"isBlockCoverage":true}]},{"scriptId":"115","url":"node:internal/modules/esm/fetch_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7752,"count":1}],"isBlockCoverage":false},{"functionName":"HTTPSGet","ranges":[{"startOffset":1395,"endOffset":1605,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPGet","ranges":[{"startOffset":1622,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"dnsLookup","ranges":[{"startOffset":1827,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"createBrotliDecompress","ranges":[{"startOffset":1996,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"createUnzip","ranges":[{"startOffset":2206,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"isRedirect","ranges":[{"startOffset":2618,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"fetchWithRedirects","ranges":[{"startOffset":3004,"endOffset":5864,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalAddress","ranges":[{"startOffset":6224,"endOffset":6685,"count":0}],"isBlockCoverage":false},{"functionName":"fetchModule","ranges":[{"startOffset":7143,"endOffset":7713,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51955,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1480,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3526,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":3699,"endOffset":3793,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":3795,"endOffset":4176,"count":2},{"startOffset":3962,"endOffset":3984,"count":0},{"startOffset":4018,"endOffset":4175,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":4179,"endOffset":4317,"count":2},{"startOffset":4274,"endOffset":4292,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":4320,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4604,"endOffset":4708,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4931,"endOffset":5222,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":5717,"endOffset":6443,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":6515,"endOffset":7118,"count":2},{"startOffset":6871,"endOffset":7112,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":7371,"endOffset":11869,"count":2},{"startOffset":7431,"endOffset":7458,"count":0},{"startOffset":7486,"endOffset":7614,"count":0},{"startOffset":7684,"endOffset":7931,"count":0},{"startOffset":7993,"endOffset":8188,"count":0},{"startOffset":8709,"endOffset":8735,"count":0},{"startOffset":9141,"endOffset":9249,"count":0},{"startOffset":9777,"endOffset":9811,"count":0},{"startOffset":9900,"endOffset":9941,"count":1},{"startOffset":9942,"endOffset":9954,"count":1},{"startOffset":9956,"endOffset":10484,"count":0},{"startOffset":10575,"endOffset":10652,"count":0},{"startOffset":10653,"endOffset":10699,"count":0},{"startOffset":10701,"endOffset":10916,"count":0},{"startOffset":11451,"endOffset":11716,"count":1},{"startOffset":11484,"endOffset":11653,"count":0},{"startOffset":11685,"endOffset":11712,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":12042,"endOffset":12172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":12292,"endOffset":12908,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":12911,"endOffset":13086,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":13293,"endOffset":13800,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":13882,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":14420,"endOffset":14797,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":14833,"endOffset":15439,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":15470,"endOffset":15514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15600,"endOffset":15644,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15723,"endOffset":15779,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15889,"endOffset":16204,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16292,"endOffset":16372,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16459,"endOffset":16504,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":16511,"endOffset":16757,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":16849,"endOffset":17078,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":17105,"endOffset":17292,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":17330,"endOffset":17680,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":17708,"endOffset":18042,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":18072,"endOffset":18256,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":18284,"endOffset":18470,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":18517,"endOffset":18616,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":18650,"endOffset":18797,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":18829,"endOffset":20076,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":20105,"endOffset":20204,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":20239,"endOffset":20517,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":20520,"endOffset":20701,"count":8}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":20728,"endOffset":20819,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":20852,"endOffset":20918,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":20950,"endOffset":21014,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":21044,"endOffset":21104,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":21141,"endOffset":21417,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":21449,"endOffset":21514,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":21544,"endOffset":21603,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":21645,"endOffset":21692,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":21728,"endOffset":22489,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":22520,"endOffset":22588,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":22618,"endOffset":22699,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":22892,"endOffset":22996,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":23028,"endOffset":23957,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":23962,"endOffset":24761,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":24764,"endOffset":26665,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":26695,"endOffset":28145,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":28149,"endOffset":31029,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":31032,"endOffset":31091,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":31117,"endOffset":31304,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":31333,"endOffset":31526,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":31530,"endOffset":33111,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignalOption","ranges":[{"startOffset":33113,"endOffset":33553,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":33555,"endOffset":34816,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":34927,"endOffset":34992,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":35060,"endOffset":36512,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":36514,"endOffset":38865,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":38932,"endOffset":38994,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":38997,"endOffset":39112,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":39115,"endOffset":40375,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":40404,"endOffset":44230,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":44233,"endOffset":44645,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44727,"endOffset":44770,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":44845,"endOffset":45134,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":45137,"endOffset":46824,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":46973,"endOffset":47726,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":47755,"endOffset":48622,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":48664,"endOffset":49050,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":49054,"endOffset":49137,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":49196,"endOffset":49358,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49580,"endOffset":49616,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":49620,"endOffset":49661,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49740,"endOffset":49771,"count":19}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":49775,"endOffset":49811,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":49849,"endOffset":50090,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":50116,"endOffset":50214,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":50242,"endOffset":50341,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":50483,"endOffset":51152,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":51191,"endOffset":51432,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":51561,"endOffset":51663,"count":1}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":51667,"endOffset":51789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:internal/net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1749,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":997,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1063,"endOffset":1127,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1129,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1217,"endOffset":1631,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:internal/dtrace","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3877,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":764,"endOffset":879,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":883,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1139,"endOffset":1460,"count":1}],"isBlockCoverage":true},{"functionName":"addRange","ranges":[{"startOffset":1464,"endOffset":2142,"count":1},{"startOffset":2066,"endOffset":2138,"count":0}],"isBlockCoverage":true},{"functionName":"addSubnet","ranges":[{"startOffset":2146,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2695,"endOffset":3160,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3164,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3222,"endOffset":3379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3383,"endOffset":3483,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3538,"endOffset":3669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3207,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":727,"endOffset":798,"count":3}],"isBlockCoverage":true},{"functionName":"SocketAddress","ranges":[{"startOffset":802,"endOffset":1761,"count":3},{"startOffset":969,"endOffset":982,"count":0},{"startOffset":983,"endOffset":989,"count":0},{"startOffset":1177,"endOffset":1228,"count":2},{"startOffset":1235,"endOffset":1287,"count":1},{"startOffset":1294,"endOffset":1377,"count":0}],"isBlockCoverage":true},{"functionName":"get address","ranges":[{"startOffset":1765,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1822,"endOffset":1869,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":1873,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":1958,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2070,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2312,"endOffset":2477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2481,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2691,"endOffset":2837,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":2896,"endOffset":2962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1199,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":674,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"getLegacyExtensionFormat","ranges":[{"startOffset":999,"endOffset":1081,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":980,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":289,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":728,"endOffset":933,"count":1},{"startOffset":858,"endOffset":912,"count":0}],"isBlockCoverage":true}]},{"scriptId":"123","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2745,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":976,"endOffset":2061,"count":2},{"startOffset":1169,"endOffset":1942,"count":0},{"startOffset":1955,"endOffset":1965,"count":0},{"startOffset":1967,"endOffset":2025,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoad","ranges":[{"startOffset":2173,"endOffset":2706,"count":6},{"startOffset":2351,"endOffset":2407,"count":2},{"startOffset":2495,"endOffset":2523,"count":4},{"startOffset":2528,"endOffset":2552,"count":4},{"startOffset":2552,"endOffset":2646,"count":2}],"isBlockCoverage":true}]},{"scriptId":"124","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23391,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2521,"endOffset":2613,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":2675,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":2901,"endOffset":3078,"count":2},{"startOffset":3015,"endOffset":3019,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3082,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3143,"endOffset":3179,"count":4}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":3183,"endOffset":3265,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3269,"endOffset":3325,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3329,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":3397,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":3453,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3501,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":3614,"endOffset":3695,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":3699,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":3770,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":3834,"endOffset":3898,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":3902,"endOffset":3976,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3980,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4095,"endOffset":4178,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4182,"endOffset":4263,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4267,"endOffset":5065,"count":2}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4275,"endOffset":5065,"count":2},{"startOffset":4309,"endOffset":4347,"count":0},{"startOffset":4378,"endOffset":4419,"count":0},{"startOffset":4644,"endOffset":5004,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4587,"endOffset":4629,"count":2}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":4729,"endOffset":4841,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4844,"endOffset":4989,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":5364,"endOffset":5515,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":5764,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5922,"endOffset":6321,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6325,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6382,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6473,"endOffset":6506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6510,"endOffset":6726,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":6730,"endOffset":7190,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":7192,"endOffset":7312,"count":8},{"startOffset":7236,"endOffset":7245,"count":0},{"startOffset":7251,"endOffset":7310,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":7314,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":8457,"endOffset":10258,"count":2},{"startOffset":8781,"endOffset":8806,"count":0},{"startOffset":8839,"endOffset":8877,"count":0},{"startOffset":9004,"endOffset":9015,"count":0},{"startOffset":9145,"endOffset":9284,"count":0},{"startOffset":9559,"endOffset":9563,"count":0},{"startOffset":9663,"endOffset":9679,"count":0},{"startOffset":9681,"endOffset":9885,"count":0},{"startOffset":9988,"endOffset":10020,"count":0},{"startOffset":10025,"endOffset":10183,"count":0},{"startOffset":10211,"endOffset":10246,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":10411,"endOffset":10632,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":10634,"endOffset":10903,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":10905,"endOffset":11263,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":11383,"endOffset":11708,"count":2}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":11710,"endOffset":12932,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":12934,"endOffset":13254,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":13256,"endOffset":14463,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":14465,"endOffset":14873,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":14875,"endOffset":15181,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":15183,"endOffset":15330,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":15332,"endOffset":15491,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":15493,"endOffset":15697,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":15699,"endOffset":16070,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":16072,"endOffset":16161,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":16163,"endOffset":16244,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":16246,"endOffset":16722,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":16724,"endOffset":17172,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":17174,"endOffset":17413,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":17415,"endOffset":17828,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":17830,"endOffset":18008,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":18010,"endOffset":18280,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":18282,"endOffset":18549,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":18551,"endOffset":18874,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":18876,"endOffset":19014,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":19016,"endOffset":19149,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":19151,"endOffset":19337,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":19339,"endOffset":19581,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":19583,"endOffset":19859,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":19861,"endOffset":20058,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":20060,"endOffset":20333,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":20335,"endOffset":20607,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":20609,"endOffset":20808,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":20810,"endOffset":21087,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":21089,"endOffset":21262,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":21264,"endOffset":21512,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":21514,"endOffset":22212,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":22214,"endOffset":22328,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":22330,"endOffset":22571,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":22573,"endOffset":22931,"count":2},{"startOffset":22690,"endOffset":22696,"count":0},{"startOffset":22737,"endOffset":22774,"count":0}],"isBlockCoverage":true}]},{"scriptId":"125","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7095,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1174,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1637,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2498,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2936,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3237,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3927,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4128,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4814,"endOffset":5297,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5300,"endOffset":6585,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6588,"endOffset":7035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10763,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":378,"endOffset":490,"count":4},{"startOffset":424,"endOffset":438,"count":3},{"startOffset":438,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1017,"endOffset":1042,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1577,"endOffset":1975,"count":1},{"startOffset":1651,"endOffset":1726,"count":0},{"startOffset":1884,"endOffset":1969,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":2109,"endOffset":2529,"count":4},{"startOffset":2186,"endOffset":2213,"count":2},{"startOffset":2215,"endOffset":2232,"count":0},{"startOffset":2326,"endOffset":2351,"count":0},{"startOffset":2370,"endOffset":2449,"count":0},{"startOffset":2450,"endOffset":2454,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":2531,"endOffset":2749,"count":2},{"startOffset":2590,"endOffset":2602,"count":0},{"startOffset":2686,"endOffset":2705,"count":1},{"startOffset":2706,"endOffset":2715,"count":1}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2751,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2898,"endOffset":3036,"count":2}],"isBlockCoverage":true},{"functionName":"moduleStrategy","ranges":[{"startOffset":3118,"endOffset":3566,"count":2}],"isBlockCoverage":true},{"functionName":"initializeImportMeta","ranges":[{"startOffset":3455,"endOffset":3511,"count":1}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":3733,"endOffset":4271,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":4429,"endOffset":5872,"count":2},{"startOffset":4671,"endOffset":4734,"count":0},{"startOffset":4753,"endOffset":4774,"count":1},{"startOffset":4899,"endOffset":4921,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5012,"endOffset":5868,"count":2},{"startOffset":5131,"endOffset":5245,"count":0},{"startOffset":5337,"endOffset":5427,"count":0},{"startOffset":5477,"endOffset":5824,"count":6},{"startOffset":5588,"endOffset":5597,"count":0},{"startOffset":5721,"endOffset":5777,"count":0}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":5876,"endOffset":7396,"count":2},{"startOffset":5979,"endOffset":6104,"count":0},{"startOffset":6403,"endOffset":6451,"count":0},{"startOffset":6533,"endOffset":6538,"count":0},{"startOffset":6546,"endOffset":6595,"count":0},{"startOffset":6779,"endOffset":6876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6912,"endOffset":7357,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":7520,"endOffset":7902,"count":2},{"startOffset":7775,"endOffset":7827,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":7966,"endOffset":9848,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9914,"endOffset":10760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/modules/esm/create_dynamic_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":190,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":219,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":411,"endOffset":612,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":642,"endOffset":1715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/vm/module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12372,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1729,"endOffset":3835,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3839,"endOffset":3976,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3980,"endOffset":4113,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":4117,"endOffset":4394,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4398,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4555,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4809,"endOffset":5214,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5218,"endOffset":5970,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5974,"endOffset":6724,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6871,"endOffset":6907,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":6912,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9245,"endOffset":9544,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9548,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":9821,"endOffset":10017,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":10021,"endOffset":10283,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10328,"endOffset":11421,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11425,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11731,"endOffset":12210,"count":1164}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":11836,"endOffset":12166,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12332,"endOffset":12367,"count":3}],"isBlockCoverage":true}]},{"scriptId":"129","url":"node:internal/modules/run_main","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2700,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":374,"endOffset":812,"count":1},{"startOffset":641,"endOffset":648,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":814,"endOffset":1564,"count":1},{"startOffset":1101,"endOffset":1113,"count":0},{"startOffset":1261,"endOffset":1273,"count":0},{"startOffset":1384,"endOffset":1396,"count":0},{"startOffset":1463,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1566,"endOffset":1925,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1742,"endOffset":1920,"count":1},{"startOffset":1839,"endOffset":1849,"count":0}],"isBlockCoverage":true},{"functionName":"handleMainPromise","ranges":[{"startOffset":1927,"endOffset":2109,"count":1}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2295,"endOffset":2630,"count":1},{"startOffset":2505,"endOffset":2512,"count":0},{"startOffset":2518,"endOffset":2628,"count":0}],"isBlockCoverage":true}]},{"scriptId":"130","url":"file:///home/runner/work/deluge/deluge/node_modules/standard/bin/cmd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":518,"count":1},{"startOffset":196,"endOffset":228,"count":0},{"startOffset":418,"endOffset":517,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":273,"endOffset":415,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":342,"endOffset":410,"count":1}],"isBlockCoverage":true}]},{"scriptId":"131","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25,"count":1}],"isBlockCoverage":true}]},{"scriptId":"132","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":2},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":0},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":0},{"startOffset":663,"endOffset":696,"count":0},{"startOffset":709,"endOffset":773,"count":6}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":6},{"startOffset":862,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":2},{"startOffset":1192,"endOffset":1214,"count":4354}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///home/runner/work/deluge/deluge/node_modules/standard-engine/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3639,"count":1},{"startOffset":193,"endOffset":207,"count":0}],"isBlockCoverage":true},{"functionName":"StandardEngine","ranges":[{"startOffset":844,"endOffset":1890,"count":1},{"startOffset":893,"endOffset":939,"count":0},{"startOffset":962,"endOffset":1011,"count":0},{"startOffset":1358,"endOffset":1364,"count":0},{"startOffset":1693,"endOffset":1698,"count":0}],"isBlockCoverage":true},{"functionName":"lintText","ranges":[{"startOffset":2217,"endOffset":2441,"count":0}],"isBlockCoverage":false},{"functionName":"lintFiles","ranges":[{"startOffset":2787,"endOffset":3193,"count":1},{"startOffset":2911,"endOffset":2926,"count":0},{"startOffset":3118,"endOffset":3170,"count":0}],"isBlockCoverage":true},{"functionName":"resolveEslintConfig","ranges":[{"startOffset":3295,"endOffset":3546,"count":1}],"isBlockCoverage":true}]},{"scriptId":"135","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9145,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2008,"endOffset":2249,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2067,"endOffset":2245,"count":5},{"startOffset":2179,"endOffset":2225,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2566,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2628,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2690,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2738,"endOffset":2756,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":2791,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":2846,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":2899,"endOffset":2916,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":2952,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3012,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3071,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3123,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3278,"endOffset":3378,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3661,"endOffset":4088,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4119,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4188,"endOffset":4206,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4238,"endOffset":4288,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4319,"endOffset":4341,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4373,"endOffset":4978,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5007,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5058,"endOffset":5105,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5138,"endOffset":5155,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5243,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5498,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6445,"endOffset":7137,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7221,"endOffset":7510,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":7568,"endOffset":7823,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8127,"endOffset":8353,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///home/runner/work/deluge/deluge/node_modules/xdg-basedir/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":801,"count":1},{"startOffset":229,"endOffset":240,"count":0},{"startOffset":281,"endOffset":350,"count":0},{"startOffset":443,"endOffset":454,"count":0},{"startOffset":496,"endOffset":508,"count":0}],"isBlockCoverage":true}]},{"scriptId":"137","url":"file:///home/runner/work/deluge/deluge/node_modules/standard-engine/lib/resolve-eslint-config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6600,"count":1}],"isBlockCoverage":true},{"functionName":"addExtensions","ranges":[{"startOffset":612,"endOffset":750,"count":3},{"startOffset":663,"endOffset":669,"count":1},{"startOffset":669,"endOffset":723,"count":2},{"startOffset":723,"endOffset":728,"count":0}],"isBlockCoverage":true},{"functionName":"addIgnore","ranges":[{"startOffset":854,"endOffset":1110,"count":5},{"startOffset":897,"endOffset":903,"count":1},{"startOffset":903,"endOffset":937,"count":4},{"startOffset":937,"endOffset":965,"count":1},{"startOffset":965,"endOffset":1070,"count":4},{"startOffset":1070,"endOffset":1075,"count":1}],"isBlockCoverage":true},{"functionName":"addGlobals","ranges":[{"startOffset":1216,"endOffset":1427,"count":2},{"startOffset":1261,"endOffset":1301,"count":1},{"startOffset":1301,"endOffset":1329,"count":0},{"startOffset":1329,"endOffset":1426,"count":1}],"isBlockCoverage":true},{"functionName":"addPlugins","ranges":[{"startOffset":1533,"endOffset":1778,"count":2},{"startOffset":1578,"endOffset":1618,"count":1},{"startOffset":1618,"endOffset":1646,"count":0},{"startOffset":1646,"endOffset":1742,"count":1}],"isBlockCoverage":true},{"functionName":"addEnvs","ranges":[{"startOffset":1902,"endOffset":2408,"count":2},{"startOffset":1941,"endOffset":2016,"count":1},{"startOffset":2016,"endOffset":2043,"count":0},{"startOffset":2045,"endOffset":2215,"count":0},{"startOffset":2215,"endOffset":2291,"count":1},{"startOffset":2291,"endOffset":2319,"count":0},{"startOffset":2319,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"setParser","ranges":[{"startOffset":2503,"endOffset":2659,"count":1},{"startOffset":2552,"endOffset":2658,"count":0}],"isBlockCoverage":true},{"functionName":"resolveEslintConfig","ranges":[{"startOffset":4053,"endOffset":6557,"count":1},{"startOffset":4470,"endOffset":4490,"count":0},{"startOffset":4711,"endOffset":4727,"count":0},{"startOffset":5311,"endOffset":5333,"count":0},{"startOffset":6159,"endOffset":6179,"count":0},{"startOffset":6230,"endOffset":6520,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5346,"endOffset":5519,"count":2},{"startOffset":5466,"endOffset":5511,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5559,"endOffset":5652,"count":2}],"isBlockCoverage":true}]},{"scriptId":"138","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13381,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1019,"endOffset":1922,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2015,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3016,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3271,"endOffset":4268,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4270,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6224,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6283,"endOffset":6340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6375,"endOffset":6400,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6576,"endOffset":7707,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7742,"endOffset":8303,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8335,"endOffset":8421,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8501,"endOffset":8535,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8563,"endOffset":10378,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10570,"endOffset":10625,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10629,"endOffset":10686,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10722,"endOffset":10747,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":10929,"endOffset":11400,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11435,"endOffset":12075,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":12111,"endOffset":12672,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12705,"endOffset":13087,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13269,"endOffset":13303,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///home/runner/work/deluge/deluge/node_modules/pkg-conf/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1848,"count":1}],"isBlockCoverage":true},{"functionName":"filepath","ranges":[{"startOffset":178,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"findNextCwd","ranges":[{"startOffset":227,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"addFilePath","ranges":[{"startOffset":302,"endOffset":377,"count":1}],"isBlockCoverage":true},{"functionName":"pkgConf","ranges":[{"startOffset":396,"endOffset":1058,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1074,"endOffset":1673,"count":1},{"startOffset":1122,"endOffset":1173,"count":0},{"startOffset":1254,"endOffset":1258,"count":0},{"startOffset":1278,"endOffset":1351,"count":0},{"startOffset":1426,"endOffset":1458,"count":0},{"startOffset":1460,"endOffset":1581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"140","url":"file:///home/runner/work/deluge/deluge/node_modules/pkg-conf/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":968,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":105,"endOffset":550,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":575,"endOffset":966,"count":1},{"startOffset":635,"endOffset":640,"count":0},{"startOffset":890,"endOffset":964,"count":0}],"isBlockCoverage":true}]},{"scriptId":"141","url":"file:///home/runner/work/deluge/deluge/node_modules/pkg-conf/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":539,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":142,"endOffset":316,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":341,"endOffset":537,"count":1},{"startOffset":535,"endOffset":536,"count":0}],"isBlockCoverage":true}]},{"scriptId":"142","url":"file:///home/runner/work/deluge/deluge/node_modules/pkg-conf/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":252,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":58,"endOffset":137,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":162,"endOffset":250,"count":1},{"startOffset":216,"endOffset":248,"count":0}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///home/runner/work/deluge/deluge/node_modules/pkg-conf/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1042,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":227,"endOffset":275,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":361,"endOffset":451,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":471,"endOffset":1040,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///home/runner/work/deluge/deluge/node_modules/pkg-conf/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1114,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":61,"endOffset":1053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///home/runner/work/deluge/deluge/node_modules/p-try/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"pTry","ranges":[{"startOffset":28,"endOffset":107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///home/runner/work/deluge/deluge/node_modules/load-json-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":204,"endOffset":438,"count":1},{"startOffset":313,"endOffset":353,"count":0}],"isBlockCoverage":true},{"functionName":"loadJsonFile","ranges":[{"startOffset":462,"endOffset":565,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":708,"endOffset":790,"count":1}],"isBlockCoverage":true}]},{"scriptId":"147","url":"file:///home/runner/work/deluge/deluge/node_modules/graceful-fs/graceful-fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12680,"count":1},{"startOffset":529,"endOffset":624,"count":0},{"startOffset":859,"endOffset":1061,"count":0},{"startOffset":2292,"endOffset":2430,"count":0},{"startOffset":2590,"endOffset":2606,"count":0},{"startOffset":2608,"endOffset":2667,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":626,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"publishQueue","ranges":[{"startOffset":647,"endOffset":790,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":746,"endOffset":783,"count":2461}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":927,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1492,"endOffset":1899,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1518,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1930,"endOffset":2221,"count":1}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":1960,"endOffset":2107,"count":1230}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2317,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":2669,"endOffset":10035,"count":1},{"startOffset":6760,"endOffset":6877,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":2948,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":3572,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":4258,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":4939,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":5617,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7295,"endOffset":7338,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7349,"endOffset":7394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7500,"endOffset":7544,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7555,"endOffset":7601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7763,"endOffset":7810,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7821,"endOffset":7870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8016,"endOffset":8064,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8075,"endOffset":8125,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":8180,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream$open","ranges":[{"startOffset":8404,"endOffset":8725,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8729,"endOffset":8954,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream$open","ranges":[{"startOffset":8958,"endOffset":9229,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9233,"endOffset":9324,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9328,"endOffset":9421,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":9466,"endOffset":10020,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10037,"endOffset":10147,"count":0}],"isBlockCoverage":false},{"functionName":"resetQueue","ranges":[{"startOffset":10396,"endOffset":10864,"count":1230},{"startOffset":10497,"endOffset":10787,"count":0}],"isBlockCoverage":true},{"functionName":"retry","ranges":[{"startOffset":10866,"endOffset":12679,"count":1230},{"startOffset":11061,"endOffset":12677,"count":0}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///home/runner/work/deluge/deluge/node_modules/graceful-fs/polyfills.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10118,"count":1},{"startOffset":259,"endOffset":272,"count":0}],"isBlockCoverage":true},{"functionName":"process.cwd","ranges":[{"startOffset":163,"endOffset":234,"count":6},{"startOffset":192,"endOffset":219,"count":1}],"isBlockCoverage":true},{"functionName":"process.chdir","ranges":[{"startOffset":416,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":577,"endOffset":10117,"count":1},{"startOffset":774,"endOffset":830,"count":0},{"startOffset":832,"endOffset":857,"count":0},{"startOffset":916,"endOffset":942,"count":0},{"startOffset":2119,"endOffset":2248,"count":0},{"startOffset":2875,"endOffset":3759,"count":0},{"startOffset":3858,"endOffset":3867,"count":0},{"startOffset":4666,"endOffset":4679,"count":0}],"isBlockCoverage":true},{"functionName":"fs.lchmod","ranges":[{"startOffset":1981,"endOffset":2049,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchmodSync","ranges":[{"startOffset":2070,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchown","ranges":[{"startOffset":2137,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchownSync","ranges":[{"startOffset":2230,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2944,"endOffset":3743,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3873,"endOffset":4604,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":3898,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4685,"endOffset":5059,"count":1}],"isBlockCoverage":true},{"functionName":"fs.readSync","ranges":[{"startOffset":4717,"endOffset":5058,"count":0}],"isBlockCoverage":false},{"functionName":"patchLchmod","ranges":[{"startOffset":5077,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"patchLutimes","ranges":[{"startOffset":6249,"endOffset":7305,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFix","ranges":[{"startOffset":7309,"endOffset":7558,"count":3},{"startOffset":7351,"endOffset":7362,"count":1},{"startOffset":7362,"endOffset":7557,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7374,"endOffset":7554,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFixSync","ranges":[{"startOffset":7562,"endOffset":7787,"count":3},{"startOffset":7608,"endOffset":7619,"count":1},{"startOffset":7619,"endOffset":7786,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7631,"endOffset":7783,"count":0}],"isBlockCoverage":false},{"functionName":"chownFix","ranges":[{"startOffset":7792,"endOffset":8049,"count":3},{"startOffset":7834,"endOffset":7845,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7857,"endOffset":8045,"count":0}],"isBlockCoverage":false},{"functionName":"chownFixSync","ranges":[{"startOffset":8053,"endOffset":8286,"count":3},{"startOffset":8099,"endOffset":8110,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8122,"endOffset":8282,"count":0}],"isBlockCoverage":false},{"functionName":"statFix","ranges":[{"startOffset":8290,"endOffset":8913,"count":3},{"startOffset":8331,"endOffset":8342,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8443,"endOffset":8909,"count":0}],"isBlockCoverage":false},{"functionName":"statFixSync","ranges":[{"startOffset":8917,"endOffset":9354,"count":3},{"startOffset":8962,"endOffset":8973,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9074,"endOffset":9350,"count":0}],"isBlockCoverage":false},{"functionName":"chownErOk","ranges":[{"startOffset":9827,"endOffset":10115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"149","url":"node:constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1713,"count":1}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///home/runner/work/deluge/deluge/node_modules/graceful-fs/legacy-streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2655,"count":1}],"isBlockCoverage":true},{"functionName":"legacy","ranges":[{"startOffset":64,"endOffset":2654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///home/runner/work/deluge/deluge/node_modules/graceful-fs/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":496,"count":1},{"startOffset":81,"endOffset":125,"count":0}],"isBlockCoverage":true},{"functionName":"getPrototypeOf","ranges":[{"startOffset":84,"endOffset":125,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":127,"endOffset":495,"count":1},{"startOffset":201,"endOffset":211,"count":0},{"startOffset":291,"endOffset":333,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":377,"endOffset":477,"count":101}],"isBlockCoverage":true}]},{"scriptId":"152","url":"file:///home/runner/work/deluge/deluge/node_modules/strip-bom/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":315,"count":1},{"startOffset":66,"endOffset":131,"count":0},{"startOffset":276,"endOffset":301,"count":0}],"isBlockCoverage":true}]},{"scriptId":"153","url":"file:///home/runner/work/deluge/deluge/node_modules/parse-json/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":204,"endOffset":615,"count":1},{"startOffset":270,"endOffset":314,"count":0},{"startOffset":373,"endOffset":434,"count":0},{"startOffset":438,"endOffset":613,"count":0}],"isBlockCoverage":true}]},{"scriptId":"154","url":"file:///home/runner/work/deluge/deluge/node_modules/error-ex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2907,"count":1}],"isBlockCoverage":true},{"functionName":"errorEx","ranges":[{"startOffset":99,"endOffset":2492,"count":1},{"startOffset":179,"endOffset":231,"count":0},{"startOffset":2419,"endOffset":2467,"count":0}],"isBlockCoverage":true},{"functionName":"ErrorEXError","ranges":[{"startOffset":253,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"errorEx.append","ranges":[{"startOffset":2512,"endOffset":2700,"count":1}],"isBlockCoverage":true},{"functionName":"message","ranges":[{"startOffset":2555,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"errorEx.line","ranges":[{"startOffset":2718,"endOffset":2878,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///home/runner/work/deluge/deluge/node_modules/is-arrayish/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayish","ranges":[{"startOffset":32,"endOffset":202,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///home/runner/work/deluge/deluge/node_modules/json-parse-better-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1086,"count":1}],"isBlockCoverage":true},{"functionName":"parseJson","ranges":[{"startOffset":41,"endOffset":1085,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///home/runner/work/deluge/deluge/node_modules/pify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1676,"count":1}],"isBlockCoverage":true},{"functionName":"processFn","ranges":[{"startOffset":33,"endOffset":611,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":631,"endOffset":1674,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///home/runner/work/deluge/deluge/node_modules/standard-engine/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":959,"count":1}],"isBlockCoverage":true},{"functionName":"ensureArray","ranges":[{"startOffset":175,"endOffset":229,"count":13},{"startOffset":220,"endOffset":229,"count":0}],"isBlockCoverage":true},{"functionName":"ensureStringArrayValue","ranges":[{"startOffset":319,"endOffset":523,"count":5},{"startOffset":361,"endOffset":370,"count":4},{"startOffset":370,"endOffset":447,"count":1},{"startOffset":447,"endOffset":504,"count":2},{"startOffset":504,"endOffset":522,"count":1}],"isBlockCoverage":true},{"functionName":"stringArrayToObj","ranges":[{"startOffset":686,"endOffset":876,"count":2}],"isBlockCoverage":true}]},{"scriptId":"159","url":"file:///home/runner/work/deluge/deluge/node_modules/standard-engine/bin/cmd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5394,"count":1}],"isBlockCoverage":true},{"functionName":"cli","ranges":[{"startOffset":437,"endOffset":5371,"count":1},{"startOffset":1112,"endOffset":1158,"count":0},{"startOffset":1177,"endOffset":2203,"count":0},{"startOffset":2225,"endOffset":2296,"count":0},{"startOffset":2498,"endOffset":2509,"count":0},{"startOffset":3026,"endOffset":3038,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":2813,"endOffset":2995,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3050,"endOffset":5311,"count":1},{"startOffset":3189,"endOffset":3244,"count":0},{"startOffset":3295,"endOffset":3682,"count":0},{"startOffset":3702,"endOffset":3739,"count":0},{"startOffset":3762,"endOffset":4062,"count":0},{"startOffset":4284,"endOffset":5303,"count":0},{"startOffset":5304,"endOffset":5307,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4099,"endOffset":4128,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4167,"endOffset":4198,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4690,"endOffset":4742,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5324,"endOffset":5368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///home/runner/work/deluge/deluge/node_modules/minimist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7807,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":7293,"count":1},{"startOffset":56,"endOffset":66,"count":0},{"startOffset":183,"endOffset":233,"count":0},{"startOffset":280,"endOffset":298,"count":0},{"startOffset":300,"endOffset":336,"count":0},{"startOffset":523,"endOffset":528,"count":0},{"startOffset":1266,"endOffset":1376,"count":0},{"startOffset":3164,"endOffset":6699,"count":0},{"startOffset":7045,"endOffset":7173,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":401,"endOffset":460,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":538,"endOffset":789,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":635,"endOffset":781,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":708,"endOffset":768,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":844,"endOffset":988,"count":5},{"startOffset":922,"endOffset":981,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1103,"endOffset":1199,"count":4},{"startOffset":1176,"endOffset":1191,"count":0}],"isBlockCoverage":true},{"functionName":"argDefined","ranges":[{"startOffset":1382,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":1553,"endOffset":1986,"count":4},{"startOffset":1603,"endOffset":1621,"count":0},{"startOffset":1622,"endOffset":1646,"count":0},{"startOffset":1648,"endOffset":1715,"count":0},{"startOffset":1786,"endOffset":1799,"count":0},{"startOffset":1892,"endOffset":1897,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1907,"endOffset":1978,"count":1}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":1992,"endOffset":2985,"count":5},{"startOffset":2098,"endOffset":2462,"count":0},{"startOffset":2547,"endOffset":2554,"count":0},{"startOffset":2655,"endOffset":2662,"count":0},{"startOffset":2698,"endOffset":2705,"count":0},{"startOffset":2739,"endOffset":2758,"count":0},{"startOffset":2759,"endOffset":2789,"count":0},{"startOffset":2830,"endOffset":2979,"count":0}],"isBlockCoverage":true},{"functionName":"aliasIsBoolean","ranges":[{"startOffset":2995,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6739,"endOffset":7017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7106,"endOffset":7165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7210,"endOffset":7265,"count":0}],"isBlockCoverage":false},{"functionName":"hasKey","ranges":[{"startOffset":7296,"endOffset":7485,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":7487,"endOffset":7668,"count":4},{"startOffset":7542,"endOffset":7554,"count":0},{"startOffset":7589,"endOffset":7601,"count":0}],"isBlockCoverage":true},{"functionName":"isConstructorOrProto","ranges":[{"startOffset":7671,"endOffset":7806,"count":5},{"startOffset":7747,"endOffset":7780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"161","url":"file:///home/runner/work/deluge/deluge/node_modules/get-stdin/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":57,"endOffset":236,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.buffer","ranges":[{"startOffset":263,"endOffset":495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"163","url":"file:///home/runner/work/deluge/deluge/node_modules/standard/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":629,"count":1}],"isBlockCoverage":true}]},{"scriptId":"164","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":715,"count":1}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/eslint/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true}]},{"scriptId":"166","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/eslint/eslint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26203,"count":1}],"isBlockCoverage":true},{"functionName":"isNonEmptyString","ranges":[{"startOffset":4767,"endOffset":4852,"count":11},{"startOffset":4831,"endOffset":4849,"count":9}],"isBlockCoverage":true},{"functionName":"isArrayOfNonEmptyString","ranges":[{"startOffset":5037,"endOffset":5134,"count":3}],"isBlockCoverage":true},{"functionName":"isFixType","ranges":[{"startOffset":5291,"endOffset":5405,"count":0}],"isBlockCoverage":false},{"functionName":"isFixTypeArray","ranges":[{"startOffset":5574,"endOffset":5655,"count":0}],"isBlockCoverage":false},{"functionName":"ESLintInvalidOptionsError","ranges":[{"startOffset":5751,"endOffset":5955,"count":0}],"isBlockCoverage":false},{"functionName":"processOptions","ranges":[{"startOffset":6227,"endOffset":12972,"count":1},{"startOffset":7749,"endOffset":9244,"count":0},{"startOffset":9293,"endOffset":9363,"count":0},{"startOffset":9404,"endOffset":9475,"count":0},{"startOffset":9512,"endOffset":9570,"count":0},{"startOffset":9613,"endOffset":9688,"count":0},{"startOffset":9735,"endOffset":9773,"count":0},{"startOffset":9780,"endOffset":9869,"count":0},{"startOffset":9927,"endOffset":9990,"count":0},{"startOffset":10045,"endOffset":10121,"count":0},{"startOffset":10167,"endOffset":10189,"count":0},{"startOffset":10191,"endOffset":10282,"count":0},{"startOffset":10316,"endOffset":10344,"count":0},{"startOffset":10346,"endOffset":10416,"count":0},{"startOffset":10443,"endOffset":10471,"count":0},{"startOffset":10473,"endOffset":10602,"count":0},{"startOffset":10648,"endOffset":10715,"count":0},{"startOffset":10753,"endOffset":10812,"count":0},{"startOffset":10875,"endOffset":10955,"count":0},{"startOffset":11000,"endOffset":11075,"count":0},{"startOffset":11122,"endOffset":11152,"count":0},{"startOffset":11154,"endOffset":11242,"count":0},{"startOffset":11280,"endOffset":11348,"count":0},{"startOffset":11413,"endOffset":11488,"count":0},{"startOffset":11521,"endOffset":11664,"count":0},{"startOffset":11883,"endOffset":12001,"count":0},{"startOffset":12063,"endOffset":12107,"count":0},{"startOffset":12114,"endOffset":12208,"count":0},{"startOffset":12254,"endOffset":12336,"count":0},{"startOffset":12379,"endOffset":12443,"count":0},{"startOffset":12472,"endOffset":12532,"count":0}],"isBlockCoverage":true},{"functionName":"hasDefinedProperty","ranges":[{"startOffset":13201,"endOffset":13449,"count":1},{"startOffset":13268,"endOffset":13283,"count":0},{"startOffset":13285,"endOffset":13429,"count":0}],"isBlockCoverage":true},{"functionName":"createRulesMeta","ranges":[{"startOffset":13625,"endOffset":13789,"count":0}],"isBlockCoverage":false},{"functionName":"getOrFindUsedDeprecatedRules","ranges":[{"startOffset":14157,"endOffset":15324,"count":0}],"isBlockCoverage":false},{"functionName":"processCLIEngineLintReport","ranges":[{"startOffset":15637,"endOffset":16025,"count":1},{"startOffset":15921,"endOffset":16002,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":15786,"endOffset":15878,"count":0}],"isBlockCoverage":false},{"functionName":"compareResultsByFilePath","ranges":[{"startOffset":16320,"endOffset":16498,"count":0}],"isBlockCoverage":false},{"functionName":"ESLint","ranges":[{"startOffset":16680,"endOffset":17767,"count":1},{"startOffset":17311,"endOffset":17424,"count":0},{"startOffset":17473,"endOffset":17607,"count":0}],"isBlockCoverage":true},{"functionName":"get version","ranges":[{"startOffset":17843,"endOffset":17888,"count":0}],"isBlockCoverage":false},{"functionName":"outputFixes","ranges":[{"startOffset":18112,"endOffset":18772,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorResults","ranges":[{"startOffset":18964,"endOffset":19047,"count":0}],"isBlockCoverage":false},{"functionName":"getRulesMetaForResults","ranges":[{"startOffset":19286,"endOffset":20114,"count":0}],"isBlockCoverage":false},{"functionName":"lintFiles","ranges":[{"startOffset":20379,"endOffset":20790,"count":1},{"startOffset":20486,"endOffset":20600,"count":0}],"isBlockCoverage":true},{"functionName":"lintText","ranges":[{"startOffset":21253,"endOffset":22409,"count":0}],"isBlockCoverage":false},{"functionName":"loadFormatter","ranges":[{"startOffset":23135,"endOffset":24501,"count":0}],"isBlockCoverage":false},{"functionName":"calculateConfigForFile","ranges":[{"startOffset":24893,"endOffset":25175,"count":0}],"isBlockCoverage":false},{"functionName":"isPathIgnored","ranges":[{"startOffset":25389,"endOffset":25659,"count":0}],"isBlockCoverage":false},{"functionName":"getESLintPrivateMembers","ranges":[{"startOffset":26110,"endOffset":26199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/cli-engine/cli-engine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38007,"count":1}],"isBlockCoverage":true},{"functionName":"validateFixTypes","ranges":[{"startOffset":7227,"endOffset":7432,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStatsPerFile","ranges":[{"startOffset":7637,"endOffset":8313,"count":8}],"isBlockCoverage":true},{"functionName":"messages.reduce.errorCount","ranges":[{"startOffset":7707,"endOffset":8163,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStatsPerRun","ranges":[{"startOffset":8540,"endOffset":9079,"count":1}],"isBlockCoverage":true},{"functionName":"results.reduce.errorCount","ranges":[{"startOffset":8607,"endOffset":8929,"count":8}],"isBlockCoverage":true},{"functionName":"verifyText","ranges":[{"startOffset":9970,"endOffset":11586,"count":8},{"startOffset":10196,"endOffset":10207,"count":0},{"startOffset":10474,"endOffset":10500,"count":0},{"startOffset":11372,"endOffset":11411,"count":0},{"startOffset":11473,"endOffset":11520,"count":0},{"startOffset":11527,"endOffset":11564,"count":0}],"isBlockCoverage":true},{"functionName":"filterCodeBlock","ranges":[{"startOffset":11032,"endOffset":11145,"count":0}],"isBlockCoverage":false},{"functionName":"createIgnoreResult","ranges":[{"startOffset":11823,"endOffset":12887,"count":0}],"isBlockCoverage":false},{"functionName":"getRule","ranges":[{"startOffset":13081,"endOffset":13334,"count":0}],"isBlockCoverage":false},{"functionName":"shouldMessageBeFixed","ranges":[{"startOffset":13701,"endOffset":13997,"count":0}],"isBlockCoverage":false},{"functionName":"iterateRuleDeprecationWarnings","ranges":[{"startOffset":14193,"endOffset":15274,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorMessage","ranges":[{"startOffset":15472,"endOffset":15543,"count":0}],"isBlockCoverage":false},{"functionName":"getCacheFile","ranges":[{"startOffset":16049,"endOffset":17900,"count":1},{"startOffset":17065,"endOffset":17511,"count":0},{"startOffset":17867,"endOffset":17899,"count":0}],"isBlockCoverage":true},{"functionName":"getCacheFileForDirectory","ranges":[{"startOffset":16609,"endOffset":16720,"count":1}],"isBlockCoverage":true},{"functionName":"toBooleanMap","ranges":[{"startOffset":18250,"endOffset":18781,"count":2},{"startOffset":18345,"endOffset":18413,"count":0},{"startOffset":18447,"endOffset":18760,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18476,"endOffset":18748,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigDataFromOptions","ranges":[{"startOffset":18937,"endOffset":19683,"count":1},{"startOffset":19334,"endOffset":19363,"count":0},{"startOffset":19522,"endOffset":19682,"count":0}],"isBlockCoverage":true},{"functionName":"directoryExists","ranges":[{"startOffset":19922,"endOffset":20193,"count":0}],"isBlockCoverage":false},{"functionName":"CLIEngine","ranges":[{"startOffset":20759,"endOffset":23898,"count":1},{"startOffset":21029,"endOffset":21073,"count":0},{"startOffset":21154,"endOffset":21308,"count":0},{"startOffset":21388,"endOffset":21408,"count":0},{"startOffset":21591,"endOffset":21598,"count":0},{"startOffset":22618,"endOffset":22624,"count":0},{"startOffset":23244,"endOffset":23263,"count":0},{"startOffset":23264,"endOffset":23294,"count":0},{"startOffset":23296,"endOffset":23892,"count":0}],"isBlockCoverage":true},{"functionName":"getEslintRecommendedConfig","ranges":[{"startOffset":22036,"endOffset":22085,"count":0}],"isBlockCoverage":false},{"functionName":"getEslintAllConfig","ranges":[{"startOffset":22119,"endOffset":22160,"count":0}],"isBlockCoverage":false},{"functionName":"CLIEngine.originalFix","ranges":[{"startOffset":23750,"endOffset":23760,"count":0}],"isBlockCoverage":false},{"functionName":"CLIEngine.options.fix","ranges":[{"startOffset":23789,"endOffset":23881,"count":0}],"isBlockCoverage":false},{"functionName":"getRules","ranges":[{"startOffset":23904,"endOffset":24194,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorResults","ranges":[{"startOffset":24386,"endOffset":25159,"count":0}],"isBlockCoverage":false},{"functionName":"outputFixes","ranges":[{"startOffset":25339,"endOffset":25556,"count":0}],"isBlockCoverage":false},{"functionName":"resolveFileGlobPatterns","ranges":[{"startOffset":25826,"endOffset":26540,"count":0}],"isBlockCoverage":false},{"functionName":"executeOnFiles","ranges":[{"startOffset":26850,"endOffset":30928,"count":1},{"startOffset":27472,"endOffset":27923,"count":0},{"startOffset":28054,"endOffset":30214,"count":8},{"startOffset":28081,"endOffset":28187,"count":0},{"startOffset":28528,"endOffset":28590,"count":1},{"startOffset":28822,"endOffset":29346,"count":0}],"isBlockCoverage":true},{"functionName":"get usedDeprecatedRules","ranges":[{"startOffset":30614,"endOffset":30911,"count":0}],"isBlockCoverage":false},{"functionName":"executeOnText","ranges":[{"startOffset":31283,"endOffset":33509,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigForFile","ranges":[{"startOffset":33945,"endOffset":34549,"count":0}],"isBlockCoverage":false},{"functionName":"isPathIgnored","ranges":[{"startOffset":34754,"endOffset":35325,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatter","ranges":[{"startOffset":35728,"endOffset":37563,"count":0}],"isBlockCoverage":false},{"functionName":"getCLIEngineInternalSlots","ranges":[{"startOffset":37913,"endOffset":38003,"count":1}],"isBlockCoverage":true}]},{"scriptId":"168","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/conf/default-cli-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":680,"count":1}],"isBlockCoverage":true}]},{"scriptId":"169","url":"file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/dist/eslintrc.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":146595,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":507,"endOffset":621,"count":13},{"startOffset":578,"endOffset":595,"count":5},{"startOffset":596,"endOffset":599,"count":0}],"isBlockCoverage":true},{"functionName":"getCommonAncestorPath","ranges":[{"startOffset":3063,"endOffset":4077,"count":3},{"startOffset":3192,"endOffset":3737,"count":2},{"startOffset":3377,"endOffset":3380,"count":0},{"startOffset":3476,"endOffset":3491,"count":62},{"startOffset":3498,"endOffset":3731,"count":62},{"startOffset":3531,"endOffset":3618,"count":0},{"startOffset":3674,"endOffset":3721,"count":10},{"startOffset":3771,"endOffset":3802,"count":0},{"startOffset":3952,"endOffset":3983,"count":0},{"startOffset":3985,"endOffset":4048,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":4277,"endOffset":4518,"count":17},{"startOffset":4450,"endOffset":4517,"count":0}],"isBlockCoverage":true},{"functionName":"dirSuffix","ranges":[{"startOffset":4665,"endOffset":4878,"count":17},{"startOffset":4772,"endOffset":4839,"count":9},{"startOffset":4813,"endOffset":4838,"count":0},{"startOffset":4865,"endOffset":4870,"count":8},{"startOffset":4871,"endOffset":4875,"count":9}],"isBlockCoverage":true},{"functionName":"get DefaultPatterns","ranges":[{"startOffset":5287,"endOffset":5348,"count":1}],"isBlockCoverage":true},{"functionName":"createDefaultIgnore","ranges":[{"startOffset":5826,"endOffset":5935,"count":2}],"isBlockCoverage":true},{"functionName":"createIgnore","ranges":[{"startOffset":6462,"endOffset":7682,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6612,"endOffset":6627,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6701,"endOffset":6739,"count":5}],"isBlockCoverage":true},{"functionName":"Object.assign.basePath.basePath","ranges":[{"startOffset":7062,"endOffset":7629,"count":17},{"startOffset":7409,"endOffset":7416,"count":0}],"isBlockCoverage":true},{"functionName":"IgnorePattern","ranges":[{"startOffset":7888,"endOffset":8728,"count":5}],"isBlockCoverage":true},{"functionName":"getPatternsRelativeTo","ranges":[{"startOffset":9013,"endOffset":9797,"count":5},{"startOffset":9312,"endOffset":9796,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9404,"endOffset":9789,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":11000,"endOffset":11101,"count":0}],"isBlockCoverage":false},{"functionName":"ExtractedConfig","ranges":[{"startOffset":11179,"endOffset":12910,"count":1}],"isBlockCoverage":true},{"functionName":"toCompatibleObjectAsConfigFileContent","ranges":[{"startOffset":13061,"endOffset":13869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17703,"endOffset":18013,"count":1628},{"startOffset":17771,"endOffset":17984,"count":1}],"isBlockCoverage":true},{"functionName":"getMatchedIndices","ranges":[{"startOffset":18229,"endOffset":18543,"count":25},{"startOffset":18354,"endOffset":18520,"count":150},{"startOffset":18424,"endOffset":18472,"count":0}],"isBlockCoverage":true},{"functionName":"isNonNullObject","ranges":[{"startOffset":18697,"endOffset":18776,"count":73},{"startOffset":18760,"endOffset":18773,"count":20}],"isBlockCoverage":true},{"functionName":"mergeWithoutOverwrite","ranges":[{"startOffset":19078,"endOffset":19753,"count":28},{"startOffset":19161,"endOffset":19184,"count":17},{"startOffset":19184,"endOffset":19229,"count":11},{"startOffset":19229,"endOffset":19751,"count":19},{"startOffset":19264,"endOffset":19297,"count":0},{"startOffset":19341,"endOffset":19413,"count":1},{"startOffset":19413,"endOffset":19745,"count":18},{"startOffset":19447,"endOffset":19745,"count":14},{"startOffset":19495,"endOffset":19643,"count":3},{"startOffset":19554,"endOffset":19558,"count":1},{"startOffset":19559,"endOffset":19563,"count":2},{"startOffset":19643,"endOffset":19735,"count":11},{"startOffset":19751,"endOffset":19752,"count":11}],"isBlockCoverage":true},{"functionName":"PluginConflictError","ranges":[{"startOffset":20032,"endOffset":20290,"count":0}],"isBlockCoverage":false},{"functionName":"mergePlugins","ranges":[{"startOffset":20546,"endOffset":21508,"count":6},{"startOffset":20620,"endOffset":20688,"count":3},{"startOffset":20688,"endOffset":21506,"count":4},{"startOffset":20723,"endOffset":20756,"count":0},{"startOffset":20967,"endOffset":21023,"count":0},{"startOffset":21072,"endOffset":21500,"count":0},{"startOffset":21506,"endOffset":21507,"count":3}],"isBlockCoverage":true},{"functionName":"mergeRuleConfigs","ranges":[{"startOffset":21750,"endOffset":22690,"count":6},{"startOffset":21828,"endOffset":21851,"count":4},{"startOffset":21851,"endOffset":21896,"count":2},{"startOffset":21896,"endOffset":22688,"count":196},{"startOffset":21931,"endOffset":21964,"count":0},{"startOffset":22181,"endOffset":22242,"count":83},{"startOffset":22242,"endOffset":22306,"count":113},{"startOffset":22487,"endOffset":22682,"count":0},{"startOffset":22688,"endOffset":22689,"count":2}],"isBlockCoverage":true},{"functionName":"createConfig","ranges":[{"startOffset":22887,"endOffset":24847,"count":1},{"startOffset":23060,"endOffset":24644,"count":6},{"startOffset":23204,"endOffset":23357,"count":0},{"startOffset":23468,"endOffset":23529,"count":0},{"startOffset":23676,"endOffset":23809,"count":0},{"startOffset":24001,"endOffset":24102,"count":0},{"startOffset":24173,"endOffset":24240,"count":3}],"isBlockCoverage":true},{"functionName":"collect","ranges":[{"startOffset":25162,"endOffset":25481,"count":12},{"startOffset":25338,"endOffset":25473,"count":195},{"startOffset":25441,"endOffset":25448,"count":0}],"isBlockCoverage":true},{"functionName":"normalizePluginRule","ranges":[{"startOffset":25639,"endOffset":25742,"count":195},{"startOffset":25714,"endOffset":25732,"count":0}],"isBlockCoverage":true},{"functionName":"deleteMutationMethods","ranges":[{"startOffset":25876,"endOffset":26118,"count":3}],"isBlockCoverage":true},{"functionName":"initPluginMemberMaps","ranges":[{"startOffset":26357,"endOffset":27259,"count":1},{"startOffset":26574,"endOffset":27126,"count":6},{"startOffset":26606,"endOffset":26714,"count":3},{"startOffset":26714,"endOffset":27120,"count":4},{"startOffset":26814,"endOffset":26855,"count":0},{"startOffset":27120,"endOffset":27126,"count":3}],"isBlockCoverage":true},{"functionName":"ensurePluginMemberMaps","ranges":[{"startOffset":27468,"endOffset":27664,"count":1603},{"startOffset":27589,"endOffset":27643,"count":1}],"isBlockCoverage":true},{"functionName":"get pluginEnvironments","ranges":[{"startOffset":28365,"endOffset":28449,"count":33}],"isBlockCoverage":true},{"functionName":"get pluginProcessors","ranges":[{"startOffset":28617,"endOffset":28705,"count":1}],"isBlockCoverage":true},{"functionName":"get pluginRules","ranges":[{"startOffset":28861,"endOffset":28939,"count":1569}],"isBlockCoverage":true},{"functionName":"isRoot","ranges":[{"startOffset":29069,"endOffset":29298,"count":0}],"isBlockCoverage":false},{"functionName":"extractConfig","ranges":[{"startOffset":29516,"endOffset":29852,"count":25},{"startOffset":29736,"endOffset":29809,"count":1}],"isBlockCoverage":true},{"functionName":"isAdditionalTargetPath","ranges":[{"startOffset":30078,"endOffset":30426,"count":0}],"isBlockCoverage":false},{"functionName":"getUsedExtractedConfigs","ranges":[{"startOffset":30678,"endOffset":30820,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigDependency","ranges":[{"startOffset":32146,"endOffset":33167,"count":4}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":33298,"endOffset":33597,"count":4},{"startOffset":33489,"endOffset":33570,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33743,"endOffset":33939,"count":4}],"isBlockCoverage":true},{"functionName":"normalizePatterns","ranges":[{"startOffset":34994,"endOffset":35216,"count":12},{"startOffset":35066,"endOffset":35114,"count":0},{"startOffset":35152,"endOffset":35163,"count":0},{"startOffset":35165,"endOffset":35199,"count":0}],"isBlockCoverage":true},{"functionName":"toMatcher","ranges":[{"startOffset":35373,"endOffset":35820,"count":0}],"isBlockCoverage":false},{"functionName":"patternToJson","ranges":[{"startOffset":35970,"endOffset":36159,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":36683,"endOffset":37937,"count":6},{"startOffset":36965,"endOffset":37936,"count":0}],"isBlockCoverage":true},{"functionName":"and","ranges":[{"startOffset":38302,"endOffset":38909,"count":8},{"startOffset":38353,"endOffset":38480,"count":0},{"startOffset":38491,"endOffset":38892,"count":0}],"isBlockCoverage":true},{"functionName":"OverrideTester","ranges":[{"startOffset":39141,"endOffset":39421,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":39618,"endOffset":40145,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":40276,"endOffset":40587,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40733,"endOffset":40814,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41363,"endOffset":41441,"count":3}],"isBlockCoverage":true},{"functionName":"getRuleSeverity","ranges":[{"startOffset":42273,"endOffset":42640,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeToStrings","ranges":[{"startOffset":42925,"endOffset":43468,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorSeverity","ranges":[{"startOffset":43718,"endOffset":43804,"count":0}],"isBlockCoverage":false},{"functionName":"isValidSeverity","ranges":[{"startOffset":44029,"endOffset":44288,"count":0}],"isBlockCoverage":false},{"functionName":"isEverySeverityValid","ranges":[{"startOffset":44497,"endOffset":44619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConfigGlobal","ranges":[{"startOffset":44930,"endOffset":45482,"count":3},{"startOffset":45019,"endOffset":45056,"count":0},{"startOffset":45066,"endOffset":45076,"count":0},{"startOffset":45085,"endOffset":45097,"count":0},{"startOffset":45106,"endOffset":45123,"count":0},{"startOffset":45132,"endOffset":45179,"count":0},{"startOffset":45189,"endOffset":45199,"count":0},{"startOffset":45208,"endOffset":45219,"count":0},{"startOffset":45228,"endOffset":45241,"count":0},{"startOffset":45250,"endOffset":45266,"count":0},{"startOffset":45332,"endOffset":45474,"count":0}],"isBlockCoverage":true},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":47224,"endOffset":47704,"count":0}],"isBlockCoverage":false},{"functionName":"ajvOrig","ranges":[{"startOffset":52408,"endOffset":52830,"count":1}],"isBlockCoverage":true},{"functionName":"getDiff","ranges":[{"startOffset":55524,"endOffset":55758,"count":1},{"startOffset":55636,"endOffset":55738,"count":57},{"startOffset":55690,"endOffset":55732,"count":19}],"isBlockCoverage":true},{"functionName":"ConfigValidator","ranges":[{"startOffset":60676,"endOffset":60772,"count":6}],"isBlockCoverage":true},{"functionName":"getRuleOptionsSchema","ranges":[{"startOffset":60991,"endOffset":61716,"count":196},{"startOffset":61039,"endOffset":61075,"count":0},{"startOffset":61257,"endOffset":61631,"count":183},{"startOffset":61290,"endOffset":61496,"count":104},{"startOffset":61496,"endOffset":61631,"count":79},{"startOffset":61631,"endOffset":61702,"count":13},{"startOffset":61702,"endOffset":61709,"count":2}],"isBlockCoverage":true},{"functionName":"validateRuleSeverity","ranges":[{"startOffset":61971,"endOffset":62517,"count":196},{"startOffset":62051,"endOffset":62063,"count":83},{"startOffset":62064,"endOffset":62073,"count":113},{"startOffset":62171,"endOffset":62181,"count":0},{"startOffset":62237,"endOffset":62258,"count":194},{"startOffset":62304,"endOffset":62516,"count":0}],"isBlockCoverage":true},{"functionName":"validateRuleSchema","ranges":[{"startOffset":62784,"endOffset":63408,"count":196},{"startOffset":62951,"endOffset":63029,"count":194},{"startOffset":63123,"endOffset":63402,"count":194},{"startOffset":63202,"endOffset":63392,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63281,"endOffset":63349,"count":0}],"isBlockCoverage":false},{"functionName":"validateRuleOptions","ranges":[{"startOffset":63888,"endOffset":64513,"count":196},{"startOffset":64131,"endOffset":64149,"count":83},{"startOffset":64150,"endOffset":64154,"count":113},{"startOffset":64181,"endOffset":64507,"count":0}],"isBlockCoverage":true},{"functionName":"validateEnvironment","ranges":[{"startOffset":64876,"endOffset":65389,"count":6},{"startOffset":65044,"endOffset":65075,"count":4},{"startOffset":65075,"endOffset":65388,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65118,"endOffset":65381,"count":4},{"startOffset":65195,"endOffset":65202,"count":0},{"startOffset":65227,"endOffset":65371,"count":0}],"isBlockCoverage":true},{"functionName":"validateRules","ranges":[{"startOffset":65738,"endOffset":66115,"count":6},{"startOffset":65857,"endOffset":65888,"count":4},{"startOffset":65888,"endOffset":66114,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65931,"endOffset":66107,"count":196},{"startOffset":65986,"endOffset":66014,"count":148},{"startOffset":66015,"endOffset":66022,"count":0}],"isBlockCoverage":true},{"functionName":"validateGlobals","ranges":[{"startOffset":66381,"endOffset":66879,"count":6},{"startOffset":66457,"endOffset":66488,"count":4},{"startOffset":66488,"endOffset":66878,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66549,"endOffset":66871,"count":3},{"startOffset":66692,"endOffset":66857,"count":0}],"isBlockCoverage":true},{"functionName":"validateProcessor","ranges":[{"startOffset":67183,"endOffset":67443,"count":6},{"startOffset":67266,"endOffset":67297,"count":0},{"startOffset":67299,"endOffset":67437,"count":0}],"isBlockCoverage":true},{"functionName":"formatErrors","ranges":[{"startOffset":67634,"endOffset":68713,"count":0}],"isBlockCoverage":false},{"functionName":"validateConfigSchema","ranges":[{"startOffset":68975,"endOffset":69420,"count":5},{"startOffset":69061,"endOffset":69089,"count":1},{"startOffset":69129,"endOffset":69263,"count":0},{"startOffset":69329,"endOffset":69414,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":69865,"endOffset":70459,"count":0}],"isBlockCoverage":false},{"functionName":"validateConfigArray","ranges":[{"startOffset":70611,"endOffset":71409,"count":1},{"startOffset":70964,"endOffset":71403,"count":6},{"startOffset":71006,"endOffset":71047,"count":0}],"isBlockCoverage":true},{"functionName":"normalizePackageName","ranges":[{"startOffset":71811,"endOffset":73215,"count":6},{"startOffset":72135,"endOffset":72204,"count":0},{"startOffset":72248,"endOffset":73070,"count":0}],"isBlockCoverage":true},{"functionName":"getShorthandName","ranges":[{"startOffset":73422,"endOffset":73964,"count":4},{"startOffset":73497,"endOffset":73838,"count":0},{"startOffset":73940,"endOffset":73963,"count":0}],"isBlockCoverage":true},{"functionName":"getNamespaceFromTerm","ranges":[{"startOffset":74140,"endOffset":74261,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":75240,"endOffset":75822,"count":6},{"startOffset":75369,"endOffset":75820,"count":0}],"isBlockCoverage":true},{"functionName":"isFilePath","ranges":[{"startOffset":82109,"endOffset":82265,"count":6}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":82463,"endOffset":82584,"count":2}],"isBlockCoverage":true},{"functionName":"loadYAMLConfigFile","ranges":[{"startOffset":82811,"endOffset":83302,"count":0}],"isBlockCoverage":false},{"functionName":"loadJSONConfigFile","ranges":[{"startOffset":83529,"endOffset":84043,"count":1},{"startOffset":83722,"endOffset":84041,"count":0}],"isBlockCoverage":true},{"functionName":"loadLegacyConfigFile","ranges":[{"startOffset":84284,"endOffset":84794,"count":0}],"isBlockCoverage":false},{"functionName":"loadJSConfigFile","ranges":[{"startOffset":85027,"endOffset":85371,"count":2},{"startOffset":85191,"endOffset":85369,"count":0}],"isBlockCoverage":true},{"functionName":"loadPackageJSONConfigFile","ranges":[{"startOffset":85606,"endOffset":86285,"count":0}],"isBlockCoverage":false},{"functionName":"loadESLintIgnoreFile","ranges":[{"startOffset":86455,"endOffset":86898,"count":1},{"startOffset":86708,"endOffset":86896,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":86648,"endOffset":86699,"count":2},{"startOffset":86675,"endOffset":86699,"count":1}],"isBlockCoverage":true},{"functionName":"configInvalidError","ranges":[{"startOffset":87268,"endOffset":87554,"count":0}],"isBlockCoverage":false},{"functionName":"loadConfigFile","ranges":[{"startOffset":87834,"endOffset":88413,"count":3},{"startOffset":87936,"endOffset":87947,"count":2},{"startOffset":87956,"endOffset":88015,"count":2},{"startOffset":88025,"endOffset":88243,"count":1},{"startOffset":88119,"endOffset":88194,"count":0},{"startOffset":88253,"endOffset":88266,"count":0},{"startOffset":88275,"endOffset":88336,"count":0},{"startOffset":88346,"endOffset":88405,"count":0}],"isBlockCoverage":true},{"functionName":"writeDebugLogForLoading","ranges":[{"startOffset":88648,"endOffset":89290,"count":6},{"startOffset":88770,"endOffset":89288,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":90016,"endOffset":90875,"count":4},{"startOffset":90213,"endOffset":90270,"count":2},{"startOffset":90279,"endOffset":90283,"count":2},{"startOffset":90342,"endOffset":90405,"count":2},{"startOffset":90407,"endOffset":90474,"count":2},{"startOffset":90428,"endOffset":90473,"count":0},{"startOffset":90475,"endOffset":90489,"count":2},{"startOffset":90529,"endOffset":90602,"count":1},{"startOffset":90603,"endOffset":90616,"count":0},{"startOffset":90678,"endOffset":90745,"count":0},{"startOffset":90746,"endOffset":90760,"count":0},{"startOffset":90792,"endOffset":90803,"count":0}],"isBlockCoverage":true},{"functionName":"normalizePlugin","ranges":[{"startOffset":91156,"endOffset":91668,"count":4},{"startOffset":91306,"endOffset":91346,"count":0},{"startOffset":91405,"endOffset":91410,"count":0},{"startOffset":91534,"endOffset":91539,"count":0}],"isBlockCoverage":true},{"functionName":"ConfigArrayFactory","ranges":[{"startOffset":92067,"endOffset":92825,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":93349,"endOffset":93731,"count":3},{"startOffset":93430,"endOffset":93479,"count":1},{"startOffset":93479,"endOffset":93730,"count":2}],"isBlockCoverage":true},{"functionName":"loadFile","ranges":[{"startOffset":94142,"endOffset":94386,"count":1}],"isBlockCoverage":true},{"functionName":"loadInDirectory","ranges":[{"startOffset":94885,"endOffset":96090,"count":0}],"isBlockCoverage":false},{"functionName":"getPathToConfigFileInDirectory","ranges":[{"startOffset":96338,"endOffset":96939,"count":0}],"isBlockCoverage":false},{"functionName":"loadESLintIgnore","ranges":[{"startOffset":97168,"endOffset":97584,"count":1}],"isBlockCoverage":true},{"functionName":"loadDefaultESLintIgnore","ranges":[{"startOffset":97770,"endOffset":98991,"count":1},{"startOffset":98175,"endOffset":98990,"count":0}],"isBlockCoverage":true},{"functionName":"_loadConfigData","ranges":[{"startOffset":99206,"endOffset":99311,"count":3}],"isBlockCoverage":true},{"functionName":"_normalizeESLintIgnoreData","ranges":[{"startOffset":99643,"endOffset":100073,"count":1}],"isBlockCoverage":true},{"functionName":"_normalizeConfigData","ranges":[{"startOffset":100376,"endOffset":100614,"count":5},{"startOffset":100526,"endOffset":100541,"count":0}],"isBlockCoverage":true},{"functionName":"_normalizeObjectConfigData","ranges":[{"startOffset":100936,"endOffset":101913,"count":6},{"startOffset":101354,"endOffset":101907,"count":8},{"startOffset":101815,"endOffset":101869,"count":0}],"isBlockCoverage":true},{"functionName":"_normalizeObjectConfigDataBody","ranges":[{"startOffset":102216,"endOffset":104268,"count":6},{"startOffset":102720,"endOffset":102728,"count":1},{"startOffset":102729,"endOffset":102739,"count":5},{"startOffset":102786,"endOffset":102926,"count":3},{"startOffset":102867,"endOffset":102885,"count":0},{"startOffset":103020,"endOffset":103086,"count":2},{"startOffset":103156,"endOffset":103192,"count":0},{"startOffset":103229,"endOffset":103266,"count":3},{"startOffset":103357,"endOffset":103436,"count":3},{"startOffset":104087,"endOffset":104262,"count":0}],"isBlockCoverage":true},{"functionName":"_loadExtends","ranges":[{"startOffset":104567,"endOffset":105188,"count":2},{"startOffset":104745,"endOffset":104833,"count":0},{"startOffset":104884,"endOffset":104971,"count":0},{"startOffset":105053,"endOffset":105182,"count":0}],"isBlockCoverage":true},{"functionName":"_loadExtendedBuiltInConfig","ranges":[{"startOffset":105487,"endOffset":107078,"count":0}],"isBlockCoverage":false},{"functionName":"_loadExtendedPluginConfig","ranges":[{"startOffset":107377,"endOffset":108412,"count":0}],"isBlockCoverage":false},{"functionName":"_loadExtendedShareableConfig","ranges":[{"startOffset":108711,"endOffset":109903,"count":2},{"startOffset":108863,"endOffset":108922,"count":0},{"startOffset":108982,"endOffset":109027,"count":0},{"startOffset":109065,"endOffset":109190,"count":0},{"startOffset":109437,"endOffset":109695,"count":0}],"isBlockCoverage":true},{"functionName":"_loadPlugins","ranges":[{"startOffset":110167,"endOffset":110507,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110222,"endOffset":110495,"count":4},{"startOffset":110273,"endOffset":110366,"count":0}],"isBlockCoverage":true},{"functionName":"_loadParser","ranges":[{"startOffset":110765,"endOffset":112366,"count":0}],"isBlockCoverage":false},{"functionName":"_loadPlugin","ranges":[{"startOffset":112612,"endOffset":115608,"count":4},{"startOffset":113050,"endOffset":113524,"count":0},{"startOffset":113699,"endOffset":113998,"count":0},{"startOffset":114128,"endOffset":114574,"count":0},{"startOffset":115179,"endOffset":115247,"count":0},{"startOffset":115257,"endOffset":115607,"count":0}],"isBlockCoverage":true},{"functionName":"_takeFileExtensionProcessors","ranges":[{"startOffset":115976,"endOffset":116979,"count":3},{"startOffset":116075,"endOffset":116973,"count":4},{"startOffset":116280,"endOffset":116321,"count":0},{"startOffset":116386,"endOffset":116963,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseConfigArray","ranges":[{"startOffset":121843,"endOffset":123488,"count":1},{"startOffset":122723,"endOffset":123457,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123019,"endOffset":123178,"count":0}],"isBlockCoverage":false},{"functionName":"createCLIConfigArray","ranges":[{"startOffset":123677,"endOffset":124356,"count":1},{"startOffset":123984,"endOffset":124033,"count":0}],"isBlockCoverage":true},{"functionName":"ConfigurationNotFoundError","ranges":[{"startOffset":124644,"endOffset":124843,"count":0}],"isBlockCoverage":false},{"functionName":"CascadingConfigArrayFactory","ranges":[{"startOffset":125154,"endOffset":126826,"count":1}],"isBlockCoverage":true},{"functionName":"get cwd","ranges":[{"startOffset":126950,"endOffset":127040,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigArrayForFile","ranges":[{"startOffset":127511,"endOffset":128172,"count":14},{"startOffset":127736,"endOffset":127822,"count":1},{"startOffset":127822,"endOffset":128171,"count":13}],"isBlockCoverage":true},{"functionName":"setOverrideConfig","ranges":[{"startOffset":128422,"endOffset":128552,"count":0}],"isBlockCoverage":false},{"functionName":"clearCache","ranges":[{"startOffset":128624,"endOffset":128852,"count":0}],"isBlockCoverage":false},{"functionName":"_loadConfigInAncestors","ranges":[{"startOffset":129172,"endOffset":131770,"count":13},{"startOffset":129500,"endOffset":129912,"count":0},{"startOffset":129914,"endOffset":130927,"count":0},{"startOffset":130929,"endOffset":131326,"count":0},{"startOffset":131339,"endOffset":131475,"count":0},{"startOffset":131488,"endOffset":131505,"count":0},{"startOffset":131544,"endOffset":131769,"count":0}],"isBlockCoverage":true},{"functionName":"_cacheConfig","ranges":[{"startOffset":132042,"endOffset":132269,"count":0}],"isBlockCoverage":false},{"functionName":"_finalizeConfigArray","ranges":[{"startOffset":132708,"endOffset":135241,"count":13},{"startOffset":133069,"endOffset":134972,"count":1},{"startOffset":133239,"endOffset":133293,"count":0},{"startOffset":133294,"endOffset":133351,"count":0},{"startOffset":133402,"endOffset":134284,"count":0},{"startOffset":135077,"endOffset":135091,"count":9},{"startOffset":135092,"endOffset":135123,"count":0},{"startOffset":135125,"endOffset":135201,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":133276,"endOffset":133292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":133334,"endOffset":133350,"count":0}],"isBlockCoverage":false},{"functionName":"translateESLintRC","ranges":[{"startOffset":136486,"endOffset":142277,"count":0}],"isBlockCoverage":false},{"functionName":"FlatCompat","ranges":[{"startOffset":142535,"endOffset":143070,"count":0}],"isBlockCoverage":false},{"functionName":"config","ranges":[{"startOffset":143300,"endOffset":144875,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":145113,"endOffset":145203,"count":0}],"isBlockCoverage":false},{"functionName":"extends","ranges":[{"startOffset":145441,"endOffset":145554,"count":0}],"isBlockCoverage":false},{"functionName":"plugins","ranges":[{"startOffset":145785,"endOffset":145873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///home/runner/work/deluge/deluge/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"171","url":"file:///home/runner/work/deluge/deluge/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":846,"endOffset":1451,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":125}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":15},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":15},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5065,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1640,"count":23}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1642,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2275,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2494,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3751,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4243,"endOffset":4383,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4420,"endOffset":4566,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4602,"endOffset":4741,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4783,"endOffset":4918,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4958,"endOffset":5008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6482,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2548,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3158,"endOffset":6154,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6156,"endOffset":6429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///home/runner/work/deluge/deluge/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":719,"endOffset":805,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1125,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///home/runner/work/deluge/deluge/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"176","url":"file:///home/runner/work/deluge/deluge/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":15},{"startOffset":1108,"endOffset":1213,"count":318}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":15}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":9765},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":9775},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///home/runner/work/deluge/deluge/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///home/runner/work/deluge/deluge/node_modules/import-fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1076,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":154,"endOffset":1074,"count":2},{"startOffset":203,"endOffset":251,"count":0},{"startOffset":351,"endOffset":362,"count":0},{"startOffset":507,"endOffset":526,"count":0},{"startOffset":528,"endOffset":701,"count":0},{"startOffset":959,"endOffset":978,"count":0}],"isBlockCoverage":true}]},{"scriptId":"179","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve-from/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1125,"count":1}],"isBlockCoverage":true},{"functionName":"resolveFrom","ranges":[{"startOffset":125,"endOffset":965,"count":2},{"startOffset":192,"endOffset":295,"count":0},{"startOffset":332,"endOffset":437,"count":0},{"startOffset":487,"endOffset":638,"count":0},{"startOffset":856,"endOffset":935,"count":0}],"isBlockCoverage":true},{"functionName":"resolveFileName","ranges":[{"startOffset":715,"endOffset":840,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":985,"endOffset":1038,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.silent","ranges":[{"startOffset":1064,"endOffset":1123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"node:module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":false}]},{"scriptId":"181","url":"node:internal/source_map/source_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10628,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":4000,"endOffset":4076,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4114,"endOffset":4192,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4230,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4345,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4570,"endOffset":5714,"count":0}],"isBlockCoverage":false},{"functionName":"findEntry","ranges":[{"startOffset":5861,"endOffset":6725,"count":0}],"isBlockCoverage":false},{"functionName":"#parseMap","ranges":[{"startOffset":6756,"endOffset":8590,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":8647,"endOffset":8716,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":8806,"endOffset":9739,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":9806,"endOffset":10118,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":10313,"endOffset":10592,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///home/runner/work/deluge/deluge/node_modules/parent-module/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":641,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":72,"endOffset":639,"count":2},{"startOffset":132,"endOffset":170,"count":0},{"startOffset":289,"endOffset":637,"count":4},{"startOffset":380,"endOffset":398,"count":0},{"startOffset":435,"endOffset":537,"count":2},{"startOffset":537,"endOffset":555,"count":0},{"startOffset":555,"endOffset":601,"count":2},{"startOffset":603,"endOffset":634,"count":2},{"startOffset":637,"endOffset":638,"count":0}],"isBlockCoverage":true}]},{"scriptId":"183","url":"file:///home/runner/work/deluge/deluge/node_modules/callsites/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":363,"count":1}],"isBlockCoverage":true},{"functionName":"callsites","ranges":[{"startOffset":33,"endOffset":248,"count":2}],"isBlockCoverage":true},{"functionName":"Error.prepareStackTrace","ranges":[{"startOffset":121,"endOffset":140,"count":2}],"isBlockCoverage":true}]},{"scriptId":"184","url":"file:///home/runner/work/deluge/deluge/node_modules/strip-json-comments/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2219,"count":1}],"isBlockCoverage":true},{"functionName":"stripWithoutWhitespace","ranges":[{"startOffset":137,"endOffset":145,"count":0}],"isBlockCoverage":false},{"functionName":"stripWithWhitespace","ranges":[{"startOffset":175,"endOffset":243,"count":0}],"isBlockCoverage":false},{"functionName":"isEscaped","ranges":[{"startOffset":264,"endOffset":472,"count":6},{"startOffset":391,"endOffset":432,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":492,"endOffset":2217,"count":1},{"startOffset":561,"endOffset":673,"count":0},{"startOffset":719,"endOffset":743,"count":0},{"startOffset":904,"endOffset":2119,"count":46},{"startOffset":1042,"endOffset":1150,"count":6},{"startOffset":1172,"endOffset":1190,"count":30},{"startOffset":1190,"endOffset":1257,"count":16},{"startOffset":1259,"endOffset":1363,"count":0},{"startOffset":1363,"endOffset":2116,"count":16},{"startOffset":1405,"endOffset":1451,"count":0},{"startOffset":1453,"endOffset":1563,"count":0},{"startOffset":1605,"endOffset":1633,"count":0},{"startOffset":1635,"endOffset":1724,"count":0},{"startOffset":1795,"endOffset":1911,"count":0},{"startOffset":1952,"endOffset":1996,"count":0},{"startOffset":1998,"endOffset":2116,"count":0},{"startOffset":2153,"endOffset":2186,"count":0}],"isBlockCoverage":true}]},{"scriptId":"185","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31781,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2679,"endOffset":2863,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3444,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4046,"endOffset":4162,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4323,"endOffset":5302,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5418,"endOffset":6358,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6360,"endOffset":8005,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8007,"endOffset":9311,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9313,"endOffset":12531,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12533,"endOffset":13140,"count":64580},{"startOffset":12594,"endOffset":13138,"count":0}],"isBlockCoverage":true},{"functionName":"ok","ranges":[{"startOffset":13273,"endOffset":13334,"count":64580}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":13593,"endOffset":13964,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":14183,"endOffset":14558,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":14758,"endOffset":15122,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15328,"endOffset":15700,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":15943,"endOffset":16331,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":16580,"endOffset":16976,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17181,"endOffset":17493,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":17705,"endOffset":18025,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":18049,"endOffset":18431,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18435,"endOffset":19152,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19154,"endOffset":22556,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":22558,"endOffset":22698,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":22700,"endOffset":23064,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23066,"endOffset":23780,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":23782,"endOffset":25396,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25398,"endOffset":26015,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26017,"endOffset":26667,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":26825,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27098,"endOffset":27210,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":27372,"endOffset":27466,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":27632,"endOffset":27744,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":27872,"endOffset":29659,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":29662,"endOffset":30743,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":30939,"endOffset":31031,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31239,"endOffset":31345,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":31477,"endOffset":31546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17224,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1477,"endOffset":1770,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1772,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2381,"endOffset":10935,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":10937,"endOffset":11240,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11281,"endOffset":16254,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16258,"endOffset":16333,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16337,"endOffset":17187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2531,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":404,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"calls","ranges":[{"startOffset":436,"endOffset":1550,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1554,"endOffset":2185,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":2189,"endOffset":2497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///home/runner/work/deluge/deluge/node_modules/ignore/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15448,"count":1},{"startOffset":591,"endOffset":606,"count":0},{"startOffset":15005,"endOffset":15447,"count":0}],"isBlockCoverage":true},{"functionName":"makeArray","ranges":[{"startOffset":41,"endOffset":135,"count":6},{"startOffset":122,"endOffset":133,"count":0}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":623,"endOffset":692,"count":6}],"isBlockCoverage":true},{"functionName":"RETURN_FALSE","ranges":[{"startOffset":762,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeRange","ranges":[{"startOffset":900,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRangeBackSlash","ranges":[{"startOffset":1222,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2131,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2248,"endOffset":2259,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2914,"endOffset":2935,"count":51}],"isBlockCoverage":true},{"functionName":"prefix","ranges":[{"startOffset":3023,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3287,"endOffset":3296,"count":1}],"isBlockCoverage":true},{"functionName":"prefix","ranges":[{"startOffset":3387,"endOffset":3398,"count":12}],"isBlockCoverage":true},{"functionName":"prefix","ranges":[{"startOffset":3819,"endOffset":3838,"count":2}],"isBlockCoverage":true},{"functionName":"startingReplacer","ranges":[{"startOffset":4060,"endOffset":4954,"count":36},{"startOffset":4803,"endOffset":4816,"count":31},{"startOffset":4943,"endOffset":4948,"count":5}],"isBlockCoverage":true},{"functionName":"prefix","ranges":[{"startOffset":5252,"endOffset":5722,"count":4},{"startOffset":5532,"endOffset":5551,"count":0}],"isBlockCoverage":true},{"functionName":"prefix","ranges":[{"startOffset":5995,"endOffset":6020,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6214,"endOffset":6226,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6276,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6481,"endOffset":6966,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":7529,"endOffset":7677,"count":32},{"startOffset":7597,"endOffset":7610,"count":4},{"startOffset":7655,"endOffset":7677,"count":28}],"isBlockCoverage":true},{"functionName":"REPLACERS","ranges":[{"startOffset":7738,"endOffset":8072,"count":6},{"startOffset":7940,"endOffset":7954,"count":1},{"startOffset":8021,"endOffset":8030,"count":5}],"isBlockCoverage":true},{"functionName":"makeRegex","ranges":[{"startOffset":8235,"endOffset":8557,"count":83},{"startOffset":8313,"endOffset":8479,"count":38},{"startOffset":8535,"endOffset":8555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8352,"endOffset":8421,"count":570}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":8576,"endOffset":8614,"count":154}],"isBlockCoverage":true},{"functionName":"checkPattern","ranges":[{"startOffset":8721,"endOffset":8888,"count":173},{"startOffset":8742,"endOffset":8762,"count":131},{"startOffset":8765,"endOffset":8804,"count":131},{"startOffset":8859,"endOffset":8888,"count":131}],"isBlockCoverage":true},{"functionName":"splitPattern","ranges":[{"startOffset":8911,"endOffset":8956,"count":0}],"isBlockCoverage":false},{"functionName":"IgnoreRule","ranges":[{"startOffset":8979,"endOffset":9155,"count":83}],"isBlockCoverage":true},{"functionName":"createRule","ranges":[{"startOffset":9178,"endOffset":9908,"count":83},{"startOffset":9345,"endOffset":9402,"count":6}],"isBlockCoverage":true},{"functionName":"throwError","ranges":[{"startOffset":9929,"endOffset":9977,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":9997,"endOffset":10533,"count":17},{"startOffset":10055,"endOffset":10162,"count":0},{"startOffset":10232,"endOffset":10293,"count":0},{"startOffset":10368,"endOffset":10516,"count":0}],"isBlockCoverage":true},{"functionName":"isNotRelative","ranges":[{"startOffset":10557,"endOffset":10599,"count":17}],"isBlockCoverage":true},{"functionName":"checkPath.convert","ranges":[{"startOffset":10661,"endOffset":10667,"count":17}],"isBlockCoverage":true},{"functionName":"Ignore","ranges":[{"startOffset":10686,"endOffset":10962,"count":6}],"isBlockCoverage":true},{"functionName":"_initCache","ranges":[{"startOffset":10966,"endOffset":11071,"count":12}],"isBlockCoverage":true},{"functionName":"_addPattern","ranges":[{"startOffset":11075,"endOffset":11405,"count":173},{"startOffset":11126,"endOffset":11148,"count":131},{"startOffset":11150,"endOffset":11250,"count":0},{"startOffset":11283,"endOffset":11401,"count":83}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":11463,"endOffset":11790,"count":6},{"startOffset":11551,"endOffset":11574,"count":0}],"isBlockCoverage":true},{"functionName":"addPattern","ranges":[{"startOffset":11806,"endOffset":11861,"count":0}],"isBlockCoverage":false},{"functionName":"_testOne","ranges":[{"startOffset":12455,"endOffset":12962,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12564,"endOffset":12906,"count":760},{"startOffset":12646,"endOffset":12670,"count":720},{"startOffset":12679,"endOffset":12735,"count":658},{"startOffset":12691,"endOffset":12702,"count":40},{"startOffset":12703,"endOffset":12716,"count":36},{"startOffset":12717,"endOffset":12735,"count":36},{"startOffset":12744,"endOffset":12768,"count":138},{"startOffset":12768,"endOffset":12834,"count":622},{"startOffset":12834,"endOffset":12900,"count":6}],"isBlockCoverage":true},{"functionName":"_test","ranges":[{"startOffset":12993,"endOffset":13339,"count":17},{"startOffset":13260,"endOffset":13272,"count":0}],"isBlockCoverage":true},{"functionName":"_t","ranges":[{"startOffset":13343,"endOffset":14129,"count":35},{"startOffset":13409,"endOffset":13441,"count":10},{"startOffset":13441,"endOffset":13460,"count":25},{"startOffset":13460,"endOffset":13554,"count":17},{"startOffset":13554,"endOffset":13655,"count":25},{"startOffset":13655,"endOffset":13725,"count":7},{"startOffset":13725,"endOffset":14073,"count":18},{"startOffset":14073,"endOffset":14081,"count":5},{"startOffset":14088,"endOffset":14125,"count":13}],"isBlockCoverage":true},{"functionName":"ignores","ranges":[{"startOffset":14133,"endOffset":14215,"count":17}],"isBlockCoverage":true},{"functionName":"createFilter","ranges":[{"startOffset":14219,"endOffset":14279,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":14283,"endOffset":14359,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":14390,"endOffset":14458,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":14478,"endOffset":14508,"count":6}],"isBlockCoverage":true},{"functionName":"isPathValid","ranges":[{"startOffset":14530,"endOffset":14602,"count":0}],"isBlockCoverage":false},{"functionName":"makePosix","ranges":[{"startOffset":15066,"endOffset":15173,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.isNotRelative","ranges":[{"startOffset":15365,"endOffset":15445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///home/runner/work/deluge/deluge/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///home/runner/work/deluge/deluge/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///home/runner/work/deluge/deluge/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///home/runner/work/deluge/deluge/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/ajv.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15837,"count":1}],"isBlockCoverage":true},{"functionName":"Ajv","ranges":[{"startOffset":1682,"endOffset":2629,"count":6},{"startOffset":1733,"endOffset":1754,"count":0},{"startOffset":1793,"endOffset":1798,"count":0},{"startOffset":2175,"endOffset":2210,"count":0},{"startOffset":2349,"endOffset":2373,"count":0},{"startOffset":2395,"endOffset":2420,"count":0},{"startOffset":2487,"endOffset":2517,"count":0},{"startOffset":2539,"endOffset":2600,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3123,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":3822,"endOffset":3975,"count":195},{"startOffset":3945,"endOffset":3972,"count":109}],"isBlockCoverage":true},{"functionName":"addSchema","ranges":[{"startOffset":4614,"endOffset":5115,"count":6},{"startOffset":4700,"endOffset":4824,"count":0},{"startOffset":4910,"endOffset":4954,"count":0}],"isBlockCoverage":true},{"functionName":"addMetaSchema","ranges":[{"startOffset":5510,"endOffset":5633,"count":6}],"isBlockCoverage":true},{"functionName":"validateSchema","ranges":[{"startOffset":5852,"endOffset":6495,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMeta","ranges":[{"startOffset":6498,"endOffset":6849,"count":0}],"isBlockCoverage":false},{"functionName":"getSchema","ranges":[{"startOffset":7129,"endOffset":7430,"count":0}],"isBlockCoverage":false},{"functionName":"_getSchemaFragment","ranges":[{"startOffset":7433,"endOffset":7890,"count":0}],"isBlockCoverage":false},{"functionName":"_getSchemaObj","ranges":[{"startOffset":7893,"endOffset":8054,"count":0}],"isBlockCoverage":false},{"functionName":"removeSchema","ranges":[{"startOffset":8527,"endOffset":9521,"count":0}],"isBlockCoverage":false},{"functionName":"_removeAllSchemas","ranges":[{"startOffset":9524,"endOffset":9789,"count":0}],"isBlockCoverage":false},{"functionName":"_addSchema","ranges":[{"startOffset":9810,"endOffset":10974,"count":201},{"startOffset":9911,"endOffset":9940,"count":0},{"startOffset":9946,"endOffset":10000,"count":0},{"startOffset":10088,"endOffset":10096,"count":0},{"startOffset":10154,"endOffset":10168,"count":86},{"startOffset":10168,"endOffset":10206,"count":115},{"startOffset":10206,"endOffset":10243,"count":109},{"startOffset":10308,"endOffset":10326,"count":6},{"startOffset":10328,"endOffset":10350,"count":6},{"startOffset":10350,"endOffset":10409,"count":115},{"startOffset":10409,"endOffset":10427,"count":0},{"startOffset":10469,"endOffset":10538,"count":0},{"startOffset":10544,"endOffset":10578,"count":0},{"startOffset":10578,"endOffset":10809,"count":115},{"startOffset":10811,"endOffset":10899,"count":115},{"startOffset":10899,"endOffset":10915,"count":0},{"startOffset":10917,"endOffset":10951,"count":0},{"startOffset":10951,"endOffset":10973,"count":115}],"isBlockCoverage":true},{"functionName":"_compile","ranges":[{"startOffset":10995,"endOffset":12136,"count":109},{"startOffset":11059,"endOffset":11332,"count":0},{"startOffset":11405,"endOffset":11473,"count":0},{"startOffset":11571,"endOffset":11629,"count":0},{"startOffset":11699,"endOffset":11724,"count":0}],"isBlockCoverage":true},{"functionName":"callValidate","ranges":[{"startOffset":11918,"endOffset":12134,"count":0}],"isBlockCoverage":false},{"functionName":"chooseGetId","ranges":[{"startOffset":12139,"endOffset":12296,"count":6},{"startOffset":12236,"endOffset":12261,"count":0},{"startOffset":12266,"endOffset":12290,"count":0}],"isBlockCoverage":true},{"functionName":"_getId","ranges":[{"startOffset":12316,"endOffset":12433,"count":0}],"isBlockCoverage":false},{"functionName":"_get$Id","ranges":[{"startOffset":12453,"endOffset":12569,"count":0}],"isBlockCoverage":false},{"functionName":"_get$IdOrId","ranges":[{"startOffset":12572,"endOffset":12752,"count":2580},{"startOffset":12620,"endOffset":12632,"count":0},{"startOffset":12633,"endOffset":12659,"count":0},{"startOffset":12665,"endOffset":12716,"count":0}],"isBlockCoverage":true},{"functionName":"errorsText","ranges":[{"startOffset":13109,"endOffset":13596,"count":0}],"isBlockCoverage":false},{"functionName":"addFormat","ranges":[{"startOffset":13843,"endOffset":13988,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultMetaSchema","ranges":[{"startOffset":13991,"endOffset":14496,"count":6},{"startOffset":14072,"endOffset":14184,"count":0},{"startOffset":14225,"endOffset":14495,"count":0}],"isBlockCoverage":true},{"functionName":"addInitialSchemas","ranges":[{"startOffset":14499,"endOffset":14741,"count":6},{"startOffset":14601,"endOffset":14739,"count":0}],"isBlockCoverage":true},{"functionName":"addInitialFormats","ranges":[{"startOffset":14744,"endOffset":14902,"count":0}],"isBlockCoverage":false},{"functionName":"addInitialKeywords","ranges":[{"startOffset":14905,"endOffset":15069,"count":0}],"isBlockCoverage":false},{"functionName":"checkUnique","ranges":[{"startOffset":15072,"endOffset":15223,"count":12},{"startOffset":15152,"endOffset":15221,"count":0}],"isBlockCoverage":true},{"functionName":"getMetaSchemaOptions","ranges":[{"startOffset":15226,"endOffset":15420,"count":6},{"startOffset":15359,"endOffset":15399,"count":24}],"isBlockCoverage":true},{"functionName":"setLogger","ranges":[{"startOffset":15423,"endOffset":15815,"count":6},{"startOffset":15508,"endOffset":15569,"count":0},{"startOffset":15714,"endOffset":15783,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":15818,"endOffset":15836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10695,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":971,"endOffset":8542,"count":109},{"startOffset":1487,"endOffset":1536,"count":0},{"startOffset":1744,"endOffset":1956,"count":0}],"isBlockCoverage":true},{"functionName":"callValidate","ranges":[{"startOffset":2104,"endOffset":2319,"count":0}],"isBlockCoverage":false},{"functionName":"localCompile","ranges":[{"startOffset":2323,"endOffset":4548,"count":112},{"startOffset":2488,"endOffset":2549,"count":0},{"startOffset":3394,"endOffset":3445,"count":0},{"startOffset":4051,"endOffset":4161,"count":0},{"startOffset":4305,"endOffset":4315,"count":109},{"startOffset":4316,"endOffset":4323,"count":3},{"startOffset":4341,"endOffset":4364,"count":0},{"startOffset":4399,"endOffset":4522,"count":0}],"isBlockCoverage":true},{"functionName":"resolveRef","ranges":[{"startOffset":4552,"endOffset":5616,"count":18},{"startOffset":4719,"endOffset":4848,"count":10},{"startOffset":4848,"endOffset":4865,"count":8},{"startOffset":4865,"endOffset":4877,"count":3},{"startOffset":4879,"endOffset":5102,"count":3},{"startOffset":4954,"endOffset":5096,"count":0},{"startOffset":5102,"endOffset":5218,"count":8},{"startOffset":5218,"endOffset":5469,"count":0},{"startOffset":5469,"endOffset":5496,"count":8},{"startOffset":5496,"endOffset":5530,"count":0},{"startOffset":5530,"endOffset":5612,"count":8}],"isBlockCoverage":true},{"functionName":"addLocalRef","ranges":[{"startOffset":5620,"endOffset":5760,"count":8}],"isBlockCoverage":true},{"functionName":"removeLocalRef","ranges":[{"startOffset":5764,"endOffset":5820,"count":0}],"isBlockCoverage":false},{"functionName":"replaceLocalRef","ranges":[{"startOffset":5824,"endOffset":5912,"count":8}],"isBlockCoverage":true},{"functionName":"resolvedRef","ranges":[{"startOffset":5916,"endOffset":6147,"count":18},{"startOffset":5990,"endOffset":6019,"count":5},{"startOffset":6032,"endOffset":6078,"count":13},{"startOffset":6091,"endOffset":6142,"count":5},{"startOffset":6122,"endOffset":6140,"count":4}],"isBlockCoverage":true},{"functionName":"usePattern","ranges":[{"startOffset":6151,"endOffset":6383,"count":3},{"startOffset":6252,"endOffset":6349,"count":2}],"isBlockCoverage":true},{"functionName":"useDefault","ranges":[{"startOffset":6387,"endOffset":6916,"count":0}],"isBlockCoverage":false},{"functionName":"useCustomRule","ranges":[{"startOffset":6920,"endOffset":8540,"count":0}],"isBlockCoverage":false},{"functionName":"checkCompiling","ranges":[{"startOffset":8835,"endOffset":9207,"count":109},{"startOffset":8990,"endOffset":9031,"count":0}],"isBlockCoverage":true},{"functionName":"endCompiling","ranges":[{"startOffset":9412,"endOffset":9591,"count":109}],"isBlockCoverage":true},{"functionName":"compIndex","ranges":[{"startOffset":9842,"endOffset":10099,"count":218},{"startOffset":9966,"endOffset":10098,"count":109}],"isBlockCoverage":true},{"functionName":"patternCode","ranges":[{"startOffset":10102,"endOffset":10228,"count":2}],"isBlockCoverage":true},{"functionName":"defaultCode","ranges":[{"startOffset":10231,"endOffset":10314,"count":0}],"isBlockCoverage":false},{"functionName":"refValCode","ranges":[{"startOffset":10317,"endOffset":10435,"count":130},{"startOffset":10383,"endOffset":10387,"count":113},{"startOffset":10388,"endOffset":10432,"count":17}],"isBlockCoverage":true},{"functionName":"customRuleCode","ranges":[{"startOffset":10438,"endOffset":10530,"count":0}],"isBlockCoverage":false},{"functionName":"vars","ranges":[{"startOffset":10533,"endOffset":10694,"count":448},{"startOffset":10584,"endOffset":10594,"count":334},{"startOffset":10594,"endOffset":10651,"count":114},{"startOffset":10651,"endOffset":10677,"count":132},{"startOffset":10677,"endOffset":10693,"count":114}],"isBlockCoverage":true}]},{"scriptId":"195","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7847,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":805,"endOffset":1766,"count":8},{"startOffset":940,"endOffset":1061,"count":0},{"startOffset":1142,"endOffset":1290,"count":0},{"startOffset":1493,"endOffset":1585,"count":0},{"startOffset":1676,"endOffset":1684,"count":5},{"startOffset":1693,"endOffset":1746,"count":3}],"isBlockCoverage":true},{"functionName":"resolveSchema","ranges":[{"startOffset":2013,"endOffset":3011,"count":8},{"startOffset":2258,"endOffset":2943,"count":0}],"isBlockCoverage":true},{"functionName":"resolveRecursive","ranges":[{"startOffset":3030,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"getJsonPointer","ranges":[{"startOffset":3542,"endOffset":4520,"count":8},{"startOffset":3674,"endOffset":3679,"count":0},{"startOffset":3725,"endOffset":3732,"count":0},{"startOffset":3820,"endOffset":4405,"count":16},{"startOffset":3966,"endOffset":3972,"count":0},{"startOffset":4026,"endOffset":4395,"count":8},{"startOffset":4078,"endOffset":4110,"count":0},{"startOffset":4136,"endOffset":4387,"count":0}],"isBlockCoverage":true},{"functionName":"inlineRef","ranges":[{"startOffset":4759,"endOffset":4958,"count":8},{"startOffset":4818,"endOffset":4831,"count":0},{"startOffset":4858,"endOffset":4875,"count":0},{"startOffset":4903,"endOffset":4956,"count":0}],"isBlockCoverage":true},{"functionName":"checkNoRef","ranges":[{"startOffset":4961,"endOffset":5378,"count":33},{"startOffset":5032,"endOffset":5179,"count":7},{"startOffset":5074,"endOffset":5175,"count":18},{"startOffset":5134,"endOffset":5154,"count":5},{"startOffset":5156,"endOffset":5169,"count":1},{"startOffset":5179,"endOffset":5361,"count":26},{"startOffset":5215,"endOffset":5357,"count":38},{"startOffset":5242,"endOffset":5255,"count":3},{"startOffset":5255,"endOffset":5316,"count":35},{"startOffset":5316,"endOffset":5336,"count":20},{"startOffset":5338,"endOffset":5351,"count":5},{"startOffset":5361,"endOffset":5377,"count":24}],"isBlockCoverage":true},{"functionName":"countKeys","ranges":[{"startOffset":5381,"endOffset":5969,"count":0}],"isBlockCoverage":false},{"functionName":"getFullPath","ranges":[{"startOffset":5972,"endOffset":6111,"count":235},{"startOffset":6037,"endOffset":6058,"count":120}],"isBlockCoverage":true},{"functionName":"_getFullPath","ranges":[{"startOffset":6114,"endOffset":6189,"count":243}],"isBlockCoverage":true},{"functionName":"normalizeId","ranges":[{"startOffset":6227,"endOffset":6311,"count":374},{"startOffset":6266,"endOffset":6303,"count":36},{"startOffset":6304,"endOffset":6308,"count":338}],"isBlockCoverage":true},{"functionName":"resolveUrl","ranges":[{"startOffset":6314,"endOffset":6407,"count":18}],"isBlockCoverage":true},{"functionName":"resolveIds","ranges":[{"startOffset":6426,"endOffset":7846,"count":115}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6671,"endOffset":7821,"count":1329},{"startOffset":6786,"endOffset":6793,"count":115},{"startOffset":6793,"endOffset":6971,"count":1214},{"startOffset":6971,"endOffset":7062,"count":1142},{"startOffset":7018,"endOffset":7028,"count":342},{"startOffset":7029,"endOffset":7060,"count":800},{"startOffset":7062,"endOffset":7095,"count":1214},{"startOffset":7095,"endOffset":7751,"count":0},{"startOffset":7751,"endOffset":7820,"count":1214}],"isBlockCoverage":true}]},{"scriptId":"196","url":"file:///home/runner/work/deluge/deluge/node_modules/uri-js/dist/es5/uri.all.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":57304,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":96,"endOffset":331,"count":1},{"startOffset":206,"endOffset":328,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":339,"endOffset":57263,"count":1},{"startOffset":48211,"endOffset":48215,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":375,"endOffset":836,"count":41},{"startOffset":483,"endOffset":528,"count":126},{"startOffset":668,"endOffset":723,"count":44},{"startOffset":797,"endOffset":834,"count":0}],"isBlockCoverage":true},{"functionName":"subexp","ranges":[{"startOffset":837,"endOffset":891,"count":234}],"isBlockCoverage":true},{"functionName":"typeOf","ranges":[{"startOffset":892,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"toUpperCase","ranges":[{"startOffset":1065,"endOffset":1124,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":1125,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":1350,"endOffset":1527,"count":18},{"startOffset":1422,"endOffset":1509,"count":0}],"isBlockCoverage":true},{"functionName":"buildExps","ranges":[{"startOffset":1529,"endOffset":9716,"count":2},{"startOffset":2228,"endOffset":2307,"count":1},{"startOffset":2308,"endOffset":2314,"count":1},{"startOffset":2390,"endOffset":2411,"count":1},{"startOffset":2412,"endOffset":2418,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9812,"endOffset":10608,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":9828,"endOffset":10336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10347,"endOffset":10605,"count":24},{"startOffset":10420,"endOffset":10601,"count":0}],"isBlockCoverage":true},{"functionName":"toConsumableArray","ranges":[{"startOffset":10649,"endOffset":10841,"count":0}],"isBlockCoverage":false},{"functionName":"error$1","ranges":[{"startOffset":11910,"endOffset":11973,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":12251,"endOffset":12401,"count":12},{"startOffset":12341,"endOffset":12383,"count":24}],"isBlockCoverage":true},{"functionName":"mapDomain","ranges":[{"startOffset":12745,"endOffset":13243,"count":12},{"startOffset":12851,"endOffset":13032,"count":0}],"isBlockCoverage":true},{"functionName":"ucs2decode","ranges":[{"startOffset":13796,"endOffset":14516,"count":0}],"isBlockCoverage":false},{"functionName":"ucs2encode","ranges":[{"startOffset":14795,"endOffset":14895,"count":0}],"isBlockCoverage":false},{"functionName":"basicToDigit","ranges":[{"startOffset":15270,"endOffset":15506,"count":0}],"isBlockCoverage":false},{"functionName":"digitToBasic","ranges":[{"startOffset":16026,"endOffset":16191,"count":0}],"isBlockCoverage":false},{"functionName":"adapt","ranges":[{"startOffset":16337,"endOffset":16674,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":16937,"endOffset":19030,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":19320,"endOffset":23160,"count":0}],"isBlockCoverage":false},{"functionName":"toUnicode","ranges":[{"startOffset":23633,"endOffset":23798,"count":0}],"isBlockCoverage":false},{"functionName":"toASCII","ranges":[{"startOffset":24272,"endOffset":24421,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24323,"endOffset":24417,"count":24},{"startOffset":24379,"endOffset":24404,"count":0}],"isBlockCoverage":true},{"functionName":"pctEncChar","ranges":[{"startOffset":26899,"endOffset":27390,"count":0}],"isBlockCoverage":false},{"functionName":"pctDecChars","ranges":[{"startOffset":27391,"endOffset":28433,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizeComponentEncoding","ranges":[{"startOffset":28434,"endOffset":29995,"count":540},{"startOffset":28670,"endOffset":28811,"count":12},{"startOffset":28855,"endOffset":29039,"count":0},{"startOffset":29079,"endOffset":29265,"count":12},{"startOffset":29421,"endOffset":29440,"count":12},{"startOffset":29441,"endOffset":29469,"count":528},{"startOffset":29567,"endOffset":29742,"count":0},{"startOffset":29786,"endOffset":29970,"count":70}],"isBlockCoverage":true},{"functionName":"decodeUnreserved","ranges":[{"startOffset":28499,"endOffset":28642,"count":0}],"isBlockCoverage":false},{"functionName":"_stripLeadingZeros","ranges":[{"startOffset":29997,"endOffset":30081,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizeIPv4","ranges":[{"startOffset":30082,"endOffset":30390,"count":12},{"startOffset":30278,"endOffset":30354,"count":0}],"isBlockCoverage":true},{"functionName":"_normalizeIPv6","ranges":[{"startOffset":30391,"endOffset":32653,"count":12},{"startOffset":30618,"endOffset":32617,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31593,"endOffset":32000,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32058,"endOffset":32125,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":32865,"endOffset":36923,"count":279},{"startOffset":32932,"endOffset":32961,"count":36},{"startOffset":32962,"endOffset":32976,"count":36},{"startOffset":32977,"endOffset":32981,"count":243},{"startOffset":33065,"endOffset":33079,"count":0},{"startOffset":33121,"endOffset":33197,"count":0},{"startOffset":33564,"endOffset":33569,"count":273},{"startOffset":33801,"endOffset":34613,"count":0},{"startOffset":34643,"endOffset":34786,"count":6},{"startOffset":34866,"endOffset":34902,"count":273},{"startOffset":34903,"endOffset":34935,"count":273},{"startOffset":34936,"endOffset":34968,"count":273},{"startOffset":34969,"endOffset":34988,"count":273},{"startOffset":34989,"endOffset":35022,"count":273},{"startOffset":35024,"endOffset":35087,"count":273},{"startOffset":35087,"endOffset":35350,"count":6},{"startOffset":35130,"endOffset":35188,"count":0},{"startOffset":35291,"endOffset":35350,"count":0},{"startOffset":35418,"endOffset":35451,"count":0},{"startOffset":35452,"endOffset":35497,"count":0},{"startOffset":35499,"endOffset":35614,"count":0},{"startOffset":35697,"endOffset":35717,"count":243},{"startOffset":35718,"endOffset":35723,"count":237},{"startOffset":35840,"endOffset":35872,"count":6},{"startOffset":35958,"endOffset":36026,"count":6},{"startOffset":36028,"endOffset":36424,"count":6},{"startOffset":36251,"endOffset":36410,"count":0},{"startOffset":36534,"endOffset":36648,"count":0},{"startOffset":36717,"endOffset":36739,"count":6},{"startOffset":36741,"endOffset":36806,"count":6},{"startOffset":36812,"endOffset":36898,"count":0}],"isBlockCoverage":true},{"functionName":"_recomposeAuthority","ranges":[{"startOffset":36925,"endOffset":37781,"count":261},{"startOffset":37033,"endOffset":37047,"count":0},{"startOffset":37116,"endOffset":37197,"count":0},{"startOffset":37237,"endOffset":37547,"count":6},{"startOffset":37632,"endOffset":37717,"count":0},{"startOffset":37746,"endOffset":37766,"count":6},{"startOffset":37767,"endOffset":37778,"count":255}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37446,"endOffset":37538,"count":0}],"isBlockCoverage":false},{"functionName":"removeDotSegments","ranges":[{"startOffset":37897,"endOffset":38673,"count":261},{"startOffset":37979,"endOffset":38643,"count":12},{"startOffset":38012,"endOffset":38068,"count":0},{"startOffset":38097,"endOffset":38154,"count":0},{"startOffset":38183,"endOffset":38266,"count":0},{"startOffset":38309,"endOffset":38344,"count":0},{"startOffset":38537,"endOffset":38627,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":38675,"endOffset":41189,"count":261},{"startOffset":38747,"endOffset":38776,"count":18},{"startOffset":38777,"endOffset":38791,"count":18},{"startOffset":38792,"endOffset":38796,"count":243},{"startOffset":38830,"endOffset":38844,"count":0},{"startOffset":38959,"endOffset":38979,"count":243},{"startOffset":38980,"endOffset":38985,"count":237},{"startOffset":39069,"endOffset":39095,"count":6},{"startOffset":39097,"endOffset":39142,"count":6},{"startOffset":39168,"endOffset":39945,"count":6},{"startOffset":39273,"endOffset":39275,"count":0},{"startOffset":39670,"endOffset":39707,"count":0},{"startOffset":39727,"endOffset":39925,"count":0},{"startOffset":40087,"endOffset":40166,"count":6},{"startOffset":40262,"endOffset":40505,"count":6},{"startOffset":40455,"endOffset":40499,"count":0},{"startOffset":40633,"endOffset":40663,"count":6},{"startOffset":40753,"endOffset":40850,"count":255},{"startOffset":40924,"endOffset":41002,"count":0},{"startOffset":41046,"endOffset":41127,"count":26}],"isBlockCoverage":true},{"functionName":"resolveComponents","ranges":[{"startOffset":41191,"endOffset":43730,"count":18},{"startOffset":41320,"endOffset":41324,"count":0},{"startOffset":41418,"endOffset":41607,"count":0},{"startOffset":41630,"endOffset":41635,"count":0},{"startOffset":41683,"endOffset":42000,"count":0},{"startOffset":42115,"endOffset":42419,"count":0},{"startOffset":42552,"endOffset":42622,"count":0},{"startOffset":42708,"endOffset":43447,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":43732,"endOffset":44007,"count":18}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":44009,"endOffset":44255,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":44257,"endOffset":44690,"count":0}],"isBlockCoverage":false},{"functionName":"escapeComponent","ranges":[{"startOffset":44692,"endOffset":44858,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeComponent","ranges":[{"startOffset":44860,"endOffset":45039,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":45110,"endOffset":45334,"count":6},{"startOffset":45208,"endOffset":45301,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":45351,"endOffset":45950,"count":6},{"startOffset":45544,"endOffset":45549,"count":0},{"startOffset":45583,"endOffset":45635,"count":0},{"startOffset":45701,"endOffset":45747,"count":0}],"isBlockCoverage":true},{"functionName":"isSecure","ranges":[{"startOffset":46093,"endOffset":46257,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":46338,"endOffset":46779,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":46796,"endOffset":47892,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUnreserved","ranges":[{"startOffset":49904,"endOffset":50026,"count":0}],"isBlockCoverage":false},{"functionName":"parse$$1","ranges":[{"startOffset":50078,"endOffset":52359,"count":0}],"isBlockCoverage":false},{"functionName":"serialize$$1","ranges":[{"startOffset":52376,"endOffset":54220,"count":0}],"isBlockCoverage":false},{"functionName":"parse$$1","ranges":[{"startOffset":54319,"endOffset":55158,"count":0}],"isBlockCoverage":false},{"functionName":"serialize$$1","ranges":[{"startOffset":55175,"endOffset":55733,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":55873,"endOffset":56270,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":56287,"endOffset":56508,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///home/runner/work/deluge/deluge/node_modules/fast-deep-equal/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1177,"count":1}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":90,"endOffset":1175,"count":469},{"startOffset":128,"endOffset":140,"count":83},{"startOffset":140,"endOffset":154,"count":386},{"startOffset":155,"endOffset":178,"count":379},{"startOffset":179,"endOffset":202,"count":29},{"startOffset":204,"endOffset":1108,"count":3},{"startOffset":247,"endOffset":260,"count":0},{"startOffset":370,"endOffset":383,"count":2},{"startOffset":383,"endOffset":464,"count":1},{"startOffset":464,"endOffset":1108,"count":0},{"startOffset":1108,"endOffset":1164,"count":383},{"startOffset":1164,"endOffset":1172,"count":0}],"isBlockCoverage":true}]},{"scriptId":"198","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6974,"count":1}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":741,"endOffset":834,"count":566},{"startOffset":774,"endOffset":779,"count":451},{"startOffset":802,"endOffset":819,"count":11279}],"isBlockCoverage":true},{"functionName":"checkDataType","ranges":[{"startOffset":837,"endOffset":1880,"count":805},{"startOffset":922,"endOffset":931,"count":418},{"startOffset":932,"endOffset":941,"count":387},{"startOffset":961,"endOffset":969,"count":418},{"startOffset":970,"endOffset":978,"count":387},{"startOffset":997,"endOffset":1002,"count":418},{"startOffset":1003,"endOffset":1007,"count":387},{"startOffset":1027,"endOffset":1031,"count":418},{"startOffset":1032,"endOffset":1037,"count":387},{"startOffset":1065,"endOffset":1107,"count":2},{"startOffset":1112,"endOffset":1168,"count":151},{"startOffset":1173,"endOffset":1354,"count":222},{"startOffset":1359,"endOffset":1634,"count":28},{"startOffset":1582,"endOffset":1621,"count":0},{"startOffset":1639,"endOffset":1805,"count":25},{"startOffset":1753,"endOffset":1792,"count":0},{"startOffset":1810,"endOffset":1874,"count":377}],"isBlockCoverage":true},{"functionName":"checkDataTypes","ranges":[{"startOffset":1883,"endOffset":2541,"count":2},{"startOffset":1975,"endOffset":2045,"count":0},{"startOffset":2139,"endOffset":2154,"count":0},{"startOffset":2156,"endOffset":2357,"count":0},{"startOffset":2382,"endOffset":2403,"count":0},{"startOffset":2439,"endOffset":2515,"count":4},{"startOffset":2453,"endOffset":2461,"count":2},{"startOffset":2462,"endOffset":2466,"count":2}],"isBlockCoverage":true},{"functionName":"coerceToTypes","ranges":[{"startOffset":2628,"endOffset":3160,"count":0}],"isBlockCoverage":false},{"functionName":"toHash","ranges":[{"startOffset":3163,"endOffset":3275,"count":25},{"startOffset":3238,"endOffset":3258,"count":385}],"isBlockCoverage":true},{"functionName":"getProperty","ranges":[{"startOffset":3348,"endOffset":3541,"count":2067},{"startOffset":3418,"endOffset":3435,"count":0},{"startOffset":3481,"endOffset":3492,"count":2066},{"startOffset":3505,"endOffset":3538,"count":1}],"isBlockCoverage":true},{"functionName":"escapeQuotes","ranges":[{"startOffset":3544,"endOffset":3758,"count":3042}],"isBlockCoverage":true},{"functionName":"varOccurences","ranges":[{"startOffset":3761,"endOffset":3916,"count":746},{"startOffset":3910,"endOffset":3913,"count":0}],"isBlockCoverage":true},{"functionName":"varReplace","ranges":[{"startOffset":3919,"endOffset":4086,"count":4}],"isBlockCoverage":true},{"functionName":"schemaHasRules","ranges":[{"startOffset":4089,"endOffset":4236,"count":876},{"startOffset":4164,"endOffset":4179,"count":0},{"startOffset":4206,"endOffset":4234,"count":878},{"startOffset":4222,"endOffset":4234,"count":876}],"isBlockCoverage":true},{"functionName":"schemaHasRulesExcept","ranges":[{"startOffset":4239,"endOffset":4457,"count":1002},{"startOffset":4335,"endOffset":4376,"count":0},{"startOffset":4403,"endOffset":4455,"count":1007},{"startOffset":4428,"endOffset":4441,"count":989},{"startOffset":4443,"endOffset":4455,"count":984}],"isBlockCoverage":true},{"functionName":"schemaUnknownRules","ranges":[{"startOffset":4460,"endOffset":4603,"count":0}],"isBlockCoverage":false},{"functionName":"toQuotedString","ranges":[{"startOffset":4606,"endOffset":4680,"count":3039}],"isBlockCoverage":true},{"functionName":"getPathExpr","ranges":[{"startOffset":4683,"endOffset":5040,"count":179},{"startOffset":4809,"endOffset":4897,"count":0},{"startOffset":4924,"endOffset":4956,"count":175},{"startOffset":4957,"endOffset":4997,"count":4}],"isBlockCoverage":true},{"functionName":"getPath","ranges":[{"startOffset":5043,"endOffset":5294,"count":567},{"startOffset":5155,"endOffset":5202,"count":0}],"isBlockCoverage":true},{"functionName":"getData","ranges":[{"startOffset":5403,"endOffset":6489,"count":0}],"isBlockCoverage":false},{"functionName":"joinPaths","ranges":[{"startOffset":6492,"endOffset":6606,"count":746},{"startOffset":6537,"endOffset":6546,"count":179},{"startOffset":6546,"endOffset":6605,"count":567}],"isBlockCoverage":true},{"functionName":"unescapeFragment","ranges":[{"startOffset":6609,"endOffset":6698,"count":16}],"isBlockCoverage":true},{"functionName":"escapeFragment","ranges":[{"startOffset":6701,"endOffset":6786,"count":1368}],"isBlockCoverage":true},{"functionName":"escapeJsonPointer","ranges":[{"startOffset":6789,"endOffset":6879,"count":1368}],"isBlockCoverage":true},{"functionName":"unescapeJsonPointer","ranges":[{"startOffset":6882,"endOffset":6973,"count":16}],"isBlockCoverage":true}]},{"scriptId":"199","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/ucs2length.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":558,"count":1}],"isBlockCoverage":true},{"functionName":"ucs2length","ranges":[{"startOffset":152,"endOffset":556,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/schema_obj.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":133,"count":1}],"isBlockCoverage":true},{"functionName":"SchemaObject","ranges":[{"startOffset":78,"endOffset":132,"count":115}],"isBlockCoverage":true}]},{"scriptId":"201","url":"file:///home/runner/work/deluge/deluge/node_modules/json-schema-traverse/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":47,"endOffset":374,"count":115},{"startOffset":154,"endOffset":189,"count":0},{"startOffset":256,"endOffset":281,"count":0}],"isBlockCoverage":true},{"functionName":"pre","ranges":[{"startOffset":268,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"post","ranges":[{"startOffset":307,"endOffset":320,"count":1329}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":1111,"endOffset":2283,"count":2639},{"startOffset":1245,"endOffset":1273,"count":2428},{"startOffset":1274,"endOffset":1299,"count":1341},{"startOffset":1301,"endOffset":2281,"count":1329},{"startOffset":1423,"endOffset":2184,"count":2456},{"startOffset":1484,"endOffset":1707,"count":370},{"startOffset":1529,"endOffset":1699,"count":213},{"startOffset":1586,"endOffset":1689,"count":342},{"startOffset":1707,"endOffset":2178,"count":2086},{"startOffset":1748,"endOffset":1984,"count":226},{"startOffset":1839,"endOffset":1966,"count":812},{"startOffset":1984,"endOffset":2178,"count":1860},{"startOffset":2019,"endOffset":2071,"count":1577},{"startOffset":2073,"endOffset":2178,"count":1370}],"isBlockCoverage":true},{"functionName":"escapeJsonPtr","ranges":[{"startOffset":2286,"endOffset":2372,"count":812}],"isBlockCoverage":true}]},{"scriptId":"202","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/error_classes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":828,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationError","ranges":[{"startOffset":167,"endOffset":302,"count":0}],"isBlockCoverage":false},{"functionName":"MissingRefError.message","ranges":[{"startOffset":331,"endOffset":424,"count":0}],"isBlockCoverage":false},{"functionName":"MissingRefError","ranges":[{"startOffset":428,"endOffset":669,"count":0}],"isBlockCoverage":false},{"functionName":"errorSubclass","ranges":[{"startOffset":672,"endOffset":827,"count":2}],"isBlockCoverage":true}]},{"scriptId":"203","url":"file:///home/runner/work/deluge/deluge/node_modules/fast-json-stable-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1845,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":1843,"count":201},{"startOffset":118,"endOffset":139,"count":0},{"startOffset":192,"endOffset":205,"count":0},{"startOffset":239,"endOffset":518,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243,"endOffset":507,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":552,"endOffset":1833,"count":4686},{"startOffset":597,"endOffset":611,"count":4063},{"startOffset":612,"endOffset":648,"count":0},{"startOffset":650,"endOffset":695,"count":0},{"startOffset":729,"endOffset":736,"count":0},{"startOffset":774,"endOffset":817,"count":476},{"startOffset":808,"endOffset":816,"count":0},{"startOffset":817,"endOffset":856,"count":4210},{"startOffset":856,"endOffset":884,"count":2115},{"startOffset":884,"endOffset":939,"count":2095},{"startOffset":939,"endOffset":1153,"count":396},{"startOffset":1010,"endOffset":1113,"count":924},{"startOffset":1035,"endOffset":1046,"count":528},{"startOffset":1089,"endOffset":1098,"count":0},{"startOffset":1153,"endOffset":1182,"count":1699},{"startOffset":1182,"endOffset":1196,"count":1},{"startOffset":1196,"endOffset":1237,"count":1698},{"startOffset":1237,"endOffset":1382,"count":0},{"startOffset":1382,"endOffset":1475,"count":1698},{"startOffset":1475,"endOffset":1487,"count":0},{"startOffset":1550,"endOffset":1760,"count":3561},{"startOffset":1654,"endOffset":1663,"count":0},{"startOffset":1685,"endOffset":1696,"count":1911},{"startOffset":1760,"endOffset":1832,"count":1698}],"isBlockCoverage":true}]},{"scriptId":"204","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20018,"count":1}],"isBlockCoverage":true},{"functionName":"generate_validate","ranges":[{"startOffset":31,"endOffset":20017,"count":1002},{"startOffset":292,"endOffset":582,"count":0},{"startOffset":599,"endOffset":933,"count":112},{"startOffset":648,"endOffset":701,"count":0},{"startOffset":814,"endOffset":860,"count":0},{"startOffset":862,"endOffset":929,"count":0},{"startOffset":988,"endOffset":1005,"count":18},{"startOffset":1008,"endOffset":3078,"count":0},{"startOffset":3095,"endOffset":3776,"count":112},{"startOffset":3301,"endOffset":3313,"count":109},{"startOffset":3403,"endOffset":3425,"count":0},{"startOffset":3426,"endOffset":3451,"count":0},{"startOffset":3453,"endOffset":3639,"count":0},{"startOffset":3776,"endOffset":4067,"count":890},{"startOffset":3873,"endOffset":3878,"count":22},{"startOffset":3894,"endOffset":3937,"count":0},{"startOffset":3953,"endOffset":3965,"count":0},{"startOffset":3967,"endOffset":4014,"count":0},{"startOffset":4313,"endOffset":4332,"count":771},{"startOffset":4333,"endOffset":4363,"count":0},{"startOffset":4365,"endOffset":4597,"count":0},{"startOffset":4617,"endOffset":4643,"count":2},{"startOffset":4645,"endOffset":4710,"count":0},{"startOffset":4732,"endOffset":4747,"count":18},{"startOffset":4749,"endOffset":5093,"count":0},{"startOffset":5119,"endOffset":5138,"count":0},{"startOffset":5140,"endOffset":5208,"count":0},{"startOffset":5228,"endOffset":11987,"count":771},{"startOffset":5259,"endOffset":5350,"count":0},{"startOffset":5441,"endOffset":5464,"count":769},{"startOffset":5465,"endOffset":5514,"count":423},{"startOffset":5516,"endOffset":11983,"count":411},{"startOffset":5753,"endOffset":5771,"count":2},{"startOffset":5772,"endOffset":5789,"count":409},{"startOffset":5918,"endOffset":10345,"count":0},{"startOffset":10750,"endOffset":10812,"count":2},{"startOffset":10812,"endOffset":10870,"count":409},{"startOffset":11018,"endOffset":11084,"count":2},{"startOffset":11084,"endOffset":11146,"count":409},{"startOffset":11413,"endOffset":11455,"count":0},{"startOffset":11543,"endOffset":11559,"count":294},{"startOffset":11561,"endOffset":11809,"count":294},{"startOffset":11622,"endOffset":11705,"count":0},{"startOffset":11809,"endOffset":11949,"count":117},{"startOffset":12009,"endOffset":12025,"count":18},{"startOffset":12027,"endOffset":12304,"count":18},{"startOffset":12166,"endOffset":12195,"count":1},{"startOffset":12195,"endOffset":12243,"count":17},{"startOffset":12304,"endOffset":19045,"count":984},{"startOffset":12437,"endOffset":19035,"count":4920},{"startOffset":12518,"endOffset":19027,"count":602},{"startOffset":12552,"endOffset":12676,"count":387},{"startOffset":12759,"endOffset":12782,"count":210},{"startOffset":12784,"endOffset":14384,"count":206},{"startOffset":13067,"endOffset":14354,"count":567},{"startOffset":13219,"endOffset":14336,"count":82},{"startOffset":13342,"endOffset":13673,"count":0},{"startOffset":13811,"endOffset":13936,"count":0},{"startOffset":14054,"endOffset":14153,"count":0},{"startOffset":14384,"endOffset":15872,"count":396},{"startOffset":14422,"endOffset":14455,"count":149},{"startOffset":14457,"endOffset":15872,"count":119},{"startOffset":14634,"endOffset":15842,"count":146},{"startOffset":14726,"endOffset":15824,"count":1},{"startOffset":14830,"endOffset":15161,"count":0},{"startOffset":15299,"endOffset":15424,"count":0},{"startOffset":15542,"endOffset":15641,"count":0},{"startOffset":16043,"endOffset":16427,"count":3837},{"startOffset":16123,"endOffset":16413,"count":850},{"startOffset":16599,"endOffset":18748,"count":387},{"startOffset":16655,"endOffset":16690,"count":385},{"startOffset":16691,"endOffset":16709,"count":360},{"startOffset":16711,"endOffset":18736,"count":360},{"startOffset":17297,"endOffset":17371,"count":0},{"startOffset":17613,"endOffset":17691,"count":0},{"startOffset":18074,"endOffset":18128,"count":0},{"startOffset":18234,"endOffset":18250,"count":274},{"startOffset":18252,"endOffset":18542,"count":274},{"startOffset":18325,"endOffset":18420,"count":0},{"startOffset":18542,"endOffset":18694,"count":86},{"startOffset":18841,"endOffset":18882,"count":111},{"startOffset":18882,"endOffset":18942,"count":491},{"startOffset":19127,"endOffset":19412,"count":112},{"startOffset":19145,"endOffset":19270,"count":0},{"startOffset":19412,"endOffset":19493,"count":890}],"isBlockCoverage":true},{"functionName":"$shouldUseGroup","ranges":[{"startOffset":19497,"endOffset":19667,"count":5343},{"startOffset":19621,"endOffset":19663,"count":26772},{"startOffset":19651,"endOffset":19663,"count":962}],"isBlockCoverage":true},{"functionName":"$shouldUseRule","ranges":[{"startOffset":19671,"endOffset":19817,"count":30609},{"startOffset":19754,"endOffset":19812,"count":28809},{"startOffset":19775,"endOffset":19811,"count":2766}],"isBlockCoverage":true},{"functionName":"$ruleImplementsSomeKeyword","ranges":[{"startOffset":19821,"endOffset":20001,"count":2766},{"startOffset":19947,"endOffset":19997,"count":3552},{"startOffset":19985,"endOffset":19997,"count":12}],"isBlockCoverage":true}]},{"scriptId":"205","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"Cache","ranges":[{"startOffset":45,"endOffset":85,"count":6}],"isBlockCoverage":true},{"functionName":"Cache_put","ranges":[{"startOffset":111,"endOffset":173,"count":115}],"isBlockCoverage":true},{"functionName":"Cache_get","ranges":[{"startOffset":199,"endOffset":253,"count":201}],"isBlockCoverage":true},{"functionName":"Cache_del","ranges":[{"startOffset":279,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"Cache_clear","ranges":[{"startOffset":361,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12081,"count":1}],"isBlockCoverage":true},{"functionName":"formats","ranges":[{"startOffset":5742,"endOffset":5846,"count":6},{"startOffset":5791,"endOffset":5799,"count":0}],"isBlockCoverage":true},{"functionName":"isLeapYear","ranges":[{"startOffset":10598,"endOffset":10746,"count":0}],"isBlockCoverage":false},{"functionName":"date","ranges":[{"startOffset":10749,"endOffset":11101,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":11104,"endOffset":11451,"count":0}],"isBlockCoverage":false},{"functionName":"date_time","ranges":[{"startOffset":11489,"endOffset":11696,"count":0}],"isBlockCoverage":false},{"functionName":"uri","ranges":[{"startOffset":11730,"endOffset":11904,"count":0}],"isBlockCoverage":false},{"functionName":"regex","ranges":[{"startOffset":11934,"endOffset":12080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/rules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2021,"count":1}],"isBlockCoverage":true},{"functionName":"rules","ranges":[{"startOffset":110,"endOffset":2019,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1220,"endOffset":1927,"count":30},{"startOffset":1891,"endOffset":1923,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1273,"endOffset":1772,"count":162},{"startOffset":1356,"endOffset":1578,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1490,"endOffset":1568,"count":24}],"isBlockCoverage":true}]},{"scriptId":"208","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1100,"count":1}],"isBlockCoverage":true}]},{"scriptId":"209","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4711,"count":1}],"isBlockCoverage":true},{"functionName":"generate_ref","ranges":[{"startOffset":31,"endOffset":4710,"count":18},{"startOffset":321,"endOffset":326,"count":2},{"startOffset":425,"endOffset":606,"count":0},{"startOffset":709,"endOffset":2514,"count":0},{"startOffset":2540,"endOffset":2937,"count":13},{"startOffset":2937,"endOffset":3063,"count":5},{"startOffset":2997,"endOffset":3024,"count":0},{"startOffset":3084,"endOffset":4694,"count":5},{"startOffset":3194,"endOffset":3249,"count":0},{"startOffset":3382,"endOffset":3426,"count":4},{"startOffset":3458,"endOffset":3491,"count":4},{"startOffset":3485,"endOffset":3490,"count":0},{"startOffset":3492,"endOffset":3506,"count":1},{"startOffset":3545,"endOffset":3571,"count":4},{"startOffset":3572,"endOffset":3594,"count":1},{"startOffset":3754,"endOffset":4420,"count":0}],"isBlockCoverage":true}]},{"scriptId":"210","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/allOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1349,"count":1}],"isBlockCoverage":true},{"functionName":"generate_allOf","ranges":[{"startOffset":31,"endOffset":1348,"count":1},{"startOffset":586,"endOffset":1168,"count":2},{"startOffset":650,"endOffset":727,"count":0},{"startOffset":1222,"endOffset":1259,"count":0}],"isBlockCoverage":true}]},{"scriptId":"211","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/anyOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2925,"count":1}],"isBlockCoverage":true},{"functionName":"generate_anyOf","ranges":[{"startOffset":31,"endOffset":2924,"count":14},{"startOffset":390,"endOffset":395,"count":9},{"startOffset":1138,"endOffset":1536,"count":33},{"startOffset":2253,"endOffset":2287,"count":0},{"startOffset":2405,"endOffset":2421,"count":12},{"startOffset":2423,"endOffset":2623,"count":12},{"startOffset":2476,"endOffset":2541,"count":0},{"startOffset":2805,"endOffset":2832,"count":0},{"startOffset":2836,"endOffset":2908,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":609,"endOffset":789,"count":33},{"startOffset":661,"endOffset":738,"count":0}],"isBlockCoverage":true}]},{"scriptId":"212","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/comment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"generate_comment","ranges":[{"startOffset":31,"endOffset":572,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/const.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2113,"count":1}],"isBlockCoverage":true},{"functionName":"generate_const","ranges":[{"startOffset":31,"endOffset":2112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/contains.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3370,"count":1}],"isBlockCoverage":true},{"functionName":"generate_contains","ranges":[{"startOffset":31,"endOffset":3369,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/dependencies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7720,"count":1}],"isBlockCoverage":true},{"functionName":"generate_dependencies","ranges":[{"startOffset":31,"endOffset":7719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/enum.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2586,"count":1}],"isBlockCoverage":true},{"functionName":"generate_enum","ranges":[{"startOffset":31,"endOffset":2585,"count":153},{"startOffset":389,"endOffset":394,"count":0},{"startOffset":458,"endOffset":468,"count":0},{"startOffset":469,"endOffset":485,"count":0},{"startOffset":520,"endOffset":672,"count":0},{"startOffset":916,"endOffset":1081,"count":0},{"startOffset":1313,"endOffset":1338,"count":0},{"startOffset":2052,"endOffset":2082,"count":0},{"startOffset":2152,"endOffset":2168,"count":43},{"startOffset":2170,"endOffset":2376,"count":43},{"startOffset":2219,"endOffset":2290,"count":0},{"startOffset":2376,"endOffset":2504,"count":110}],"isBlockCoverage":true}]},{"scriptId":"217","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5565,"count":1}],"isBlockCoverage":true},{"functionName":"generate_format","ranges":[{"startOffset":31,"endOffset":5564,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/if.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4159,"count":1}],"isBlockCoverage":true},{"functionName":"generate_if","ranges":[{"startOffset":31,"endOffset":4158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/items.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6214,"count":1}],"isBlockCoverage":true},{"functionName":"generate_items","ranges":[{"startOffset":31,"endOffset":6213,"count":148},{"startOffset":390,"endOffset":395,"count":117},{"startOffset":806,"endOffset":5133,"count":119},{"startOffset":898,"endOffset":2526,"count":6},{"startOffset":1856,"endOffset":1894,"count":0},{"startOffset":1976,"endOffset":1992,"count":1},{"startOffset":1994,"endOffset":2228,"count":1},{"startOffset":2051,"endOffset":2130,"count":0},{"startOffset":2228,"endOffset":2364,"count":5},{"startOffset":2644,"endOffset":3775,"count":146},{"startOffset":2712,"endOffset":2789,"count":0},{"startOffset":3401,"endOffset":3496,"count":0},{"startOffset":3826,"endOffset":4024,"count":0},{"startOffset":4026,"endOffset":5129,"count":0},{"startOffset":5133,"endOffset":6097,"count":29},{"startOffset":5167,"endOffset":5253,"count":0},{"startOffset":5816,"endOffset":5899,"count":2},{"startOffset":5899,"endOffset":5993,"count":27}],"isBlockCoverage":true}]},{"scriptId":"220","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/_limit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7395,"count":1}],"isBlockCoverage":true},{"functionName":"generate__limit","ranges":[{"startOffset":31,"endOffset":7394,"count":25},{"startOffset":412,"endOffset":417,"count":0},{"startOffset":450,"endOffset":460,"count":0},{"startOffset":461,"endOffset":477,"count":0},{"startOffset":512,"endOffset":664,"count":0},{"startOffset":773,"endOffset":793,"count":0},{"startOffset":896,"endOffset":910,"count":0},{"startOffset":911,"endOffset":931,"count":0},{"startOffset":950,"endOffset":955,"count":0},{"startOffset":983,"endOffset":988,"count":0},{"startOffset":1073,"endOffset":1097,"count":0},{"startOffset":1100,"endOffset":1156,"count":0},{"startOffset":1206,"endOffset":1239,"count":0},{"startOffset":1240,"endOffset":1274,"count":0},{"startOffset":1277,"endOffset":1353,"count":0},{"startOffset":1373,"endOffset":4210,"count":0},{"startOffset":4316,"endOffset":4326,"count":0},{"startOffset":4328,"endOffset":4818,"count":0},{"startOffset":4850,"endOffset":4874,"count":0},{"startOffset":4876,"endOffset":5083,"count":0},{"startOffset":5118,"endOffset":5184,"count":0},{"startOffset":5228,"endOffset":5242,"count":0},{"startOffset":5252,"endOffset":5433,"count":0},{"startOffset":5598,"endOffset":5716,"count":0},{"startOffset":6068,"endOffset":6079,"count":0},{"startOffset":6432,"endOffset":6482,"count":0},{"startOffset":6622,"endOffset":6681,"count":0},{"startOffset":6860,"endOffset":6890,"count":0},{"startOffset":6960,"endOffset":6976,"count":7},{"startOffset":6978,"endOffset":7184,"count":7},{"startOffset":7027,"endOffset":7098,"count":0},{"startOffset":7184,"endOffset":7312,"count":18}],"isBlockCoverage":true}]},{"scriptId":"221","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/_limitItems.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2704,"count":1}],"isBlockCoverage":true},{"functionName":"generate__limitItems","ranges":[{"startOffset":31,"endOffset":2703,"count":227},{"startOffset":417,"endOffset":422,"count":222},{"startOffset":455,"endOffset":465,"count":0},{"startOffset":466,"endOffset":482,"count":0},{"startOffset":517,"endOffset":669,"count":0},{"startOffset":757,"endOffset":813,"count":0},{"startOffset":849,"endOffset":854,"count":111},{"startOffset":855,"endOffset":860,"count":116},{"startOffset":895,"endOffset":1005,"count":0},{"startOffset":1295,"endOffset":1311,"count":0},{"startOffset":1604,"endOffset":1636,"count":111},{"startOffset":1636,"endOffset":1675,"count":116},{"startOffset":1718,"endOffset":1778,"count":0},{"startOffset":1932,"endOffset":1991,"count":0},{"startOffset":2170,"endOffset":2200,"count":0},{"startOffset":2270,"endOffset":2286,"count":198},{"startOffset":2288,"endOffset":2494,"count":198},{"startOffset":2337,"endOffset":2408,"count":0},{"startOffset":2494,"endOffset":2622,"count":29}],"isBlockCoverage":true}]},{"scriptId":"222","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/_limitLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2825,"count":1}],"isBlockCoverage":true},{"functionName":"generate__limitLength","ranges":[{"startOffset":31,"endOffset":2824,"count":2},{"startOffset":418,"endOffset":423,"count":0},{"startOffset":456,"endOffset":466,"count":0},{"startOffset":467,"endOffset":483,"count":0},{"startOffset":518,"endOffset":670,"count":0},{"startOffset":758,"endOffset":814,"count":0},{"startOffset":851,"endOffset":856,"count":0},{"startOffset":897,"endOffset":1007,"count":0},{"startOffset":1041,"endOffset":1085,"count":0},{"startOffset":1407,"endOffset":1424,"count":0},{"startOffset":1716,"endOffset":1750,"count":0},{"startOffset":1834,"endOffset":1894,"count":0},{"startOffset":2053,"endOffset":2112,"count":0},{"startOffset":2291,"endOffset":2321,"count":0},{"startOffset":2391,"endOffset":2407,"count":0},{"startOffset":2409,"endOffset":2615,"count":0}],"isBlockCoverage":true}]},{"scriptId":"223","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/_limitProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2742,"count":1}],"isBlockCoverage":true},{"functionName":"generate__limitProperties","ranges":[{"startOffset":31,"endOffset":2741,"count":7},{"startOffset":422,"endOffset":427,"count":0},{"startOffset":460,"endOffset":470,"count":0},{"startOffset":471,"endOffset":487,"count":0},{"startOffset":522,"endOffset":674,"count":0},{"startOffset":762,"endOffset":818,"count":0},{"startOffset":859,"endOffset":864,"count":0},{"startOffset":905,"endOffset":1015,"count":0},{"startOffset":1318,"endOffset":1339,"count":0},{"startOffset":1637,"endOffset":1669,"count":0},{"startOffset":1751,"endOffset":1811,"count":0},{"startOffset":1970,"endOffset":2029,"count":0},{"startOffset":2208,"endOffset":2238,"count":0},{"startOffset":2308,"endOffset":2324,"count":0},{"startOffset":2326,"endOffset":2532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"224","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/multipleOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2807,"count":1}],"isBlockCoverage":true},{"functionName":"generate_multipleOf","ranges":[{"startOffset":31,"endOffset":2806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/not.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3460,"count":1}],"isBlockCoverage":true},{"functionName":"generate_not","ranges":[{"startOffset":31,"endOffset":3459,"count":1},{"startOffset":388,"endOffset":393,"count":0},{"startOffset":542,"endOffset":628,"count":0},{"startOffset":1003,"endOffset":1089,"count":0},{"startOffset":1188,"endOffset":1226,"count":0},{"startOffset":1966,"endOffset":2000,"count":0},{"startOffset":2147,"endOffset":2222,"count":0},{"startOffset":2314,"endOffset":2446,"count":0},{"startOffset":2628,"endOffset":2655,"count":0},{"startOffset":2659,"endOffset":3443,"count":0}],"isBlockCoverage":true}]},{"scriptId":"226","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/oneOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3188,"count":1}],"isBlockCoverage":true},{"functionName":"generate_oneOf","ranges":[{"startOffset":31,"endOffset":3187,"count":46},{"startOffset":390,"endOffset":395,"count":1},{"startOffset":1021,"endOffset":1885,"count":95},{"startOffset":1085,"endOffset":1162,"count":0},{"startOffset":1441,"endOffset":1509,"count":0},{"startOffset":1524,"endOffset":1742,"count":49},{"startOffset":2624,"endOffset":2654,"count":0},{"startOffset":2768,"endOffset":2784,"count":33},{"startOffset":2786,"endOffset":2972,"count":33},{"startOffset":2835,"endOffset":2896,"count":0},{"startOffset":3148,"endOffset":3171,"count":0}],"isBlockCoverage":true}]},{"scriptId":"227","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2586,"count":1}],"isBlockCoverage":true},{"functionName":"generate_pattern","ranges":[{"startOffset":31,"endOffset":2585,"count":1},{"startOffset":392,"endOffset":397,"count":0},{"startOffset":430,"endOffset":440,"count":0},{"startOffset":441,"endOffset":457,"count":0},{"startOffset":492,"endOffset":644,"count":0},{"startOffset":708,"endOffset":746,"count":0},{"startOffset":806,"endOffset":916,"count":0},{"startOffset":1111,"endOffset":2052,"count":0},{"startOffset":2152,"endOffset":2168,"count":0},{"startOffset":2170,"endOffset":2376,"count":0}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15121,"count":1}],"isBlockCoverage":true},{"functionName":"generate_properties","ranges":[{"startOffset":31,"endOffset":15120,"count":210},{"startOffset":395,"endOffset":400,"count":3},{"startOffset":769,"endOffset":774,"count":4},{"startOffset":841,"endOffset":846,"count":209},{"startOffset":1005,"endOffset":1029,"count":4},{"startOffset":1133,"endOffset":1168,"count":3},{"startOffset":1257,"endOffset":1279,"count":11},{"startOffset":1280,"endOffset":1300,"count":8},{"startOffset":1432,"endOffset":1470,"count":2},{"startOffset":1451,"endOffset":1469,"count":0},{"startOffset":1471,"endOffset":1513,"count":2},{"startOffset":1515,"endOffset":1571,"count":2},{"startOffset":1728,"endOffset":1791,"count":0},{"startOffset":1816,"endOffset":7937,"count":202},{"startOffset":1842,"endOffset":2114,"count":0},{"startOffset":2217,"endOffset":3202,"count":199},{"startOffset":2308,"endOffset":2800,"count":198},{"startOffset":2346,"endOffset":2450,"count":4},{"startOffset":2450,"endOffset":2792,"count":194},{"startOffset":2617,"endOffset":2770,"count":437},{"startOffset":2834,"endOffset":3141,"count":1},{"startOffset":3239,"endOffset":3304,"count":0},{"startOffset":3456,"endOffset":3551,"count":0},{"startOffset":3577,"endOffset":5543,"count":199},{"startOffset":3610,"endOffset":3683,"count":0},{"startOffset":4426,"endOffset":4503,"count":0},{"startOffset":4840,"endOffset":4886,"count":0},{"startOffset":4980,"endOffset":4996,"count":149},{"startOffset":4998,"endOffset":5260,"count":149},{"startOffset":5063,"endOffset":5150,"count":0},{"startOffset":5260,"endOffset":5404,"count":50},{"startOffset":5543,"endOffset":7709,"count":3},{"startOffset":5620,"endOffset":6831,"count":0},{"startOffset":7075,"endOffset":7089,"count":0},{"startOffset":7389,"endOffset":7484,"count":0},{"startOffset":7781,"endOffset":7808,"count":199},{"startOffset":8027,"endOffset":12936,"count":206},{"startOffset":8158,"endOffset":12926,"count":567},{"startOffset":8276,"endOffset":8353,"count":0},{"startOffset":8538,"endOffset":8567,"count":406},{"startOffset":9044,"endOffset":9164,"count":2},{"startOffset":9164,"endOffset":9292,"count":565},{"startOffset":9320,"endOffset":9373,"count":82},{"startOffset":9373,"endOffset":12786,"count":485},{"startOffset":9411,"endOffset":9441,"count":19},{"startOffset":9443,"endOffset":12015,"count":2},{"startOffset":9543,"endOffset":9697,"count":0},{"startOffset":9983,"endOffset":10103,"count":0},{"startOffset":10209,"endOffset":10214,"count":0},{"startOffset":10742,"endOffset":10816,"count":0},{"startOffset":11247,"endOffset":11301,"count":0},{"startOffset":11498,"endOffset":11593,"count":0},{"startOffset":11715,"endOffset":11867,"count":0},{"startOffset":12015,"endOffset":12732,"count":483},{"startOffset":12160,"endOffset":12318,"count":0},{"startOffset":12403,"endOffset":12718,"count":0},{"startOffset":12966,"endOffset":15004,"count":1},{"startOffset":13217,"endOffset":13294,"count":0},{"startOffset":13611,"endOffset":13895,"count":0},{"startOffset":14394,"endOffset":14489,"count":0}],"isBlockCoverage":true},{"functionName":"notProto","ranges":[{"startOffset":1575,"endOffset":1631,"count":568}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/propertyNames.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3607,"count":1}],"isBlockCoverage":true},{"functionName":"generate_propertyNames","ranges":[{"startOffset":31,"endOffset":3606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/required.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12395,"count":1}],"isBlockCoverage":true},{"functionName":"generate_required","ranges":[{"startOffset":31,"endOffset":12394,"count":2},{"startOffset":393,"endOffset":398,"count":1},{"startOffset":462,"endOffset":472,"count":0},{"startOffset":473,"endOffset":489,"count":0},{"startOffset":524,"endOffset":676,"count":0},{"startOffset":1200,"endOffset":1301,"count":0},{"startOffset":1358,"endOffset":1424,"count":0},{"startOffset":1448,"endOffset":1492,"count":0},{"startOffset":1532,"endOffset":12321,"count":0}],"isBlockCoverage":true}]},{"scriptId":"231","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/uniqueItems.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3694,"count":1}],"isBlockCoverage":true},{"functionName":"generate_uniqueItems","ranges":[{"startOffset":31,"endOffset":3693,"count":13},{"startOffset":396,"endOffset":401,"count":0},{"startOffset":465,"endOffset":475,"count":0},{"startOffset":476,"endOffset":492,"count":0},{"startOffset":527,"endOffset":679,"count":0},{"startOffset":734,"endOffset":744,"count":0},{"startOffset":799,"endOffset":1037,"count":0},{"startOffset":1256,"endOffset":1280,"count":6},{"startOffset":1281,"endOffset":1304,"count":6},{"startOffset":1305,"endOffset":1395,"count":5},{"startOffset":1322,"endOffset":1394,"count":0},{"startOffset":1397,"endOffset":1561,"count":8},{"startOffset":1561,"endOffset":2091,"count":5},{"startOffset":1712,"endOffset":1717,"count":0},{"startOffset":1857,"endOffset":1938,"count":0},{"startOffset":2127,"endOffset":2156,"count":0},{"startOffset":2793,"endOffset":2856,"count":0},{"startOffset":3047,"endOffset":3081,"count":0},{"startOffset":3157,"endOffset":3173,"count":10},{"startOffset":3175,"endOffset":3395,"count":10},{"startOffset":3228,"endOffset":3303,"count":0},{"startOffset":3395,"endOffset":3527,"count":3},{"startOffset":3605,"endOffset":3677,"count":0}],"isBlockCoverage":true}]},{"scriptId":"232","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1048,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":358,"endOffset":1046,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/compile/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2644,"count":1}],"isBlockCoverage":true},{"functionName":"compileAsync","ranges":[{"startOffset":689,"endOffset":2643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3911,"count":1}],"isBlockCoverage":true},{"functionName":"addKeyword","ranges":[{"startOffset":638,"endOffset":2309,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyword","ranges":[{"startOffset":2519,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"removeKeyword","ranges":[{"startOffset":2839,"endOffset":3255,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyword","ranges":[{"startOffset":3487,"endOffset":3910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/dotjs/custom.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9770,"count":1}],"isBlockCoverage":true},{"functionName":"generate_custom","ranges":[{"startOffset":31,"endOffset":9769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"file:///home/runner/work/deluge/deluge/node_modules/ajv/lib/definition_schema.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":872,"count":1}],"isBlockCoverage":true}]},{"scriptId":"237","url":"file:///home/runner/work/deluge/deluge/node_modules/globals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":58,"count":1}],"isBlockCoverage":true}]},{"scriptId":"238","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/cli-engine/file-enumerator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19008,"count":1}],"isBlockCoverage":true},{"functionName":"isGlobPattern","ranges":[{"startOffset":4447,"endOffset":4561,"count":0}],"isBlockCoverage":false},{"functionName":"statSafeSync","ranges":[{"startOffset":4759,"endOffset":4995,"count":1},{"startOffset":4847,"endOffset":4993,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSafeSync","ranges":[{"startOffset":5237,"endOffset":5512,"count":4},{"startOffset":5366,"endOffset":5510,"count":0}],"isBlockCoverage":true},{"functionName":"createExtensionRegExp","ranges":[{"startOffset":5702,"endOffset":6064,"count":1},{"startOffset":6045,"endOffset":6063,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5815,"endOffset":5930,"count":4},{"startOffset":5915,"endOffset":5920,"count":0}],"isBlockCoverage":true},{"functionName":"NoFilesFoundError","ranges":[{"startOffset":6357,"endOffset":6608,"count":0}],"isBlockCoverage":false},{"functionName":"AllFilesIgnoredError","ranges":[{"startOffset":6846,"endOffset":7031,"count":0}],"isBlockCoverage":false},{"functionName":"FileEnumerator","ranges":[{"startOffset":7316,"endOffset":8081,"count":1}],"isBlockCoverage":true},{"functionName":"getEslintRecommendedConfig","ranges":[{"startOffset":7479,"endOffset":7528,"count":0}],"isBlockCoverage":false},{"functionName":"getEslintAllConfig","ranges":[{"startOffset":7562,"endOffset":7603,"count":0}],"isBlockCoverage":false},{"functionName":"isTargetPath","ranges":[{"startOffset":8357,"endOffset":9097,"count":21},{"startOffset":8655,"endOffset":9033,"count":0}],"isBlockCoverage":true},{"functionName":"iterateFiles","ranges":[{"startOffset":9416,"endOffset":11225,"count":1},{"startOffset":9641,"endOffset":9662,"count":0},{"startOffset":9986,"endOffset":10027,"count":0},{"startOffset":10157,"endOffset":10679,"count":9},{"startOffset":10255,"endOffset":10304,"count":1},{"startOffset":10304,"endOffset":10665,"count":8},{"startOffset":10830,"endOffset":11013,"count":0},{"startOffset":11042,"endOffset":11122,"count":0}],"isBlockCoverage":true},{"functionName":"_iterateFiles","ranges":[{"startOffset":11440,"endOffset":12085,"count":1},{"startOffset":11817,"endOffset":11851,"count":0},{"startOffset":11853,"endOffset":11978,"count":0},{"startOffset":11980,"endOffset":12084,"count":0}],"isBlockCoverage":true},{"functionName":"_iterateFilesWithFile","ranges":[{"startOffset":12303,"endOffset":12695,"count":0}],"isBlockCoverage":false},{"functionName":"_iterateFilesWithDirectory","ranges":[{"startOffset":12991,"endOffset":13237,"count":1}],"isBlockCoverage":true},{"functionName":"_iterateFilesWithGlob","ranges":[{"startOffset":13554,"endOffset":14242,"count":0}],"isBlockCoverage":false},{"functionName":"_iterateFilesRecursive","ranges":[{"startOffset":14787,"endOffset":17545,"count":4},{"startOffset":15139,"endOffset":17482,"count":29},{"startOffset":15260,"endOffset":15284,"count":0},{"startOffset":15322,"endOffset":15363,"count":0},{"startOffset":15445,"endOffset":16889,"count":21},{"startOffset":15476,"endOffset":15935,"count":4},{"startOffset":16081,"endOffset":16115,"count":0},{"startOffset":16287,"endOffset":16747,"count":9},{"startOffset":16421,"endOffset":16439,"count":1},{"startOffset":16440,"endOffset":16446,"count":8},{"startOffset":16506,"endOffset":16522,"count":1},{"startOffset":16523,"endOffset":16527,"count":8},{"startOffset":16747,"endOffset":16830,"count":12},{"startOffset":16889,"endOffset":17472,"count":8},{"startOffset":16975,"endOffset":17176,"count":0},{"startOffset":17364,"endOffset":17458,"count":3}],"isBlockCoverage":true},{"functionName":"_isIgnoredFile","ranges":[{"startOffset":18054,"endOffset":18784,"count":17},{"startOffset":18395,"endOffset":18553,"count":0},{"startOffset":18638,"endOffset":18655,"count":0},{"startOffset":18715,"endOffset":18777,"count":0}],"isBlockCoverage":true}]},{"scriptId":"239","url":"file:///home/runner/work/deluge/deluge/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1614,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":352,"endOffset":988,"count":0}],"isBlockCoverage":false},{"functionName":"isEnclosure","ranges":[{"startOffset":991,"endOffset":1396,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobby","ranges":[{"startOffset":1398,"endOffset":1613,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"file:///home/runner/work/deluge/deluge/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///home/runner/work/deluge/deluge/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///home/runner/work/deluge/deluge/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":228},{"startOffset":77,"endOffset":125,"count":0}],"isBlockCoverage":true}]},{"scriptId":"243","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true}]},{"scriptId":"244","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/linter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79317,"count":1}],"isBlockCoverage":true},{"functionName":"isEspree","ranges":[{"startOffset":6397,"endOffset":6495,"count":8},{"startOffset":6457,"endOffset":6491,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobalsForEcmaVersion","ranges":[{"startOffset":6681,"endOffset":7040,"count":0}],"isBlockCoverage":false},{"functionName":"addDeclaredGlobals","ranges":[{"startOffset":7480,"endOffset":9919,"count":8},{"startOffset":7716,"endOffset":8893,"count":6392},{"startOffset":8057,"endOffset":8065,"count":0},{"startOffset":8168,"endOffset":8195,"count":0},{"startOffset":8298,"endOffset":8328,"count":0},{"startOffset":8360,"endOffset":8393,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8981,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9467,"endOffset":9915,"count":50},{"startOffset":9887,"endOffset":9914,"count":0}],"isBlockCoverage":true},{"functionName":"createMissingRuleMessage","ranges":[{"startOffset":10066,"endOffset":10354,"count":0}],"isBlockCoverage":false},{"functionName":"createLintingProblem","ranges":[{"startOffset":10794,"endOffset":11235,"count":0}],"isBlockCoverage":false},{"functionName":"createDisableDirectives","ranges":[{"startOffset":11942,"endOffset":13417,"count":0}],"isBlockCoverage":false},{"functionName":"extractDirectiveComment","ranges":[{"startOffset":13682,"endOffset":14077,"count":53},{"startOffset":13863,"endOffset":14076,"count":0}],"isBlockCoverage":true},{"functionName":"getDirectiveComments","ranges":[{"startOffset":14918,"endOffset":20153,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15263,"endOffset":15296,"count":53}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15306,"endOffset":20008,"count":53},{"startOffset":15593,"endOffset":15786,"count":0},{"startOffset":15788,"endOffset":16362,"count":0},{"startOffset":16364,"endOffset":16796,"count":0},{"startOffset":16809,"endOffset":16830,"count":0},{"startOffset":16843,"endOffset":16875,"count":0},{"startOffset":16888,"endOffset":17381,"count":0},{"startOffset":17395,"endOffset":17542,"count":0},{"startOffset":17556,"endOffset":17571,"count":0},{"startOffset":17584,"endOffset":18637,"count":0},{"startOffset":18651,"endOffset":19965,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18868,"endOffset":19828,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEcmaVersion","ranges":[{"startOffset":20406,"endOffset":20826,"count":8},{"startOffset":20526,"endOffset":20582,"count":0},{"startOffset":20810,"endOffset":20823,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEcmaVersionForLanguageOptions","ranges":[{"startOffset":21055,"endOffset":21844,"count":8},{"startOffset":21154,"endOffset":21183,"count":0},{"startOffset":21257,"endOffset":21264,"count":0},{"startOffset":21273,"endOffset":21307,"count":0},{"startOffset":21420,"endOffset":21433,"count":0},{"startOffset":21475,"endOffset":21843,"count":0}],"isBlockCoverage":true},{"functionName":"findEslintEnv","ranges":[{"startOffset":22145,"endOffset":22542,"count":8},{"startOffset":22294,"endOffset":22522,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFilename","ranges":[{"startOffset":23132,"endOffset":23336,"count":8},{"startOffset":23298,"endOffset":23333,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeVerifyOptions","ranges":[{"startOffset":23616,"endOffset":24931,"count":8},{"startOffset":24039,"endOffset":24082,"count":0},{"startOffset":24246,"endOffset":24342,"count":0},{"startOffset":24516,"endOffset":24524,"count":0},{"startOffset":24615,"endOffset":24627,"count":0},{"startOffset":24724,"endOffset":24746,"count":0},{"startOffset":24759,"endOffset":24803,"count":0}],"isBlockCoverage":true},{"functionName":"resolveParserOptions","ranges":[{"startOffset":25342,"endOffset":26226,"count":8},{"startOffset":25678,"endOffset":25683,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25490,"endOffset":25514,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25532,"endOffset":25595,"count":16}],"isBlockCoverage":true},{"functionName":"createLanguageOptions","ranges":[{"startOffset":26619,"endOffset":26973,"count":8}],"isBlockCoverage":true},{"functionName":"resolveGlobals","ranges":[{"startOffset":27325,"endOffset":27542,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27465,"endOffset":27483,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27489,"endOffset":27507,"count":32}],"isBlockCoverage":true},{"functionName":"stripUnicodeBOM","ranges":[{"startOffset":27674,"endOffset":28010,"count":8},{"startOffset":27954,"endOffset":27991,"count":0}],"isBlockCoverage":true},{"functionName":"getRuleOptions","ranges":[{"startOffset":28195,"endOffset":28329,"count":1568},{"startOffset":28311,"endOffset":28328,"count":0}],"isBlockCoverage":true},{"functionName":"analyzeScope","ranges":[{"startOffset":28608,"endOffset":29252,"count":8},{"startOffset":28776,"endOffset":28781,"count":0},{"startOffset":28835,"endOffset":28858,"count":0},{"startOffset":29091,"endOffset":29094,"count":0},{"startOffset":29143,"endOffset":29154,"count":0},{"startOffset":29194,"endOffset":29205,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":29817,"endOffset":32500,"count":8},{"startOffset":30842,"endOffset":30893,"count":0},{"startOffset":31999,"endOffset":32498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29946,"endOffset":29982,"count":0}],"isBlockCoverage":false},{"functionName":"getScope","ranges":[{"startOffset":32748,"endOffset":33302,"count":5864},{"startOffset":33022,"endOffset":33264,"count":25827},{"startOffset":33101,"endOffset":33258,"count":5864},{"startOffset":33162,"endOffset":33222,"count":0},{"startOffset":33264,"endOffset":33301,"count":0}],"isBlockCoverage":true},{"functionName":"markVariableAsUsed","ranges":[{"startOffset":33788,"endOffset":34716,"count":0}],"isBlockCoverage":false},{"functionName":"createRuleListeners","ranges":[{"startOffset":35030,"endOffset":35259,"count":1568},{"startOffset":35137,"endOffset":35257,"count":0}],"isBlockCoverage":true},{"functionName":"getAncestors","ranges":[{"startOffset":35506,"endOffset":35762,"count":81},{"startOffset":35654,"endOffset":35711,"count":701}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36731,"endOffset":36979,"count":20}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":36817,"endOffset":36964,"count":116}],"isBlockCoverage":true},{"functionName":"runRules","ranges":[{"startOffset":37863,"endOffset":44759,"count":8},{"startOffset":44228,"endOffset":44331,"count":0}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":38161,"endOffset":38282,"count":4023}],"isBlockCoverage":true},{"functionName":"leave","ranges":[{"startOffset":38292,"endOffset":38372,"count":4023}],"isBlockCoverage":true},{"functionName":"getAncestors","ranges":[{"startOffset":38863,"endOffset":38894,"count":81}],"isBlockCoverage":true},{"functionName":"getCwd","ranges":[{"startOffset":39034,"endOffset":39043,"count":0}],"isBlockCoverage":false},{"functionName":"getFilename","ranges":[{"startOffset":39074,"endOffset":39088,"count":8}],"isBlockCoverage":true},{"functionName":"getPhysicalFilename","ranges":[{"startOffset":39127,"endOffset":39161,"count":28}],"isBlockCoverage":true},{"functionName":"getScope","ranges":[{"startOffset":39189,"endOffset":39241,"count":5864}],"isBlockCoverage":true},{"functionName":"getSourceCode","ranges":[{"startOffset":39274,"endOffset":39290,"count":2904}],"isBlockCoverage":true},{"functionName":"markVariableAsUsed","ranges":[{"startOffset":39328,"endOffset":39415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39785,"endOffset":43932,"count":1568},{"startOffset":39938,"endOffset":39969,"count":0},{"startOffset":40032,"endOffset":40131,"count":0},{"startOffset":42678,"endOffset":42739,"count":0},{"startOffset":43414,"endOffset":43526,"count":0}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":40495,"endOffset":42588,"count":0}],"isBlockCoverage":false},{"functionName":"addRuleErrorHandler","ranges":[{"startOffset":43007,"endOffset":43336,"count":5784}],"isBlockCoverage":true},{"functionName":"ruleErrorHandler","ranges":[{"startOffset":43071,"endOffset":43325,"count":50775},{"startOffset":43214,"endOffset":43311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43631,"endOffset":43924,"count":5784},{"startOffset":43709,"endOffset":43755,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44356,"endOffset":44726,"count":8046},{"startOffset":44474,"endOffset":44620,"count":4023},{"startOffset":44631,"endOffset":44720,"count":0}],"isBlockCoverage":true},{"functionName":"ensureText","ranges":[{"startOffset":44933,"endOffset":45189,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":45390,"endOffset":45588,"count":32},{"startOffset":45564,"endOffset":45579,"count":0}],"isBlockCoverage":true},{"functionName":"getRule","ranges":[{"startOffset":45761,"endOffset":45934,"count":1568},{"startOffset":45889,"endOffset":45925,"count":1184}],"isBlockCoverage":true},{"functionName":"normalizeCwd","ranges":[{"startOffset":46181,"endOffset":46479,"count":1},{"startOffset":46250,"endOffset":46478,"count":0}],"isBlockCoverage":true},{"functionName":"assertEslintrcConfig","ranges":[{"startOffset":46808,"endOffset":47068,"count":0}],"isBlockCoverage":false},{"functionName":"Linter","ranges":[{"startOffset":47678,"endOffset":48110,"count":1}],"isBlockCoverage":true},{"functionName":"get version","ranges":[{"startOffset":48245,"endOffset":48294,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyWithoutProcessors","ranges":[{"startOffset":48842,"endOffset":54447,"count":8},{"startOffset":49008,"endOffset":49013,"count":0},{"startOffset":49276,"endOffset":49388,"count":0},{"startOffset":49566,"endOffset":49673,"count":0},{"startOffset":49718,"endOffset":50184,"count":0},{"startOffset":50357,"endOffset":50361,"count":0},{"startOffset":50738,"endOffset":50743,"count":0},{"startOffset":50823,"endOffset":50828,"count":0},{"startOffset":50885,"endOffset":50890,"count":0},{"startOffset":51262,"endOffset":51321,"count":0},{"startOffset":51391,"endOffset":52128,"count":0},{"startOffset":52362,"endOffset":52467,"count":0},{"startOffset":53328,"endOffset":53993,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50533,"endOffset":50570,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50589,"endOffset":50622,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50644,"endOffset":50654,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52290,"endOffset":52322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":53034,"endOffset":53066,"count":1568}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54256,"endOffset":54346,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":55148,"endOffset":57162,"count":8},{"startOffset":55362,"endOffset":55395,"count":0},{"startOffset":55428,"endOffset":55433,"count":0},{"startOffset":55497,"endOffset":56331,"count":0},{"startOffset":56542,"endOffset":56907,"count":0},{"startOffset":56909,"endOffset":57161,"count":0}],"isBlockCoverage":true},{"functionName":"_verifyWithFlatConfigArrayAndProcessor","ranges":[{"startOffset":57600,"endOffset":60436,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyWithFlatConfigArrayAndWithoutProcessors","ranges":[{"startOffset":60984,"endOffset":66610,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyWithConfigArray","ranges":[{"startOffset":66949,"endOffset":68034,"count":8},{"startOffset":67392,"endOffset":67457,"count":0},{"startOffset":67502,"endOffset":67947,"count":0}],"isBlockCoverage":true},{"functionName":"_verifyWithFlatConfigArray","ranges":[{"startOffset":68530,"endOffset":70181,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyWithProcessor","ranges":[{"startOffset":70631,"endOffset":73401,"count":0}],"isBlockCoverage":false},{"functionName":"_distinguishSuppressedMessages","ranges":[{"startOffset":73768,"endOffset":74238,"count":8},{"startOffset":73970,"endOffset":74146,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceCode","ranges":[{"startOffset":74378,"endOffset":74459,"count":0}],"isBlockCoverage":false},{"functionName":"getSuppressedMessages","ranges":[{"startOffset":74633,"endOffset":74730,"count":8}],"isBlockCoverage":true},{"functionName":"defineRule","ranges":[{"startOffset":74981,"endOffset":75126,"count":0}],"isBlockCoverage":false},{"functionName":"defineRules","ranges":[{"startOffset":75312,"endOffset":75524,"count":0}],"isBlockCoverage":false},{"functionName":"getRules","ranges":[{"startOffset":75644,"endOffset":75954,"count":0}],"isBlockCoverage":false},{"functionName":"defineParser","ranges":[{"startOffset":76138,"endOffset":76292,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAndFix","ranges":[{"startOffset":76837,"endOffset":78984,"count":8},{"startOffset":77079,"endOffset":77107,"count":0},{"startOffset":77195,"endOffset":77201,"count":0},{"startOffset":78105,"endOffset":78125,"count":0},{"startOffset":78127,"endOffset":78165,"count":0},{"startOffset":78472,"endOffset":78518,"count":0},{"startOffset":78711,"endOffset":78800,"count":0}],"isBlockCoverage":true},{"functionName":"getLinterInternalSlots","ranges":[{"startOffset":79226,"endOffset":79313,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-scope/dist/eslint-scope.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":69338,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":190,"endOffset":304,"count":3},{"startOffset":261,"endOffset":278,"count":2},{"startOffset":279,"endOffset":282,"count":0}],"isBlockCoverage":true},{"functionName":"Reference","ranges":[{"startOffset":2042,"endOffset":3774,"count":702},{"startOffset":3109,"endOffset":3710,"count":141}],"isBlockCoverage":true},{"functionName":"isStatic","ranges":[{"startOffset":3905,"endOffset":4004,"count":0}],"isBlockCoverage":false},{"functionName":"isWrite","ranges":[{"startOffset":4136,"endOffset":4201,"count":886}],"isBlockCoverage":true},{"functionName":"isRead","ranges":[{"startOffset":4330,"endOffset":4393,"count":564}],"isBlockCoverage":true},{"functionName":"isReadOnly","ranges":[{"startOffset":4532,"endOffset":4597,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteOnly","ranges":[{"startOffset":4739,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"isReadWrite","ranges":[{"startOffset":4948,"endOffset":5012,"count":0}],"isBlockCoverage":false},{"functionName":"Variable","ranges":[{"startOffset":6747,"endOffset":8050,"count":6723}],"isBlockCoverage":true},{"functionName":"Definition","ranges":[{"startOffset":9762,"endOffset":10703,"count":260}],"isBlockCoverage":true},{"functionName":"ParameterDefinition","ranges":[{"startOffset":10802,"endOffset":11092,"count":112}],"isBlockCoverage":true},{"functionName":"isStrictScope","ranges":[{"startOffset":12767,"endOffset":14863,"count":199},{"startOffset":12949,"endOffset":12972,"count":191},{"startOffset":12974,"endOffset":13002,"count":183},{"startOffset":13002,"endOffset":13032,"count":16},{"startOffset":13032,"endOffset":13060,"count":0},{"startOffset":13060,"endOffset":13119,"count":16},{"startOffset":13121,"endOffset":13208,"count":8},{"startOffset":13210,"endOffset":13239,"count":0},{"startOffset":13239,"endOffset":13276,"count":8},{"startOffset":13276,"endOffset":13619,"count":0},{"startOffset":13619,"endOffset":13718,"count":8},{"startOffset":13683,"endOffset":13718,"count":0},{"startOffset":13718,"endOffset":13780,"count":8},{"startOffset":13780,"endOffset":14120,"count":0},{"startOffset":14120,"endOffset":14843,"count":8},{"startOffset":14328,"endOffset":14452,"count":0},{"startOffset":14454,"endOffset":14552,"count":0},{"startOffset":14554,"endOffset":14827,"count":0},{"startOffset":14843,"endOffset":14862,"count":8}],"isBlockCoverage":true},{"functionName":"registerScope","ranges":[{"startOffset":14992,"endOffset":15269,"count":199},{"startOffset":15157,"endOffset":15192,"count":9},{"startOffset":15192,"endOffset":15267,"count":190}],"isBlockCoverage":true},{"functionName":"shouldBeStatically","ranges":[{"startOffset":15373,"endOffset":15544,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":15594,"endOffset":20075,"count":199},{"startOffset":16944,"endOffset":16967,"count":191},{"startOffset":18498,"endOffset":18535,"count":191},{"startOffset":18536,"endOffset":18575,"count":183},{"startOffset":18576,"endOffset":18630,"count":37},{"startOffset":18631,"endOffset":18680,"count":37},{"startOffset":18697,"endOffset":18703,"count":162},{"startOffset":18720,"endOffset":18746,"count":37},{"startOffset":19719,"endOffset":19726,"count":0},{"startOffset":19897,"endOffset":19955,"count":191}],"isBlockCoverage":true},{"functionName":"__shouldStaticallyClose","ranges":[{"startOffset":20081,"endOffset":20191,"count":199},{"startOffset":20151,"endOffset":20183,"count":8}],"isBlockCoverage":true},{"functionName":"__shouldStaticallyCloseForGlobal","ranges":[{"startOffset":20197,"endOffset":20594,"count":50},{"startOffset":20439,"endOffset":20587,"count":0}],"isBlockCoverage":true},{"functionName":"__staticCloseRef","ranges":[{"startOffset":20600,"endOffset":20721,"count":1131},{"startOffset":20658,"endOffset":20715,"count":479}],"isBlockCoverage":true},{"functionName":"__dynamicCloseRef","ranges":[{"startOffset":20727,"endOffset":20953,"count":50}],"isBlockCoverage":true},{"functionName":"__globalCloseRef","ranges":[{"startOffset":20959,"endOffset":21276,"count":50},{"startOffset":21161,"endOffset":21212,"count":0}],"isBlockCoverage":true},{"functionName":"__close","ranges":[{"startOffset":21282,"endOffset":21868,"count":199},{"startOffset":21385,"endOffset":21442,"count":191},{"startOffset":21442,"endOffset":21597,"count":8},{"startOffset":21476,"endOffset":21534,"count":0},{"startOffset":21716,"endOffset":21806,"count":1181}],"isBlockCoverage":true},{"functionName":"__isValidResolution","ranges":[{"startOffset":22015,"endOffset":22140,"count":148}],"isBlockCoverage":true},{"functionName":"__resolve","ranges":[{"startOffset":22146,"endOffset":22728,"count":1131},{"startOffset":22239,"endOffset":22276,"count":479},{"startOffset":22276,"endOffset":22377,"count":652},{"startOffset":22377,"endOffset":22414,"count":0},{"startOffset":22414,"endOffset":22494,"count":652},{"startOffset":22494,"endOffset":22542,"count":543},{"startOffset":22569,"endOffset":22667,"count":0},{"startOffset":22667,"endOffset":22727,"count":652}],"isBlockCoverage":true},{"functionName":"__delegateToUpperScope","ranges":[{"startOffset":22734,"endOffset":22878,"count":479}],"isBlockCoverage":true},{"functionName":"__addDeclaredVariablesOfNode","ranges":[{"startOffset":22884,"endOffset":23335,"count":520},{"startOffset":22957,"endOffset":22978,"count":397},{"startOffset":22980,"endOffset":23011,"count":128},{"startOffset":23011,"endOffset":23131,"count":392},{"startOffset":23133,"endOffset":23231,"count":327},{"startOffset":23231,"endOffset":23329,"count":392}],"isBlockCoverage":true},{"functionName":"__defineGeneric","ranges":[{"startOffset":23341,"endOffset":23891,"count":331},{"startOffset":23626,"endOffset":23810,"count":260},{"startOffset":23829,"endOffset":23885,"count":260}],"isBlockCoverage":true},{"functionName":"__define","ranges":[{"startOffset":23897,"endOffset":24167,"count":260}],"isBlockCoverage":true},{"functionName":"__referencing","ranges":[{"startOffset":24173,"endOffset":24690,"count":702},{"startOffset":24352,"endOffset":24383,"count":0},{"startOffset":24461,"endOffset":24492,"count":0},{"startOffset":24547,"endOffset":24564,"count":561}],"isBlockCoverage":true},{"functionName":"__detectEval","ranges":[{"startOffset":24696,"endOffset":24903,"count":0}],"isBlockCoverage":false},{"functionName":"__detectThis","ranges":[{"startOffset":24909,"endOffset":24962,"count":187}],"isBlockCoverage":true},{"functionName":"__isClosed","ranges":[{"startOffset":24968,"endOffset":25025,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":25219,"endOffset":25671,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":25794,"endOffset":25842,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentsMaterialized","ranges":[{"startOffset":26013,"endOffset":26113,"count":0}],"isBlockCoverage":false},{"functionName":"isThisMaterialized","ranges":[{"startOffset":26281,"endOffset":26376,"count":0}],"isBlockCoverage":false},{"functionName":"isUsedName","ranges":[{"startOffset":26382,"endOffset":26675,"count":0}],"isBlockCoverage":false},{"functionName":"GlobalScope","ranges":[{"startOffset":26717,"endOffset":27167,"count":8}],"isBlockCoverage":true},{"functionName":"__close","ranges":[{"startOffset":27173,"endOffset":28070,"count":8},{"startOffset":27289,"endOffset":27496,"count":50},{"startOffset":27374,"endOffset":27411,"count":0},{"startOffset":27413,"endOffset":27486,"count":0},{"startOffset":27630,"endOffset":27976,"count":0}],"isBlockCoverage":true},{"functionName":"__defineImplicit","ranges":[{"startOffset":28076,"endOffset":28372,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleScope","ranges":[{"startOffset":28414,"endOffset":28531,"count":8}],"isBlockCoverage":true},{"functionName":"FunctionExpressionNameScope","ranges":[{"startOffset":28589,"endOffset":28998,"count":1}],"isBlockCoverage":true},{"functionName":"CatchScope","ranges":[{"startOffset":29039,"endOffset":29155,"count":1}],"isBlockCoverage":true},{"functionName":"WithScope","ranges":[{"startOffset":29195,"endOffset":29310,"count":0}],"isBlockCoverage":false},{"functionName":"__close","ranges":[{"startOffset":29316,"endOffset":29711,"count":0}],"isBlockCoverage":false},{"functionName":"BlockScope","ranges":[{"startOffset":29752,"endOffset":29868,"count":27}],"isBlockCoverage":true},{"functionName":"SwitchScope","ranges":[{"startOffset":29910,"endOffset":30027,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionScope","ranges":[{"startOffset":30071,"endOffset":30466,"count":146},{"startOffset":30411,"endOffset":30460,"count":71}],"isBlockCoverage":true},{"functionName":"isArgumentsMaterialized","ranges":[{"startOffset":30472,"endOffset":31132,"count":0}],"isBlockCoverage":false},{"functionName":"isThisMaterialized","ranges":[{"startOffset":31138,"endOffset":31264,"count":0}],"isBlockCoverage":false},{"functionName":"__defineArguments","ranges":[{"startOffset":31270,"endOffset":31492,"count":71}],"isBlockCoverage":true},{"functionName":"__isValidResolution","ranges":[{"startOffset":31779,"endOffset":32357,"count":504},{"startOffset":31942,"endOffset":31978,"count":0},{"startOffset":32196,"endOffset":32308,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32274,"endOffset":32307,"count":12}],"isBlockCoverage":true},{"functionName":"ForScope","ranges":[{"startOffset":32396,"endOffset":32510,"count":3}],"isBlockCoverage":true},{"functionName":"ClassScope","ranges":[{"startOffset":32551,"endOffset":32667,"count":5}],"isBlockCoverage":true},{"functionName":"ClassFieldInitializerScope","ranges":[{"startOffset":32724,"endOffset":32857,"count":0}],"isBlockCoverage":false},{"functionName":"ClassStaticBlockScope","ranges":[{"startOffset":32909,"endOffset":33037,"count":0}],"isBlockCoverage":false},{"functionName":"ScopeManager","ranges":[{"startOffset":34472,"endOffset":34723,"count":8}],"isBlockCoverage":true},{"functionName":"__useDirective","ranges":[{"startOffset":34729,"endOffset":34794,"count":199}],"isBlockCoverage":true},{"functionName":"__isOptimistic","ranges":[{"startOffset":34800,"endOffset":34866,"count":8}],"isBlockCoverage":true},{"functionName":"__ignoreEval","ranges":[{"startOffset":34872,"endOffset":34936,"count":325}],"isBlockCoverage":true},{"functionName":"__isNodejsScope","ranges":[{"startOffset":34942,"endOffset":35054,"count":8}],"isBlockCoverage":true},{"functionName":"isModule","ranges":[{"startOffset":35060,"endOffset":35133,"count":32}],"isBlockCoverage":true},{"functionName":"isImpliedStrict","ranges":[{"startOffset":35139,"endOffset":35209,"count":8}],"isBlockCoverage":true},{"functionName":"isStrictModeSupported","ranges":[{"startOffset":35215,"endOffset":35294,"count":207}],"isBlockCoverage":true},{"functionName":"__get","ranges":[{"startOffset":35348,"endOffset":35412,"count":25827}],"isBlockCoverage":true},{"functionName":"getDeclaredVariables","ranges":[{"startOffset":35898,"endOffset":35989,"count":766},{"startOffset":35977,"endOffset":35982,"count":178}],"isBlockCoverage":true},{"functionName":"acquire","ranges":[{"startOffset":36277,"endOffset":37467,"count":25827},{"startOffset":36704,"endOffset":36726,"count":5864},{"startOffset":36728,"endOffset":36764,"count":19963},{"startOffset":36764,"endOffset":36931,"count":5864},{"startOffset":36931,"endOffset":36972,"count":5609},{"startOffset":36972,"endOffset":36993,"count":255},{"startOffset":36993,"endOffset":37211,"count":79},{"startOffset":37201,"endOffset":37211,"count":0},{"startOffset":37211,"endOffset":37439,"count":176},{"startOffset":37429,"endOffset":37439,"count":0},{"startOffset":37439,"endOffset":37466,"count":0}],"isBlockCoverage":true},{"functionName":"predicate","ranges":[{"startOffset":36444,"endOffset":36640,"count":255},{"startOffset":36522,"endOffset":36558,"count":18},{"startOffset":36560,"endOffset":36605,"count":0}],"isBlockCoverage":true},{"functionName":"acquireAll","ranges":[{"startOffset":37667,"endOffset":37724,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":38002,"endOffset":38308,"count":0}],"isBlockCoverage":false},{"functionName":"attach","ranges":[{"startOffset":38314,"endOffset":38326,"count":0}],"isBlockCoverage":false},{"functionName":"detach","ranges":[{"startOffset":38378,"endOffset":38390,"count":0}],"isBlockCoverage":false},{"functionName":"__nestScope","ranges":[{"startOffset":38442,"endOffset":38689,"count":199},{"startOffset":38505,"endOffset":38624,"count":8}],"isBlockCoverage":true},{"functionName":"__nestGlobalScope","ranges":[{"startOffset":38695,"endOffset":38788,"count":8}],"isBlockCoverage":true},{"functionName":"__nestBlockScope","ranges":[{"startOffset":38794,"endOffset":38906,"count":27}],"isBlockCoverage":true},{"functionName":"__nestFunctionScope","ranges":[{"startOffset":38912,"endOffset":39070,"count":146}],"isBlockCoverage":true},{"functionName":"__nestForScope","ranges":[{"startOffset":39076,"endOffset":39184,"count":3}],"isBlockCoverage":true},{"functionName":"__nestCatchScope","ranges":[{"startOffset":39190,"endOffset":39302,"count":1}],"isBlockCoverage":true},{"functionName":"__nestWithScope","ranges":[{"startOffset":39308,"endOffset":39418,"count":0}],"isBlockCoverage":false},{"functionName":"__nestClassScope","ranges":[{"startOffset":39424,"endOffset":39536,"count":5}],"isBlockCoverage":true},{"functionName":"__nestClassFieldInitializerScope","ranges":[{"startOffset":39542,"endOffset":39686,"count":0}],"isBlockCoverage":false},{"functionName":"__nestClassStaticBlockScope","ranges":[{"startOffset":39692,"endOffset":39826,"count":0}],"isBlockCoverage":false},{"functionName":"__nestSwitchScope","ranges":[{"startOffset":39832,"endOffset":39946,"count":0}],"isBlockCoverage":false},{"functionName":"__nestModuleScope","ranges":[{"startOffset":39952,"endOffset":40066,"count":8}],"isBlockCoverage":true},{"functionName":"__nestFunctionExpressionNameScope","ranges":[{"startOffset":40072,"endOffset":40218,"count":1}],"isBlockCoverage":true},{"functionName":"__isES6","ranges":[{"startOffset":40224,"endOffset":40289,"count":59}],"isBlockCoverage":true},{"functionName":"getLast","ranges":[{"startOffset":41815,"endOffset":41877,"count":251},{"startOffset":41867,"endOffset":41874,"count":247}],"isBlockCoverage":true},{"functionName":"isPattern","ranges":[{"startOffset":41959,"endOffset":42348,"count":64},{"startOffset":42076,"endOffset":42126,"count":44},{"startOffset":42127,"endOffset":42176,"count":44},{"startOffset":42177,"endOffset":42227,"count":44},{"startOffset":42228,"endOffset":42276,"count":44},{"startOffset":42277,"endOffset":42331,"count":44}],"isBlockCoverage":true},{"functionName":"PatternVisitor","ranges":[{"startOffset":42354,"endOffset":42606,"count":238}],"isBlockCoverage":true},{"functionName":"Identifier","ranges":[{"startOffset":42612,"endOffset":42956,"count":251},{"startOffset":42823,"endOffset":42855,"count":4},{"startOffset":42856,"endOffset":42895,"count":4}],"isBlockCoverage":true},{"functionName":"Property","ranges":[{"startOffset":42962,"endOffset":43437,"count":17},{"startOffset":43072,"endOffset":43135,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayPattern","ranges":[{"startOffset":43443,"endOffset":43634,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentPattern","ranges":[{"startOffset":43640,"endOffset":43829,"count":19}],"isBlockCoverage":true},{"functionName":"RestElement","ranges":[{"startOffset":43835,"endOffset":43975,"count":4}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":43981,"endOffset":44268,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadElement","ranges":[{"startOffset":44603,"endOffset":44665,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":44671,"endOffset":44749,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":44755,"endOffset":44935,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":44941,"endOffset":45137,"count":0}],"isBlockCoverage":false},{"functionName":"traverseIdentifierInPattern","ranges":[{"startOffset":46785,"endOffset":47246,"count":238},{"startOffset":47138,"endOffset":47165,"count":210},{"startOffset":47167,"endOffset":47244,"count":210}],"isBlockCoverage":true},{"functionName":"Importer","ranges":[{"startOffset":47615,"endOffset":47778,"count":24}],"isBlockCoverage":true},{"functionName":"visitImport","ranges":[{"startOffset":47784,"endOffset":48190,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47854,"endOffset":48182,"count":28}],"isBlockCoverage":true},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":48196,"endOffset":48356,"count":1},{"startOffset":48263,"endOffset":48273,"count":0}],"isBlockCoverage":true},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":48362,"endOffset":48485,"count":9},{"startOffset":48427,"endOffset":48437,"count":0}],"isBlockCoverage":true},{"functionName":"ImportSpecifier","ranges":[{"startOffset":48491,"endOffset":48710,"count":18},{"startOffset":48549,"endOffset":48559,"count":0},{"startOffset":48586,"endOffset":48644,"count":0}],"isBlockCoverage":true},{"functionName":"Referencer","ranges":[{"startOffset":48831,"endOffset":49051,"count":8}],"isBlockCoverage":true},{"functionName":"currentScope","ranges":[{"startOffset":49057,"endOffset":49128,"count":2314}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":49134,"endOffset":49334,"count":190},{"startOffset":49183,"endOffset":49220,"count":381},{"startOffset":49222,"endOffset":49328,"count":199}],"isBlockCoverage":true},{"functionName":"pushInnerMethodDefinition","ranges":[{"startOffset":49340,"endOffset":49543,"count":54}],"isBlockCoverage":true},{"functionName":"popInnerMethodDefinition","ranges":[{"startOffset":49549,"endOffset":49670,"count":54}],"isBlockCoverage":true},{"functionName":"referencingDefaultValue","ranges":[{"startOffset":49676,"endOffset":50099,"count":223}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49823,"endOffset":50091,"count":19}],"isBlockCoverage":true},{"functionName":"visitPattern","ranges":[{"startOffset":50105,"endOffset":50601,"count":238},{"startOffset":50277,"endOffset":50400,"count":28},{"startOffset":50537,"endOffset":50543,"count":210},{"startOffset":50544,"endOffset":50550,"count":28}],"isBlockCoverage":true},{"functionName":"visitFunction","ranges":[{"startOffset":50607,"endOffset":53447,"count":146},{"startOffset":50976,"endOffset":51309,"count":4},{"startOffset":51470,"endOffset":51480,"count":67},{"startOffset":51482,"endOffset":51564,"count":1},{"startOffset":52374,"endOffset":52487,"count":112},{"startOffset":52560,"endOffset":52979,"count":0},{"startOffset":53282,"endOffset":53344,"count":123},{"startOffset":53344,"endOffset":53404,"count":23}],"isBlockCoverage":true},{"functionName":"visitPatternCallback","ranges":[{"startOffset":51914,"endOffset":52271,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52682,"endOffset":52967,"count":0}],"isBlockCoverage":false},{"functionName":"visitClass","ranges":[{"startOffset":53453,"endOffset":54191,"count":5}],"isBlockCoverage":true},{"functionName":"visitProperty","ranges":[{"startOffset":54197,"endOffset":54630,"count":87},{"startOffset":54269,"endOffset":54314,"count":0},{"startOffset":54423,"endOffset":54495,"count":54},{"startOffset":54560,"endOffset":54624,"count":54}],"isBlockCoverage":true},{"functionName":"visitForIn","ranges":[{"startOffset":54636,"endOffset":55805,"count":0}],"isBlockCoverage":false},{"functionName":"visitVariableDeclaration","ranges":[{"startOffset":55811,"endOffset":56592,"count":91}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56027,"endOffset":56584,"count":104},{"startOffset":56448,"endOffset":56574,"count":102}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":56598,"endOffset":57579,"count":60},{"startOffset":56676,"endOffset":57489,"count":16},{"startOffset":56717,"endOffset":57370,"count":6},{"startOffset":57370,"endOffset":57479,"count":10},{"startOffset":57489,"endOffset":57541,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56797,"endOffset":57354,"count":6},{"startOffset":56926,"endOffset":57094,"count":0}],"isBlockCoverage":true},{"functionName":"CatchClause","ranges":[{"startOffset":57585,"endOffset":58183,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57727,"endOffset":58117,"count":1}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":58189,"endOffset":58878,"count":8},{"startOffset":58306,"endOffset":58514,"count":0},{"startOffset":58751,"endOffset":58811,"count":0}],"isBlockCoverage":true},{"functionName":"Identifier","ranges":[{"startOffset":58884,"endOffset":58957,"count":561}],"isBlockCoverage":true},{"functionName":"PrivateIdentifier","ranges":[{"startOffset":59018,"endOffset":59069,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":59075,"endOffset":59307,"count":4},{"startOffset":59246,"endOffset":59301,"count":0}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":59313,"endOffset":59454,"count":526},{"startOffset":59398,"endOffset":59448,"count":15}],"isBlockCoverage":true},{"functionName":"Property","ranges":[{"startOffset":59460,"endOffset":59516,"count":33}],"isBlockCoverage":true},{"functionName":"PropertyDefinition","ranges":[{"startOffset":59522,"endOffset":59829,"count":0}],"isBlockCoverage":false},{"functionName":"StaticBlock","ranges":[{"startOffset":59835,"endOffset":59983,"count":0}],"isBlockCoverage":false},{"functionName":"MethodDefinition","ranges":[{"startOffset":59989,"endOffset":60053,"count":54}],"isBlockCoverage":true},{"functionName":"BreakStatement","ranges":[{"startOffset":60059,"endOffset":60078,"count":0}],"isBlockCoverage":false},{"functionName":"ContinueStatement","ranges":[{"startOffset":60130,"endOffset":60152,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":60204,"endOffset":60265,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":60271,"endOffset":60760,"count":3}],"isBlockCoverage":true},{"functionName":"ClassExpression","ranges":[{"startOffset":60766,"endOffset":60826,"count":0}],"isBlockCoverage":false},{"functionName":"ClassDeclaration","ranges":[{"startOffset":60832,"endOffset":60893,"count":5}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":60899,"endOffset":61434,"count":325},{"startOffset":61014,"endOffset":61055,"count":0},{"startOffset":61056,"endOffset":61086,"count":0},{"startOffset":61088,"endOffset":61394,"count":0}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":61440,"endOffset":61637,"count":27}],"isBlockCoverage":true},{"functionName":"ThisExpression","ranges":[{"startOffset":61643,"endOffset":61725,"count":187}],"isBlockCoverage":true},{"functionName":"WithStatement","ranges":[{"startOffset":61731,"endOffset":61946,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":61952,"endOffset":62405,"count":91},{"startOffset":62038,"endOffset":62073,"count":0},{"startOffset":62335,"endOffset":62389,"count":89}],"isBlockCoverage":true},{"functionName":"SwitchStatement","ranges":[{"startOffset":62430,"endOffset":62747,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionDeclaration","ranges":[{"startOffset":62753,"endOffset":62820,"count":4}],"isBlockCoverage":true},{"functionName":"FunctionExpression","ranges":[{"startOffset":62826,"endOffset":62892,"count":67}],"isBlockCoverage":true},{"functionName":"ForOfStatement","ranges":[{"startOffset":62898,"endOffset":62957,"count":0}],"isBlockCoverage":false},{"functionName":"ForInStatement","ranges":[{"startOffset":62963,"endOffset":63022,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":63028,"endOffset":63099,"count":75}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":63105,"endOffset":63399,"count":24}],"isBlockCoverage":true},{"functionName":"visitExportDeclaration","ranges":[{"startOffset":63405,"endOffset":63637,"count":10},{"startOffset":63461,"endOffset":63492,"count":4},{"startOffset":63492,"endOffset":63596,"count":6},{"startOffset":63596,"endOffset":63636,"count":0}],"isBlockCoverage":true},{"functionName":"ExportDeclaration","ranges":[{"startOffset":63697,"endOffset":63771,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":63777,"endOffset":63854,"count":4}],"isBlockCoverage":true},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":63860,"endOffset":63941,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":63947,"endOffset":64026,"count":6}],"isBlockCoverage":true},{"functionName":"ExportSpecifier","ranges":[{"startOffset":64032,"endOffset":64187,"count":0}],"isBlockCoverage":false},{"functionName":"MetaProperty","ranges":[{"startOffset":64193,"endOffset":64285,"count":0}],"isBlockCoverage":false},{"functionName":"defaultOptions","ranges":[{"startOffset":65874,"endOffset":66193,"count":8}],"isBlockCoverage":true},{"functionName":"updateDeeply","ranges":[{"startOffset":66350,"endOffset":67159,"count":16},{"startOffset":66706,"endOffset":67138,"count":752},{"startOffset":66850,"endOffset":67066,"count":8},{"startOffset":66899,"endOffset":66970,"count":0},{"startOffset":67066,"endOffset":67122,"count":744}],"isBlockCoverage":true},{"functionName":"isHashObject","ranges":[{"startOffset":66508,"endOffset":66672,"count":760},{"startOffset":66580,"endOffset":66606,"count":712},{"startOffset":66607,"endOffset":66635,"count":704},{"startOffset":66636,"endOffset":66665,"count":8}],"isBlockCoverage":true},{"functionName":"analyze","ranges":[{"startOffset":68592,"endOffset":68976,"count":8}],"isBlockCoverage":true}]},{"scriptId":"246","url":"file:///home/runner/work/deluge/deluge/node_modules/estraverse/estraverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26957,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":1478,"endOffset":26909,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":1633,"endOffset":2029,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":2109,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"Reference","ranges":[{"startOffset":9644,"endOffset":9737,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":9773,"endOffset":9841,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":9877,"endOffset":10099,"count":0}],"isBlockCoverage":false},{"functionName":"Element","ranges":[{"startOffset":10106,"endOffset":10255,"count":644}],"isBlockCoverage":true},{"functionName":"Controller","ranges":[{"startOffset":10261,"endOffset":10286,"count":128}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":10392,"endOffset":11154,"count":0}],"isBlockCoverage":false},{"functionName":"Controller.type","ranges":[{"startOffset":11236,"endOffset":11339,"count":0}],"isBlockCoverage":false},{"functionName":"parents","ranges":[{"startOffset":11428,"endOffset":11687,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":11764,"endOffset":11826,"count":0}],"isBlockCoverage":false},{"functionName":"__execute","ranges":[{"startOffset":11866,"endOffset":12271,"count":1032},{"startOffset":12087,"endOffset":12206,"count":516}],"isBlockCoverage":true},{"functionName":"notify","ranges":[{"startOffset":12355,"endOffset":12413,"count":332}],"isBlockCoverage":true},{"functionName":"Controller.skip","ranges":[{"startOffset":12500,"endOffset":12546,"count":332}],"isBlockCoverage":true},{"functionName":"Controller.break","ranges":[{"startOffset":12621,"endOffset":12668,"count":0}],"isBlockCoverage":false},{"functionName":"Controller.remove","ranges":[{"startOffset":12736,"endOffset":12784,"count":0}],"isBlockCoverage":false},{"functionName":"Controller.__initialize","ranges":[{"startOffset":12827,"endOffset":13436,"count":128},{"startOffset":13110,"endOffset":13164,"count":0}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":13443,"endOffset":13610,"count":388},{"startOffset":13493,"endOffset":13530,"count":0}],"isBlockCoverage":true},{"functionName":"isProperty","ranges":[{"startOffset":13616,"endOffset":13774,"count":316},{"startOffset":13744,"endOffset":13767,"count":0}],"isBlockCoverage":true},{"functionName":"candidateExistsInLeaveList","ranges":[{"startOffset":13782,"endOffset":14031,"count":388},{"startOffset":13898,"endOffset":14003,"count":888},{"startOffset":13949,"endOffset":13993,"count":0}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":14069,"endOffset":17488,"count":128},{"startOffset":14696,"endOffset":17482,"count":1032},{"startOffset":14775,"endOffset":15032,"count":516},{"startOffset":14945,"endOffset":14992,"count":0},{"startOffset":15032,"endOffset":17472,"count":516},{"startOffset":15191,"endOffset":15238,"count":0},{"startOffset":15365,"endOffset":15380,"count":184},{"startOffset":15382,"endOffset":15431,"count":332},{"startOffset":15431,"endOffset":15507,"count":184},{"startOffset":15507,"endOffset":15522,"count":0},{"startOffset":15609,"endOffset":15862,"count":0},{"startOffset":15862,"endOffset":15953,"count":184},{"startOffset":15953,"endOffset":17458,"count":256},{"startOffset":16081,"endOffset":16138,"count":36},{"startOffset":16138,"endOffset":16190,"count":220},{"startOffset":16190,"endOffset":17165,"count":148},{"startOffset":16298,"endOffset":17143,"count":316},{"startOffset":16354,"endOffset":16427,"count":0},{"startOffset":16521,"endOffset":16592,"count":0},{"startOffset":16669,"endOffset":16811,"count":0},{"startOffset":16986,"endOffset":17065,"count":0},{"startOffset":17165,"endOffset":17440,"count":72},{"startOffset":17274,"endOffset":17337,"count":0}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":17526,"endOffset":22511,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":22518,"endOffset":22652,"count":128}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":22658,"endOffset":22790,"count":0}],"isBlockCoverage":false},{"functionName":"extendCommentRange","ranges":[{"startOffset":22796,"endOffset":23330,"count":0}],"isBlockCoverage":false},{"functionName":"attachComments","ranges":[{"startOffset":23336,"endOffset":26562,"count":0}],"isBlockCoverage":false},{"functionName":"exports.cloneEnvironment","ranges":[{"startOffset":26852,"endOffset":26885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///home/runner/work/deluge/deluge/node_modules/esrecurse/esrecurse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4230,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1332,"endOffset":4189,"count":1}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":1414,"endOffset":1581,"count":1984},{"startOffset":1464,"endOffset":1501,"count":0}],"isBlockCoverage":true},{"functionName":"isProperty","ranges":[{"startOffset":1587,"endOffset":1767,"count":0}],"isBlockCoverage":false},{"functionName":"Visitor","ranges":[{"startOffset":1773,"endOffset":2281,"count":270},{"startOffset":1836,"endOffset":1841,"count":0},{"startOffset":2040,"endOffset":2064,"count":0},{"startOffset":2112,"endOffset":2166,"count":0}],"isBlockCoverage":true},{"functionName":"Visitor.visitChildren","ranges":[{"startOffset":2519,"endOffset":3595,"count":1274},{"startOffset":2613,"endOffset":2644,"count":0},{"startOffset":2671,"endOffset":2700,"count":0},{"startOffset":2776,"endOffset":2975,"count":0},{"startOffset":3032,"endOffset":3589,"count":1571},{"startOffset":3096,"endOffset":3579,"count":1527},{"startOffset":3140,"endOffset":3482,"count":592},{"startOffset":3206,"endOffset":3464,"count":1049},{"startOffset":3297,"endOffset":3329,"count":0},{"startOffset":3482,"endOffset":3565,"count":935}],"isBlockCoverage":true},{"functionName":"Visitor.visit","ranges":[{"startOffset":3656,"endOffset":3964,"count":3174},{"startOffset":3719,"endOffset":3750,"count":2},{"startOffset":3750,"endOffset":3777,"count":3172},{"startOffset":3777,"endOffset":3806,"count":0},{"startOffset":3842,"endOffset":3924,"count":2384},{"startOffset":3924,"endOffset":3963,"count":788}],"isBlockCoverage":true},{"functionName":"exports.visit","ranges":[{"startOffset":4075,"endOffset":4186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"248","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-visitor-keys/dist/eslint-visitor-keys.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7107,"count":1},{"startOffset":5222,"endOffset":5256,"count":87}],"isBlockCoverage":true},{"functionName":"filterKey","ranges":[{"startOffset":5766,"endOffset":5847,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":6002,"endOffset":6076,"count":0}],"isBlockCoverage":false},{"functionName":"unionWith","ranges":[{"startOffset":6362,"endOffset":6977,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///home/runner/work/deluge/deluge/node_modules/espree/dist/espree.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31227,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":192,"endOffset":306,"count":1},{"startOffset":263,"endOffset":280,"count":0},{"startOffset":281,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"_interopNamespace","ranges":[{"startOffset":308,"endOffset":821,"count":2},{"startOffset":376,"endOffset":820,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":454,"endOffset":760,"count":0}],"isBlockCoverage":false},{"functionName":"convertTemplatePart","ranges":[{"startOffset":2205,"endOffset":2808,"count":14}],"isBlockCoverage":true},{"functionName":"TokenTranslator","ranges":[{"startOffset":3087,"endOffset":3367,"count":12}],"isBlockCoverage":true},{"functionName":"translate","ranges":[{"startOffset":3847,"endOffset":6572,"count":7298},{"startOffset":3976,"endOffset":4337,"count":2338},{"startOffset":4113,"endOffset":4172,"count":4},{"startOffset":4267,"endOffset":4326,"count":17},{"startOffset":4337,"endOffset":6543,"count":4960},{"startOffset":4370,"endOffset":4432,"count":0},{"startOffset":4459,"endOffset":4479,"count":4953},{"startOffset":4480,"endOffset":4518,"count":4645},{"startOffset":4519,"endOffset":4540,"count":3863},{"startOffset":4541,"endOffset":4579,"count":3081},{"startOffset":4580,"endOffset":4601,"count":2785},{"startOffset":4602,"endOffset":4637,"count":2489},{"startOffset":4638,"endOffset":4661,"count":1692},{"startOffset":4662,"endOffset":4699,"count":1668},{"startOffset":4700,"endOffset":4723,"count":1649},{"startOffset":4724,"endOffset":4764,"count":1646},{"startOffset":4765,"endOffset":4788,"count":1622},{"startOffset":4789,"endOffset":4826,"count":1613},{"startOffset":4827,"endOffset":4853,"count":1509},{"startOffset":4854,"endOffset":4892,"count":1509},{"startOffset":4893,"endOffset":4916,"count":1504},{"startOffset":4917,"endOffset":4958,"count":1504},{"startOffset":4959,"endOffset":4980,"count":1504},{"startOffset":4981,"endOffset":5024,"count":1478},{"startOffset":5025,"endOffset":5074,"count":1478},{"startOffset":5057,"endOffset":5073,"count":84},{"startOffset":5075,"endOffset":5108,"count":1394},{"startOffset":5110,"endOffset":5233,"count":3833},{"startOffset":5233,"endOffset":6543,"count":1127},{"startOffset":5264,"endOffset":5321,"count":0},{"startOffset":5390,"endOffset":5441,"count":0},{"startOffset":5465,"endOffset":5761,"count":863},{"startOffset":5507,"endOffset":5534,"count":849},{"startOffset":5536,"endOffset":5595,"count":28},{"startOffset":5595,"endOffset":5751,"count":835},{"startOffset":5630,"endOffset":5686,"count":14},{"startOffset":5686,"endOffset":5751,"count":821},{"startOffset":5761,"endOffset":6543,"count":264},{"startOffset":5788,"endOffset":5907,"count":110},{"startOffset":5907,"endOffset":6543,"count":154},{"startOffset":5937,"endOffset":6232,"count":150},{"startOffset":5981,"endOffset":6089,"count":0},{"startOffset":6232,"endOffset":6543,"count":4}],"isBlockCoverage":true},{"functionName":"onToken","ranges":[{"startOffset":6778,"endOffset":8983,"count":7352},{"startOffset":7305,"endOffset":7502,"count":12},{"startOffset":7386,"endOffset":7471,"count":9},{"startOffset":7502,"endOffset":7545,"count":7340},{"startOffset":7545,"endOffset":7984,"count":10},{"startOffset":7655,"endOffset":7781,"count":0},{"startOffset":7895,"endOffset":7953,"count":5},{"startOffset":7984,"endOffset":8029,"count":7330},{"startOffset":8029,"endOffset":8139,"count":9},{"startOffset":8139,"endOffset":8178,"count":7321},{"startOffset":8178,"endOffset":8483,"count":305},{"startOffset":8288,"endOffset":8373,"count":36},{"startOffset":8483,"endOffset":8523,"count":7016},{"startOffset":8523,"endOffset":8559,"count":7002},{"startOffset":8561,"endOffset":8779,"count":14},{"startOffset":8597,"endOffset":8708,"count":9},{"startOffset":8779,"endOffset":8811,"count":7002},{"startOffset":8811,"endOffset":8925,"count":251},{"startOffset":8925,"endOffset":8982,"count":7002}],"isBlockCoverage":true},{"functionName":"translateTemplateTokens","ranges":[{"startOffset":7119,"endOffset":7268,"count":14}],"isBlockCoverage":true},{"functionName":"getLatestEcmaVersion","ranges":[{"startOffset":9572,"endOffset":9669,"count":1}],"isBlockCoverage":true},{"functionName":"getSupportedEcmaVersions","ranges":[{"startOffset":9817,"endOffset":9892,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeEcmaVersion","ranges":[{"startOffset":10160,"endOffset":10802,"count":12},{"startOffset":10253,"endOffset":10277,"count":0},{"startOffset":10331,"endOffset":10462,"count":0},{"startOffset":10642,"endOffset":10674,"count":0},{"startOffset":10723,"endOffset":10779,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSourceType","ranges":[{"startOffset":11005,"endOffset":11269,"count":12},{"startOffset":11153,"endOffset":11268,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":11464,"endOffset":12828,"count":12},{"startOffset":11772,"endOffset":11973,"count":0},{"startOffset":12027,"endOffset":12072,"count":0},{"startOffset":12074,"endOffset":12166,"count":0},{"startOffset":12211,"endOffset":12247,"count":0},{"startOffset":12303,"endOffset":12308,"count":0},{"startOffset":12483,"endOffset":12643,"count":0}],"isBlockCoverage":true},{"functionName":"convertAcornCommentToEsprimaComment","ranges":[{"startOffset":13530,"endOffset":14168,"count":102},{"startOffset":13656,"endOffset":13687,"count":87},{"startOffset":13687,"endOffset":13806,"count":15},{"startOffset":13736,"endOffset":13770,"count":0}],"isBlockCoverage":true},{"functionName":"espree","ranges":[{"startOffset":14183,"endOffset":24833,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14189,"endOffset":24833,"count":1}],"isBlockCoverage":true},{"functionName":"Espree","ranges":[{"startOffset":14407,"endOffset":17487,"count":12},{"startOffset":14492,"endOffset":14534,"count":0},{"startOffset":14576,"endOffset":14604,"count":0},{"startOffset":14606,"endOffset":14658,"count":0},{"startOffset":14883,"endOffset":14888,"count":0},{"startOffset":15044,"endOffset":15050,"count":0},{"startOffset":15464,"endOffset":15485,"count":0},{"startOffset":15532,"endOffset":15538,"count":0},{"startOffset":15596,"endOffset":15602,"count":0},{"startOffset":15671,"endOffset":15698,"count":0}],"isBlockCoverage":true},{"functionName":"onToken","ranges":[{"startOffset":16483,"endOffset":16860,"count":7352},{"startOffset":16770,"endOffset":16842,"count":7340}],"isBlockCoverage":true},{"functionName":"onComment","ranges":[{"startOffset":16926,"endOffset":17237,"count":102}],"isBlockCoverage":true},{"functionName":"tokenize","ranges":[{"startOffset":17497,"endOffset":17892,"count":0}],"isBlockCoverage":false},{"functionName":"finishNode","ranges":[{"startOffset":17902,"endOffset":18042,"count":6176}],"isBlockCoverage":true},{"functionName":"finishNodeAt","ranges":[{"startOffset":18052,"endOffset":18196,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":18206,"endOffset":21295,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20631,"endOffset":21254,"count":14},{"startOffset":20747,"endOffset":20750,"count":5},{"startOffset":20751,"endOffset":20754,"count":9}],"isBlockCoverage":true},{"functionName":"parseTopLevel","ranges":[{"startOffset":21305,"endOffset":21477,"count":12},{"startOffset":21370,"endOffset":21421,"count":0}],"isBlockCoverage":true},{"functionName":"raise","ranges":[{"startOffset":21774,"endOffset":22085,"count":0}],"isBlockCoverage":false},{"functionName":"raiseRecoverable","ranges":[{"startOffset":22382,"endOffset":22462,"count":0}],"isBlockCoverage":false},{"functionName":"unexpected","ranges":[{"startOffset":22710,"endOffset":23368,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_readString","ranges":[{"startOffset":23779,"endOffset":24046,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24264,"endOffset":24824,"count":6176},{"startOffset":24506,"endOffset":24656,"count":14},{"startOffset":24707,"endOffset":24727,"count":224},{"startOffset":24729,"endOffset":24786,"count":224}],"isBlockCoverage":true},{"functionName":"get regular","ranges":[{"startOffset":28195,"endOffset":28364,"count":0}],"isBlockCoverage":false},{"functionName":"get jsx","ranges":[{"startOffset":28371,"endOffset":28551,"count":12},{"startOffset":28415,"endOffset":28519,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":28558,"endOffset":28767,"count":12},{"startOffset":28746,"endOffset":28760,"count":0}],"isBlockCoverage":true},{"functionName":"tokenize","ranges":[{"startOffset":29201,"endOffset":29520,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":29937,"endOffset":30058,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30309,"endOffset":30363,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30450,"endOffset":30834,"count":1},{"startOffset":30619,"endOffset":30729,"count":87}],"isBlockCoverage":true}]},{"scriptId":"250","url":"file:///home/runner/work/deluge/deluge/node_modules/acorn/dist/acorn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217748,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":299,"count":1},{"startOffset":112,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":308,"endOffset":217744,"count":1},{"startOffset":20022,"endOffset":20108,"count":0},{"startOffset":20141,"endOffset":20222,"count":0},{"startOffset":155074,"endOffset":155146,"count":5}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":11904,"endOffset":12142,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":12210,"endOffset":12620,"count":7439},{"startOffset":12272,"endOffset":12294,"count":3529},{"startOffset":12294,"endOffset":12314,"count":3910},{"startOffset":12314,"endOffset":12329,"count":133},{"startOffset":12329,"endOffset":12349,"count":3777},{"startOffset":12349,"endOffset":12371,"count":330},{"startOffset":12371,"endOffset":12392,"count":3447},{"startOffset":12392,"endOffset":12407,"count":2824},{"startOffset":12407,"endOffset":12514,"count":623},{"startOffset":12454,"endOffset":12512,"count":0},{"startOffset":12514,"endOffset":12619,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":12687,"endOffset":13208,"count":20972},{"startOffset":12748,"endOffset":12770,"count":3185},{"startOffset":12770,"endOffset":12790,"count":17787},{"startOffset":12790,"endOffset":12805,"count":37},{"startOffset":12805,"endOffset":12825,"count":17750},{"startOffset":12825,"endOffset":12841,"count":16},{"startOffset":12841,"endOffset":12861,"count":17734},{"startOffset":12861,"endOffset":12876,"count":639},{"startOffset":12876,"endOffset":12896,"count":17095},{"startOffset":12896,"endOffset":12918,"count":289},{"startOffset":12918,"endOffset":12939,"count":16806},{"startOffset":12939,"endOffset":12954,"count":16801},{"startOffset":12954,"endOffset":13056,"count":5},{"startOffset":13001,"endOffset":13054,"count":0},{"startOffset":13056,"endOffset":13204,"count":0}],"isBlockCoverage":true},{"functionName":"TokenType","ranges":[{"startOffset":14225,"endOffset":14646,"count":81},{"startOffset":14286,"endOffset":14296,"count":10},{"startOffset":14603,"endOffset":14610,"count":66}],"isBlockCoverage":true},{"functionName":"binop","ranges":[{"startOffset":14651,"endOffset":14747,"count":12}],"isBlockCoverage":true},{"functionName":"kw","ranges":[{"startOffset":14934,"endOffset":15096,"count":35},{"startOffset":14993,"endOffset":15006,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":19333,"endOffset":19439,"count":9722},{"startOffset":19383,"endOffset":19397,"count":9427},{"startOffset":19398,"endOffset":19416,"count":9427},{"startOffset":19417,"endOffset":19435,"count":9427}],"isBlockCoverage":true},{"functionName":"nextLineBreak","ranges":[{"startOffset":19443,"endOffset":19752,"count":367},{"startOffset":19511,"endOffset":19529,"count":0},{"startOffset":19568,"endOffset":19734,"count":7640},{"startOffset":19642,"endOffset":19728,"count":280},{"startOffset":19678,"endOffset":19710,"count":0},{"startOffset":19711,"endOffset":19718,"count":0},{"startOffset":19734,"endOffset":19751,"count":87}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20026,"endOffset":20107,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20145,"endOffset":20221,"count":0}],"isBlockCoverage":true},{"functionName":"wordsRegexp","ranges":[{"startOffset":20227,"endOffset":20324,"count":63}],"isBlockCoverage":true},{"functionName":"codePointToString","ranges":[{"startOffset":20328,"endOffset":20549,"count":0}],"isBlockCoverage":false},{"functionName":"Position","ranges":[{"startOffset":20773,"endOffset":20852,"count":14944}],"isBlockCoverage":true},{"functionName":"offset","ranges":[{"startOffset":20885,"endOffset":20962,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":20988,"endOffset":21139,"count":13578},{"startOffset":21104,"endOffset":21135,"count":0}],"isBlockCoverage":true},{"functionName":"getLineInfo","ranges":[{"startOffset":21414,"endOffset":21660,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":26784,"endOffset":27950,"count":12},{"startOffset":26877,"endOffset":26956,"count":216},{"startOffset":26920,"endOffset":26931,"count":96},{"startOffset":26932,"endOffset":26953,"count":120},{"startOffset":27000,"endOffset":27040,"count":0},{"startOffset":27079,"endOffset":27389,"count":0},{"startOffset":27428,"endOffset":27470,"count":0},{"startOffset":27517,"endOffset":27569,"count":0},{"startOffset":27703,"endOffset":27819,"count":0},{"startOffset":27862,"endOffset":27926,"count":0}],"isBlockCoverage":true},{"functionName":"options.onToken","ranges":[{"startOffset":27765,"endOffset":27812,"count":0}],"isBlockCoverage":false},{"functionName":"pushComment","ranges":[{"startOffset":27954,"endOffset":28392,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":28781,"endOffset":28917,"count":224},{"startOffset":28859,"endOffset":28872,"count":34},{"startOffset":28873,"endOffset":28876,"count":190},{"startOffset":28891,"endOffset":28908,"count":0}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":29361,"endOffset":32739,"count":12},{"startOffset":29569,"endOffset":29618,"count":0},{"startOffset":29747,"endOffset":29782,"count":0},{"startOffset":29960,"endOffset":29964,"count":0},{"startOffset":30514,"endOffset":30701,"count":0},{"startOffset":31700,"endOffset":31733,"count":0},{"startOffset":32250,"endOffset":32284,"count":0},{"startOffset":32292,"endOffset":32320,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":33143,"endOffset":33281,"count":12}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.inFunction.get","ranges":[{"startOffset":33322,"endOffset":33396,"count":135}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.inGenerator.get","ranges":[{"startOffset":33438,"endOffset":33557,"count":1260},{"startOffset":33512,"endOffset":33555,"count":0}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.inAsync.get","ranges":[{"startOffset":33595,"endOffset":33710,"count":1349},{"startOffset":33665,"endOffset":33708,"count":417}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.canAwait.get","ranges":[{"startOffset":33749,"endOffset":34149,"count":57},{"startOffset":33821,"endOffset":34042,"count":76},{"startOffset":33937,"endOffset":33953,"count":0},{"startOffset":33994,"endOffset":34036,"count":57},{"startOffset":34042,"endOffset":34102,"count":0},{"startOffset":34104,"endOffset":34145,"count":0}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.allowSuper.get","ranges":[{"startOffset":34190,"endOffset":34423,"count":8},{"startOffset":34360,"endOffset":34379,"count":0},{"startOffset":34380,"endOffset":34419,"count":0}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.allowDirectSuper.get","ranges":[{"startOffset":34470,"endOffset":34549,"count":5}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.treatFunctionsAsVar.get","ranges":[{"startOffset":34599,"endOffset":34674,"count":6}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.allowNewDotTarget.get","ranges":[{"startOffset":34722,"endOffset":34947,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inClassStaticBlock.get","ranges":[{"startOffset":34996,"endOffset":35086,"count":1260}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":35107,"endOffset":35344,"count":1},{"startOffset":35198,"endOffset":35232,"count":2},{"startOffset":35299,"endOffset":35325,"count":2}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":35364,"endOffset":35445,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":35477,"endOffset":35639,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":35663,"endOffset":35740,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.strictDirective","ranges":[{"startOffset":35960,"endOffset":36968,"count":23},{"startOffset":36016,"endOffset":36032,"count":0},{"startOffset":36274,"endOffset":36306,"count":0},{"startOffset":36326,"endOffset":36958,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.eat","ranges":[{"startOffset":37103,"endOffset":37228,"count":19407},{"startOffset":37148,"endOffset":37192,"count":3293},{"startOffset":37192,"endOffset":37224,"count":16114}],"isBlockCoverage":true},{"functionName":"pp$9.isContextual","ranges":[{"startOffset":37311,"endOffset":37413,"count":4843},{"startOffset":37366,"endOffset":37388,"count":2556},{"startOffset":37389,"endOffset":37409,"count":165}],"isBlockCoverage":true},{"functionName":"pp$9.eatContextual","ranges":[{"startOffset":37486,"endOffset":37590,"count":408},{"startOffset":37537,"endOffset":37553,"count":314},{"startOffset":37553,"endOffset":37589,"count":94}],"isBlockCoverage":true},{"functionName":"pp$9.expectContextual","ranges":[{"startOffset":37683,"endOffset":37761,"count":41},{"startOffset":37735,"endOffset":37757,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.canInsertSemicolon","ranges":[{"startOffset":37864,"endOffset":38026,"count":1687},{"startOffset":37914,"endOffset":37951,"count":1684},{"startOffset":37952,"endOffset":38022,"count":1431}],"isBlockCoverage":true},{"functionName":"pp$9.insertSemicolon","ranges":[{"startOffset":38054,"endOffset":38258,"count":766},{"startOffset":38102,"endOffset":38254,"count":641},{"startOffset":38156,"endOffset":38230,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.semicolon","ranges":[{"startOffset":38407,"endOffset":38506,"count":632},{"startOffset":38452,"endOffset":38478,"count":631},{"startOffset":38480,"endOffset":38502,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.afterTrailingComma","ranges":[{"startOffset":38537,"endOffset":38794,"count":398},{"startOffset":38597,"endOffset":38790,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.expect","ranges":[{"startOffset":38922,"endOffset":38983,"count":930},{"startOffset":38958,"endOffset":38978,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.unexpected","ranges":[{"startOffset":39045,"endOffset":39132,"count":0}],"isBlockCoverage":false},{"functionName":"DestructuringErrors","ranges":[{"startOffset":39163,"endOffset":39344,"count":1460}],"isBlockCoverage":true},{"functionName":"pp$9.checkPatternErrors","ranges":[{"startOffset":39375,"endOffset":39869,"count":68},{"startOffset":39453,"endOffset":39463,"count":0},{"startOffset":39521,"endOffset":39634,"count":0},{"startOffset":39661,"endOffset":39705,"count":0},{"startOffset":39771,"endOffset":39865,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.checkExpressionErrors","ranges":[{"startOffset":39903,"endOffset":40450,"count":6112},{"startOffset":39981,"endOffset":39997,"count":160},{"startOffset":39997,"endOffset":40141,"count":5952},{"startOffset":40141,"endOffset":40192,"count":4642},{"startOffset":40192,"endOffset":40229,"count":1310},{"startOffset":40229,"endOffset":40336,"count":0},{"startOffset":40336,"endOffset":40369,"count":1310},{"startOffset":40369,"endOffset":40446,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.checkYieldAwaitInDefaultParams","ranges":[{"startOffset":40493,"endOffset":40774,"count":188},{"startOffset":40528,"endOffset":40580,"count":0},{"startOffset":40588,"endOffset":40664,"count":0},{"startOffset":40694,"endOffset":40770,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.isSimpleAssignTarget","ranges":[{"startOffset":40807,"endOffset":41010,"count":51},{"startOffset":40879,"endOffset":40932,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseTopLevel","ranges":[{"startOffset":41353,"endOffset":42015,"count":12},{"startOffset":41487,"endOffset":41581,"count":74},{"startOffset":41705,"endOffset":41857,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.isLet","ranges":[{"startOffset":42100,"endOffset":43223,"count":784},{"startOffset":42187,"endOffset":42203,"count":767},{"startOffset":42203,"endOffset":42693,"count":17},{"startOffset":42694,"endOffset":42731,"count":17},{"startOffset":42713,"endOffset":42731,"count":0},{"startOffset":42733,"endOffset":42748,"count":0},{"startOffset":42748,"endOffset":42786,"count":17},{"startOffset":42786,"endOffset":42802,"count":0},{"startOffset":42802,"endOffset":42828,"count":17},{"startOffset":42828,"endOffset":42843,"count":0},{"startOffset":42843,"endOffset":43202,"count":17},{"startOffset":42994,"endOffset":43004,"count":87},{"startOffset":43048,"endOffset":43066,"count":0},{"startOffset":43068,"endOffset":43083,"count":0},{"startOffset":43202,"endOffset":43222,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.isAsyncFunction","ranges":[{"startOffset":43386,"endOffset":43900,"count":338},{"startOffset":43490,"endOffset":43747,"count":0},{"startOffset":43748,"endOffset":43896,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseStatement","ranges":[{"startOffset":44184,"endOffset":47836,"count":781},{"startOffset":44315,"endOffset":44374,"count":14},{"startOffset":44560,"endOffset":44580,"count":0},{"startOffset":44581,"endOffset":44669,"count":0},{"startOffset":44674,"endOffset":44738,"count":0},{"startOffset":44743,"endOffset":44795,"count":0},{"startOffset":44800,"endOffset":44854,"count":3},{"startOffset":44859,"endOffset":45277,"count":6},{"startOffset":45096,"endOffset":45155,"count":0},{"startOffset":45157,"endOffset":45189,"count":0},{"startOffset":45191,"endOffset":45213,"count":0},{"startOffset":45282,"endOffset":45385,"count":9},{"startOffset":45322,"endOffset":45344,"count":0},{"startOffset":45390,"endOffset":45442,"count":70},{"startOffset":45447,"endOffset":45507,"count":135},{"startOffset":45512,"endOffset":45572,"count":0},{"startOffset":45577,"endOffset":45635,"count":9},{"startOffset":45640,"endOffset":45694,"count":1},{"startOffset":45699,"endOffset":45719,"count":106},{"startOffset":45720,"endOffset":45879,"count":120},{"startOffset":45757,"endOffset":45770,"count":106},{"startOffset":45790,"endOffset":45807,"count":0},{"startOffset":45809,"endOffset":45831,"count":0},{"startOffset":45884,"endOffset":45942,"count":0},{"startOffset":45947,"endOffset":46003,"count":0},{"startOffset":46008,"endOffset":46063,"count":39},{"startOffset":46068,"endOffset":46124,"count":0},{"startOffset":46129,"endOffset":46150,"count":15},{"startOffset":46155,"endOffset":46998,"count":51},{"startOffset":46251,"endOffset":46580,"count":36},{"startOffset":46502,"endOffset":46572,"count":0},{"startOffset":46670,"endOffset":46755,"count":0},{"startOffset":46794,"endOffset":46888,"count":0},{"startOffset":46940,"endOffset":46964,"count":36},{"startOffset":46965,"endOffset":46998,"count":15},{"startOffset":47341,"endOffset":47826,"count":338},{"startOffset":47384,"endOffset":47523,"count":0},{"startOffset":47627,"endOffset":47656,"count":187},{"startOffset":47657,"endOffset":47683,"count":0},{"startOffset":47693,"endOffset":47762,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseBreakContinueStatement","ranges":[{"startOffset":47876,"endOffset":48727,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDebuggerStatement","ranges":[{"startOffset":48762,"endOffset":48875,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDoStatement","ranges":[{"startOffset":48904,"endOffset":49281,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseForStatement","ranges":[{"startOffset":49742,"endOffset":51885,"count":3},{"startOffset":49874,"endOffset":49893,"count":0},{"startOffset":50026,"endOffset":50126,"count":0},{"startOffset":50294,"endOffset":50306,"count":0},{"startOffset":50522,"endOffset":50557,"count":0},{"startOffset":50559,"endOffset":50819,"count":0},{"startOffset":50844,"endOffset":50873,"count":0},{"startOffset":50920,"endOffset":51104,"count":0},{"startOffset":51105,"endOffset":51111,"count":0},{"startOffset":51172,"endOffset":51243,"count":0},{"startOffset":51245,"endOffset":51884,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseFunctionStatement","ranges":[{"startOffset":51920,"endOffset":52108,"count":6},{"startOffset":52062,"endOffset":52086,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseIfStatement","ranges":[{"startOffset":52137,"endOffset":52473,"count":70},{"startOffset":52386,"endOffset":52413,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseReturnStatement","ranges":[{"startOffset":52506,"endOffset":53051,"count":135},{"startOffset":52548,"endOffset":52591,"count":0},{"startOffset":52599,"endOffset":52658,"count":0},{"startOffset":52899,"endOffset":52924,"count":10},{"startOffset":52924,"endOffset":52995,"count":125}],"isBlockCoverage":true},{"functionName":"pp$8.parseSwitchStatement","ranges":[{"startOffset":53084,"endOffset":54406,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseThrowStatement","ranges":[{"startOffset":54438,"endOffset":54733,"count":9},{"startOffset":54549,"endOffset":54612,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseTryStatement","ranges":[{"startOffset":54854,"endOffset":55891,"count":1},{"startOffset":55240,"endOffset":55243,"count":0},{"startOffset":55317,"endOffset":55331,"count":0},{"startOffset":55378,"endOffset":55516,"count":0},{"startOffset":55700,"endOffset":55719,"count":0},{"startOffset":55750,"endOffset":55768,"count":0},{"startOffset":55776,"endOffset":55838,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseVarStatement","ranges":[{"startOffset":55921,"endOffset":56080,"count":120}],"isBlockCoverage":true},{"functionName":"pp$8.parseWhileStatement","ranges":[{"startOffset":56112,"endOffset":56347,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWithStatement","ranges":[{"startOffset":56378,"endOffset":56631,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseEmptyStatement","ranges":[{"startOffset":56663,"endOffset":56751,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseLabeledStatement","ranges":[{"startOffset":56785,"endOffset":57770,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExpressionStatement","ranges":[{"startOffset":57807,"endOffset":57939,"count":338}],"isBlockCoverage":true},{"functionName":"pp$8.parseBlock","ranges":[{"startOffset":58118,"endOffset":58695,"count":231},{"startOffset":58214,"endOffset":58243,"count":1},{"startOffset":58271,"endOffset":58295,"count":192},{"startOffset":58381,"endOffset":58404,"count":40},{"startOffset":58446,"endOffset":58525,"count":623},{"startOffset":58546,"endOffset":58570,"count":0},{"startOffset":58619,"endOffset":58640,"count":40}],"isBlockCoverage":true},{"functionName":"pp$8.parseFor","ranges":[{"startOffset":58863,"endOffset":59300,"count":3},{"startOffset":58982,"endOffset":58988,"count":0},{"startOffset":59093,"endOffset":59099,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseForIn","ranges":[{"startOffset":59423,"endOffset":60256,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVar","ranges":[{"startOffset":60322,"endOffset":61141,"count":123},{"startOffset":60519,"endOffset":60578,"count":121},{"startOffset":60578,"endOffset":60994,"count":2},{"startOffset":60605,"endOffset":60698,"count":0},{"startOffset":60700,"endOffset":60736,"count":0},{"startOffset":60776,"endOffset":60845,"count":0},{"startOffset":60847,"endOffset":60953,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseVarId","ranges":[{"startOffset":61164,"endOffset":61314,"count":123},{"startOffset":61276,"endOffset":61286,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseFunction","ranges":[{"startOffset":61594,"endOffset":63325,"count":8},{"startOffset":61728,"endOffset":61772,"count":0},{"startOffset":61813,"endOffset":61852,"count":0},{"startOffset":61862,"endOffset":61884,"count":0},{"startOffset":62048,"endOffset":62634,"count":6},{"startOffset":62097,"endOffset":62126,"count":0},{"startOffset":62127,"endOffset":62133,"count":0},{"startOffset":62523,"endOffset":62540,"count":0},{"startOffset":62541,"endOffset":62554,"count":0},{"startOffset":62583,"endOffset":62593,"count":3},{"startOffset":62594,"endOffset":62608,"count":3},{"startOffset":62609,"endOffset":62624,"count":0},{"startOffset":62925,"endOffset":62993,"count":2},{"startOffset":62984,"endOffset":62990,"count":0},{"startOffset":63274,"endOffset":63297,"count":6},{"startOffset":63298,"endOffset":63320,"count":2}],"isBlockCoverage":true},{"functionName":"pp$8.parseFunctionParams","ranges":[{"startOffset":63357,"endOffset":63548,"count":8}],"isBlockCoverage":true},{"functionName":"pp$8.parseClass","ranges":[{"startOffset":63663,"endOffset":65003,"count":9},{"startOffset":64153,"endOffset":64783,"count":100},{"startOffset":64367,"endOffset":64515,"count":9},{"startOffset":64399,"endOffset":64472,"count":0},{"startOffset":64515,"endOffset":64769,"count":91},{"startOffset":64581,"endOffset":64632,"count":0},{"startOffset":64634,"endOffset":64769,"count":0},{"startOffset":64979,"endOffset":64998,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseClassElement","ranges":[{"startOffset":65033,"endOffset":67515,"count":100},{"startOffset":65100,"endOffset":65115,"count":0},{"startOffset":65364,"endOffset":65683,"count":4},{"startOffset":65456,"endOffset":65527,"count":0},{"startOffset":65569,"endOffset":65598,"count":0},{"startOffset":65634,"endOffset":65677,"count":0},{"startOffset":65781,"endOffset":65968,"count":16},{"startOffset":65825,"endOffset":65854,"count":0},{"startOffset":65920,"endOffset":65962,"count":0},{"startOffset":66007,"endOffset":66018,"count":0},{"startOffset":66047,"endOffset":66080,"count":0},{"startOffset":66110,"endOffset":66125,"count":84},{"startOffset":66127,"endOffset":66376,"count":84},{"startOffset":66199,"endOffset":66227,"count":52},{"startOffset":66229,"endOffset":66370,"count":32},{"startOffset":66314,"endOffset":66362,"count":0},{"startOffset":66421,"endOffset":66755,"count":0},{"startOffset":66894,"endOffset":66914,"count":0},{"startOffset":66915,"endOffset":66929,"count":0},{"startOffset":66930,"endOffset":66940,"count":0},{"startOffset":66983,"endOffset":67019,"count":96},{"startOffset":67065,"endOffset":67090,"count":9},{"startOffset":67213,"endOffset":67233,"count":9},{"startOffset":67235,"endOffset":67309,"count":0},{"startOffset":67342,"endOffset":67357,"count":9},{"startOffset":67358,"endOffset":67364,"count":91},{"startOffset":67447,"endOffset":67494,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.isClassElementNameStart","ranges":[{"startOffset":67551,"endOffset":67800,"count":52},{"startOffset":67610,"endOffset":67650,"count":0},{"startOffset":67651,"endOffset":67685,"count":0},{"startOffset":67686,"endOffset":67723,"count":0},{"startOffset":67724,"endOffset":67763,"count":0},{"startOffset":67764,"endOffset":67790,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseClassElementName","ranges":[{"startOffset":67834,"endOffset":68172,"count":100},{"startOffset":67895,"endOffset":68116,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseClassMethod","ranges":[{"startOffset":68201,"endOffset":69324,"count":100},{"startOffset":68353,"endOffset":68532,"count":9},{"startOffset":68378,"endOffset":68440,"count":0},{"startOffset":68460,"endOffset":68526,"count":0},{"startOffset":68532,"endOffset":68688,"count":91},{"startOffset":68556,"endOffset":68592,"count":4},{"startOffset":68594,"endOffset":68688,"count":0},{"startOffset":68849,"endOffset":68877,"count":32},{"startOffset":68885,"endOffset":68956,"count":0},{"startOffset":68987,"endOffset":69015,"count":0},{"startOffset":69023,"endOffset":69102,"count":0},{"startOffset":69133,"endOffset":69174,"count":0},{"startOffset":69182,"endOffset":69264,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseClassField","ranges":[{"startOffset":69352,"endOffset":70123,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassStaticBlock","ranges":[{"startOffset":70157,"endOffset":70552,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassId","ranges":[{"startOffset":70577,"endOffset":70874,"count":9},{"startOffset":70772,"endOffset":70870,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseClassSuper","ranges":[{"startOffset":70902,"endOffset":71013,"count":9},{"startOffset":70968,"endOffset":71001,"count":5},{"startOffset":71002,"endOffset":71008,"count":4}],"isBlockCoverage":true},{"functionName":"pp$8.enterClassBody","ranges":[{"startOffset":71040,"endOffset":71186,"count":9}],"isBlockCoverage":true},{"functionName":"pp$8.exitClassBody","ranges":[{"startOffset":71212,"endOffset":71766,"count":9},{"startOffset":71404,"endOffset":71436,"count":0},{"startOffset":71480,"endOffset":71762,"count":0}],"isBlockCoverage":true},{"functionName":"isPrivateNameConflicted","ranges":[{"startOffset":71771,"endOffset":72523,"count":0}],"isBlockCoverage":false},{"functionName":"checkKeyName","ranges":[{"startOffset":72527,"endOffset":72763,"count":100},{"startOffset":72700,"endOffset":72753,"count":91},{"startOffset":72732,"endOffset":72753,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseExport","ranges":[{"startOffset":72826,"endOffset":75529,"count":15},{"startOffset":72928,"endOffset":73438,"count":4},{"startOffset":73012,"endOffset":73150,"count":0},{"startOffset":73285,"endOffset":73307,"count":0},{"startOffset":73438,"endOffset":73475,"count":11},{"startOffset":73475,"endOffset":74187,"count":0},{"startOffset":74187,"endOffset":74626,"count":11},{"startOffset":74399,"endOffset":74468,"count":0},{"startOffset":74626,"endOffset":75466,"count":0},{"startOffset":75466,"endOffset":75528,"count":11}],"isBlockCoverage":true},{"functionName":"pp$8.checkExport","ranges":[{"startOffset":75553,"endOffset":75850,"count":11},{"startOffset":75602,"endOffset":75612,"count":0},{"startOffset":75701,"endOffset":75713,"count":0},{"startOffset":75754,"endOffset":75820,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.checkPatternExport","ranges":[{"startOffset":75881,"endOffset":76846,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkVariableExport","ranges":[{"startOffset":76878,"endOffset":77086,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.shouldParseExportStatement","ranges":[{"startOffset":77125,"endOffset":77354,"count":11},{"startOffset":77255,"endOffset":77296,"count":3},{"startOffset":77297,"endOffset":77318,"count":0},{"startOffset":77319,"endOffset":77350,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseExportSpecifiers","ranges":[{"startOffset":77443,"endOffset":78126,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImport","ranges":[{"startOffset":78183,"endOffset":78634,"count":36},{"startOffset":78275,"endOffset":78357,"count":0},{"startOffset":78528,"endOffset":78547,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.parseImportSpecifiers","ranges":[{"startOffset":78723,"endOffset":80085,"count":36},{"startOffset":78806,"endOffset":79113,"count":15},{"startOffset":79113,"endOffset":79150,"count":21},{"startOffset":79150,"endOffset":79434,"count":1},{"startOffset":79434,"endOffset":79506,"count":20},{"startOffset":79506,"endOffset":80064,"count":24},{"startOffset":79526,"endOffset":79634,"count":4},{"startOffset":79617,"endOffset":79626,"count":0},{"startOffset":79634,"endOffset":79658,"count":20},{"startOffset":79787,"endOffset":79838,"count":1},{"startOffset":79838,"endOffset":79940,"count":23},{"startOffset":80064,"endOffset":80084,"count":20}],"isBlockCoverage":true},{"functionName":"pp$8.parseModuleExportName","ranges":[{"startOffset":80119,"endOffset":80485,"count":24},{"startOffset":80204,"endOffset":80448,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.adaptDirectivePrologue","ranges":[{"startOffset":80595,"endOffset":80796,"count":202},{"startOffset":80660,"endOffset":80703,"count":199},{"startOffset":80710,"endOffset":80792,"count":0}],"isBlockCoverage":true},{"functionName":"pp$8.isDirectiveCandidate","ranges":[{"startOffset":80828,"endOffset":81189,"count":199},{"startOffset":80949,"endOffset":80997,"count":77},{"startOffset":80998,"endOffset":81053,"count":0},{"startOffset":81054,"endOffset":81179,"count":0}],"isBlockCoverage":true},{"functionName":"pp$7.toAssignable","ranges":[{"startOffset":81325,"endOffset":84229,"count":169},{"startOffset":81459,"endOffset":81641,"count":89},{"startOffset":81503,"endOffset":81527,"count":11},{"startOffset":81539,"endOffset":81627,"count":0},{"startOffset":81649,"endOffset":81670,"count":0},{"startOffset":81677,"endOffset":81697,"count":0},{"startOffset":81704,"endOffset":81729,"count":0},{"startOffset":81736,"endOffset":81769,"count":0},{"startOffset":81777,"endOffset":82625,"count":1},{"startOffset":81875,"endOffset":81933,"count":0},{"startOffset":82414,"endOffset":82510,"count":0},{"startOffset":82523,"endOffset":82601,"count":0},{"startOffset":82633,"endOffset":82882,"count":1},{"startOffset":82738,"endOffset":82818,"count":0},{"startOffset":82890,"endOffset":83115,"count":0},{"startOffset":83123,"endOffset":83394,"count":0},{"startOffset":83402,"endOffset":83693,"count":1},{"startOffset":83466,"endOffset":83559,"count":0},{"startOffset":83701,"endOffset":83825,"count":0},{"startOffset":83833,"endOffset":83966,"count":0},{"startOffset":83974,"endOffset":84032,"count":77},{"startOffset":84040,"endOffset":84103,"count":0},{"startOffset":84117,"endOffset":84209,"count":0}],"isBlockCoverage":true},{"functionName":"pp$7.toAssignableList","ranges":[{"startOffset":84314,"endOffset":84765,"count":104},{"startOffset":84411,"endOffset":84501,"count":78},{"startOffset":84515,"endOffset":84741,"count":68},{"startOffset":84594,"endOffset":84606,"count":0},{"startOffset":84607,"endOffset":84614,"count":0},{"startOffset":84615,"endOffset":84645,"count":0},{"startOffset":84646,"endOffset":84684,"count":0},{"startOffset":84694,"endOffset":84735,"count":0}],"isBlockCoverage":true},{"functionName":"pp$7.parseSpread","ranges":[{"startOffset":84818,"endOffset":85030,"count":2}],"isBlockCoverage":true},{"functionName":"pp$7.parseRestBinding","ranges":[{"startOffset":85059,"endOffset":85392,"count":2},{"startOffset":85234,"endOffset":85263,"count":0},{"startOffset":85271,"endOffset":85293,"count":0}],"isBlockCoverage":true},{"functionName":"pp$7.parseBindingAtom","ranges":[{"startOffset":85460,"endOffset":85867,"count":223},{"startOffset":85547,"endOffset":85757,"count":0},{"startOffset":85765,"endOffset":85820,"count":8},{"startOffset":85834,"endOffset":85866,"count":215}],"isBlockCoverage":true},{"functionName":"pp$7.parseBindingList","ranges":[{"startOffset":85896,"endOffset":86761,"count":120},{"startOffset":86008,"endOffset":86741,"count":99},{"startOffset":86027,"endOffset":86045,"count":65},{"startOffset":86045,"endOffset":86088,"count":34},{"startOffset":86110,"endOffset":86140,"count":0},{"startOffset":86142,"endOffset":86176,"count":0},{"startOffset":86240,"endOffset":86263,"count":0},{"startOffset":86305,"endOffset":86584,"count":2},{"startOffset":86458,"endOffset":86534,"count":0},{"startOffset":86584,"endOffset":86735,"count":97}],"isBlockCoverage":true},{"functionName":"pp$7.parseBindingListItem","ranges":[{"startOffset":86794,"endOffset":86832,"count":99}],"isBlockCoverage":true},{"functionName":"pp$7.parseMaybeDefault","ranges":[{"startOffset":86925,"endOffset":87259,"count":126},{"startOffset":86978,"endOffset":87004,"count":97},{"startOffset":87069,"endOffset":87084,"count":92},{"startOffset":87084,"endOffset":87258,"count":34}],"isBlockCoverage":true},{"functionName":"pp$7.checkLValSimple","ranges":[{"startOffset":90273,"endOffset":91738,"count":504},{"startOffset":90351,"endOffset":90375,"count":29},{"startOffset":90451,"endOffset":91162,"count":423},{"startOffset":90549,"endOffset":90660,"count":0},{"startOffset":90679,"endOffset":91150,"count":387},{"startOffset":90722,"endOffset":90744,"count":198},{"startOffset":90756,"endOffset":90841,"count":0},{"startOffset":90868,"endOffset":91042,"count":177},{"startOffset":90929,"endOffset":90990,"count":0},{"startOffset":91085,"endOffset":91142,"count":379},{"startOffset":91168,"endOffset":91297,"count":0},{"startOffset":91303,"endOffset":91425,"count":81},{"startOffset":91346,"endOffset":91413,"count":0},{"startOffset":91431,"endOffset":91633,"count":0},{"startOffset":91639,"endOffset":91728,"count":0}],"isBlockCoverage":true},{"functionName":"pp$7.checkLValPattern","ranges":[{"startOffset":91767,"endOffset":92436,"count":421},{"startOffset":91845,"endOffset":91869,"count":88},{"startOffset":91900,"endOffset":92110,"count":9},{"startOffset":91993,"endOffset":92098,"count":32},{"startOffset":92116,"endOffset":92351,"count":0},{"startOffset":92357,"endOffset":92426,"count":412}],"isBlockCoverage":true},{"functionName":"pp$7.checkLValInnerPattern","ranges":[{"startOffset":92470,"endOffset":93060,"count":239},{"startOffset":92548,"endOffset":92572,"count":0},{"startOffset":92603,"endOffset":92756,"count":30},{"startOffset":92762,"endOffset":92866,"count":35},{"startOffset":92872,"endOffset":92974,"count":4},{"startOffset":92980,"endOffset":93050,"count":170}],"isBlockCoverage":true},{"functionName":"TokContext","ranges":[{"startOffset":93153,"endOffset":93387,"count":13}],"isBlockCoverage":true},{"functionName":"types.q_tmpl","ranges":[{"startOffset":93649,"endOffset":93698,"count":28}],"isBlockCoverage":true},{"functionName":"pp$6.initialContext","ranges":[{"startOffset":93989,"endOffset":94031,"count":12}],"isBlockCoverage":true},{"functionName":"pp$6.curContext","ranges":[{"startOffset":94054,"endOffset":94119,"count":15565}],"isBlockCoverage":true},{"functionName":"pp$6.braceIsBlock","ranges":[{"startOffset":94144,"endOffset":95135,"count":296},{"startOffset":94233,"endOffset":94259,"count":294},{"startOffset":94267,"endOffset":94282,"count":17},{"startOffset":94282,"endOffset":94318,"count":279},{"startOffset":94318,"endOffset":94373,"count":0},{"startOffset":94381,"endOffset":94406,"count":0},{"startOffset":94406,"endOffset":94602,"count":279},{"startOffset":94602,"endOffset":94650,"count":276},{"startOffset":94631,"endOffset":94650,"count":0},{"startOffset":94658,"endOffset":94730,"count":3},{"startOffset":94730,"endOffset":94794,"count":276},{"startOffset":94795,"endOffset":94822,"count":276},{"startOffset":94823,"endOffset":94853,"count":276},{"startOffset":94854,"endOffset":94883,"count":126},{"startOffset":94891,"endOffset":94906,"count":220},{"startOffset":94906,"endOffset":94950,"count":56},{"startOffset":94950,"endOffset":94984,"count":1},{"startOffset":94984,"endOffset":95049,"count":55},{"startOffset":95050,"endOffset":95078,"count":47},{"startOffset":95086,"endOffset":95102,"count":8},{"startOffset":95102,"endOffset":95134,"count":47}],"isBlockCoverage":true},{"functionName":"pp$6.inGeneratorContext","ranges":[{"startOffset":95166,"endOffset":95376,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.updateContext","ranges":[{"startOffset":95402,"endOffset":95682,"count":7364},{"startOffset":95478,"endOffset":95505,"count":863},{"startOffset":95513,"endOffset":95542,"count":13},{"startOffset":95542,"endOffset":95678,"count":7351},{"startOffset":95591,"endOffset":95623,"count":4549},{"startOffset":95623,"endOffset":95678,"count":2802}],"isBlockCoverage":true},{"functionName":"pp$6.overrideContext","ranges":[{"startOffset":95819,"endOffset":95947,"count":28},{"startOffset":95880,"endOffset":95943,"count":0}],"isBlockCoverage":true},{"functionName":"types$1.parenR.updateContext.types$1.braceR.updateContext","ranges":[{"startOffset":96055,"endOffset":96340,"count":1087},{"startOffset":96103,"endOffset":96154,"count":0},{"startOffset":96218,"endOffset":96259,"count":259},{"startOffset":96261,"endOffset":96300,"count":17}],"isBlockCoverage":true},{"functionName":"types$1.braceL.updateContext","ranges":[{"startOffset":96376,"endOffset":96511,"count":296},{"startOffset":96447,"endOffset":96461,"count":259},{"startOffset":96462,"endOffset":96476,"count":37}],"isBlockCoverage":true},{"functionName":"types$1.dollarBraceL.updateContext","ranges":[{"startOffset":96553,"endOffset":96635,"count":9}],"isBlockCoverage":true},{"functionName":"types$1.parenL.updateContext","ranges":[{"startOffset":96671,"endOffset":96936,"count":782},{"startOffset":96743,"endOffset":96771,"count":712},{"startOffset":96772,"endOffset":96801,"count":709},{"startOffset":96802,"endOffset":96832,"count":709},{"startOffset":96872,"endOffset":96886,"count":73},{"startOffset":96887,"endOffset":96901,"count":709}],"isBlockCoverage":true},{"functionName":"types$1.incDec.updateContext","ranges":[{"startOffset":96972,"endOffset":97026,"count":5}],"isBlockCoverage":true},{"functionName":"types$1._function.updateContext.types$1._class.updateContext","ranges":[{"startOffset":97096,"endOffset":97602,"count":17},{"startOffset":97145,"endOffset":97174,"count":2},{"startOffset":97175,"endOffset":97252,"count":2},{"startOffset":97214,"endOffset":97251,"count":0},{"startOffset":97253,"endOffset":97360,"count":2},{"startOffset":97361,"endOffset":97472,"count":2},{"startOffset":97434,"endOffset":97471,"count":0},{"startOffset":97480,"endOffset":97516,"count":2},{"startOffset":97516,"endOffset":97568,"count":15}],"isBlockCoverage":true},{"functionName":"types$1.backQuote.updateContext","ranges":[{"startOffset":97641,"endOffset":97813,"count":10},{"startOffset":97704,"endOffset":97779,"count":5}],"isBlockCoverage":true},{"functionName":"types$1.star.updateContext","ranges":[{"startOffset":97847,"endOffset":98149,"count":5},{"startOffset":97908,"endOffset":98116,"count":0}],"isBlockCoverage":true},{"functionName":"types$1.name.updateContext","ranges":[{"startOffset":98183,"endOffset":98484,"count":2338},{"startOffset":98296,"endOffset":98448,"count":1554},{"startOffset":98328,"endOffset":98348,"count":0},{"startOffset":98385,"endOffset":98413,"count":0},{"startOffset":98423,"endOffset":98442,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.checkPropClash","ranges":[{"startOffset":98870,"endOffset":100331,"count":52},{"startOffset":98999,"endOffset":99009,"count":3},{"startOffset":99009,"endOffset":99099,"count":49},{"startOffset":99081,"endOffset":99098,"count":37},{"startOffset":99107,"endOffset":99117,"count":33},{"startOffset":99117,"endOffset":99225,"count":16},{"startOffset":99230,"endOffset":99277,"count":0},{"startOffset":99282,"endOffset":99297,"count":0},{"startOffset":99303,"endOffset":99810,"count":16},{"startOffset":99402,"endOffset":99420,"count":0},{"startOffset":99422,"endOffset":99791,"count":0},{"startOffset":99810,"endOffset":100330,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseExpression","ranges":[{"startOffset":101114,"endOffset":101616,"count":572},{"startOffset":101323,"endOffset":101596,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseMaybeAssign","ranges":[{"startOffset":101739,"endOffset":104272,"count":1575},{"startOffset":101835,"endOffset":102065,"count":0},{"startOffset":102204,"endOffset":102494,"count":652},{"startOffset":102494,"endOffset":102600,"count":923},{"startOffset":102696,"endOffset":102725,"count":1524},{"startOffset":102727,"endOffset":102835,"count":900},{"startOffset":102936,"endOffset":102999,"count":32},{"startOffset":103028,"endOffset":103957,"count":112},{"startOffset":103163,"endOffset":103229,"count":88},{"startOffset":103265,"endOffset":103407,"count":1},{"startOffset":103480,"endOffset":103528,"count":0},{"startOffset":103627,"endOffset":103659,"count":88},{"startOffset":103659,"endOffset":103710,"count":24},{"startOffset":103836,"endOffset":103892,"count":0},{"startOffset":103957,"endOffset":104066,"count":1463},{"startOffset":103999,"endOffset":104060,"count":812},{"startOffset":104066,"endOffset":104096,"count":1463},{"startOffset":104096,"endOffset":104160,"count":5},{"startOffset":104160,"endOffset":104192,"count":1463},{"startOffset":104192,"endOffset":104252,"count":6},{"startOffset":104252,"endOffset":104271,"count":1463}],"isBlockCoverage":true},{"functionName":"pp$5.parseMaybeConditional","ranges":[{"startOffset":104357,"endOffset":104941,"count":1575},{"startOffset":104585,"endOffset":104600,"count":0},{"startOffset":104637,"endOffset":104921,"count":3},{"startOffset":104921,"endOffset":104940,"count":1572}],"isBlockCoverage":true},{"functionName":"pp$5.parseExprOps","ranges":[{"startOffset":105001,"endOffset":105408,"count":1575},{"startOffset":105246,"endOffset":105261,"count":0},{"startOffset":105340,"endOffset":105346,"count":104},{"startOffset":105347,"endOffset":105404,"count":1471}],"isBlockCoverage":true},{"functionName":"pp$5.parseExprOp","ranges":[{"startOffset":105769,"endOffset":107143,"count":1621},{"startOffset":105885,"endOffset":105927,"count":89},{"startOffset":105898,"endOffset":105926,"count":0},{"startOffset":105929,"endOffset":107123,"count":89},{"startOffset":105957,"endOffset":107117,"count":75},{"startOffset":106013,"endOffset":106048,"count":53},{"startOffset":106127,"endOffset":106394,"count":0},{"startOffset":106719,"endOffset":106730,"count":39},{"startOffset":106754,"endOffset":106787,"count":36},{"startOffset":106802,"endOffset":106874,"count":0},{"startOffset":106877,"endOffset":107025,"count":0},{"startOffset":107123,"endOffset":107142,"count":1546}],"isBlockCoverage":true},{"functionName":"pp$5.buildBinary","ranges":[{"startOffset":107167,"endOffset":107573,"count":75},{"startOffset":107268,"endOffset":107361,"count":0},{"startOffset":107526,"endOffset":107547,"count":36},{"startOffset":107548,"endOffset":107568,"count":39}],"isBlockCoverage":true},{"functionName":"pp$5.parseMaybeUnary","ranges":[{"startOffset":107655,"endOffset":109885,"count":1735},{"startOffset":107815,"endOffset":107831,"count":54},{"startOffset":107833,"endOffset":107902,"count":54},{"startOffset":107902,"endOffset":109589,"count":1681},{"startOffset":107930,"endOffset":108770,"count":31},{"startOffset":108240,"endOffset":108280,"count":0},{"startOffset":108338,"endOffset":108391,"count":0},{"startOffset":108401,"endOffset":108481,"count":0},{"startOffset":108524,"endOffset":108562,"count":0},{"startOffset":108572,"endOffset":108647,"count":0},{"startOffset":108722,"endOffset":108742,"count":0},{"startOffset":108770,"endOffset":109589,"count":1650},{"startOffset":108790,"endOffset":108824,"count":1565},{"startOffset":108826,"endOffset":109077,"count":0},{"startOffset":109219,"endOffset":109234,"count":0},{"startOffset":109266,"endOffset":109295,"count":5},{"startOffset":109297,"endOffset":109583,"count":5},{"startOffset":109638,"endOffset":109850,"count":0}],"isBlockCoverage":true},{"functionName":"isPrivateFieldAccess","ranges":[{"startOffset":109890,"endOffset":110117,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprSubscripts","ranges":[{"startOffset":110203,"endOffset":111040,"count":1655},{"startOffset":110420,"endOffset":110483,"count":87},{"startOffset":110491,"endOffset":110506,"count":60},{"startOffset":110506,"endOffset":110619,"count":1595},{"startOffset":110619,"endOffset":110656,"count":1432},{"startOffset":110658,"endOffset":111018,"count":251},{"startOffset":110730,"endOffset":110782,"count":0},{"startOffset":110851,"endOffset":110901,"count":0},{"startOffset":110966,"endOffset":111012,"count":0},{"startOffset":111018,"endOffset":111039,"count":1595}],"isBlockCoverage":true},{"functionName":"pp$5.parseSubscripts","ranges":[{"startOffset":111068,"endOffset":111966,"count":1646},{"startOffset":111209,"endOffset":111233,"count":900},{"startOffset":111234,"endOffset":111273,"count":18},{"startOffset":111274,"endOffset":111303,"count":18},{"startOffset":111304,"endOffset":111334,"count":18},{"startOffset":111335,"endOffset":111382,"count":18},{"startOffset":111435,"endOffset":111962,"count":2926},{"startOffset":111585,"endOffset":111612,"count":0},{"startOffset":111640,"endOffset":111685,"count":1298},{"startOffset":111687,"endOffset":111933,"count":1646},{"startOffset":111718,"endOffset":111902,"count":0},{"startOffset":111933,"endOffset":111962,"count":1280}],"isBlockCoverage":true},{"functionName":"pp$5.parseSubscript","ranges":[{"startOffset":111993,"endOffset":115026,"count":2926},{"startOffset":112229,"endOffset":112240,"count":51},{"startOffset":112242,"endOffset":112344,"count":0},{"startOffset":112410,"endOffset":112490,"count":2911},{"startOffset":112423,"endOffset":112454,"count":0},{"startOffset":112455,"endOffset":112489,"count":0},{"startOffset":112491,"endOffset":112515,"count":2911},{"startOffset":112517,"endOffset":113108,"count":812},{"startOffset":112620,"endOffset":112716,"count":15},{"startOffset":112716,"endOffset":112939,"count":797},{"startOffset":112758,"endOffset":112782,"count":0},{"startOffset":112784,"endOffset":112843,"count":0},{"startOffset":113108,"endOffset":115006,"count":2114},{"startOffset":113127,"endOffset":113154,"count":2063},{"startOffset":113156,"endOffset":114591,"count":486},{"startOffset":113540,"endOffset":113552,"count":18},{"startOffset":113553,"endOffset":113582,"count":18},{"startOffset":113583,"endOffset":113609,"count":18},{"startOffset":113611,"endOffset":114099,"count":18},{"startOffset":113770,"endOffset":113866,"count":0},{"startOffset":114099,"endOffset":114214,"count":468},{"startOffset":114250,"endOffset":114266,"count":350},{"startOffset":114312,"endOffset":114333,"count":468},{"startOffset":114484,"endOffset":114591,"count":468},{"startOffset":114591,"endOffset":115006,"count":1628},{"startOffset":114634,"endOffset":115006,"count":0},{"startOffset":115006,"endOffset":115025,"count":2908}],"isBlockCoverage":true},{"functionName":"pp$5.parseExprAtom","ranges":[{"startOffset":115274,"endOffset":119477,"count":1746},{"startOffset":115497,"endOffset":115519,"count":0},{"startOffset":115615,"endOffset":116312,"count":8},{"startOffset":115672,"endOffset":115735,"count":0},{"startOffset":115825,"endOffset":115850,"count":5},{"startOffset":115860,"endOffset":115937,"count":0},{"startOffset":116171,"endOffset":116204,"count":5},{"startOffset":116205,"endOffset":116236,"count":5},{"startOffset":116246,"endOffset":116268,"count":0},{"startOffset":116318,"endOffset":116440,"count":350},{"startOffset":116446,"endOffset":117568,"count":936},{"startOffset":116674,"endOffset":116703,"count":18},{"startOffset":116704,"endOffset":116734,"count":18},{"startOffset":116736,"endOffset":116886,"count":0},{"startOffset":116908,"endOffset":116937,"count":795},{"startOffset":116939,"endOffset":117552,"count":720},{"startOffset":116988,"endOffset":117084,"count":36},{"startOffset":117084,"endOffset":117149,"count":684},{"startOffset":117150,"endOffset":117179,"count":18},{"startOffset":117180,"endOffset":117195,"count":0},{"startOffset":117196,"endOffset":117286,"count":0},{"startOffset":117288,"endOffset":117544,"count":0},{"startOffset":117552,"endOffset":117568,"count":900},{"startOffset":117574,"endOffset":117752,"count":4},{"startOffset":117758,"endOffset":117775,"count":110},{"startOffset":117776,"endOffset":117839,"count":260},{"startOffset":117845,"endOffset":117864,"count":14},{"startOffset":117865,"endOffset":117884,"count":28},{"startOffset":117885,"endOffset":118122,"count":42},{"startOffset":117984,"endOffset":117990,"count":14},{"startOffset":117991,"endOffset":118020,"count":28},{"startOffset":118128,"endOffset":118593,"count":51},{"startOffset":118514,"endOffset":118567,"count":47},{"startOffset":118599,"endOffset":118821,"count":9},{"startOffset":118827,"endOffset":118947,"count":28},{"startOffset":118953,"endOffset":119067,"count":2},{"startOffset":119073,"endOffset":119147,"count":0},{"startOffset":119153,"endOffset":119200,"count":51},{"startOffset":119206,"endOffset":119263,"count":5},{"startOffset":119269,"endOffset":119428,"count":0},{"startOffset":119434,"endOffset":119467,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseExprImport","ranges":[{"startOffset":119505,"endOffset":120092,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseDynamicImport","ranges":[{"startOffset":120123,"endOffset":120604,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseImportMeta","ranges":[{"startOffset":120632,"endOffset":121269,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseLiteral","ranges":[{"startOffset":121294,"endOffset":121605,"count":264},{"startOffset":121482,"endOffset":121540,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseParenExpression","ranges":[{"startOffset":121638,"endOffset":121773,"count":70}],"isBlockCoverage":true},{"functionName":"pp$5.parseParenAndDistinguishExpression","ranges":[{"startOffset":121820,"endOffset":124400,"count":51},{"startOffset":122461,"endOffset":123082,"count":32},{"startOffset":122477,"endOffset":122492,"count":25},{"startOffset":122493,"endOffset":122521,"count":7},{"startOffset":122604,"endOffset":122661,"count":0},{"startOffset":122703,"endOffset":122957,"count":0},{"startOffset":123273,"endOffset":123546,"count":50},{"startOffset":123546,"endOffset":123589,"count":1},{"startOffset":123591,"endOffset":123630,"count":0},{"startOffset":123630,"endOffset":123654,"count":1},{"startOffset":123654,"endOffset":123687,"count":0},{"startOffset":123687,"endOffset":123802,"count":1},{"startOffset":123838,"endOffset":123854,"count":1},{"startOffset":123888,"endOffset":124075,"count":0},{"startOffset":124075,"endOffset":124117,"count":1},{"startOffset":124123,"endOffset":124177,"count":0},{"startOffset":124177,"endOffset":124216,"count":1},{"startOffset":124216,"endOffset":124366,"count":0},{"startOffset":124366,"endOffset":124396,"count":1}],"isBlockCoverage":true},{"functionName":"pp$5.parseParenItem","ranges":[{"startOffset":124427,"endOffset":124463,"count":32}],"isBlockCoverage":true},{"functionName":"pp$5.parseParenArrowList","ranges":[{"startOffset":124495,"endOffset":124649,"count":50}],"isBlockCoverage":true},{"functionName":"pp$5.parseNew","ranges":[{"startOffset":124990,"endOffset":126377,"count":51},{"startOffset":125029,"endOffset":125101,"count":0},{"startOffset":125237,"endOffset":125834,"count":0},{"startOffset":126046,"endOffset":126088,"count":0},{"startOffset":126090,"endOffset":126157,"count":0},{"startOffset":126286,"endOffset":126323,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseTemplateElement","ranges":[{"startOffset":126443,"endOffset":127051,"count":14},{"startOffset":126573,"endOffset":126782,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseTemplate","ranges":[{"startOffset":127077,"endOffset":127791,"count":5},{"startOffset":127404,"endOffset":127718,"count":9},{"startOffset":127443,"endOffset":127501,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.isAsyncProp","ranges":[{"startOffset":127815,"endOffset":128215,"count":49},{"startOffset":127921,"endOffset":128139,"count":0},{"startOffset":128140,"endOffset":128211,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseObj","ranges":[{"startOffset":128286,"endOffset":128947,"count":36},{"startOffset":128475,"endOffset":128860,"count":83},{"startOffset":128495,"endOffset":128636,"count":56},{"startOffset":128619,"endOffset":128628,"count":0},{"startOffset":128636,"endOffset":128660,"count":27},{"startOffset":128756,"endOffset":128820,"count":52},{"startOffset":128904,"endOffset":128921,"count":8},{"startOffset":128922,"endOffset":128942,"count":28}],"isBlockCoverage":true},{"functionName":"pp$5.parseProperty","ranges":[{"startOffset":128973,"endOffset":130707,"count":83},{"startOffset":129163,"endOffset":129847,"count":5},{"startOffset":129186,"endOffset":129431,"count":2},{"startOffset":129277,"endOffset":129371,"count":0},{"startOffset":129431,"endOffset":129634,"count":3},{"startOffset":129634,"endOffset":129659,"count":2},{"startOffset":129660,"endOffset":129703,"count":2},{"startOffset":129705,"endOffset":129773,"count":2},{"startOffset":129773,"endOffset":129847,"count":3},{"startOffset":129847,"endOffset":130145,"count":78},{"startOffset":129966,"endOffset":129991,"count":49},{"startOffset":130098,"endOffset":130139,"count":49},{"startOffset":130145,"endOffset":130239,"count":78},{"startOffset":130239,"endOffset":130254,"count":49},{"startOffset":130255,"endOffset":130287,"count":49},{"startOffset":130288,"endOffset":130303,"count":49},{"startOffset":130304,"endOffset":130329,"count":49},{"startOffset":130331,"endOffset":130497,"count":0},{"startOffset":130497,"endOffset":130706,"count":78}],"isBlockCoverage":true},{"functionName":"pp$5.parsePropertyValue","ranges":[{"startOffset":130738,"endOffset":133273,"count":78},{"startOffset":130878,"endOffset":130908,"count":0},{"startOffset":130916,"endOffset":130938,"count":0},{"startOffset":130973,"endOffset":131143,"count":16},{"startOffset":131004,"endOffset":131055,"count":0},{"startOffset":131143,"endOffset":133269,"count":62},{"startOffset":131216,"endOffset":131378,"count":12},{"startOffset":131239,"endOffset":131261,"count":0},{"startOffset":131378,"endOffset":133269,"count":50},{"startOffset":131399,"endOffset":131414,"count":21},{"startOffset":131415,"endOffset":131462,"count":21},{"startOffset":131463,"endOffset":131480,"count":21},{"startOffset":131481,"endOffset":131514,"count":21},{"startOffset":131515,"endOffset":131585,"count":21},{"startOffset":131586,"endOffset":131693,"count":0},{"startOffset":131695,"endOffset":132422,"count":0},{"startOffset":132551,"endOffset":132573,"count":0},{"startOffset":132648,"endOffset":132670,"count":0},{"startOffset":132680,"endOffset":132714,"count":0},{"startOffset":132762,"endOffset":132861,"count":29},{"startOffset":132861,"endOffset":133206,"count":21},{"startOffset":132896,"endOffset":132921,"count":0},{"startOffset":132923,"endOffset":133145,"count":0},{"startOffset":133241,"endOffset":133269,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parsePropertyName","ranges":[{"startOffset":133303,"endOffset":133762,"count":178},{"startOffset":133399,"endOffset":133545,"count":0},{"startOffset":133678,"endOffset":133700,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.initFunction","ranges":[{"startOffset":133825,"endOffset":134013,"count":224}],"isBlockCoverage":true},{"functionName":"pp$5.parseMethod","ranges":[{"startOffset":134073,"endOffset":135026,"count":112},{"startOffset":134604,"endOffset":134624,"count":5},{"startOffset":134625,"endOffset":134628,"count":107}],"isBlockCoverage":true},{"functionName":"pp$5.parseArrowExpression","ranges":[{"startOffset":135120,"endOffset":135791,"count":104}],"isBlockCoverage":true},{"functionName":"pp$5.parseFunctionBody","ranges":[{"startOffset":135869,"endOffset":137648,"count":224},{"startOffset":135961,"endOffset":135992,"count":104},{"startOffset":136069,"endOffset":136193,"count":34},{"startOffset":136193,"endOffset":137622,"count":190},{"startOffset":136329,"endOffset":136726,"count":23},{"startOffset":136579,"endOffset":136591,"count":0},{"startOffset":136603,"endOffset":136718,"count":0},{"startOffset":136937,"endOffset":136960,"count":0},{"startOffset":137164,"endOffset":137177,"count":0},{"startOffset":137178,"endOffset":137197,"count":0},{"startOffset":137198,"endOffset":137210,"count":0},{"startOffset":137211,"endOffset":137249,"count":0},{"startOffset":137377,"endOffset":137425,"count":8},{"startOffset":137488,"endOffset":137501,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.isSimpleParamList","ranges":[{"startOffset":137678,"endOffset":137874,"count":190},{"startOffset":137763,"endOffset":137854,"count":150},{"startOffset":137832,"endOffset":137852,"count":23},{"startOffset":137854,"endOffset":137873,"count":167}],"isBlockCoverage":true},{"functionName":"pp$5.checkParams","ranges":[{"startOffset":138026,"endOffset":138296,"count":224},{"startOffset":138171,"endOffset":138292,"count":177},{"startOffset":138267,"endOffset":138273,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseExprList","ranges":[{"startOffset":138621,"endOffset":139446,"count":546},{"startOffset":138757,"endOffset":139426,"count":645},{"startOffset":138777,"endOffset":138898,"count":207},{"startOffset":138881,"endOffset":138890,"count":0},{"startOffset":138898,"endOffset":138922,"count":438},{"startOffset":138971,"endOffset":139001,"count":18},{"startOffset":139011,"endOffset":139026,"count":0},{"startOffset":139074,"endOffset":139315,"count":2},{"startOffset":139198,"endOffset":139241,"count":0},{"startOffset":139253,"endOffset":139307,"count":0},{"startOffset":139315,"endOffset":139398,"count":643}],"isBlockCoverage":true},{"functionName":"pp$5.checkUnreserved","ranges":[{"startOffset":139474,"endOffset":140732,"count":1260},{"startOffset":139591,"endOffset":139610,"count":0},{"startOffset":139618,"endOffset":139706,"count":0},{"startOffset":139728,"endOffset":139747,"count":406},{"startOffset":139755,"endOffset":139849,"count":0},{"startOffset":139899,"endOffset":139922,"count":0},{"startOffset":139930,"endOffset":140016,"count":0},{"startOffset":140049,"endOffset":140094,"count":0},{"startOffset":140102,"endOffset":140190,"count":0},{"startOffset":140231,"endOffset":140292,"count":0},{"startOffset":140330,"endOffset":140388,"count":0},{"startOffset":140390,"endOffset":140400,"count":0},{"startOffset":140453,"endOffset":140473,"count":0},{"startOffset":140498,"endOffset":140728,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parseIdent","ranges":[{"startOffset":140911,"endOffset":141997,"count":2237},{"startOffset":141011,"endOffset":141048,"count":2173},{"startOffset":141048,"endOffset":141749,"count":64},{"startOffset":141559,"endOffset":141666,"count":0},{"startOffset":141668,"endOffset":141705,"count":0},{"startOffset":141711,"endOffset":141749,"count":0},{"startOffset":141835,"endOffset":141977,"count":1187},{"startOffset":141903,"endOffset":141925,"count":0},{"startOffset":141935,"endOffset":141971,"count":0}],"isBlockCoverage":true},{"functionName":"pp$5.parsePrivateIdent","ranges":[{"startOffset":142027,"endOffset":142563,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseYield","ranges":[{"startOffset":142634,"endOffset":143116,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseAwait","ranges":[{"startOffset":143139,"endOffset":143391,"count":54},{"startOffset":143183,"endOffset":143214,"count":25}],"isBlockCoverage":true},{"functionName":"pp$4.raise","ranges":[{"startOffset":143725,"endOffset":143967,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.curPosition","ranges":[{"startOffset":144030,"endOffset":144153,"count":14944}],"isBlockCoverage":true},{"functionName":"Scope","ranges":[{"startOffset":144202,"endOffset":144647,"count":280}],"isBlockCoverage":true},{"functionName":"pp$3.enterScope","ranges":[{"startOffset":144804,"endOffset":144869,"count":280}],"isBlockCoverage":true},{"functionName":"pp$3.exitScope","ranges":[{"startOffset":144891,"endOffset":144934,"count":268}],"isBlockCoverage":true},{"functionName":"pp$3.treatFunctionsAsVarInScope","ranges":[{"startOffset":145145,"endOffset":145255,"count":186},{"startOffset":145205,"endOffset":145251,"count":3},{"startOffset":145223,"endOffset":145251,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.declareName","ranges":[{"startOffset":145279,"endOffset":146841,"count":379},{"startOffset":145380,"endOffset":145683,"count":198},{"startOffset":145638,"endOffset":145677,"count":64},{"startOffset":145683,"endOffset":146728,"count":181},{"startOffset":145728,"endOffset":145810,"count":1},{"startOffset":145810,"endOffset":146728,"count":180},{"startOffset":145851,"endOffset":146138,"count":0},{"startOffset":146297,"endOffset":146370,"count":0},{"startOffset":146428,"endOffset":146467,"count":0},{"startOffset":146469,"endOffset":146525,"count":0},{"startOffset":146626,"endOffset":146665,"count":0},{"startOffset":146749,"endOffset":146837,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.checkLocalExport","ranges":[{"startOffset":146870,"endOffset":147127,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentScope","ranges":[{"startOffset":147152,"endOffset":147223,"count":205}],"isBlockCoverage":true},{"functionName":"pp$3.currentVarScope","ranges":[{"startOffset":147251,"endOffset":147416,"count":4421},{"startOffset":147315,"endOffset":147412,"count":4884},{"startOffset":147390,"endOffset":147406,"count":4421}],"isBlockCoverage":true},{"functionName":"pp$3.currentThisScope","ranges":[{"startOffset":147544,"endOffset":147741,"count":1273},{"startOffset":147608,"endOffset":147737,"count":1995},{"startOffset":147682,"endOffset":147713,"count":1852},{"startOffset":147715,"endOffset":147731,"count":1273}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":147757,"endOffset":148108,"count":6226},{"startOffset":147986,"endOffset":148040,"count":0}],"isBlockCoverage":true},{"functionName":"pp$2.startNode","ranges":[{"startOffset":148213,"endOffset":148282,"count":4563}],"isBlockCoverage":true},{"functionName":"pp$2.startNodeAt","ranges":[{"startOffset":148306,"endOffset":148366,"count":1613}],"isBlockCoverage":true},{"functionName":"finishNodeAt","ranges":[{"startOffset":148433,"endOffset":148662,"count":6176}],"isBlockCoverage":true},{"functionName":"pp$2.finishNode","ranges":[{"startOffset":148684,"endOffset":148794,"count":6176}],"isBlockCoverage":true},{"functionName":"pp$2.finishNodeAt","ranges":[{"startOffset":148855,"endOffset":148948,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.copyNode","ranges":[{"startOffset":148969,"endOffset":149128,"count":50},{"startOffset":149074,"endOffset":149105,"count":300}],"isBlockCoverage":true},{"functionName":"buildUnicodeData","ranges":[{"startOffset":154454,"endOffset":155001,"count":5}],"isBlockCoverage":true},{"functionName":"RegExpValidationState","ranges":[{"startOffset":155210,"endOffset":155916,"count":1},{"startOffset":155347,"endOffset":155351,"count":0},{"startOffset":155394,"endOffset":155398,"count":0},{"startOffset":155442,"endOffset":155446,"count":0},{"startOffset":155521,"endOffset":155549,"count":0}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":155961,"endOffset":156270,"count":4},{"startOffset":156158,"endOffset":156197,"count":0},{"startOffset":156226,"endOffset":156265,"count":0}],"isBlockCoverage":true},{"functionName":"raise","ranges":[{"startOffset":156315,"endOffset":156460,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":156693,"endOffset":157103,"count":489},{"startOffset":156750,"endOffset":156765,"count":0},{"startOffset":156830,"endOffset":156853,"count":40},{"startOffset":156853,"endOffset":156915,"count":449},{"startOffset":156917,"endOffset":156931,"count":0},{"startOffset":156932,"endOffset":156946,"count":0},{"startOffset":156947,"endOffset":156960,"count":0},{"startOffset":156962,"endOffset":156984,"count":449},{"startOffset":156984,"endOffset":157064,"count":0},{"startOffset":157065,"endOffset":157095,"count":0},{"startOffset":157096,"endOffset":157099,"count":0}],"isBlockCoverage":true},{"functionName":"nextIndex","ranges":[{"startOffset":157152,"endOffset":157546,"count":31},{"startOffset":157216,"endOffset":157231,"count":0},{"startOffset":157296,"endOffset":157318,"count":0},{"startOffset":157388,"endOffset":157402,"count":0},{"startOffset":157403,"endOffset":157417,"count":0},{"startOffset":157418,"endOffset":157431,"count":0},{"startOffset":157432,"endOffset":157480,"count":0},{"startOffset":157481,"endOffset":157497,"count":0},{"startOffset":157525,"endOffset":157545,"count":0}],"isBlockCoverage":true},{"functionName":"current","ranges":[{"startOffset":157593,"endOffset":157709,"count":489},{"startOffset":157652,"endOffset":157667,"count":31}],"isBlockCoverage":true},{"functionName":"lookahead","ranges":[{"startOffset":157758,"endOffset":157900,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":157947,"endOffset":158075,"count":31}],"isBlockCoverage":true},{"functionName":"eat","ranges":[{"startOffset":158118,"endOffset":158305,"count":458},{"startOffset":158231,"endOffset":158284,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.validateRegExpFlags","ranges":[{"startOffset":158502,"endOffset":158921,"count":4},{"startOffset":158632,"endOffset":158917,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.validateRegExpPattern","ranges":[{"startOffset":159122,"endOffset":159711,"count":4},{"startOffset":159638,"endOffset":159707,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_pattern","ranges":[{"startOffset":159805,"endOffset":160757,"count":4},{"startOffset":160170,"endOffset":160420,"count":0},{"startOffset":160480,"endOffset":160524,"count":0},{"startOffset":160603,"endOffset":160753,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_disjunction","ranges":[{"startOffset":160859,"endOffset":161219,"count":4},{"startOffset":160949,"endOffset":160994,"count":0},{"startOffset":161080,"endOffset":161127,"count":0},{"startOffset":161161,"endOffset":161215,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_alternative","ranges":[{"startOffset":161321,"endOffset":161426,"count":4},{"startOffset":161382,"endOffset":161411,"count":31},{"startOffset":161419,"endOffset":161422,"count":31}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatTerm","ranges":[{"startOffset":161524,"endOffset":162183,"count":31},{"startOffset":161583,"endOffset":162005,"count":0},{"startOffset":162029,"endOffset":162057,"count":0},{"startOffset":162161,"endOffset":162182,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatAssertion","ranges":[{"startOffset":162291,"endOffset":163208,"count":31},{"startOffset":162456,"endOffset":162481,"count":0},{"startOffset":162529,"endOffset":162653,"count":0},{"startOffset":162717,"endOffset":162743,"count":0},{"startOffset":162745,"endOffset":163163,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatQuantifier","ranges":[{"startOffset":163311,"endOffset":163520,"count":35},{"startOffset":163368,"endOffset":163384,"count":31},{"startOffset":163443,"endOffset":163499,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatQuantifierPrefix","ranges":[{"startOffset":163635,"endOffset":163837,"count":35}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatBracedQuantifier","ranges":[{"startOffset":163875,"endOffset":164640,"count":66},{"startOffset":163962,"endOffset":164619,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatAtom","ranges":[{"startOffset":164731,"endOffset":165046,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatReverseSolidusAtomEscape","ranges":[{"startOffset":165092,"endOffset":165297,"count":31},{"startOffset":165170,"endOffset":165276,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatUncapturingGroup","ranges":[{"startOffset":165335,"endOffset":165692,"count":31},{"startOffset":165413,"endOffset":165671,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatCapturingGroup","ranges":[{"startOffset":165728,"endOffset":166175,"count":31},{"startOffset":165779,"endOffset":166154,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatExtendedAtom","ranges":[{"startOffset":166289,"endOffset":166666,"count":31}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatInvalidBracedQuantifier","ranges":[{"startOffset":166802,"endOffset":166942,"count":31},{"startOffset":166874,"endOffset":166921,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_eatSyntaxCharacter","ranges":[{"startOffset":167055,"endOffset":167234,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxCharacter","ranges":[{"startOffset":167238,"endOffset":167527,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatPatternCharacters","ranges":[{"startOffset":167662,"endOffset":167856,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatExtendedPatternCharacter","ranges":[{"startOffset":167994,"endOffset":168369,"count":31},{"startOffset":168126,"endOffset":168139,"count":26},{"startOffset":168348,"endOffset":168368,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_groupSpecifier","ranges":[{"startOffset":168462,"endOffset":168817,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatGroupName","ranges":[{"startOffset":168981,"endOffset":169252,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierName","ranges":[{"startOffset":169480,"endOffset":169838,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierStart","ranges":[{"startOffset":169999,"endOffset":170424,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierStart","ranges":[{"startOffset":170428,"endOffset":170555,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierPart","ranges":[{"startOffset":170743,"endOffset":171167,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierPart","ranges":[{"startOffset":171171,"endOffset":171355,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAtomEscape","ranges":[{"startOffset":171464,"endOffset":171952,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatBackReference","ranges":[{"startOffset":171987,"endOffset":172474,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatKGroupName","ranges":[{"startOffset":172506,"endOffset":172766,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterEscape","ranges":[{"startOffset":172886,"endOffset":173288,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCControlLetter","ranges":[{"startOffset":173324,"endOffset":173532,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatZero","ranges":[{"startOffset":173558,"endOffset":173755,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlEscape","ranges":[{"startOffset":173864,"endOffset":174532,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlLetter","ranges":[{"startOffset":174641,"endOffset":174825,"count":0}],"isBlockCoverage":false},{"functionName":"isControlLetter","ranges":[{"startOffset":174829,"endOffset":174983,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpUnicodeEscapeSequence","ranges":[{"startOffset":175119,"endOffset":176309,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUnicode","ranges":[{"startOffset":176313,"endOffset":176383,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatIdentityEscape","ranges":[{"startOffset":176500,"endOffset":176959,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalEscape","ranges":[{"startOffset":177068,"endOffset":177429,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClassEscape","ranges":[{"startOffset":177552,"endOffset":178153,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterClassEscape","ranges":[{"startOffset":178157,"endOffset":178388,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValueExpression","ranges":[{"startOffset":178569,"endOffset":179288,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameAndValue","ranges":[{"startOffset":179342,"endOffset":179593,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameOrValue","ranges":[{"startOffset":179646,"endOffset":179787,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyName","ranges":[{"startOffset":179894,"endOffset":180153,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyNameCharacter","ranges":[{"startOffset":180157,"endOffset":180260,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValue","ranges":[{"startOffset":180369,"endOffset":180629,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyValueCharacter","ranges":[{"startOffset":180633,"endOffset":180751,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLoneUnicodePropertyNameOrValue","ranges":[{"startOffset":180880,"endOffset":180955,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClass","ranges":[{"startOffset":181066,"endOffset":181414,"count":31},{"startOffset":181117,"endOffset":181393,"count":0}],"isBlockCoverage":true},{"functionName":"pp$1.regexp_classRanges","ranges":[{"startOffset":181680,"endOffset":182165,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassAtom","ranges":[{"startOffset":182341,"endOffset":182955,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassEscape","ranges":[{"startOffset":183067,"endOffset":183620,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassControlLetter","ranges":[{"startOffset":183746,"endOffset":183952,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexEscapeSequence","ranges":[{"startOffset":184069,"endOffset":184355,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalDigits","ranges":[{"startOffset":184464,"endOffset":184741,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalDigit","ranges":[{"startOffset":184745,"endOffset":184830,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexDigits","ranges":[{"startOffset":184930,"endOffset":185196,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":185200,"endOffset":185401,"count":0}],"isBlockCoverage":false},{"functionName":"hexToInt","ranges":[{"startOffset":185404,"endOffset":185652,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLegacyOctalEscapeSequence","ranges":[{"startOffset":185842,"endOffset":186322,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatOctalDigit","ranges":[{"startOffset":186425,"endOffset":186642,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":186646,"endOffset":186729,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatFixedHexDigits","ranges":[{"startOffset":187005,"endOffset":187357,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":187575,"endOffset":187858,"count":7352}],"isBlockCoverage":true},{"functionName":"pp.next","ranges":[{"startOffset":187951,"endOffset":188423,"count":7352},{"startOffset":188032,"endOffset":188052,"count":6302},{"startOffset":188053,"endOffset":188072,"count":799},{"startOffset":188080,"endOffset":188169,"count":0}],"isBlockCoverage":true},{"functionName":"pp.getToken","ranges":[{"startOffset":188442,"endOffset":188502,"count":0}],"isBlockCoverage":false},{"functionName":"pp.<computed>","ranges":[{"startOffset":188629,"endOffset":188881,"count":0}],"isBlockCoverage":false},{"functionName":"pp.nextToken","ranges":[{"startOffset":189117,"endOffset":189547,"count":7364},{"startOffset":189220,"endOffset":189241,"count":7336},{"startOffset":189381,"endOffset":189421,"count":24},{"startOffset":189421,"endOffset":189452,"count":7340},{"startOffset":189452,"endOffset":189488,"count":28},{"startOffset":189488,"endOffset":189543,"count":7312}],"isBlockCoverage":true},{"functionName":"pp.readToken","ranges":[{"startOffset":189567,"endOffset":189865,"count":7312},{"startOffset":189763,"endOffset":189777,"count":4111},{"startOffset":189795,"endOffset":189821,"count":3201},{"startOffset":189821,"endOffset":189864,"count":4111}],"isBlockCoverage":true},{"functionName":"pp.fullCharCodeAtPos","ranges":[{"startOffset":189893,"endOffset":190152,"count":28290},{"startOffset":189977,"endOffset":189994,"count":0},{"startOffset":190011,"endOffset":190107,"count":0},{"startOffset":190108,"endOffset":190114,"count":0},{"startOffset":190115,"endOffset":190148,"count":0}],"isBlockCoverage":true},{"functionName":"pp.skipBlockComment","ranges":[{"startOffset":190179,"endOffset":190841,"count":87},{"startOffset":190350,"endOffset":190403,"count":0},{"startOffset":190574,"endOffset":190649,"count":280}],"isBlockCoverage":true},{"functionName":"pp.skipLineComment","ranges":[{"startOffset":190867,"endOffset":191351,"count":15},{"startOffset":191079,"endOffset":191096,"count":545},{"startOffset":191098,"endOffset":191151,"count":530}],"isBlockCoverage":true},{"functionName":"pp.skipSpace","ranges":[{"startOffset":191474,"endOffset":192440,"count":7336},{"startOffset":191534,"endOffset":192436,"count":15665},{"startOffset":191610,"endOffset":191618,"count":6737},{"startOffset":191619,"endOffset":191669,"count":6737},{"startOffset":191676,"endOffset":191774,"count":0},{"startOffset":191781,"endOffset":191789,"count":1514},{"startOffset":191790,"endOffset":191800,"count":1514},{"startOffset":191801,"endOffset":191956,"count":1514},{"startOffset":191963,"endOffset":192238,"count":106},{"startOffset":192042,"endOffset":192108,"count":87},{"startOffset":192117,"endOffset":192176,"count":15},{"startOffset":192185,"endOffset":192214,"count":4},{"startOffset":192224,"endOffset":192238,"count":102},{"startOffset":192245,"endOffset":192422,"count":7308},{"startOffset":192298,"endOffset":192349,"count":0},{"startOffset":192351,"endOffset":192384,"count":0}],"isBlockCoverage":true},{"functionName":"pp.finishToken","ranges":[{"startOffset":192681,"endOffset":192910,"count":7364}],"isBlockCoverage":true},{"functionName":"pp.readToken_dot","ranges":[{"startOffset":193219,"endOffset":193644,"count":806},{"startOffset":193303,"endOffset":193316,"count":797},{"startOffset":193318,"endOffset":193350,"count":0},{"startOffset":193457,"endOffset":193472,"count":9},{"startOffset":193474,"endOffset":193566,"count":9},{"startOffset":193566,"endOffset":193640,"count":797}],"isBlockCoverage":true},{"functionName":"pp.readToken_slash","ranges":[{"startOffset":193670,"endOffset":193920,"count":4},{"startOffset":193808,"endOffset":193919,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readToken_mult_modulo_exp","ranges":[{"startOffset":193956,"endOffset":194454,"count":5},{"startOffset":194098,"endOffset":194114,"count":0},{"startOffset":194228,"endOffset":194335,"count":0},{"startOffset":194358,"endOffset":194408,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readToken_pipe_amp","ranges":[{"startOffset":194483,"endOffset":195006,"count":36},{"startOffset":194712,"endOffset":194755,"count":0},{"startOffset":194804,"endOffset":194823,"count":22},{"startOffset":194824,"endOffset":194844,"count":14},{"startOffset":194854,"endOffset":194977,"count":0},{"startOffset":194978,"endOffset":194998,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readToken_caret","ranges":[{"startOffset":195032,"endOffset":195220,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_plus_min","ranges":[{"startOffset":195249,"endOffset":195836,"count":53},{"startOffset":195349,"endOffset":195722,"count":5},{"startOffset":195373,"endOffset":195390,"count":0},{"startOffset":195391,"endOffset":195436,"count":0},{"startOffset":195437,"endOffset":195536,"count":0},{"startOffset":195538,"endOffset":195670,"count":0},{"startOffset":195722,"endOffset":195744,"count":48},{"startOffset":195744,"endOffset":195835,"count":24}],"isBlockCoverage":true},{"functionName":"pp.readToken_lt_gt","ranges":[{"startOffset":195862,"endOffset":196646,"count":11},{"startOffset":195980,"endOffset":196226,"count":0},{"startOffset":196247,"endOffset":196261,"count":0},{"startOffset":196262,"endOffset":196279,"count":0},{"startOffset":196280,"endOffset":196325,"count":0},{"startOffset":196326,"endOffset":196379,"count":0},{"startOffset":196381,"endOffset":196556,"count":0},{"startOffset":196578,"endOffset":196591,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readToken_eq_excl","ranges":[{"startOffset":196674,"endOffset":197092,"count":381},{"startOffset":196772,"endOffset":196866,"count":8},{"startOffset":196860,"endOffset":196863,"count":0},{"startOffset":196866,"endOffset":196887,"count":373},{"startOffset":196887,"endOffset":196901,"count":347},{"startOffset":196902,"endOffset":196934,"count":104},{"startOffset":196936,"endOffset":197017,"count":104},{"startOffset":197017,"endOffset":197055,"count":269},{"startOffset":197055,"endOffset":197067,"count":243},{"startOffset":197068,"endOffset":197084,"count":26}],"isBlockCoverage":true},{"functionName":"pp.readToken_question","ranges":[{"startOffset":197121,"endOffset":197765,"count":3},{"startOffset":197295,"endOffset":197448,"count":0},{"startOffset":197472,"endOffset":197709,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readToken_numberSign","ranges":[{"startOffset":197796,"endOffset":198215,"count":0}],"isBlockCoverage":false},{"functionName":"pp.getTokenFromCode","ranges":[{"startOffset":198242,"endOffset":200977,"count":4111},{"startOffset":198391,"endOffset":198440,"count":806},{"startOffset":198473,"endOffset":198533,"count":782},{"startOffset":198538,"endOffset":198598,"count":782},{"startOffset":198603,"endOffset":198661,"count":7},{"startOffset":198666,"endOffset":198725,"count":308},{"startOffset":198730,"endOffset":198792,"count":24},{"startOffset":198797,"endOffset":198859,"count":24},{"startOffset":198864,"endOffset":198925,"count":296},{"startOffset":198930,"endOffset":198991,"count":305},{"startOffset":198996,"endOffset":199055,"count":19},{"startOffset":199061,"endOffset":199193,"count":5},{"startOffset":199117,"endOffset":199126,"count":0},{"startOffset":199199,"endOffset":199631,"count":53},{"startOffset":199308,"endOffset":199343,"count":0},{"startOffset":199455,"endOffset":199489,"count":0},{"startOffset":199559,"endOffset":199593,"count":0},{"startOffset":199727,"endOffset":199735,"count":84},{"startOffset":199736,"endOffset":199744,"count":89},{"startOffset":199745,"endOffset":199753,"count":105},{"startOffset":199754,"endOffset":199762,"count":108},{"startOffset":199763,"endOffset":199771,"count":110},{"startOffset":199772,"endOffset":199780,"count":110},{"startOffset":199781,"endOffset":199789,"count":110},{"startOffset":199790,"endOffset":199798,"count":110},{"startOffset":199799,"endOffset":199850,"count":110},{"startOffset":199887,"endOffset":199895,"count":0},{"startOffset":199896,"endOffset":199951,"count":150},{"startOffset":200210,"endOffset":200261,"count":4},{"startOffset":200267,"endOffset":200275,"count":0},{"startOffset":200276,"endOffset":200342,"count":5},{"startOffset":200348,"endOffset":200357,"count":22},{"startOffset":200358,"endOffset":200417,"count":36},{"startOffset":200423,"endOffset":200474,"count":0},{"startOffset":200480,"endOffset":200488,"count":49},{"startOffset":200489,"endOffset":200548,"count":53},{"startOffset":200554,"endOffset":200562,"count":5},{"startOffset":200563,"endOffset":200619,"count":11},{"startOffset":200625,"endOffset":200633,"count":355},{"startOffset":200634,"endOffset":200692,"count":381},{"startOffset":200698,"endOffset":200752,"count":3},{"startOffset":200758,"endOffset":200820,"count":0},{"startOffset":200826,"endOffset":200882,"count":0},{"startOffset":200888,"endOffset":200976,"count":0}],"isBlockCoverage":true},{"functionName":"pp.finishOp","ranges":[{"startOffset":200996,"endOffset":201142,"count":385}],"isBlockCoverage":true},{"functionName":"pp.readRegexp","ranges":[{"startOffset":201163,"endOffset":202578,"count":4},{"startOffset":201233,"endOffset":201732,"count":35},{"startOffset":201276,"endOffset":201333,"count":0},{"startOffset":201408,"endOffset":201465,"count":0},{"startOffset":201512,"endOffset":201531,"count":0},{"startOffset":201560,"endOffset":201570,"count":0},{"startOffset":201572,"endOffset":201592,"count":0},{"startOffset":201621,"endOffset":201632,"count":4},{"startOffset":201634,"endOffset":201643,"count":4},{"startOffset":201643,"endOffset":201682,"count":31},{"startOffset":201682,"endOffset":201708,"count":0},{"startOffset":201708,"endOffset":201732,"count":31},{"startOffset":201893,"endOffset":201925,"count":0},{"startOffset":201984,"endOffset":202039,"count":1},{"startOffset":202282,"endOffset":202481,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readInt","ranges":[{"startOffset":202805,"endOffset":204586,"count":110},{"startOffset":203448,"endOffset":203453,"count":0},{"startOffset":203479,"endOffset":204333,"count":258},{"startOffset":203590,"endOffset":204023,"count":0},{"startOffset":204047,"endOffset":204072,"count":0},{"startOffset":204105,"endOffset":204130,"count":16},{"startOffset":204130,"endOffset":204235,"count":242},{"startOffset":204162,"endOffset":204175,"count":154},{"startOffset":204177,"endOffset":204197,"count":148},{"startOffset":204197,"endOffset":204235,"count":94},{"startOffset":204260,"endOffset":204269,"count":110},{"startOffset":204269,"endOffset":204333,"count":148},{"startOffset":204379,"endOffset":204477,"count":0},{"startOffset":204520,"endOffset":204547,"count":0},{"startOffset":204549,"endOffset":204564,"count":0}],"isBlockCoverage":true},{"functionName":"stringToNumber","ranges":[{"startOffset":204591,"endOffset":204875,"count":110},{"startOffset":204688,"endOffset":204725,"count":0}],"isBlockCoverage":true},{"functionName":"stringToBigInt","ranges":[{"startOffset":204879,"endOffset":205105,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readRadixNumber","ranges":[{"startOffset":205130,"endOffset":205661,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readNumber","ranges":[{"startOffset":205746,"endOffset":207160,"count":110},{"startOffset":205868,"endOffset":205908,"count":0},{"startOffset":205947,"endOffset":205985,"count":22},{"startOffset":206001,"endOffset":206015,"count":0},{"startOffset":206017,"endOffset":206057,"count":0},{"startOffset":206190,"endOffset":206451,"count":0},{"startOffset":206466,"endOffset":206515,"count":0},{"startOffset":206517,"endOffset":206535,"count":0},{"startOffset":206556,"endOffset":206565,"count":0},{"startOffset":206567,"endOffset":206669,"count":0},{"startOffset":206708,"endOffset":206717,"count":0},{"startOffset":206719,"endOffset":206922,"count":0},{"startOffset":206976,"endOffset":207037,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readCodePoint","ranges":[{"startOffset":207243,"endOffset":207693,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readString","ranges":[{"startOffset":207714,"endOffset":208659,"count":150},{"startOffset":207788,"endOffset":208553,"count":1654},{"startOffset":207831,"endOffset":207890,"count":0},{"startOffset":207963,"endOffset":207972,"count":150},{"startOffset":207972,"endOffset":207994,"count":1504},{"startOffset":207994,"endOffset":208140,"count":0},{"startOffset":208140,"endOffset":208547,"count":1504},{"startOffset":208182,"endOffset":208425,"count":0},{"startOffset":208460,"endOffset":208519,"count":0}],"isBlockCoverage":true},{"functionName":"pp.tryReadTemplateToken","ranges":[{"startOffset":208769,"endOffset":209054,"count":28},{"startOffset":208861,"endOffset":209013,"count":0}],"isBlockCoverage":true},{"functionName":"pp.invalidStringToken","ranges":[{"startOffset":209083,"endOffset":209281,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readTmplToken","ranges":[{"startOffset":209305,"endOffset":210790,"count":28},{"startOffset":209372,"endOffset":210786,"count":61},{"startOffset":209415,"endOffset":209467,"count":0},{"startOffset":209536,"endOffset":209595,"count":51},{"startOffset":209549,"endOffset":209595,"count":18},{"startOffset":209597,"endOffset":210077,"count":28},{"startOffset":209648,"endOffset":209724,"count":23},{"startOffset":209683,"endOffset":209723,"count":9},{"startOffset":209726,"endOffset":209959,"count":14},{"startOffset":209753,"endOffset":209851,"count":9},{"startOffset":209851,"endOffset":209949,"count":5},{"startOffset":209959,"endOffset":210077,"count":14},{"startOffset":210077,"endOffset":210099,"count":33},{"startOffset":210099,"endOffset":210244,"count":0},{"startOffset":210244,"endOffset":210780,"count":33},{"startOffset":210269,"endOffset":210745,"count":0}],"isBlockCoverage":true},{"functionName":"pp.readInvalidTemplateToken","ranges":[{"startOffset":210916,"endOffset":211392,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readEscapedChar","ranges":[{"startOffset":211456,"endOffset":213485,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readHexChar","ranges":[{"startOffset":213573,"endOffset":213759,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readWord1","ranges":[{"startOffset":214011,"endOffset":215045,"count":3205},{"startOffset":214199,"endOffset":214984,"count":20868},{"startOffset":214282,"endOffset":214333,"count":17663},{"startOffset":214321,"endOffset":214324,"count":0},{"startOffset":214333,"endOffset":214957,"count":3205},{"startOffset":214354,"endOffset":214928,"count":0},{"startOffset":214957,"endOffset":214984,"count":17663}],"isBlockCoverage":true},{"functionName":"pp.readWord","ranges":[{"startOffset":215158,"endOffset":215347,"count":3201},{"startOffset":215267,"endOffset":215303,"count":863}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":216306,"endOffset":216382,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":216559,"endOffset":216669,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":216813,"endOffset":216897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///home/runner/work/deluge/deluge/node_modules/acorn-jsx/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15827,"count":1}],"isBlockCoverage":true},{"functionName":"getJsxTokens","ranges":[{"startOffset":293,"endOffset":1730,"count":1},{"startOffset":353,"endOffset":361,"count":0}],"isBlockCoverage":true},{"functionName":"tokTypes.jsxTagStart.updateContext","ranges":[{"startOffset":1094,"endOffset":1281,"count":0}],"isBlockCoverage":false},{"functionName":"tokTypes.jsxTagEnd.updateContext","ranges":[{"startOffset":1322,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedJSXName","ranges":[{"startOffset":1775,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2177,"endOffset":2415,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2233,"endOffset":2412,"count":1}],"isBlockCoverage":true},{"functionName":"get_tokTypes","ranges":[{"startOffset":2596,"endOffset":2677,"count":0}],"isBlockCoverage":false},{"functionName":"plugin","ranges":[{"startOffset":2725,"endOffset":15826,"count":1},{"startOffset":2789,"endOffset":2808,"count":0}],"isBlockCoverage":true},{"functionName":"get acornJsx","ranges":[{"startOffset":3350,"endOffset":3395,"count":2}],"isBlockCoverage":true},{"functionName":"jsx_readToken","ranges":[{"startOffset":3441,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_readNewLine","ranges":[{"startOffset":4839,"endOffset":5272,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_readString","ranges":[{"startOffset":5278,"endOffset":6054,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_readEntity","ranges":[{"startOffset":6060,"endOffset":7016,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_readWord","ranges":[{"startOffset":7315,"endOffset":7565,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseIdentifier","ranges":[{"startOffset":7614,"endOffset":7930,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseNamespacedName","ranges":[{"startOffset":7973,"endOffset":8369,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseElementName","ranges":[{"startOffset":8465,"endOffset":9064,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseAttributeValue","ranges":[{"startOffset":9118,"endOffset":9642,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseEmptyExpression","ranges":[{"startOffset":9871,"endOffset":10064,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseExpressionContainer","ranges":[{"startOffset":10130,"endOffset":10438,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseAttribute","ranges":[{"startOffset":10500,"endOffset":10957,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseOpeningElementAt","ranges":[{"startOffset":11014,"endOffset":11537,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseClosingElementAt","ranges":[{"startOffset":11595,"endOffset":11920,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseElementAt","ranges":[{"startOffset":12055,"endOffset":13790,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseText","ranges":[{"startOffset":13819,"endOffset":13938,"count":0}],"isBlockCoverage":false},{"functionName":"jsx_parseElement","ranges":[{"startOffset":14001,"endOffset":14163,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprAtom","ranges":[{"startOffset":14169,"endOffset":14445,"count":1746},{"startOffset":14254,"endOffset":14282,"count":0},{"startOffset":14337,"endOffset":14368,"count":0}],"isBlockCoverage":true},{"functionName":"readToken","ranges":[{"startOffset":14451,"endOffset":15128,"count":7312},{"startOffset":14540,"endOffset":14568,"count":0},{"startOffset":14624,"endOffset":14916,"count":0},{"startOffset":14940,"endOffset":14959,"count":5},{"startOffset":14960,"endOffset":15005,"count":0},{"startOffset":15007,"endOffset":15086,"count":0}],"isBlockCoverage":true},{"functionName":"updateContext","ranges":[{"startOffset":15134,"endOffset":15819,"count":7364},{"startOffset":15194,"endOffset":15477,"count":296},{"startOffset":15275,"endOffset":15313,"count":0},{"startOffset":15354,"endOffset":15392,"count":0},{"startOffset":15477,"endOffset":15813,"count":7068},{"startOffset":15510,"endOffset":15541,"count":0},{"startOffset":15543,"endOffset":15752,"count":0}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///home/runner/work/deluge/deluge/node_modules/acorn-jsx/xhtml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4718,"count":1}],"isBlockCoverage":true}]},{"scriptId":"253","url":"file:///home/runner/work/deluge/deluge/node_modules/lodash.merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51155,"count":1},{"startOffset":3263,"endOffset":3270,"count":0},{"startOffset":3271,"endOffset":3296,"count":0},{"startOffset":3297,"endOffset":3304,"count":0},{"startOffset":3378,"endOffset":3389,"count":0},{"startOffset":3390,"endOffset":3418,"count":0},{"startOffset":7827,"endOffset":7838,"count":0},{"startOffset":7946,"endOffset":7957,"count":0},{"startOffset":8194,"endOffset":8205,"count":0},{"startOffset":8501,"endOffset":8512,"count":0},{"startOffset":28453,"endOffset":28463,"count":0},{"startOffset":41292,"endOffset":41434,"count":0},{"startOffset":43594,"endOffset":43606,"count":0},{"startOffset":47661,"endOffset":47679,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3992,"endOffset":4339,"count":1},{"startOffset":4183,"endOffset":4288,"count":0},{"startOffset":4289,"endOffset":4319,"count":0},{"startOffset":4325,"endOffset":4337,"count":0}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":4811,"endOffset":5125,"count":24},{"startOffset":4878,"endOffset":4912,"count":0},{"startOffset":4917,"endOffset":4960,"count":0},{"startOffset":5022,"endOffset":5083,"count":0},{"startOffset":5087,"endOffset":5124,"count":0}],"isBlockCoverage":true},{"functionName":"baseTimes","ranges":[{"startOffset":5440,"endOffset":5601,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnary","ranges":[{"startOffset":5821,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5857,"endOffset":5902,"count":16}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":6118,"endOffset":6203,"count":3},{"startOffset":6175,"endOffset":6186,"count":0}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":6459,"endOffset":6559,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6504,"endOffset":6556,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7078,"endOffset":7230,"count":1},{"startOffset":7128,"endOffset":7146,"count":0},{"startOffset":7147,"endOffset":7174,"count":0},{"startOffset":7196,"endOffset":7222,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8230,"endOffset":8360,"count":1},{"startOffset":8346,"endOffset":8358,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9258,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":8977,"endOffset":8997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9007,"endOffset":9255,"count":8},{"startOffset":9051,"endOffset":9075,"count":0},{"startOffset":9139,"endOffset":9254,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":9387,"endOffset":9600,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":9706,"endOffset":9805,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":10086,"endOffset":10221,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":10404,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":10870,"endOffset":11007,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":11236,"endOffset":11427,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":11749,"endOffset":11967,"count":24},{"startOffset":11832,"endOffset":11848,"count":0},{"startOffset":11894,"endOffset":11965,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":12084,"endOffset":12152,"count":24}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":12400,"endOffset":12699,"count":16},{"startOffset":12517,"endOffset":12540,"count":0},{"startOffset":12623,"endOffset":12667,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":12893,"endOffset":13040,"count":16},{"startOffset":13021,"endOffset":13037,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":13286,"endOffset":13364,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":13610,"endOffset":13838,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":14238,"endOffset":14455,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":14564,"endOffset":14714,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":14954,"endOffset":15087,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":15273,"endOffset":15343,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":15581,"endOffset":15651,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":15888,"endOffset":16066,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":16457,"endOffset":16562,"count":24}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":16670,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":16984,"endOffset":17120,"count":16}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":17305,"endOffset":17364,"count":16}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":17601,"endOffset":17660,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":17898,"endOffset":18286,"count":16},{"startOffset":18168,"endOffset":18285,"count":0}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":18763,"endOffset":19810,"count":0}],"isBlockCoverage":false},{"functionName":"assignMergeValue","ranges":[{"startOffset":20074,"endOffset":20277,"count":56},{"startOffset":20177,"endOffset":20227,"count":8},{"startOffset":20207,"endOffset":20226,"count":0},{"startOffset":20229,"endOffset":20275,"count":48}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":20648,"endOffset":20886,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":21147,"endOffset":21315,"count":32},{"startOffset":21231,"endOffset":21314,"count":16}],"isBlockCoverage":true},{"functionName":"baseAssignValue","ranges":[{"startOffset":21579,"endOffset":21854,"count":48},{"startOffset":21651,"endOffset":21668,"count":0},{"startOffset":21670,"endOffset":21816,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":22565,"endOffset":22792,"count":36},{"startOffset":22615,"endOffset":22677,"count":0},{"startOffset":22743,"endOffset":22761,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":22978,"endOffset":23075,"count":17},{"startOffset":23041,"endOffset":23072,"count":9}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":23296,"endOffset":23498,"count":3},{"startOffset":23370,"endOffset":23393,"count":0},{"startOffset":23441,"endOffset":23455,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":23721,"endOffset":23856,"count":0}],"isBlockCoverage":false},{"functionName":"baseKeysIn","ranges":[{"startOffset":24070,"endOffset":24386,"count":40},{"startOffset":24125,"endOffset":24163,"count":0},{"startOffset":24247,"endOffset":24367,"count":56},{"startOffset":24280,"endOffset":24329,"count":0}],"isBlockCoverage":true},{"functionName":"baseMerge","ranges":[{"startOffset":24803,"endOffset":25402,"count":40},{"startOffset":24894,"endOffset":24911,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24930,"endOffset":25390,"count":56},{"startOffset":24966,"endOffset":24988,"count":24},{"startOffset":25018,"endOffset":25107,"count":16},{"startOffset":25107,"endOffset":25386,"count":40},{"startOffset":25159,"endOffset":25238,"count":0}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":26039,"endOffset":27758,"count":16},{"startOffset":26256,"endOffset":26317,"count":0},{"startOffset":26350,"endOffset":26417,"count":0},{"startOffset":26703,"endOffset":27135,"count":0},{"startOffset":27173,"endOffset":27197,"count":0},{"startOffset":27261,"endOffset":27314,"count":0},{"startOffset":27350,"endOffset":27373,"count":8},{"startOffset":27375,"endOffset":27430,"count":8},{"startOffset":27436,"endOffset":27477,"count":0}],"isBlockCoverage":true},{"functionName":"baseRest","ranges":[{"startOffset":28067,"endOffset":28167,"count":1}],"isBlockCoverage":true},{"functionName":"baseSetToString","ranges":[{"startOffset":28466,"endOffset":28645,"count":1}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":28850,"endOffset":29091,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":29275,"endOffset":29461,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":29682,"endOffset":29898,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":30119,"endOffset":30324,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":30694,"endOffset":31240,"count":0}],"isBlockCoverage":false},{"functionName":"createAssigner","ranges":[{"startOffset":31423,"endOffset":32158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31477,"endOffset":32154,"count":24},{"startOffset":31590,"endOffset":31611,"count":0},{"startOffset":31652,"endOffset":31664,"count":0},{"startOffset":31717,"endOffset":31751,"count":0},{"startOffset":31759,"endOffset":31783,"count":0},{"startOffset":31818,"endOffset":31866,"count":0},{"startOffset":31868,"endOffset":31949,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":32377,"endOffset":32774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32422,"endOffset":32771,"count":40},{"startOffset":32603,"endOffset":32748,"count":56},{"startOffset":32637,"endOffset":32645,"count":0},{"startOffset":32718,"endOffset":32742,"count":0}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":32948,"endOffset":33103,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":33349,"endOffset":33471,"count":3},{"startOffset":33457,"endOffset":33468,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":33672,"endOffset":34080,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneObject","ranges":[{"startOffset":34236,"endOffset":34396,"count":8},{"startOffset":34389,"endOffset":34393,"count":0}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":34671,"endOffset":34946,"count":0}],"isBlockCoverage":false},{"functionName":"isIterateeCall","ranges":[{"startOffset":35316,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":35847,"endOffset":36046,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":36235,"endOffset":36309,"count":3},{"startOffset":36283,"endOffset":36306,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":36503,"endOffset":36678,"count":48},{"startOffset":36634,"endOffset":36648,"count":0}],"isBlockCoverage":true},{"functionName":"nativeKeysIn","ranges":[{"startOffset":36972,"endOffset":37137,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":37322,"endOffset":37399,"count":36}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":37754,"endOffset":38318,"count":1},{"startOffset":37858,"endOffset":37865,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37880,"endOffset":38315,"count":24}],"isBlockCoverage":true},{"functionName":"safeGet","ranges":[{"startOffset":38563,"endOffset":38748,"count":32},{"startOffset":38623,"endOffset":38659,"count":0},{"startOffset":38661,"endOffset":38678,"count":0},{"startOffset":38706,"endOffset":38723,"count":0}],"isBlockCoverage":true},{"functionName":"shortOut","ranges":[{"startOffset":39310,"endOffset":39688,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39385,"endOffset":39685,"count":1},{"startOffset":39528,"endOffset":39606,"count":0}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":39849,"endOffset":40037,"count":3},{"startOffset":39951,"endOffset":40018,"count":0},{"startOffset":40022,"endOffset":40036,"count":0}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":40720,"endOffset":40815,"count":72},{"startOffset":40773,"endOffset":40812,"count":48},{"startOffset":40793,"endOffset":40811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41238,"endOffset":41270,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":41294,"endOffset":41434,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":42513,"endOffset":42616,"count":40},{"startOffset":42592,"endOffset":42613,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":43142,"endOffset":43231,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":43947,"endOffset":44292,"count":11},{"startOffset":44000,"endOffset":44023,"count":0},{"startOffset":44235,"endOffset":44251,"count":8},{"startOffset":44252,"endOffset":44270,"count":8},{"startOffset":44271,"endOffset":44289,"count":8}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":44839,"endOffset":44967,"count":40},{"startOffset":44900,"endOffset":44917,"count":0},{"startOffset":44918,"endOffset":44935,"count":0},{"startOffset":44936,"endOffset":44964,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":45550,"endOffset":45673,"count":134},{"startOffset":45627,"endOffset":45670,"count":126},{"startOffset":45648,"endOffset":45669,"count":46}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":46172,"endOffset":46256,"count":33},{"startOffset":46226,"endOffset":46253,"count":25}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":46857,"endOffset":47244,"count":16},{"startOffset":46951,"endOffset":46974,"count":0},{"startOffset":47032,"endOffset":47054,"count":0}],"isBlockCoverage":true},{"functionName":"toPlainObject","ranges":[{"startOffset":48238,"endOffset":48314,"count":0}],"isBlockCoverage":false},{"functionName":"keysIn","ranges":[{"startOffset":48822,"endOffset":48930,"count":40},{"startOffset":48877,"endOffset":48906,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49954,"endOffset":50031,"count":24}],"isBlockCoverage":true},{"functionName":"constant","ranges":[{"startOffset":50461,"endOffset":50534,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50497,"endOffset":50531,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":50833,"endOffset":50877,"count":24}],"isBlockCoverage":true},{"functionName":"stubFalse","ranges":[{"startOffset":51089,"endOffset":51129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/shared/ast-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":910,"count":1}],"isBlockCoverage":true},{"functionName":"createGlobalLinebreakMatcher","ranges":[{"startOffset":688,"endOffset":785,"count":533}],"isBlockCoverage":true}]},{"scriptId":"255","url":"file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/dist/eslintrc-universal.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34518,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":196,"endOffset":310,"count":4},{"startOffset":267,"endOffset":284,"count":3},{"startOffset":285,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1005,"endOffset":1083,"count":3}],"isBlockCoverage":true},{"functionName":"getRuleSeverity","ranges":[{"startOffset":1915,"endOffset":2282,"count":1568},{"startOffset":2022,"endOffset":2034,"count":0},{"startOffset":2112,"endOffset":2149,"count":0},{"startOffset":2254,"endOffset":2258,"count":0},{"startOffset":2265,"endOffset":2281,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeToStrings","ranges":[{"startOffset":2567,"endOffset":3110,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorSeverity","ranges":[{"startOffset":3360,"endOffset":3446,"count":0}],"isBlockCoverage":false},{"functionName":"isValidSeverity","ranges":[{"startOffset":3671,"endOffset":3930,"count":0}],"isBlockCoverage":false},{"functionName":"isEverySeverityValid","ranges":[{"startOffset":4139,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConfigGlobal","ranges":[{"startOffset":4572,"endOffset":5124,"count":6392},{"startOffset":4661,"endOffset":4698,"count":0},{"startOffset":4708,"endOffset":4718,"count":792},{"startOffset":4727,"endOffset":4739,"count":792},{"startOffset":4748,"endOffset":4765,"count":792},{"startOffset":4774,"endOffset":4821,"count":792},{"startOffset":4831,"endOffset":4841,"count":0},{"startOffset":4850,"endOffset":4861,"count":5576},{"startOffset":4870,"endOffset":4883,"count":5576},{"startOffset":4892,"endOffset":4908,"count":5576},{"startOffset":4917,"endOffset":4964,"count":5600},{"startOffset":4974,"endOffset":5116,"count":0}],"isBlockCoverage":true},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":6866,"endOffset":7346,"count":0}],"isBlockCoverage":false},{"functionName":"ajvOrig","ranges":[{"startOffset":12050,"endOffset":12472,"count":1}],"isBlockCoverage":true},{"functionName":"getDiff","ranges":[{"startOffset":15166,"endOffset":15400,"count":1},{"startOffset":15278,"endOffset":15380,"count":57},{"startOffset":15332,"endOffset":15374,"count":19}],"isBlockCoverage":true},{"functionName":"ConfigValidator","ranges":[{"startOffset":20318,"endOffset":20414,"count":8}],"isBlockCoverage":true},{"functionName":"getRuleOptionsSchema","ranges":[{"startOffset":20633,"endOffset":21358,"count":0}],"isBlockCoverage":false},{"functionName":"validateRuleSeverity","ranges":[{"startOffset":21613,"endOffset":22159,"count":0}],"isBlockCoverage":false},{"functionName":"validateRuleSchema","ranges":[{"startOffset":22426,"endOffset":23050,"count":0}],"isBlockCoverage":false},{"functionName":"validateRuleOptions","ranges":[{"startOffset":23530,"endOffset":24155,"count":0}],"isBlockCoverage":false},{"functionName":"validateEnvironment","ranges":[{"startOffset":24518,"endOffset":25031,"count":0}],"isBlockCoverage":false},{"functionName":"validateRules","ranges":[{"startOffset":25380,"endOffset":25757,"count":0}],"isBlockCoverage":false},{"functionName":"validateGlobals","ranges":[{"startOffset":26023,"endOffset":26521,"count":0}],"isBlockCoverage":false},{"functionName":"validateProcessor","ranges":[{"startOffset":26825,"endOffset":27085,"count":0}],"isBlockCoverage":false},{"functionName":"formatErrors","ranges":[{"startOffset":27276,"endOffset":28355,"count":0}],"isBlockCoverage":false},{"functionName":"validateConfigSchema","ranges":[{"startOffset":28617,"endOffset":29062,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":29507,"endOffset":30101,"count":0}],"isBlockCoverage":false},{"functionName":"validateConfigArray","ranges":[{"startOffset":30253,"endOffset":31051,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePackageName","ranges":[{"startOffset":31453,"endOffset":32857,"count":0}],"isBlockCoverage":false},{"functionName":"getShorthandName","ranges":[{"startOffset":33064,"endOffset":33606,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceFromTerm","ranges":[{"startOffset":33782,"endOffset":33903,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/shared/traverser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5481,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":619,"endOffset":658,"count":29}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":818,"endOffset":918,"count":4188},{"startOffset":861,"endOffset":885,"count":4064},{"startOffset":886,"endOffset":915,"count":4064}],"isBlockCoverage":true},{"functionName":"getVisitorKeys","ranges":[{"startOffset":1139,"endOffset":1386,"count":4060},{"startOffset":1239,"endOffset":1366,"count":0}],"isBlockCoverage":true},{"functionName":"Traverser","ranges":[{"startOffset":1464,"endOffset":1694,"count":21}],"isBlockCoverage":true},{"functionName":"current","ranges":[{"startOffset":1787,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"parents","ranges":[{"startOffset":1947,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"break","ranges":[{"startOffset":2084,"endOffset":2128,"count":4}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":2224,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":2829,"endOffset":3165,"count":21},{"startOffset":3022,"endOffset":3032,"count":0},{"startOffset":3070,"endOffset":3077,"count":0},{"startOffset":3115,"endOffset":3122,"count":13}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":3374,"endOffset":4388,"count":4188},{"startOffset":3427,"endOffset":3458,"count":124},{"startOffset":3458,"endOffset":3600,"count":4064},{"startOffset":3602,"endOffset":4270,"count":4060},{"startOffset":3705,"endOffset":4260,"count":2154},{"startOffset":3797,"endOffset":3813,"count":3756},{"startOffset":3820,"endOffset":4209,"count":3750},{"startOffset":3918,"endOffset":4109,"count":835},{"startOffset":3977,"endOffset":3993,"count":1252},{"startOffset":4000,"endOffset":4087,"count":1252},{"startOffset":4109,"endOffset":4191,"count":2915},{"startOffset":4270,"endOffset":4299,"count":4064},{"startOffset":4299,"endOffset":4349,"count":4052},{"startOffset":4349,"endOffset":4387,"count":4064}],"isBlockCoverage":true},{"functionName":"getKeys","ranges":[{"startOffset":4605,"endOffset":4659,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":5227,"endOffset":5307,"count":21}],"isBlockCoverage":true},{"functionName":"get DEFAULT_VISITOR_KEYS","ranges":[{"startOffset":5391,"endOffset":5449,"count":4}],"isBlockCoverage":true}]},{"scriptId":"257","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":78,"count":1}],"isBlockCoverage":true}]},{"scriptId":"258","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/source-code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22529,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":890,"endOffset":1283,"count":12},{"startOffset":936,"endOffset":1004,"count":0},{"startOffset":1029,"endOffset":1099,"count":0},{"startOffset":1119,"endOffset":1191,"count":0},{"startOffset":1213,"endOffset":1281,"count":0}],"isBlockCoverage":true},{"functionName":"looksLikeExport","ranges":[{"startOffset":1474,"endOffset":1701,"count":1204},{"startOffset":1610,"endOffset":1660,"count":177},{"startOffset":1661,"endOffset":1698,"count":177}],"isBlockCoverage":true},{"functionName":"sortedMerge","ranges":[{"startOffset":1948,"endOffset":2432,"count":12},{"startOffset":2136,"endOffset":2410,"count":7414},{"startOffset":2182,"endOffset":2276,"count":4816},{"startOffset":2278,"endOffset":2336,"count":7312},{"startOffset":2336,"endOffset":2404,"count":102}],"isBlockCoverage":true},{"functionName":"nodesOrTokensOverlap","ranges":[{"startOffset":2697,"endOffset":2914,"count":3867},{"startOffset":2828,"endOffset":2911,"count":1479},{"startOffset":2874,"endOffset":2910,"count":0}],"isBlockCoverage":true},{"functionName":"isSpaceBetween","ranges":[{"startOffset":3572,"endOffset":4802,"count":3867},{"startOffset":3692,"endOffset":3721,"count":2388},{"startOffset":3721,"endOffset":3835,"count":1479},{"startOffset":3844,"endOffset":3861,"count":0},{"startOffset":3931,"endOffset":3953,"count":0},{"startOffset":4022,"endOffset":4042,"count":0},{"startOffset":4120,"endOffset":4781,"count":1979},{"startOffset":4286,"endOffset":4693,"count":1000},{"startOffset":4573,"endOffset":4624,"count":500},{"startOffset":4625,"endOffset":4675,"count":0},{"startOffset":4704,"endOffset":4740,"count":979},{"startOffset":4740,"endOffset":4781,"count":1000},{"startOffset":4781,"endOffset":4801,"count":500}],"isBlockCoverage":true},{"functionName":"SourceCode","ranges":[{"startOffset":5799,"endOffset":9338,"count":12},{"startOffset":5987,"endOffset":6064,"count":4},{"startOffset":6064,"endOffset":6382,"count":8},{"startOffset":6795,"endOffset":6810,"count":0},{"startOffset":7091,"endOffset":7096,"count":4},{"startOffset":7243,"endOffset":7250,"count":4},{"startOffset":7387,"endOffset":7420,"count":4},{"startOffset":7648,"endOffset":7670,"count":0},{"startOffset":7671,"endOffset":7717,"count":0},{"startOffset":7744,"endOffset":7801,"count":0},{"startOffset":8817,"endOffset":9015,"count":1794}],"isBlockCoverage":true},{"functionName":"splitLines","ranges":[{"startOffset":9569,"endOffset":9661,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":10046,"endOffset":10284,"count":932},{"startOffset":10105,"endOffset":10252,"count":842},{"startOffset":10252,"endOffset":10283,"count":90}],"isBlockCoverage":true},{"functionName":"getLines","ranges":[{"startOffset":10448,"endOffset":10493,"count":8}],"isBlockCoverage":true},{"functionName":"getAllComments","ranges":[{"startOffset":10655,"endOffset":10713,"count":108}],"isBlockCoverage":true},{"functionName":"getComments","ranges":[{"startOffset":11085,"endOffset":13633,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocComment","ranges":[{"startOffset":13943,"endOffset":16121,"count":1225},{"startOffset":14901,"endOffset":14925,"count":1204},{"startOffset":14938,"endOffset":15047,"count":1204},{"startOffset":15030,"endOffset":15038,"count":1027},{"startOffset":15039,"endOffset":15045,"count":177},{"startOffset":15061,"endOffset":15140,"count":0},{"startOffset":15154,"endOffset":15185,"count":0},{"startOffset":15198,"endOffset":16025,"count":0},{"startOffset":16068,"endOffset":16105,"count":21}],"isBlockCoverage":true},{"functionName":"findJSDocComment","ranges":[{"startOffset":14350,"endOffset":14823,"count":1204},{"startOffset":14545,"endOffset":14592,"count":0},{"startOffset":14593,"endOffset":14647,"count":0},{"startOffset":14648,"endOffset":14721,"count":0},{"startOffset":14736,"endOffset":14787,"count":0}],"isBlockCoverage":true},{"functionName":"getNodeByRangeIndex","ranges":[{"startOffset":16338,"endOffset":16872,"count":0}],"isBlockCoverage":false},{"functionName":"isSpaceBetween","ranges":[{"startOffset":17394,"endOffset":17490,"count":10}],"isBlockCoverage":true},{"functionName":"isSpaceBetweenTokens","ranges":[{"startOffset":18200,"endOffset":18301,"count":3857}],"isBlockCoverage":true},{"functionName":"getLocFromIndex","ranges":[{"startOffset":18619,"endOffset":19998,"count":0}],"isBlockCoverage":false},{"functionName":"getIndexFromLoc","ranges":[{"startOffset":20583,"endOffset":22496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"259","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62770,"count":1},{"startOffset":7865,"endOffset":8036,"count":0},{"startOffset":9143,"endOffset":9154,"count":0}],"isBlockCoverage":true},{"functionName":"_interopDefault","ranges":[{"startOffset":141,"endOffset":255,"count":1},{"startOffset":232,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"getInnermostScope","ranges":[{"startOffset":532,"endOffset":1022,"count":3},{"startOffset":678,"endOffset":988,"count":5},{"startOffset":755,"endOffset":982,"count":6},{"startOffset":845,"endOffset":867,"count":2},{"startOffset":869,"endOffset":972,"count":2}],"isBlockCoverage":true},{"functionName":"findVariable","ranges":[{"startOffset":1310,"endOffset":1782,"count":3},{"startOffset":1450,"endOffset":1484,"count":0},{"startOffset":1728,"endOffset":1781,"count":0}],"isBlockCoverage":true},{"functionName":"negate0","ranges":[{"startOffset":1948,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":2221,"endOffset":2270,"count":11}],"isBlockCoverage":true},{"functionName":"isPunctuatorTokenWithValue","ranges":[{"startOffset":2529,"endOffset":2646,"count":381},{"startOffset":2620,"endOffset":2644,"count":343}],"isBlockCoverage":true},{"functionName":"isArrowToken","ranges":[{"startOffset":2818,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":3071,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonToken","ranges":[{"startOffset":3331,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":3587,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"isOpeningParenToken","ranges":[{"startOffset":3869,"endOffset":3958,"count":344}],"isBlockCoverage":true},{"functionName":"isClosingParenToken","ranges":[{"startOffset":4156,"endOffset":4245,"count":37}],"isBlockCoverage":true},{"functionName":"isOpeningBracketToken","ranges":[{"startOffset":4451,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"isClosingBracketToken","ranges":[{"startOffset":4746,"endOffset":4837,"count":0}],"isBlockCoverage":false},{"functionName":"isOpeningBraceToken","ranges":[{"startOffset":5025,"endOffset":5114,"count":0}],"isBlockCoverage":false},{"functionName":"isClosingBraceToken","ranges":[{"startOffset":5300,"endOffset":5389,"count":0}],"isBlockCoverage":false},{"functionName":"isCommentToken","ranges":[{"startOffset":5563,"endOffset":5658,"count":1244}],"isBlockCoverage":true},{"functionName":"getOpeningParenOfParams","ranges":[{"startOffset":6483,"endOffset":6683,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionHeadLocation","ranges":[{"startOffset":6949,"endOffset":7727,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9434,"endOffset":9448,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9470,"endOffset":9500,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10023,"endOffset":10053,"count":71}],"isBlockCoverage":true},{"functionName":"getPropertyDescriptor","ranges":[{"startOffset":10313,"endOffset":10628,"count":0}],"isBlockCoverage":false},{"functionName":"isGetter","ranges":[{"startOffset":10792,"endOffset":10916,"count":0}],"isBlockCoverage":false},{"functionName":"getElementValues","ranges":[{"startOffset":11193,"endOffset":11949,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":11990,"endOffset":12166,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":12173,"endOffset":12349,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":12398,"endOffset":14737,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":14744,"endOffset":16804,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":16811,"endOffset":17140,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":17147,"endOffset":17256,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":17263,"endOffset":18250,"count":1},{"startOffset":17525,"endOffset":17575,"count":0},{"startOffset":17576,"endOffset":17624,"count":0},{"startOffset":17639,"endOffset":17716,"count":0},{"startOffset":17908,"endOffset":17958,"count":0},{"startOffset":17959,"endOffset":18090,"count":0},{"startOffset":18109,"endOffset":18200,"count":0}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":18257,"endOffset":18581,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":18588,"endOffset":19192,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":19199,"endOffset":19848,"count":0}],"isBlockCoverage":false},{"functionName":"ChainExpression","ranges":[{"startOffset":19855,"endOffset":20084,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":20091,"endOffset":20492,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":20499,"endOffset":21716,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":21723,"endOffset":21888,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":21895,"endOffset":22506,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":22513,"endOffset":22953,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":22960,"endOffset":23835,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticValueR","ranges":[{"startOffset":24129,"endOffset":24333,"count":1},{"startOffset":24315,"endOffset":24332,"count":0}],"isBlockCoverage":true},{"functionName":"getStaticPropertyNameValue","ranges":[{"startOffset":24866,"endOffset":25374,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticValue","ranges":[{"startOffset":25783,"endOffset":25947,"count":1},{"startOffset":25903,"endOffset":25945,"count":0}],"isBlockCoverage":true},{"functionName":"getStringIfConstant","ranges":[{"startOffset":26373,"endOffset":26850,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyName","ranges":[{"startOffset":27298,"endOffset":28158,"count":9},{"startOffset":27434,"endOffset":27521,"count":0},{"startOffset":27582,"endOffset":27625,"count":0},{"startOffset":27673,"endOffset":27689,"count":0},{"startOffset":27698,"endOffset":27722,"count":0},{"startOffset":27731,"endOffset":28110,"count":0},{"startOffset":28139,"endOffset":28157,"count":0}],"isBlockCoverage":true},{"functionName":"getFunctionNameWithKind","ranges":[{"startOffset":28476,"endOffset":30884,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":31437,"endOffset":31536,"count":0}],"isBlockCoverage":false},{"functionName":"$visit","ranges":[{"startOffset":31618,"endOffset":31896,"count":0}],"isBlockCoverage":false},{"functionName":"$visitChildren","ranges":[{"startOffset":31907,"endOffset":32705,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":32716,"endOffset":32778,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":32788,"endOffset":32846,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":32856,"endOffset":32909,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":32919,"endOffset":33317,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":33327,"endOffset":33379,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":33389,"endOffset":33446,"count":0}],"isBlockCoverage":false},{"functionName":"ImportExpression","ranges":[{"startOffset":33456,"endOffset":33510,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":33520,"endOffset":33943,"count":0}],"isBlockCoverage":false},{"functionName":"MethodDefinition","ranges":[{"startOffset":33953,"endOffset":34286,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":34296,"endOffset":34347,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":34357,"endOffset":34682,"count":0}],"isBlockCoverage":false},{"functionName":"PropertyDefinition","ranges":[{"startOffset":34692,"endOffset":35027,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":35037,"endOffset":35490,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":35500,"endOffset":35554,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":35564,"endOffset":35617,"count":0}],"isBlockCoverage":false},{"functionName":"hasSideEffect","ranges":[{"startOffset":36319,"endOffset":36604,"count":0}],"isBlockCoverage":false},{"functionName":"getParentSyntaxParen","ranges":[{"startOffset":36906,"endOffset":38359,"count":36},{"startOffset":37024,"endOffset":37046,"count":28},{"startOffset":37123,"endOffset":37154,"count":34},{"startOffset":37156,"endOffset":37314,"count":34},{"startOffset":37314,"endOffset":37338,"count":2},{"startOffset":37348,"endOffset":37591,"count":0},{"startOffset":37601,"endOffset":37620,"count":0},{"startOffset":37629,"endOffset":37788,"count":0},{"startOffset":37798,"endOffset":37961,"count":0},{"startOffset":37971,"endOffset":38139,"count":0},{"startOffset":38149,"endOffset":38309,"count":0},{"startOffset":38319,"endOffset":38351,"count":0}],"isBlockCoverage":true},{"functionName":"isParenthesized","ranges":[{"startOffset":38907,"endOffset":40208,"count":311},{"startOffset":39243,"endOffset":39327,"count":0},{"startOffset":39333,"endOffset":39432,"count":0},{"startOffset":39600,"endOffset":39629,"count":0},{"startOffset":39637,"endOffset":39665,"count":0},{"startOffset":39719,"endOffset":39863,"count":312},{"startOffset":39903,"endOffset":39937,"count":312},{"startOffset":39938,"endOffset":39984,"count":310},{"startOffset":39985,"endOffset":40032,"count":37},{"startOffset":40033,"endOffset":40153,"count":36},{"startOffset":40154,"endOffset":40176,"count":2}],"isBlockCoverage":true},{"functionName":"isEscaped","ranges":[{"startOffset":40719,"endOffset":40904,"count":0}],"isBlockCoverage":false},{"functionName":"replaceS","ranges":[{"startOffset":41187,"endOffset":42242,"count":0}],"isBlockCoverage":false},{"functionName":"replaceF","ranges":[{"startOffset":42529,"endOffset":42906,"count":0}],"isBlockCoverage":false},{"functionName":"PatternMatcher","ranges":[{"startOffset":43162,"endOffset":43610,"count":0}],"isBlockCoverage":false},{"functionName":"execAll","ranges":[{"startOffset":43826,"endOffset":44249,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":44453,"endOffset":44564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44883,"endOffset":45080,"count":0}],"isBlockCoverage":false},{"functionName":"isModifiedGlobal","ranges":[{"startOffset":45566,"endOffset":45743,"count":440},{"startOffset":45642,"endOffset":45679,"count":376},{"startOffset":45680,"endOffset":45735,"count":376}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45716,"endOffset":45734,"count":9}],"isBlockCoverage":true},{"functionName":"isPassThrough","ranges":[{"startOffset":46014,"endOffset":46505,"count":12},{"startOffset":46123,"endOffset":46227,"count":0},{"startOffset":46236,"endOffset":46285,"count":0},{"startOffset":46294,"endOffset":46398,"count":0},{"startOffset":46407,"endOffset":46454,"count":0}],"isBlockCoverage":true},{"functionName":"ReferenceTracker","ranges":[{"startOffset":46977,"endOffset":47315,"count":48}],"isBlockCoverage":true},{"functionName":"iterateGlobalReferences","ranges":[{"startOffset":47554,"endOffset":48454,"count":64},{"startOffset":47640,"endOffset":48045,"count":184},{"startOffset":47827,"endOffset":47867,"count":64},{"startOffset":47867,"endOffset":48045,"count":120},{"startOffset":48097,"endOffset":48448,"count":256},{"startOffset":48233,"endOffset":48273,"count":0}],"isBlockCoverage":true},{"functionName":"iterateCjsReferences","ranges":[{"startOffset":48693,"endOffset":49360,"count":16},{"startOffset":48801,"endOffset":49354,"count":0}],"isBlockCoverage":true},{"functionName":"iterateEsmReferences","ranges":[{"startOffset":49593,"endOffset":51811,"count":16},{"startOffset":49725,"endOffset":51805,"count":106},{"startOffset":49772,"endOffset":49794,"count":68},{"startOffset":49796,"endOffset":49836,"count":50},{"startOffset":49836,"endOffset":49928,"count":56},{"startOffset":49928,"endOffset":49968,"count":54},{"startOffset":49968,"endOffset":50096,"count":2},{"startOffset":50096,"endOffset":50187,"count":0},{"startOffset":50187,"endOffset":50243,"count":2},{"startOffset":50243,"endOffset":50712,"count":0},{"startOffset":50712,"endOffset":51795,"count":2},{"startOffset":51018,"endOffset":51032,"count":0},{"startOffset":51187,"endOffset":51214,"count":0},{"startOffset":51269,"endOffset":51327,"count":0},{"startOffset":51384,"endOffset":51741,"count":0}],"isBlockCoverage":true},{"functionName":"_iterateVariableReferences","ranges":[{"startOffset":52250,"endOffset":52973,"count":378},{"startOffset":52371,"endOffset":52401,"count":0},{"startOffset":52516,"endOffset":52899,"count":12},{"startOffset":52559,"endOffset":52607,"count":0},{"startOffset":52693,"endOffset":52710,"count":9},{"startOffset":52712,"endOffset":52807,"count":0}],"isBlockCoverage":true},{"functionName":"_iteratePropertyReferences","ranges":[{"startOffset":53362,"endOffset":55702,"count":12},{"startOffset":53483,"endOffset":53526,"count":0},{"startOffset":53612,"endOffset":54416,"count":9},{"startOffset":53811,"endOffset":54416,"count":0},{"startOffset":54416,"endOffset":54463,"count":3},{"startOffset":54463,"endOffset":54647,"count":0},{"startOffset":54647,"endOffset":54693,"count":3},{"startOffset":54693,"endOffset":54989,"count":2},{"startOffset":54758,"endOffset":54960,"count":0},{"startOffset":54989,"endOffset":55042,"count":1},{"startOffset":55042,"endOffset":55287,"count":0},{"startOffset":55287,"endOffset":55337,"count":1},{"startOffset":55337,"endOffset":55502,"count":0},{"startOffset":55502,"endOffset":55553,"count":1},{"startOffset":55553,"endOffset":55696,"count":0}],"isBlockCoverage":true},{"functionName":"_iterateLhsReferences","ranges":[{"startOffset":56067,"endOffset":57531,"count":0}],"isBlockCoverage":false},{"functionName":"_iterateImportReferences","ranges":[{"startOffset":57914,"endOffset":59772,"count":2},{"startOffset":58054,"endOffset":58090,"count":0},{"startOffset":58188,"endOffset":58199,"count":0},{"startOffset":58288,"endOffset":58326,"count":0},{"startOffset":58489,"endOffset":58692,"count":0},{"startOffset":58933,"endOffset":59766,"count":0}],"isBlockCoverage":true},{"functionName":"exceptDefault","ranges":[{"startOffset":60095,"endOffset":60182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"260","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/node_modules/eslint-visitor-keys/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2195,"count":1},{"startOffset":298,"endOffset":332,"count":84}],"isBlockCoverage":true},{"functionName":"filterKey","ranges":[{"startOffset":633,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":1206,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"unionWith","ranges":[{"startOffset":1622,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"261","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24736,"count":1}],"isBlockCoverage":true},{"functionName":"createIndexMap","ranges":[{"startOffset":1279,"endOffset":2228,"count":12},{"startOffset":1529,"endOffset":2209,"count":94},{"startOffset":1584,"endOffset":1617,"count":82},{"startOffset":1618,"endOffset":1643,"count":12},{"startOffset":1687,"endOffset":1739,"count":7394},{"startOffset":1741,"endOffset":1865,"count":7312},{"startOffset":1916,"endOffset":1945,"count":82},{"startOffset":1946,"endOffset":1971,"count":12},{"startOffset":2019,"endOffset":2075,"count":174},{"startOffset":2077,"endOffset":2203,"count":102}],"isBlockCoverage":true},{"functionName":"createCursorWithSkip","ranges":[{"startOffset":3130,"endOffset":3860,"count":30981},{"startOffset":3332,"endOffset":3364,"count":927},{"startOffset":3364,"endOffset":3573,"count":30054},{"startOffset":3402,"endOffset":3432,"count":3570},{"startOffset":3432,"endOffset":3573,"count":26484},{"startOffset":3448,"endOffset":3573,"count":4596},{"startOffset":3670,"endOffset":3701,"count":3570}],"isBlockCoverage":true},{"functionName":"createCursorWithCount","ranges":[{"startOffset":4818,"endOffset":5685,"count":825},{"startOffset":5051,"endOffset":5112,"count":221},{"startOffset":5112,"endOffset":5377,"count":604},{"startOffset":5150,"endOffset":5180,"count":0},{"startOffset":5363,"endOffset":5370,"count":82},{"startOffset":5476,"endOffset":5507,"count":522},{"startOffset":5669,"endOffset":5676,"count":221},{"startOffset":5677,"endOffset":5681,"count":604}],"isBlockCoverage":true},{"functionName":"createCursorWithPadding","ranges":[{"startOffset":7153,"endOffset":7748,"count":668},{"startOffset":7302,"endOffset":7338,"count":69},{"startOffset":7340,"endOffset":7432,"count":69},{"startOffset":7432,"endOffset":7510,"count":599},{"startOffset":7512,"endOffset":7636,"count":0},{"startOffset":7636,"endOffset":7747,"count":599}],"isBlockCoverage":true},{"functionName":"getAdjacentCommentTokensFromCursor","ranges":[{"startOffset":7976,"endOffset":8265,"count":5},{"startOffset":8123,"endOffset":8154,"count":7},{"startOffset":8156,"endOffset":8243,"count":2}],"isBlockCoverage":true},{"functionName":"TokenStore","ranges":[{"startOffset":9255,"endOffset":9418,"count":12}],"isBlockCoverage":true},{"functionName":"getTokenByRangeStart","ranges":[{"startOffset":9987,"endOffset":10436,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstToken","ranges":[{"startOffset":11042,"endOffset":11326,"count":9164}],"isBlockCoverage":true},{"functionName":"getLastToken","ranges":[{"startOffset":11602,"endOffset":11886,"count":5763}],"isBlockCoverage":true},{"functionName":"getTokenBefore","ranges":[{"startOffset":12198,"endOffset":12473,"count":7997}],"isBlockCoverage":true},{"functionName":"getTokenAfter","ranges":[{"startOffset":12784,"endOffset":13057,"count":6553}],"isBlockCoverage":true},{"functionName":"getFirstTokenBetween","ranges":[{"startOffset":13467,"endOffset":13766,"count":1504}],"isBlockCoverage":true},{"functionName":"getLastTokenBetween","ranges":[{"startOffset":14175,"endOffset":14474,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenOrCommentBefore","ranges":[{"startOffset":14942,"endOffset":15060,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenOrCommentAfter","ranges":[{"startOffset":15527,"endOffset":15643,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTokens","ranges":[{"startOffset":16434,"endOffset":16721,"count":217}],"isBlockCoverage":true},{"functionName":"getLastTokens","ranges":[{"startOffset":16978,"endOffset":17275,"count":4}],"isBlockCoverage":true},{"functionName":"getTokensBefore","ranges":[{"startOffset":17568,"endOffset":17856,"count":0}],"isBlockCoverage":false},{"functionName":"getTokensAfter","ranges":[{"startOffset":18148,"endOffset":18424,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTokensBetween","ranges":[{"startOffset":18838,"endOffset":19140,"count":0}],"isBlockCoverage":false},{"functionName":"getLastTokensBetween","ranges":[{"startOffset":19553,"endOffset":19865,"count":0}],"isBlockCoverage":false},{"functionName":"getTokens","ranges":[{"startOffset":20791,"endOffset":21090,"count":54}],"isBlockCoverage":true},{"functionName":"getTokensBetween","ranges":[{"startOffset":22159,"endOffset":22450,"count":614}],"isBlockCoverage":true},{"functionName":"commentsExistBetween","ranges":[{"startOffset":22886,"endOffset":23129,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentsBefore","ranges":[{"startOffset":23391,"endOffset":23757,"count":5}],"isBlockCoverage":true},{"functionName":"getCommentsAfter","ranges":[{"startOffset":24018,"endOffset":24372,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentsInside","ranges":[{"startOffset":24581,"endOffset":24732,"count":2}],"isBlockCoverage":true}]},{"scriptId":"262","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/cursors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3835,"count":1}],"isBlockCoverage":true},{"functionName":"CursorFactory","ranges":[{"startOffset":1213,"endOffset":1359,"count":2}],"isBlockCoverage":true},{"functionName":"createBaseCursor","ranges":[{"startOffset":1921,"endOffset":2167,"count":31806},{"startOffset":2042,"endOffset":2067,"count":4589},{"startOffset":2068,"endOffset":2086,"count":27217}],"isBlockCoverage":true},{"functionName":"createCursor","ranges":[{"startOffset":2988,"endOffset":3486,"count":31806},{"startOffset":3215,"endOffset":3281,"count":4092},{"startOffset":3305,"endOffset":3367,"count":944},{"startOffset":3392,"endOffset":3456,"count":221}],"isBlockCoverage":true}]},{"scriptId":"263","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/backward-token-comment-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2026,"count":1}],"isBlockCoverage":true},{"functionName":"BackwardTokenCommentCursor","ranges":[{"startOffset":1079,"endOffset":1393,"count":1883}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":1422,"endOffset":2022,"count":1885},{"startOffset":1480,"endOffset":1510,"count":1871},{"startOffset":1511,"endOffset":1517,"count":14},{"startOffset":1568,"endOffset":1602,"count":1282},{"startOffset":1603,"endOffset":1609,"count":603},{"startOffset":1630,"endOffset":1680,"count":1871},{"startOffset":1643,"endOffset":1679,"count":1272},{"startOffset":1682,"endOffset":1761,"count":1846},{"startOffset":1761,"endOffset":1913,"count":39},{"startOffset":1780,"endOffset":1863,"count":35},{"startOffset":1863,"endOffset":1913,"count":4},{"startOffset":1952,"endOffset":2015,"count":1881},{"startOffset":1975,"endOffset":2014,"count":0}],"isBlockCoverage":true}]},{"scriptId":"264","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2325,"count":1}],"isBlockCoverage":true},{"functionName":"Cursor","ranges":[{"startOffset":1477,"endOffset":1527,"count":37132}],"isBlockCoverage":true},{"functionName":"getOneToken","ranges":[{"startOffset":1669,"endOffset":1744,"count":9026},{"startOffset":1716,"endOffset":1730,"count":8998},{"startOffset":1731,"endOffset":1737,"count":28}],"isBlockCoverage":true},{"functionName":"getAllTokens","ranges":[{"startOffset":1878,"endOffset":2035,"count":820},{"startOffset":1955,"endOffset":2005,"count":427}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":2202,"endOffset":2321,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3207,"count":1}],"isBlockCoverage":true},{"functionName":"getStartLocation","ranges":[{"startOffset":445,"endOffset":508,"count":32407}],"isBlockCoverage":true},{"functionName":"search","ranges":[{"startOffset":1018,"endOffset":1181,"count":4589},{"startOffset":1155,"endOffset":1170,"count":1311},{"startOffset":1171,"endOffset":1178,"count":3278}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1089,"endOffset":1127,"count":32407}],"isBlockCoverage":true},{"functionName":"getFirstIndex","ranges":[{"startOffset":1580,"endOffset":2180,"count":29992},{"startOffset":1663,"endOffset":1705,"count":19713},{"startOffset":1705,"endOffset":1742,"count":10279},{"startOffset":1742,"endOffset":2164,"count":4160},{"startOffset":1866,"endOffset":1872,"count":0},{"startOffset":2095,"endOffset":2132,"count":0},{"startOffset":2164,"endOffset":2179,"count":6119}],"isBlockCoverage":true},{"functionName":"getLastIndex","ranges":[{"startOffset":2601,"endOffset":3205,"count":29169},{"startOffset":2679,"endOffset":2723,"count":16527},{"startOffset":2723,"endOffset":2758,"count":12642},{"startOffset":2758,"endOffset":3173,"count":8716},{"startOffset":2880,"endOffset":2886,"count":0},{"startOffset":3104,"endOffset":3145,"count":0},{"startOffset":3173,"endOffset":3204,"count":3926}],"isBlockCoverage":true}]},{"scriptId":"266","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/backward-token-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1733,"count":1}],"isBlockCoverage":true},{"functionName":"BackwardTokenCursor","ranges":[{"startOffset":1056,"endOffset":1308,"count":11886}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":1337,"endOffset":1536,"count":3077},{"startOffset":1391,"endOffset":1508,"count":3053},{"startOffset":1508,"endOffset":1535,"count":24}],"isBlockCoverage":true},{"functionName":"getOneToken","ranges":[{"startOffset":1629,"endOffset":1729,"count":9978},{"startOffset":1690,"endOffset":1715,"count":9970},{"startOffset":1716,"endOffset":1722,"count":8}],"isBlockCoverage":true}]},{"scriptId":"267","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/filter-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1207,"count":1}],"isBlockCoverage":true},{"functionName":"FilterCursor","ranges":[{"startOffset":863,"endOffset":960,"count":4092}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":989,"endOffset":1203,"count":4092},{"startOffset":1078,"endOffset":1175,"count":4459},{"startOffset":1121,"endOffset":1165,"count":3546},{"startOffset":1175,"endOffset":1202,"count":546}],"isBlockCoverage":true}]},{"scriptId":"268","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/decorative-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1011,"count":1}],"isBlockCoverage":true},{"functionName":"DecorativeCursor","ranges":[{"startOffset":774,"endOffset":848,"count":5257}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":877,"endOffset":1007,"count":7382}],"isBlockCoverage":true}]},{"scriptId":"269","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/forward-token-comment-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2036,"count":1}],"isBlockCoverage":true},{"functionName":"ForwardTokenCommentCursor","ranges":[{"startOffset":1056,"endOffset":1369,"count":2706}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":1398,"endOffset":2032,"count":2796},{"startOffset":1503,"endOffset":1509,"count":0},{"startOffset":1578,"endOffset":1612,"count":1726},{"startOffset":1613,"endOffset":1619,"count":1070},{"startOffset":1653,"endOffset":1689,"count":1726},{"startOffset":1692,"endOffset":1771,"count":2725},{"startOffset":1771,"endOffset":1923,"count":71},{"startOffset":1873,"endOffset":1923,"count":0},{"startOffset":1985,"endOffset":2024,"count":169}],"isBlockCoverage":true}]},{"scriptId":"270","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/forward-token-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1826,"count":1}],"isBlockCoverage":true},{"functionName":"ForwardTokenCursor","ranges":[{"startOffset":1033,"endOffset":1285,"count":15400}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":1314,"endOffset":1513,"count":4270},{"startOffset":1368,"endOffset":1485,"count":3631},{"startOffset":1485,"endOffset":1512,"count":639}],"isBlockCoverage":true},{"functionName":"getOneToken","ranges":[{"startOffset":1606,"endOffset":1706,"count":11984},{"startOffset":1667,"endOffset":1692,"count":11982},{"startOffset":1693,"endOffset":1699,"count":2}],"isBlockCoverage":true},{"functionName":"getAllTokens","ranges":[{"startOffset":1735,"endOffset":1822,"count":69}],"isBlockCoverage":true}]},{"scriptId":"271","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/limit-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1106,"count":1}],"isBlockCoverage":true},{"functionName":"LimitCursor","ranges":[{"startOffset":842,"endOffset":927,"count":221}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":956,"endOffset":1102,"count":591},{"startOffset":997,"endOffset":1074,"count":489},{"startOffset":1074,"endOffset":1101,"count":102}],"isBlockCoverage":true}]},{"scriptId":"272","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/skip-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":true},{"functionName":"SkipCursor","ranges":[{"startOffset":840,"endOffset":925,"count":944}],"isBlockCoverage":true},{"functionName":"moveNext","ranges":[{"startOffset":954,"endOffset":1158,"count":944},{"startOffset":1064,"endOffset":1109,"count":0}],"isBlockCoverage":true}]},{"scriptId":"273","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/source-code/token-store/padded-token-cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1614,"count":1}],"isBlockCoverage":true},{"functionName":"PaddedTokenCursor","ranges":[{"startOffset":1318,"endOffset":1610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/code-path-analysis/code-path-analyzer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25066,"count":1}],"isBlockCoverage":true},{"functionName":"isCaseNode","ranges":[{"startOffset":954,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDefinitionValue","ranges":[{"startOffset":1239,"endOffset":1400,"count":8046},{"startOffset":1333,"endOffset":1372,"count":8030},{"startOffset":1373,"endOffset":1397,"count":0}],"isBlockCoverage":true},{"functionName":"isHandledLogicalOperator","ranges":[{"startOffset":1654,"endOffset":1773,"count":64},{"startOffset":1729,"endOffset":1749,"count":36},{"startOffset":1750,"endOffset":1770,"count":0}],"isBlockCoverage":true},{"functionName":"isLogicalAssignmentOperator","ranges":[{"startOffset":2138,"endOffset":2263,"count":181}],"isBlockCoverage":true},{"functionName":"getLabel","ranges":[{"startOffset":2436,"endOffset":2576,"count":3},{"startOffset":2511,"endOffset":2557,"count":0}],"isBlockCoverage":true},{"functionName":"isForkingByTrueOrFalse","ranges":[{"startOffset":2828,"endOffset":3379,"count":20},{"startOffset":2936,"endOffset":2965,"count":0},{"startOffset":2974,"endOffset":2993,"count":9},{"startOffset":3002,"endOffset":3024,"count":9},{"startOffset":3033,"endOffset":3057,"count":9},{"startOffset":3066,"endOffset":3127,"count":9},{"startOffset":3137,"endOffset":3224,"count":4},{"startOffset":3234,"endOffset":3327,"count":1},{"startOffset":3337,"endOffset":3371,"count":6}],"isBlockCoverage":true},{"functionName":"getBooleanValueIfSimpleConstant","ranges":[{"startOffset":3766,"endOffset":3912,"count":3},{"startOffset":3848,"endOffset":3891,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierReference","ranges":[{"startOffset":4167,"endOffset":5200,"count":1469},{"startOffset":4274,"endOffset":4298,"count":0},{"startOffset":4307,"endOffset":4329,"count":0},{"startOffset":4338,"endOffset":4363,"count":0},{"startOffset":4372,"endOffset":4392,"count":0},{"startOffset":4401,"endOffset":4420,"count":4},{"startOffset":4429,"endOffset":4452,"count":40},{"startOffset":4461,"endOffset":4491,"count":49},{"startOffset":4500,"endOffset":4532,"count":50},{"startOffset":4541,"endOffset":4586,"count":51},{"startOffset":4596,"endOffset":4623,"count":6},{"startOffset":4632,"endOffset":4658,"count":52},{"startOffset":4667,"endOffset":4698,"count":102},{"startOffset":4707,"endOffset":4731,"count":110},{"startOffset":4740,"endOffset":4763,"count":110},{"startOffset":4772,"endOffset":4837,"count":201},{"startOffset":4847,"endOffset":4863,"count":72},{"startOffset":4872,"endOffset":4898,"count":72},{"startOffset":4907,"endOffset":5074,"count":126},{"startOffset":4989,"endOffset":5023,"count":104},{"startOffset":5024,"endOffset":5059,"count":104},{"startOffset":5084,"endOffset":5149,"count":22},{"startOffset":5159,"endOffset":5192,"count":1069}],"isBlockCoverage":true},{"functionName":"forwardCurrentToHead","ranges":[{"startOffset":5635,"endOffset":7123,"count":6946},{"startOffset":6167,"endOffset":6184,"count":384},{"startOffset":6186,"endOffset":6488,"count":230},{"startOffset":6300,"endOffset":6478,"count":220},{"startOffset":6750,"endOffset":6764,"count":384},{"startOffset":6766,"endOffset":7114,"count":384},{"startOffset":6927,"endOffset":7104,"count":316}],"isBlockCoverage":true},{"functionName":"leaveFromCurrentSegment","ranges":[{"startOffset":7353,"endOffset":7917,"count":154},{"startOffset":7722,"endOffset":7876,"count":96}],"isBlockCoverage":true},{"functionName":"preprocess","ranges":[{"startOffset":8238,"endOffset":12080,"count":4015},{"startOffset":8506,"endOffset":8712,"count":719},{"startOffset":8570,"endOffset":8601,"count":0},{"startOffset":8602,"endOffset":8633,"count":0},{"startOffset":8635,"endOffset":8693,"count":0},{"startOffset":8721,"endOffset":8893,"count":1052},{"startOffset":8787,"endOffset":8814,"count":0},{"startOffset":8816,"endOffset":8874,"count":0},{"startOffset":8903,"endOffset":9135,"count":40},{"startOffset":8984,"endOffset":9044,"count":20},{"startOffset":9059,"endOffset":9116,"count":20},{"startOffset":9145,"endOffset":9383,"count":120},{"startOffset":9229,"endOffset":9292,"count":60},{"startOffset":9307,"endOffset":9364,"count":0},{"startOffset":9393,"endOffset":9422,"count":6},{"startOffset":9431,"endOffset":9873,"count":82},{"startOffset":9704,"endOffset":9761,"count":40},{"startOffset":9761,"endOffset":9854,"count":42},{"startOffset":9798,"endOffset":9854,"count":2},{"startOffset":9883,"endOffset":10046,"count":0},{"startOffset":10056,"endOffset":10286,"count":2},{"startOffset":10118,"endOffset":10267,"count":1},{"startOffset":10210,"endOffset":10267,"count":0},{"startOffset":10296,"endOffset":10573,"count":0},{"startOffset":10583,"endOffset":10866,"count":0},{"startOffset":10876,"endOffset":11215,"count":12},{"startOffset":10935,"endOffset":11024,"count":3},{"startOffset":11024,"endOffset":11196,"count":9},{"startOffset":11058,"endOffset":11112,"count":3},{"startOffset":11112,"endOffset":11196,"count":6},{"startOffset":11144,"endOffset":11196,"count":3},{"startOffset":11225,"endOffset":11247,"count":0},{"startOffset":11256,"endOffset":11590,"count":0},{"startOffset":11600,"endOffset":12035,"count":38},{"startOffset":11886,"endOffset":12016,"count":19},{"startOffset":12045,"endOffset":12072,"count":1950}],"isBlockCoverage":true},{"functionName":"processCodePathToEnter","ranges":[{"startOffset":12278,"endOffset":16729,"count":4023},{"startOffset":12391,"endOffset":12421,"count":4015},{"startOffset":13594,"endOffset":13959,"count":0},{"startOffset":13994,"endOffset":14066,"count":8},{"startOffset":14076,"endOffset":14103,"count":4},{"startOffset":14112,"endOffset":14138,"count":71},{"startOffset":14147,"endOffset":14236,"count":146},{"startOffset":14246,"endOffset":14333,"count":0},{"startOffset":14343,"endOffset":14423,"count":0},{"startOffset":14432,"endOffset":14571,"count":325},{"startOffset":14495,"endOffset":14552,"count":0},{"startOffset":14580,"endOffset":14721,"count":526},{"startOffset":14645,"endOffset":14702,"count":0},{"startOffset":14731,"endOffset":14992,"count":20},{"startOffset":15002,"endOffset":15310,"count":60},{"startOffset":15091,"endOffset":15291,"count":0},{"startOffset":15320,"endOffset":15349,"count":2},{"startOffset":15358,"endOffset":15448,"count":40},{"startOffset":15458,"endOffset":15628,"count":0},{"startOffset":15638,"endOffset":15736,"count":1},{"startOffset":15746,"endOffset":16115,"count":0},{"startOffset":16125,"endOffset":16147,"count":0},{"startOffset":16156,"endOffset":16180,"count":0},{"startOffset":16189,"endOffset":16209,"count":3},{"startOffset":16218,"endOffset":16240,"count":3},{"startOffset":16249,"endOffset":16352,"count":3},{"startOffset":16362,"endOffset":16545,"count":0},{"startOffset":16555,"endOffset":16582,"count":2894}],"isBlockCoverage":true},{"functionName":"startCodePath","ranges":[{"startOffset":12681,"endOffset":13371,"count":154},{"startOffset":12736,"endOffset":12910,"count":146}],"isBlockCoverage":true},{"functionName":"processCodePathToExit","ranges":[{"startOffset":16926,"endOffset":20161,"count":4023},{"startOffset":17126,"endOffset":17205,"count":0},{"startOffset":17215,"endOffset":17234,"count":38},{"startOffset":17243,"endOffset":17329,"count":40},{"startOffset":17339,"endOffset":17498,"count":20},{"startOffset":17508,"endOffset":17673,"count":60},{"startOffset":17597,"endOffset":17654,"count":0},{"startOffset":17683,"endOffset":17763,"count":0},{"startOffset":17773,"endOffset":18232,"count":0},{"startOffset":18242,"endOffset":18316,"count":1},{"startOffset":18326,"endOffset":18509,"count":0},{"startOffset":18519,"endOffset":18708,"count":0},{"startOffset":18718,"endOffset":18874,"count":78},{"startOffset":18884,"endOffset":19038,"count":6},{"startOffset":19048,"endOffset":19240,"count":1469},{"startOffset":19112,"endOffset":19221,"count":1246},{"startOffset":19250,"endOffset":19272,"count":325},{"startOffset":19281,"endOffset":19305,"count":325},{"startOffset":19314,"endOffset":19338,"count":851},{"startOffset":19347,"endOffset":19368,"count":889},{"startOffset":19377,"endOffset":19473,"count":889},{"startOffset":19483,"endOffset":19505,"count":0},{"startOffset":19514,"endOffset":19538,"count":0},{"startOffset":19547,"endOffset":19567,"count":3},{"startOffset":19576,"endOffset":19598,"count":3},{"startOffset":19607,"endOffset":19684,"count":3},{"startOffset":19694,"endOffset":19774,"count":19},{"startOffset":19784,"endOffset":19944,"count":0},{"startOffset":19954,"endOffset":19981,"count":1438},{"startOffset":20066,"endOffset":20119,"count":2693}],"isBlockCoverage":true},{"functionName":"postprocess","ranges":[{"startOffset":20349,"endOffset":22344,"count":4023},{"startOffset":21184,"endOffset":21199,"count":8},{"startOffset":21208,"endOffset":21235,"count":12},{"startOffset":21244,"endOffset":21270,"count":79},{"startOffset":21279,"endOffset":21310,"count":154},{"startOffset":21319,"endOffset":21396,"count":154},{"startOffset":21479,"endOffset":21681,"count":325},{"startOffset":21541,"endOffset":21571,"count":0},{"startOffset":21573,"endOffset":21662,"count":0},{"startOffset":21691,"endOffset":21718,"count":3544},{"startOffset":22312,"endOffset":22342,"count":0}],"isBlockCoverage":true},{"functionName":"endCodePath","ranges":[{"startOffset":20480,"endOffset":21149,"count":154},{"startOffset":21061,"endOffset":21142,"count":146}],"isBlockCoverage":true},{"functionName":"CodePathAnalyzer","ranges":[{"startOffset":22748,"endOffset":23032,"count":8}],"isBlockCoverage":true},{"functionName":"enterNode","ranges":[{"startOffset":23259,"endOffset":23739,"count":4023},{"startOffset":23412,"endOffset":23459,"count":4015}],"isBlockCoverage":true},{"functionName":"leaveNode","ranges":[{"startOffset":23965,"endOffset":24401,"count":4023}],"isBlockCoverage":true},{"functionName":"onLooped","ranges":[{"startOffset":24655,"endOffset":25027,"count":6}],"isBlockCoverage":true}]},{"scriptId":"275","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/code-path-analysis/code-path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7438,"count":1}],"isBlockCoverage":true},{"functionName":"CodePath","ranges":[{"startOffset":1002,"endOffset":2087,"count":154},{"startOffset":2025,"endOffset":2081,"count":146}],"isBlockCoverage":true},{"functionName":"getState","ranges":[{"startOffset":2274,"endOffset":2334,"count":19607}],"isBlockCoverage":true},{"functionName":"get initialSegment","ranges":[{"startOffset":2425,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"get finalSegments","ranges":[{"startOffset":2657,"endOffset":2728,"count":0}],"isBlockCoverage":false},{"functionName":"get returnedSegments","ranges":[{"startOffset":2976,"endOffset":3056,"count":3}],"isBlockCoverage":true},{"functionName":"get thrownSegments","ranges":[{"startOffset":3177,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"get currentSegments","ranges":[{"startOffset":3343,"endOffset":3418,"count":1155}],"isBlockCoverage":true},{"functionName":"traverseSegments","ranges":[{"startOffset":4158,"endOffset":7407,"count":3},{"startOffset":4384,"endOffset":4487,"count":0},{"startOffset":5654,"endOffset":7401,"count":40},{"startOffset":5790,"endOffset":6995,"count":31},{"startOffset":5900,"endOffset":5982,"count":8},{"startOffset":5982,"endOffset":6101,"count":23},{"startOffset":6101,"endOffset":6155,"count":20},{"startOffset":6156,"endOffset":6217,"count":20},{"startOffset":6236,"endOffset":6318,"count":1},{"startOffset":6318,"endOffset":6436,"count":22},{"startOffset":6436,"endOffset":6484,"count":5},{"startOffset":6486,"endOffset":6548,"count":0},{"startOffset":6548,"endOffset":6689,"count":22},{"startOffset":6689,"endOffset":6981,"count":17},{"startOffset":6810,"endOffset":6876,"count":0},{"startOffset":6909,"endOffset":6963,"count":1},{"startOffset":6995,"endOffset":7110,"count":30},{"startOffset":7110,"endOffset":7217,"count":9},{"startOffset":7217,"endOffset":7391,"count":21},{"startOffset":7242,"endOffset":7341,"count":19},{"startOffset":7341,"endOffset":7391,"count":2}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":4913,"endOffset":5119,"count":3},{"startOffset":4961,"endOffset":5015,"count":1},{"startOffset":5015,"endOffset":5105,"count":2}],"isBlockCoverage":true},{"functionName":"break","ranges":[{"startOffset":5133,"endOffset":5187,"count":0}],"isBlockCoverage":false},{"functionName":"isVisited","ranges":[{"startOffset":5440,"endOffset":5619,"count":30},{"startOffset":5535,"endOffset":5594,"count":1}],"isBlockCoverage":true}]},{"scriptId":"276","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/code-path-analysis/code-path-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47631,"count":1}],"isBlockCoverage":true},{"functionName":"addToReturnedOrThrown","ranges":[{"startOffset":1136,"endOffset":1401,"count":180}],"isBlockCoverage":true},{"functionName":"getContinueContext","ranges":[{"startOffset":1641,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakContext","ranges":[{"startOffset":2199,"endOffset":2489,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnContext","ranges":[{"startOffset":2666,"endOffset":2927,"count":78},{"startOffset":2758,"endOffset":2906,"count":1},{"startOffset":2793,"endOffset":2826,"count":0},{"startOffset":2828,"endOffset":2867,"count":0}],"isBlockCoverage":true},{"functionName":"getThrowContext","ranges":[{"startOffset":3102,"endOffset":3413,"count":2141},{"startOffset":3193,"endOffset":3392,"count":24},{"startOffset":3234,"endOffset":3303,"count":19},{"startOffset":3271,"endOffset":3302,"count":0},{"startOffset":3314,"endOffset":3353,"count":5},{"startOffset":3353,"endOffset":3392,"count":19},{"startOffset":3392,"endOffset":3412,"count":2136}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":3595,"endOffset":3654,"count":0}],"isBlockCoverage":false},{"functionName":"removeConnection","ranges":[{"startOffset":4030,"endOffset":4462,"count":0}],"isBlockCoverage":false},{"functionName":"makeLooped","ranges":[{"startOffset":4727,"endOffset":5676,"count":6},{"startOffset":5527,"endOffset":5615,"count":3}],"isBlockCoverage":true},{"functionName":"finalizeTestSegmentsOfFor","ranges":[{"startOffset":6073,"endOffset":6522,"count":3}],"isBlockCoverage":true},{"functionName":"CodePathState","ranges":[{"startOffset":6989,"endOffset":7870,"count":154}],"isBlockCoverage":true},{"functionName":"get headSegments","ranges":[{"startOffset":7951,"endOffset":8015,"count":6946}],"isBlockCoverage":true},{"functionName":"get parentForkContext","ranges":[{"startOffset":8146,"endOffset":8261,"count":39}],"isBlockCoverage":true},{"functionName":"pushForkContext","ranges":[{"startOffset":8477,"endOffset":8669,"count":20}],"isBlockCoverage":true},{"functionName":"popForkContext","ranges":[{"startOffset":8788,"endOffset":9001,"count":20}],"isBlockCoverage":true},{"functionName":"forkPath","ranges":[{"startOffset":9073,"endOffset":9162,"count":19}],"isBlockCoverage":true},{"functionName":"forkBypassPath","ranges":[{"startOffset":9315,"endOffset":9398,"count":20}],"isBlockCoverage":true},{"functionName":"pushChoiceContext","ranges":[{"startOffset":10779,"endOffset":11194,"count":63}],"isBlockCoverage":true},{"functionName":"popChoiceContext","ranges":[{"startOffset":11360,"endOffset":14182,"count":63},{"startOffset":11609,"endOffset":11619,"count":9},{"startOffset":11632,"endOffset":11642,"count":20},{"startOffset":11655,"endOffset":12804,"count":20},{"startOffset":12362,"endOffset":12780,"count":13},{"startOffset":12780,"endOffset":12804,"count":7},{"startOffset":12818,"endOffset":13611,"count":40},{"startOffset":12871,"endOffset":13211,"count":38},{"startOffset":13211,"endOffset":13587,"count":2},{"startOffset":13625,"endOffset":13826,"count":3},{"startOffset":13873,"endOffset":13929,"count":0},{"startOffset":13939,"endOffset":14181,"count":47}],"isBlockCoverage":true},{"functionName":"makeLogicalRight","ranges":[{"startOffset":14356,"endOffset":16517,"count":20},{"startOffset":14499,"endOffset":15544,"count":4},{"startOffset":14762,"endOffset":14905,"count":1},{"startOffset":14922,"endOffset":15067,"count":3},{"startOffset":15084,"endOffset":15296,"count":0},{"startOffset":15313,"endOffset":15373,"count":0},{"startOffset":15544,"endOffset":16511,"count":16},{"startOffset":15827,"endOffset":15969,"count":8},{"startOffset":15986,"endOffset":16126,"count":8},{"startOffset":16143,"endOffset":16342,"count":0},{"startOffset":16359,"endOffset":16419,"count":0}],"isBlockCoverage":true},{"functionName":"makeIfConsequent","ranges":[{"startOffset":16614,"endOffset":17344,"count":40},{"startOffset":16968,"endOffset":17155,"count":31}],"isBlockCoverage":true},{"functionName":"makeIfAlternate","ranges":[{"startOffset":17443,"endOffset":17989,"count":2}],"isBlockCoverage":true},{"functionName":"pushChainContext","ranges":[{"startOffset":18482,"endOffset":18622,"count":0}],"isBlockCoverage":false},{"functionName":"popChainContext","ranges":[{"startOffset":18856,"endOffset":19124,"count":0}],"isBlockCoverage":false},{"functionName":"makeOptionalNode","ranges":[{"startOffset":19409,"endOffset":19583,"count":0}],"isBlockCoverage":false},{"functionName":"makeOptionalRight","ranges":[{"startOffset":19768,"endOffset":19875,"count":0}],"isBlockCoverage":false},{"functionName":"pushSwitchContext","ranges":[{"startOffset":20322,"endOffset":20677,"count":0}],"isBlockCoverage":false},{"functionName":"popSwitchContext","ranges":[{"startOffset":21046,"endOffset":23286,"count":0}],"isBlockCoverage":false},{"functionName":"makeSwitchCaseBody","ranges":[{"startOffset":23524,"endOffset":24751,"count":0}],"isBlockCoverage":false},{"functionName":"pushTryContext","ranges":[{"startOffset":25139,"endOffset":25588,"count":1},{"startOffset":25352,"endOffset":25392,"count":0}],"isBlockCoverage":true},{"functionName":"popTryContext","ranges":[{"startOffset":25696,"endOffset":27310,"count":1},{"startOffset":25986,"endOffset":26255,"count":0},{"startOffset":26257,"endOffset":27243,"count":0},{"startOffset":27245,"endOffset":27304,"count":0}],"isBlockCoverage":true},{"functionName":"makeCatchBlock","ranges":[{"startOffset":27409,"endOffset":28056,"count":1}],"isBlockCoverage":true},{"functionName":"makeFinallyBlock","ranges":[{"startOffset":28396,"endOffset":30149,"count":0}],"isBlockCoverage":false},{"functionName":"makeFirstThrowablePathInTryBlock","ranges":[{"startOffset":30309,"endOffset":30797,"count":2135},{"startOffset":30429,"endOffset":30460,"count":0},{"startOffset":30539,"endOffset":30580,"count":5},{"startOffset":30581,"endOffset":30628,"count":5},{"startOffset":30639,"endOffset":30670,"count":2134},{"startOffset":30670,"endOffset":30796,"count":1}],"isBlockCoverage":true},{"functionName":"pushLoopContext","ranges":[{"startOffset":31410,"endOffset":33745,"count":3},{"startOffset":31589,"endOffset":31995,"count":0},{"startOffset":32009,"endOffset":32486,"count":0},{"startOffset":33137,"endOffset":33159,"count":0},{"startOffset":33172,"endOffset":33614,"count":0},{"startOffset":33661,"endOffset":33729,"count":0}],"isBlockCoverage":true},{"functionName":"popLoopContext","ranges":[{"startOffset":33910,"endOffset":36029,"count":3},{"startOffset":34216,"endOffset":34238,"count":0},{"startOffset":34509,"endOffset":35374,"count":0},{"startOffset":35388,"endOffset":35410,"count":0},{"startOffset":35423,"endOffset":35677,"count":0},{"startOffset":35724,"endOffset":35780,"count":0},{"startOffset":35849,"endOffset":35934,"count":0}],"isBlockCoverage":true},{"functionName":"makeWhileTest","ranges":[{"startOffset":36222,"endOffset":36550,"count":0}],"isBlockCoverage":false},{"functionName":"makeWhileBody","ranges":[{"startOffset":36667,"endOffset":37241,"count":0}],"isBlockCoverage":false},{"functionName":"makeDoWhileBody","ranges":[{"startOffset":37360,"endOffset":37651,"count":0}],"isBlockCoverage":false},{"functionName":"makeDoWhileTest","ranges":[{"startOffset":37846,"endOffset":38298,"count":0}],"isBlockCoverage":false},{"functionName":"makeForTest","ranges":[{"startOffset":38489,"endOffset":38946,"count":3}],"isBlockCoverage":true},{"functionName":"makeForUpdate","ranges":[{"startOffset":39063,"endOffset":39758,"count":3},{"startOffset":39452,"endOffset":39527,"count":0}],"isBlockCoverage":true},{"functionName":"makeForBody","ranges":[{"startOffset":39873,"endOffset":41387,"count":3},{"startOffset":40412,"endOffset":40673,"count":0},{"startOffset":40757,"endOffset":41249,"count":0},{"startOffset":41318,"endOffset":41333,"count":0}],"isBlockCoverage":true},{"functionName":"makeForInOfLeft","ranges":[{"startOffset":41532,"endOffset":41910,"count":0}],"isBlockCoverage":false},{"functionName":"makeForInOfRight","ranges":[{"startOffset":42056,"endOffset":42448,"count":0}],"isBlockCoverage":false},{"functionName":"makeForInOfBody","ranges":[{"startOffset":42593,"endOffset":43100,"count":0}],"isBlockCoverage":false},{"functionName":"pushBreakContext","ranges":[{"startOffset":43573,"endOffset":43840,"count":3}],"isBlockCoverage":true},{"functionName":"popBreakContext","ranges":[{"startOffset":43964,"endOffset":44521,"count":3},{"startOffset":44222,"endOffset":44490,"count":0}],"isBlockCoverage":true},{"functionName":"makeBreak","ranges":[{"startOffset":44821,"endOffset":45211,"count":0}],"isBlockCoverage":false},{"functionName":"makeContinue","ranges":[{"startOffset":45487,"endOffset":46324,"count":0}],"isBlockCoverage":false},{"functionName":"makeReturn","ranges":[{"startOffset":46565,"endOffset":46831,"count":78}],"isBlockCoverage":true},{"functionName":"makeThrow","ranges":[{"startOffset":47070,"endOffset":47332,"count":6}],"isBlockCoverage":true},{"functionName":"makeFinal","ranges":[{"startOffset":47406,"endOffset":47595,"count":154},{"startOffset":47526,"endOffset":47589,"count":96}],"isBlockCoverage":true}]},{"scriptId":"277","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/code-path-analysis/code-path-segment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7243,"count":1}],"isBlockCoverage":true},{"functionName":"isReachable","ranges":[{"startOffset":674,"endOffset":737,"count":511}],"isBlockCoverage":true},{"functionName":"CodePathSegment","ranges":[{"startOffset":1248,"endOffset":2654,"count":400},{"startOffset":2579,"endOffset":2628,"count":0}],"isBlockCoverage":true},{"functionName":"isLoopedPrevSegment","ranges":[{"startOffset":2900,"endOffset":3003,"count":13}],"isBlockCoverage":true},{"functionName":"newRoot","ranges":[{"startOffset":3161,"endOffset":3230,"count":154}],"isBlockCoverage":true},{"functionName":"newNext","ranges":[{"startOffset":3494,"endOffset":3707,"count":159}],"isBlockCoverage":true},{"functionName":"newUnreachable","ranges":[{"startOffset":3984,"endOffset":4381,"count":84}],"isBlockCoverage":true},{"functionName":"newDisconnected","ranges":[{"startOffset":4756,"endOffset":4879,"count":3}],"isBlockCoverage":true},{"functionName":"markUsed","ranges":[{"startOffset":5123,"endOffset":5746,"count":468},{"startOffset":5178,"endOffset":5209,"count":68},{"startOffset":5209,"endOffset":5296,"count":400},{"startOffset":5296,"endOffset":5568,"count":316},{"startOffset":5363,"endOffset":5558,"count":240},{"startOffset":5568,"endOffset":5740,"count":84}],"isBlockCoverage":true},{"functionName":"markPrevSegmentAsLooped","ranges":[{"startOffset":5964,"endOffset":6080,"count":3}],"isBlockCoverage":true},{"functionName":"flattenUnusedSegments","ranges":[{"startOffset":6324,"endOffset":7205,"count":255},{"startOffset":6476,"endOffset":7177,"count":343},{"startOffset":6589,"endOffset":6630,"count":7},{"startOffset":6630,"endOffset":6720,"count":336},{"startOffset":6720,"endOffset":7069,"count":0},{"startOffset":7069,"endOffset":7167,"count":336}],"isBlockCoverage":true}]},{"scriptId":"278","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/code-path-analysis/debug-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6556,"count":1},{"startOffset":2075,"endOffset":2904,"count":0},{"startOffset":3211,"endOffset":4648,"count":0}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":668,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"nodeToString","ranges":[{"startOffset":1026,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.dumpState","ranges":[{"startOffset":2098,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.dumpDot","ranges":[{"startOffset":3234,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"makeDotArrows","ranges":[{"startOffset":4979,"endOffset":6552,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/code-path-analysis/fork-context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7589,"count":1}],"isBlockCoverage":true},{"functionName":"isReachable","ranges":[{"startOffset":785,"endOffset":848,"count":2220}],"isBlockCoverage":true},{"functionName":"makeSegments","ranges":[{"startOffset":1420,"endOffset":1982,"count":246},{"startOffset":1552,"endOffset":1559,"count":120},{"startOffset":1560,"endOffset":1581,"count":126},{"startOffset":1618,"endOffset":1623,"count":0},{"startOffset":1818,"endOffset":1875,"count":334}],"isBlockCoverage":true},{"functionName":"mergeExtraSegments","ranges":[{"startOffset":2412,"endOffset":2917,"count":642},{"startOffset":2549,"endOffset":2887,"count":0}],"isBlockCoverage":true},{"functionName":"ForkContext","ranges":[{"startOffset":3381,"endOffset":3555,"count":368}],"isBlockCoverage":true},{"functionName":"get head","ranges":[{"startOffset":3636,"endOffset":3758,"count":9612},{"startOffset":3723,"endOffset":3727,"count":0}],"isBlockCoverage":true},{"functionName":"get empty","ranges":[{"startOffset":3836,"endOffset":3902,"count":8}],"isBlockCoverage":true},{"functionName":"get reachable","ranges":[{"startOffset":3984,"endOffset":4110,"count":2220}],"isBlockCoverage":true},{"functionName":"makeNext","ranges":[{"startOffset":4360,"endOffset":4460,"count":159}],"isBlockCoverage":true},{"functionName":"makeUnreachable","ranges":[{"startOffset":4757,"endOffset":4871,"count":84}],"isBlockCoverage":true},{"functionName":"makeDisconnected","ranges":[{"startOffset":5254,"endOffset":5370,"count":3}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":5558,"endOffset":5734,"count":416}],"isBlockCoverage":true},{"functionName":"replaceHead","ranges":[{"startOffset":5940,"endOffset":6133,"count":226}],"isBlockCoverage":true},{"functionName":"addAll","ranges":[{"startOffset":6305,"endOffset":6528,"count":89},{"startOffset":6464,"endOffset":6522,"count":119}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":6617,"endOffset":6664,"count":46}],"isBlockCoverage":true},{"functionName":"newRoot","ranges":[{"startOffset":6857,"endOffset":7042,"count":154}],"isBlockCoverage":true},{"functionName":"newEmpty","ranges":[{"startOffset":7338,"endOffset":7555,"count":214},{"startOffset":7508,"endOffset":7511,"count":0}],"isBlockCoverage":true}]},{"scriptId":"280","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/code-path-analysis/id-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":967,"count":1}],"isBlockCoverage":true},{"functionName":"IdGenerator","ranges":[{"startOffset":568,"endOffset":653,"count":162}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":737,"endOffset":933,"count":554},{"startOffset":834,"endOffset":869,"count":0}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/apply-disable-directives.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14570,"count":1}],"isBlockCoverage":true},{"functionName":"compareLocations","ranges":[{"startOffset":618,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"groupByParentComment","ranges":[{"startOffset":949,"endOffset":1354,"count":16},{"startOffset":1064,"endOffset":1318,"count":0}],"isBlockCoverage":true},{"functionName":"createIndividualDirectivesRemoval","ranges":[{"startOffset":1672,"endOffset":5944,"count":0}],"isBlockCoverage":false},{"functionName":"createCommentRemoval","ranges":[{"startOffset":6257,"endOffset":6796,"count":0}],"isBlockCoverage":false},{"functionName":"processUnusedDisableDirectives","ranges":[{"startOffset":7044,"endOffset":7728,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7211,"endOffset":7719,"count":0}],"isBlockCoverage":false},{"functionName":"applyDirectives","ranges":[{"startOffset":8334,"endOffset":11105,"count":16},{"startOffset":8485,"endOffset":9915,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9400,"endOffset":9541,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9996,"endOffset":10078,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10229,"endOffset":11050,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":12514,"endOffset":14568,"count":8},{"startOffset":14325,"endOffset":14525,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12654,"endOffset":12726,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12741,"endOffset":12819,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12901,"endOffset":13858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/config-comment-parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4517,"count":1}],"isBlockCoverage":true},{"functionName":"parseStringConfig","ranges":[{"startOffset":1283,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonConfig","ranges":[{"startOffset":2184,"endOffset":4015,"count":0}],"isBlockCoverage":false},{"functionName":"parseListConfig","ranges":[{"startOffset":4203,"endOffset":4512,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///home/runner/work/deluge/deluge/node_modules/levn/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"parsedTypeParse","ranges":[{"startOffset":274,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":570,"endOffset":668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///home/runner/work/deluge/deluge/node_modules/levn/lib/parse-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3875,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":3861,"count":1}],"isBlockCoverage":true},{"functionName":"consumeOp","ranges":[{"startOffset":124,"endOffset":355,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConsumeOp","ranges":[{"startOffset":358,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"consumeList","ranges":[{"startOffset":464,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"consumeArray","ranges":[{"startOffset":976,"endOffset":1084,"count":0}],"isBlockCoverage":false},{"functionName":"consumeTuple","ranges":[{"startOffset":1087,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"consumeFields","ranges":[{"startOffset":1198,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"consumeValue","ranges":[{"startOffset":1725,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"consumeElement","ranges":[{"startOffset":1961,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"consumeTopLevel","ranges":[{"startOffset":2267,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3416,"endOffset":3825,"count":0}],"isBlockCoverage":false},{"functionName":"not$","ranges":[{"startOffset":3829,"endOffset":3859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///home/runner/work/deluge/deluge/node_modules/prelude-ls/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4932,"count":1}],"isBlockCoverage":true},{"functionName":"id","ranges":[{"startOffset":265,"endOffset":291,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":309,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":401,"endOffset":519,"count":0}],"isBlockCoverage":false},{"functionName":"curry$","ranges":[{"startOffset":4536,"endOffset":4932,"count":2}],"isBlockCoverage":true},{"functionName":"_curry","ranges":[{"startOffset":4589,"endOffset":4910,"count":2},{"startOffset":4902,"endOffset":4905,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4632,"endOffset":4901,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///home/runner/work/deluge/deluge/node_modules/prelude-ls/lib/Func.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1654,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":117,"endOffset":167,"count":0}],"isBlockCoverage":false},{"functionName":"curry","ranges":[{"startOffset":178,"endOffset":212,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":228,"endOffset":266,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":275,"endOffset":484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":500,"endOffset":547,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":560,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"curry$","ranges":[{"startOffset":1258,"endOffset":1654,"count":3}],"isBlockCoverage":true},{"functionName":"_curry","ranges":[{"startOffset":1311,"endOffset":1632,"count":3},{"startOffset":1624,"endOffset":1627,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1354,"endOffset":1623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///home/runner/work/deluge/deluge/node_modules/prelude-ls/lib/List.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15544,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":652,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":800,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":981,"endOffset":1164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1182,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1390,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1599,"endOffset":1732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1754,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1991,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2156,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"tail","ranges":[{"startOffset":2196,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":2278,"endOffset":2321,"count":0}],"isBlockCoverage":false},{"functionName":"initial","ranges":[{"startOffset":2333,"endOffset":2410,"count":0}],"isBlockCoverage":false},{"functionName":"empty","ranges":[{"startOffset":2420,"endOffset":2456,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":2468,"endOffset":2515,"count":0}],"isBlockCoverage":false},{"functionName":"unique","ranges":[{"startOffset":2526,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2747,"endOffset":3020,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3045,"endOffset":3198,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3225,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3299,"endOffset":3438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3457,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3550,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":3724,"endOffset":3775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3796,"endOffset":4050,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":4063,"endOffset":4427,"count":0}],"isBlockCoverage":false},{"functionName":"difference","ranges":[{"startOffset":4442,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"intersection","ranges":[{"startOffset":4924,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"union","ranges":[{"startOffset":5400,"endOffset":5842,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5861,"endOffset":6128,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6148,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"andList","ranges":[{"startOffset":6433,"endOffset":6594,"count":0}],"isBlockCoverage":false},{"functionName":"orList","ranges":[{"startOffset":6605,"endOffset":6765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6780,"endOffset":6946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6962,"endOffset":7129,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":7139,"endOffset":7311,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7331,"endOffset":7379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7398,"endOffset":7585,"count":0}],"isBlockCoverage":false},{"functionName":"sum","ranges":[{"startOffset":7594,"endOffset":7756,"count":0}],"isBlockCoverage":false},{"functionName":"product","ranges":[{"startOffset":7768,"endOffset":7930,"count":0}],"isBlockCoverage":false},{"functionName":"average","ranges":[{"startOffset":7949,"endOffset":8111,"count":0}],"isBlockCoverage":false},{"functionName":"maximum","ranges":[{"startOffset":8123,"endOffset":8329,"count":0}],"isBlockCoverage":false},{"functionName":"minimum","ranges":[{"startOffset":8341,"endOffset":8547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8568,"endOffset":8783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8805,"endOffset":9020,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9045,"endOffset":9333,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9360,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9470,"endOffset":9562,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9581,"endOffset":9713,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9731,"endOffset":9777,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9794,"endOffset":9897,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9914,"endOffset":10002,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10022,"endOffset":10077,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10099,"endOffset":10265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10287,"endOffset":10450,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10467,"endOffset":10532,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10554,"endOffset":10610,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10626,"endOffset":10884,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10904,"endOffset":11166,"count":0}],"isBlockCoverage":false},{"functionName":"zipAll","ranges":[{"startOffset":11178,"endOffset":11784,"count":0}],"isBlockCoverage":false},{"functionName":"zipAllWith","ranges":[{"startOffset":11799,"endOffset":12479,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12493,"endOffset":12589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12611,"endOffset":12778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12802,"endOffset":13011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13033,"endOffset":13195,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13219,"endOffset":13423,"count":0}],"isBlockCoverage":false},{"functionName":"curry$","ranges":[{"startOffset":14739,"endOffset":15135,"count":41}],"isBlockCoverage":true},{"functionName":"_curry","ranges":[{"startOffset":14792,"endOffset":15113,"count":41},{"startOffset":15105,"endOffset":15108,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14835,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"in$","ranges":[{"startOffset":15136,"endOffset":15257,"count":0}],"isBlockCoverage":false},{"functionName":"compose$","ranges":[{"startOffset":15258,"endOffset":15513,"count":0}],"isBlockCoverage":false},{"functionName":"not$","ranges":[{"startOffset":15514,"endOffset":15544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"288","url":"file:///home/runner/work/deluge/deluge/node_modules/prelude-ls/lib/Obj.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3201,"count":1}],"isBlockCoverage":true},{"functionName":"values","ranges":[{"startOffset":168,"endOffset":303,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":312,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"pairsToObj","ranges":[{"startOffset":437,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"objToPairs","ranges":[{"startOffset":637,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":816,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"objToLists","ranges":[{"startOffset":1042,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"empty","ranges":[{"startOffset":1253,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1356,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1481,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":1637,"endOffset":1795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1813,"endOffset":1977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1996,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2183,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2389,"endOffset":2509,"count":0}],"isBlockCoverage":false},{"functionName":"curry$","ranges":[{"startOffset":2805,"endOffset":3201,"count":7}],"isBlockCoverage":true},{"functionName":"_curry","ranges":[{"startOffset":2858,"endOffset":3179,"count":7},{"startOffset":3171,"endOffset":3174,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2901,"endOffset":3170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"289","url":"file:///home/runner/work/deluge/deluge/node_modules/prelude-ls/lib/Str.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2104,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163,"endOffset":209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":226,"endOffset":269,"count":0}],"isBlockCoverage":false},{"functionName":"lines","ranges":[{"startOffset":280,"endOffset":362,"count":0}],"isBlockCoverage":false},{"functionName":"unlines","ranges":[{"startOffset":374,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"words","ranges":[{"startOffset":423,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"unwords","ranges":[{"startOffset":519,"endOffset":557,"count":0}],"isBlockCoverage":false},{"functionName":"chars","ranges":[{"startOffset":567,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"unchars","ranges":[{"startOffset":617,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":666,"endOffset":725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":743,"endOffset":866,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":882,"endOffset":951,"count":0}],"isBlockCoverage":false},{"functionName":"camelize","ranges":[{"startOffset":964,"endOffset":1085,"count":0}],"isBlockCoverage":false},{"functionName":"dasherize","ranges":[{"startOffset":1099,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"curry$","ranges":[{"startOffset":1708,"endOffset":2104,"count":3}],"isBlockCoverage":true},{"functionName":"_curry","ranges":[{"startOffset":1761,"endOffset":2082,"count":3},{"startOffset":2074,"endOffset":2077,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":2073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"290","url":"file:///home/runner/work/deluge/deluge/node_modules/prelude-ls/lib/Num.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2469,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":241,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":304,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":363,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"signum","ranges":[{"startOffset":417,"endOffset":526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":542,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":595,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":648,"endOffset":693,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":709,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"recip","ranges":[{"startOffset":797,"endOffset":829,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":922,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1088,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":1146,"endOffset":1174,"count":0}],"isBlockCoverage":false},{"functionName":"isItNaN","ranges":[{"startOffset":1247,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"even","ranges":[{"startOffset":1288,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"odd","ranges":[{"startOffset":1332,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1383,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1536,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"curry$","ranges":[{"startOffset":2073,"endOffset":2469,"count":10}],"isBlockCoverage":true},{"functionName":"_curry","ranges":[{"startOffset":2126,"endOffset":2447,"count":10},{"startOffset":2439,"endOffset":2442,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2169,"endOffset":2438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///home/runner/work/deluge/deluge/node_modules/levn/lib/cast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7861,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":7847,"count":1}],"isBlockCoverage":true},{"functionName":"*","ranges":[{"startOffset":181,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"Undefined","ranges":[{"startOffset":1106,"endOffset":1327,"count":0}],"isBlockCoverage":false},{"functionName":"Null","ranges":[{"startOffset":1339,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"NaN","ranges":[{"startOffset":1547,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"Boolean","ranges":[{"startOffset":1757,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"Number","ranges":[{"startOffset":2078,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"Int","ranges":[{"startOffset":2173,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"Float","ranges":[{"startOffset":2270,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"Date","ranges":[{"startOffset":2366,"endOffset":2771,"count":0}],"isBlockCoverage":false},{"functionName":"RegExp","ranges":[{"startOffset":2785,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"Array","ranges":[{"startOffset":3203,"endOffset":3331,"count":0}],"isBlockCoverage":false},{"functionName":"Object","ranges":[{"startOffset":3345,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"String","ranges":[{"startOffset":3457,"endOffset":4620,"count":0}],"isBlockCoverage":false},{"functionName":"castArray","ranges":[{"startOffset":4628,"endOffset":5146,"count":0}],"isBlockCoverage":false},{"functionName":"castTuple","ranges":[{"startOffset":5149,"endOffset":5799,"count":0}],"isBlockCoverage":false},{"functionName":"castFields","ranges":[{"startOffset":5802,"endOffset":6395,"count":0}],"isBlockCoverage":false},{"functionName":"typeCast","ranges":[{"startOffset":6398,"endOffset":7062,"count":0}],"isBlockCoverage":false},{"functionName":"typesCast","ranges":[{"startOffset":7065,"endOffset":7639,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":7659,"endOffset":7844,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///home/runner/work/deluge/deluge/node_modules/type-check/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"typeCheck","ranges":[{"startOffset":214,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///home/runner/work/deluge/deluge/node_modules/type-check/lib/parse-type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5040,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":5026,"count":1}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":114,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"consumeIdent","ranges":[{"startOffset":281,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"consumeOp","ranges":[{"startOffset":502,"endOffset":713,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConsumeOp","ranges":[{"startOffset":716,"endOffset":885,"count":0}],"isBlockCoverage":false},{"functionName":"consumeArray","ranges":[{"startOffset":888,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"consumeTuple","ranges":[{"startOffset":1213,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"consumeFields","ranges":[{"startOffset":1701,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"consumeField","ranges":[{"startOffset":2256,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConsumeStructure","ranges":[{"startOffset":2432,"endOffset":2654,"count":0}],"isBlockCoverage":false},{"functionName":"consumeType","ranges":[{"startOffset":2657,"endOffset":3302,"count":0}],"isBlockCoverage":false},{"functionName":"consumeTypes","ranges":[{"startOffset":3305,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":4363,"endOffset":4891,"count":0}],"isBlockCoverage":false},{"functionName":"in$","ranges":[{"startOffset":4895,"endOffset":5024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"file:///home/runner/work/deluge/deluge/node_modules/type-check/lib/check.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3542,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":3528,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":276,"endOffset":326,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":451,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":578,"endOffset":628,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":686,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"checkArray","ranges":[{"startOffset":822,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"checkTuple","ranges":[{"startOffset":965,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"checkFields","ranges":[{"startOffset":1282,"endOffset":1795,"count":0}],"isBlockCoverage":false},{"functionName":"checkStructure","ranges":[{"startOffset":1798,"endOffset":2145,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2148,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"checkMultiple","ranges":[{"startOffset":3021,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3314,"endOffset":3525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/node-event-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12716,"count":1}],"isBlockCoverage":true},{"functionName":"union","ranges":[{"startOffset":1588,"endOffset":1657,"count":25}],"isBlockCoverage":true},{"functionName":"intersection","ranges":[{"startOffset":1835,"endOffset":2095,"count":32},{"startOffset":1899,"endOffset":1925,"count":0},{"startOffset":2011,"endOffset":2074,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2044,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleTypes","ranges":[{"startOffset":2385,"endOffset":3847,"count":342},{"startOffset":2472,"endOffset":2533,"count":202},{"startOffset":2543,"endOffset":2803,"count":25},{"startOffset":2768,"endOffset":2803,"count":0},{"startOffset":2813,"endOffset":3423,"count":35},{"startOffset":3118,"endOffset":3162,"count":3},{"startOffset":3162,"endOffset":3423,"count":32},{"startOffset":3433,"endOffset":3446,"count":22},{"startOffset":3455,"endOffset":3473,"count":23},{"startOffset":3482,"endOffset":3497,"count":23},{"startOffset":3506,"endOffset":3581,"count":23},{"startOffset":3591,"endOffset":3795,"count":1},{"startOffset":3769,"endOffset":3795,"count":0},{"startOffset":3805,"endOffset":3838,"count":56}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2925,"endOffset":2963,"count":83}],"isBlockCoverage":true},{"functionName":"countClassAttributes","ranges":[{"startOffset":4139,"endOffset":4794,"count":379},{"startOffset":4230,"endOffset":4243,"count":24},{"startOffset":4252,"endOffset":4270,"count":25},{"startOffset":4279,"endOffset":4294,"count":25},{"startOffset":4303,"endOffset":4426,"count":25},{"startOffset":4436,"endOffset":4452,"count":40},{"startOffset":4461,"endOffset":4472,"count":40},{"startOffset":4481,"endOffset":4618,"count":65},{"startOffset":4628,"endOffset":4645,"count":37},{"startOffset":4654,"endOffset":4667,"count":54},{"startOffset":4676,"endOffset":4693,"count":54},{"startOffset":4702,"endOffset":4746,"count":54},{"startOffset":4756,"endOffset":4786,"count":235}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4548,"endOffset":4613,"count":168}],"isBlockCoverage":true},{"functionName":"countIdentifiers","ranges":[{"startOffset":5021,"endOffset":5582,"count":379},{"startOffset":5108,"endOffset":5121,"count":24},{"startOffset":5130,"endOffset":5148,"count":25},{"startOffset":5157,"endOffset":5172,"count":25},{"startOffset":5181,"endOffset":5296,"count":25},{"startOffset":5306,"endOffset":5322,"count":40},{"startOffset":5331,"endOffset":5342,"count":40},{"startOffset":5351,"endOffset":5484,"count":65},{"startOffset":5494,"endOffset":5534,"count":227},{"startOffset":5544,"endOffset":5574,"count":62}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5418,"endOffset":5479,"count":168}],"isBlockCoverage":true},{"functionName":"compareSpecificity","ranges":[{"startOffset":6193,"endOffset":6444,"count":25722},{"startOffset":6308,"endOffset":6372,"count":14065},{"startOffset":6373,"endOffset":6441,"count":6330},{"startOffset":6432,"endOffset":6436,"count":2231},{"startOffset":6437,"endOffset":6440,"count":4099}],"isBlockCoverage":true},{"functionName":"tryParseSelector","ranges":[{"startOffset":6732,"endOffset":7141,"count":161},{"startOffset":6855,"endOffset":7139,"count":0}],"isBlockCoverage":true},{"functionName":"parseSelector","ranges":[{"startOffset":7393,"endOffset":7948,"count":1288},{"startOffset":7471,"endOffset":7525,"count":1127},{"startOffset":7525,"endOffset":7947,"count":161}],"isBlockCoverage":true},{"functionName":"NodeEventGenerator","ranges":[{"startOffset":8846,"endOffset":10233,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9218,"endOffset":9900,"count":1288},{"startOffset":9333,"endOffset":9747,"count":1224},{"startOffset":9383,"endOffset":9413,"count":200},{"startOffset":9414,"endOffset":9445,"count":1024},{"startOffset":9747,"endOffset":9794,"count":64},{"startOffset":9794,"endOffset":9821,"count":24},{"startOffset":9822,"endOffset":9850,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9495,"endOffset":9707,"count":1560},{"startOffset":9557,"endOffset":9631,"count":960}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10071,"endOffset":10124,"count":768}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10172,"endOffset":10225,"count":192}],"isBlockCoverage":true},{"functionName":"applySelector","ranges":[{"startOffset":10457,"endOffset":10668,"count":47531},{"startOffset":10592,"endOffset":10662,"count":16363}],"isBlockCoverage":true},{"functionName":"applySelectors","ranges":[{"startOffset":10950,"endOffset":12132,"count":8046},{"startOffset":11025,"endOffset":11055,"count":4023},{"startOffset":11056,"endOffset":11087,"count":4023},{"startOffset":11104,"endOffset":11109,"count":3103},{"startOffset":11151,"endOffset":11178,"count":4023},{"startOffset":11179,"endOffset":11207,"count":4023},{"startOffset":11563,"endOffset":11613,"count":23561},{"startOffset":11615,"endOffset":12126,"count":47531},{"startOffset":11701,"endOffset":11893,"count":32016},{"startOffset":11768,"endOffset":11893,"count":24754},{"startOffset":11908,"endOffset":12008,"count":32184},{"startOffset":12008,"endOffset":12116,"count":15347}],"isBlockCoverage":true},{"functionName":"enterNode","ranges":[{"startOffset":12276,"endOffset":12433,"count":4023},{"startOffset":12319,"endOffset":12385,"count":4015}],"isBlockCoverage":true},{"functionName":"leaveNode","ranges":[{"startOffset":12573,"endOffset":12675,"count":4023}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///home/runner/work/deluge/deluge/node_modules/esquery/dist/esquery.min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35036,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":159,"count":1},{"startOffset":86,"endOffset":158,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":166,"endOffset":34992,"count":1},{"startOffset":2400,"endOffset":2499,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":190,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":419,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":984,"endOffset":1328,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":1328,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":1614,"endOffset":1720,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":1720,"endOffset":2359,"count":44063},{"startOffset":1798,"endOffset":2157,"count":0}],"isBlockCoverage":true},{"functionName":"a","ranges":[{"startOffset":1882,"endOffset":1894,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":1908,"endOffset":1971,"count":0}],"isBlockCoverage":false},{"functionName":"e","ranges":[{"startOffset":1974,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":2182,"endOffset":2216,"count":44063}],"isBlockCoverage":true},{"functionName":"n","ranges":[{"startOffset":2219,"endOffset":2263,"count":101160}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":2266,"endOffset":2287,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":2290,"endOffset":2357,"count":44063},{"startOffset":2306,"endOffset":2322,"count":33877},{"startOffset":2322,"endOffset":2334,"count":0},{"startOffset":2348,"endOffset":2355,"count":0}],"isBlockCoverage":true},{"functionName":"i","ranges":[{"startOffset":2500,"endOffset":2561,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2570,"endOffset":13074,"count":1}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":2585,"endOffset":13070,"count":1}],"isBlockCoverage":true},{"functionName":"l","ranges":[{"startOffset":2615,"endOffset":2733,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":2733,"endOffset":2774,"count":0}],"isBlockCoverage":false},{"functionName":"c","ranges":[{"startOffset":2774,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":2841,"endOffset":2855,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":2855,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":2931,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"y","ranges":[{"startOffset":3017,"endOffset":3098,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":3098,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":3142,"endOffset":3454,"count":0}],"isBlockCoverage":false},{"functionName":"u.replace","ranges":[{"startOffset":8477,"endOffset":8513,"count":0}],"isBlockCoverage":false},{"functionName":"u.remove","ranges":[{"startOffset":8533,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"f.path","ranges":[{"startOffset":8656,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"f.type","ranges":[{"startOffset":8937,"endOffset":8996,"count":0}],"isBlockCoverage":false},{"functionName":"f.parents","ranges":[{"startOffset":9017,"endOffset":9127,"count":0}],"isBlockCoverage":false},{"functionName":"f.current","ranges":[{"startOffset":9148,"endOffset":9186,"count":0}],"isBlockCoverage":false},{"functionName":"f.__execute","ranges":[{"startOffset":9209,"endOffset":9394,"count":0}],"isBlockCoverage":false},{"functionName":"f.notify","ranges":[{"startOffset":9414,"endOffset":9441,"count":0}],"isBlockCoverage":false},{"functionName":"f.skip","ranges":[{"startOffset":9459,"endOffset":9485,"count":0}],"isBlockCoverage":false},{"functionName":"f.break","ranges":[{"startOffset":9504,"endOffset":9530,"count":0}],"isBlockCoverage":false},{"functionName":"f.remove","ranges":[{"startOffset":9550,"endOffset":9576,"count":0}],"isBlockCoverage":false},{"functionName":"f.__initialize","ranges":[{"startOffset":9602,"endOffset":9939,"count":0}],"isBlockCoverage":false},{"functionName":"f.traverse","ranges":[{"startOffset":9961,"endOffset":10799,"count":0}],"isBlockCoverage":false},{"functionName":"f.replace","ranges":[{"startOffset":10820,"endOffset":12001,"count":0}],"isBlockCoverage":false},{"functionName":"t.replace","ranges":[{"startOffset":12036,"endOffset":12077,"count":0}],"isBlockCoverage":false},{"functionName":"t.attachComments","ranges":[{"startOffset":12095,"endOffset":12974,"count":0}],"isBlockCoverage":false},{"functionName":"t.cloneEnvironment","ranges":[{"startOffset":13043,"endOffset":13067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13082,"endOffset":29451,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13116,"endOffset":29447,"count":1}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":13127,"endOffset":13307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13314,"endOffset":13402,"count":1}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":13328,"endOffset":13360,"count":1}],"isBlockCoverage":true},{"functionName":"e.buildMessage","ranges":[{"startOffset":13427,"endOffset":14846,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":14868,"endOffset":29445,"count":161},{"startOffset":14894,"endOffset":14896,"count":0},{"startOffset":16286,"endOffset":16396,"count":0},{"startOffset":29296,"endOffset":29338,"count":0},{"startOffset":29357,"endOffset":29375,"count":0},{"startOffset":29389,"endOffset":29411,"count":0}],"isBlockCoverage":true},{"functionName":"w","ranges":[{"startOffset":15216,"endOffset":15246,"count":66},{"startOffset":15236,"endOffset":15240,"count":58}],"isBlockCoverage":true},{"functionName":"D","ranges":[{"startOffset":15294,"endOffset":15361,"count":33}],"isBlockCoverage":true},{"functionName":"O","ranges":[{"startOffset":15441,"endOffset":15466,"count":0}],"isBlockCoverage":false},{"functionName":"R","ranges":[{"startOffset":15469,"endOffset":15710,"count":17},{"startOffset":15704,"endOffset":15709,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15543,"endOffset":15699,"count":0}],"isBlockCoverage":true},{"functionName":"de","ranges":[{"startOffset":16396,"endOffset":16456,"count":4991}],"isBlockCoverage":true},{"functionName":"me","ranges":[{"startOffset":16456,"endOffset":16528,"count":1449}],"isBlockCoverage":true},{"functionName":"xe","ranges":[{"startOffset":16528,"endOffset":16717,"count":0}],"isBlockCoverage":false},{"functionName":"ve","ranges":[{"startOffset":16717,"endOffset":16850,"count":0}],"isBlockCoverage":false},{"functionName":"ge","ranges":[{"startOffset":16850,"endOffset":16906,"count":6310},{"startOffset":16870,"endOffset":16905,"count":6281},{"startOffset":16878,"endOffset":16893,"count":594}],"isBlockCoverage":true},{"functionName":"be","ranges":[{"startOffset":16906,"endOffset":17166,"count":161},{"startOffset":16958,"endOffset":16982,"count":0},{"startOffset":17046,"endOffset":17051,"count":139},{"startOffset":17051,"endOffset":17080,"count":22},{"startOffset":17080,"endOffset":17091,"count":0},{"startOffset":17097,"endOffset":17134,"count":0}],"isBlockCoverage":true},{"functionName":"Ae","ranges":[{"startOffset":17166,"endOffset":17397,"count":1500},{"startOffset":17211,"endOffset":17240,"count":882},{"startOffset":17240,"endOffset":17270,"count":618},{"startOffset":17270,"endOffset":17283,"count":80},{"startOffset":17283,"endOffset":17295,"count":538},{"startOffset":17303,"endOffset":17360,"count":98},{"startOffset":17334,"endOffset":17347,"count":18},{"startOffset":17347,"endOffset":17359,"count":80},{"startOffset":17360,"endOffset":17396,"count":618}],"isBlockCoverage":true},{"functionName":"Ee","ranges":[{"startOffset":17397,"endOffset":17691,"count":636},{"startOffset":17444,"endOffset":17473,"count":0},{"startOffset":17501,"endOffset":17523,"count":339},{"startOffset":17523,"endOffset":17535,"count":297},{"startOffset":17542,"endOffset":17619,"count":339},{"startOffset":17554,"endOffset":17619,"count":3997},{"startOffset":17584,"endOffset":17606,"count":3658},{"startOffset":17606,"endOffset":17618,"count":339},{"startOffset":17619,"endOffset":17628,"count":297},{"startOffset":17640,"endOffset":17656,"count":339}],"isBlockCoverage":true},{"functionName":"Se","ranges":[{"startOffset":17691,"endOffset":18282,"count":239},{"startOffset":17741,"endOffset":17765,"count":0},{"startOffset":17807,"endOffset":17820,"count":24},{"startOffset":17820,"endOffset":17832,"count":215},{"startOffset":17838,"endOffset":17860,"count":24},{"startOffset":17860,"endOffset":17871,"count":215},{"startOffset":17872,"endOffset":17883,"count":0},{"startOffset":17889,"endOffset":18250,"count":215},{"startOffset":17933,"endOffset":17946,"count":0},{"startOffset":17964,"endOffset":17988,"count":0},{"startOffset":18000,"endOffset":18011,"count":0},{"startOffset":18060,"endOffset":18073,"count":0},{"startOffset":18091,"endOffset":18116,"count":0},{"startOffset":18128,"endOffset":18139,"count":0},{"startOffset":18174,"endOffset":18187,"count":1},{"startOffset":18187,"endOffset":18199,"count":214},{"startOffset":18205,"endOffset":18236,"count":1},{"startOffset":18236,"endOffset":18247,"count":214}],"isBlockCoverage":true},{"functionName":"_e","ranges":[{"startOffset":18282,"endOffset":18808,"count":164},{"startOffset":18339,"endOffset":18368,"count":0},{"startOffset":18439,"endOffset":18452,"count":25},{"startOffset":18452,"endOffset":18464,"count":139},{"startOffset":18470,"endOffset":18512,"count":25},{"startOffset":18512,"endOffset":18523,"count":139},{"startOffset":18524,"endOffset":18535,"count":0},{"startOffset":18543,"endOffset":18690,"count":50},{"startOffset":18593,"endOffset":18618,"count":25},{"startOffset":18624,"endOffset":18677,"count":25},{"startOffset":18678,"endOffset":18689,"count":0},{"startOffset":18745,"endOffset":18756,"count":0},{"startOffset":18757,"endOffset":18771,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18718,"endOffset":18742,"count":50}],"isBlockCoverage":true},{"functionName":"we","ranges":[{"startOffset":18808,"endOffset":19189,"count":214},{"startOffset":18863,"endOffset":18892,"count":0},{"startOffset":18940,"endOffset":18964,"count":23},{"startOffset":18964,"endOffset":18975,"count":191},{"startOffset":18983,"endOffset":19046,"count":25},{"startOffset":19010,"endOffset":19034,"count":2},{"startOffset":19034,"endOffset":19045,"count":23},{"startOffset":19126,"endOffset":19137,"count":0},{"startOffset":19138,"endOffset":19152,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19071,"endOffset":19121,"count":25}],"isBlockCoverage":true},{"functionName":"Ce","ranges":[{"startOffset":19189,"endOffset":19562,"count":239},{"startOffset":19244,"endOffset":19273,"count":0},{"startOffset":19302,"endOffset":19315,"count":0},{"startOffset":19384,"endOffset":19401,"count":292},{"startOffset":19401,"endOffset":19410,"count":0},{"startOffset":19439,"endOffset":19444,"count":199},{"startOffset":19444,"endOffset":19474,"count":40},{"startOffset":19476,"endOffset":19492,"count":0},{"startOffset":19499,"endOffset":19510,"count":0},{"startOffset":19511,"endOffset":19525,"count":0}],"isBlockCoverage":true},{"functionName":"Pe","ranges":[{"startOffset":19562,"endOffset":28675,"count":531},{"startOffset":19608,"endOffset":19632,"count":0},{"startOffset":19834,"endOffset":20081,"count":524},{"startOffset":20081,"endOffset":24929,"count":297},{"startOffset":24929,"endOffset":25477,"count":260},{"startOffset":25477,"endOffset":26139,"count":243},{"startOffset":26139,"endOffset":28643,"count":240}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19637,"endOffset":19827,"count":531},{"startOffset":19682,"endOffset":19706,"count":0},{"startOffset":19729,"endOffset":19742,"count":7},{"startOffset":19742,"endOffset":19754,"count":524},{"startOffset":19760,"endOffset":19791,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19839,"endOffset":20074,"count":524},{"startOffset":19886,"endOffset":19910,"count":0},{"startOffset":19938,"endOffset":19951,"count":0},{"startOffset":19999,"endOffset":20031,"count":227},{"startOffset":20031,"endOffset":20042,"count":297}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20086,"endOffset":24922,"count":297},{"startOffset":20136,"endOffset":20160,"count":0},{"startOffset":20188,"endOffset":20201,"count":37},{"startOffset":20201,"endOffset":20213,"count":260},{"startOffset":20219,"endOffset":24879,"count":37},{"startOffset":24843,"endOffset":24855,"count":0},{"startOffset":24867,"endOffset":24878,"count":0},{"startOffset":24879,"endOffset":24890,"count":260}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20234,"endOffset":24790,"count":37},{"startOffset":20284,"endOffset":20308,"count":0},{"startOffset":20618,"endOffset":22007,"count":33},{"startOffset":21978,"endOffset":21995,"count":0},{"startOffset":22007,"endOffset":22018,"count":4},{"startOffset":22407,"endOffset":24684,"count":33},{"startOffset":23807,"endOffset":24649,"count":16},{"startOffset":24672,"endOffset":24683,"count":0},{"startOffset":24684,"endOffset":24695,"count":4},{"startOffset":24701,"endOffset":24757,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20342,"endOffset":20611,"count":37},{"startOffset":20390,"endOffset":20414,"count":0},{"startOffset":20442,"endOffset":20455,"count":4},{"startOffset":20455,"endOffset":20467,"count":33},{"startOffset":20473,"endOffset":20483,"count":33},{"startOffset":20512,"endOffset":20525,"count":33},{"startOffset":20525,"endOffset":20537,"count":4},{"startOffset":20543,"endOffset":20556,"count":33},{"startOffset":20556,"endOffset":20567,"count":4},{"startOffset":20568,"endOffset":20579,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20633,"endOffset":21149,"count":33},{"startOffset":20682,"endOffset":20711,"count":0},{"startOffset":20743,"endOffset":20761,"count":0},{"startOffset":20780,"endOffset":21098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21161,"endOffset":21969,"count":33},{"startOffset":21212,"endOffset":21241,"count":0},{"startOffset":21270,"endOffset":21283,"count":0},{"startOffset":21302,"endOffset":21918,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21522,"endOffset":21786,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22059,"endOffset":22400,"count":37},{"startOffset":22107,"endOffset":22131,"count":0},{"startOffset":22158,"endOffset":22180,"count":4},{"startOffset":22180,"endOffset":22192,"count":33},{"startOffset":22198,"endOffset":22208,"count":33},{"startOffset":22237,"endOffset":22250,"count":33},{"startOffset":22250,"endOffset":22262,"count":4},{"startOffset":22268,"endOffset":22281,"count":33},{"startOffset":22281,"endOffset":22292,"count":4},{"startOffset":22293,"endOffset":22304,"count":0},{"startOffset":22310,"endOffset":22368,"count":4},{"startOffset":22333,"endOffset":22355,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22422,"endOffset":23800,"count":33},{"startOffset":22473,"endOffset":22502,"count":0},{"startOffset":22531,"endOffset":22544,"count":11},{"startOffset":22544,"endOffset":22556,"count":22},{"startOffset":22563,"endOffset":23114,"count":11},{"startOffset":22615,"endOffset":22627,"count":0},{"startOffset":22633,"endOffset":22786,"count":0},{"startOffset":22794,"endOffset":23018,"count":116},{"startOffset":22824,"endOffset":22846,"count":105},{"startOffset":22846,"endOffset":22858,"count":11},{"startOffset":22864,"endOffset":23017,"count":11},{"startOffset":22893,"endOffset":22907,"count":0},{"startOffset":22925,"endOffset":23005,"count":0},{"startOffset":23059,"endOffset":23071,"count":0},{"startOffset":23090,"endOffset":23101,"count":0},{"startOffset":23102,"endOffset":23113,"count":0},{"startOffset":23114,"endOffset":23128,"count":22},{"startOffset":23137,"endOffset":23763,"count":22},{"startOffset":23166,"endOffset":23179,"count":6},{"startOffset":23179,"endOffset":23191,"count":16},{"startOffset":23198,"endOffset":23749,"count":6},{"startOffset":23250,"endOffset":23262,"count":0},{"startOffset":23268,"endOffset":23421,"count":0},{"startOffset":23429,"endOffset":23653,"count":32},{"startOffset":23459,"endOffset":23481,"count":26},{"startOffset":23481,"endOffset":23493,"count":6},{"startOffset":23499,"endOffset":23652,"count":6},{"startOffset":23528,"endOffset":23542,"count":0},{"startOffset":23560,"endOffset":23640,"count":0},{"startOffset":23694,"endOffset":23706,"count":0},{"startOffset":23725,"endOffset":23736,"count":0},{"startOffset":23737,"endOffset":23748,"count":0},{"startOffset":23749,"endOffset":23763,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23812,"endOffset":24484,"count":16},{"startOffset":23865,"endOffset":23894,"count":0},{"startOffset":23933,"endOffset":23955,"count":0},{"startOffset":23975,"endOffset":24040,"count":0},{"startOffset":24071,"endOffset":24084,"count":0},{"startOffset":24102,"endOffset":24112,"count":0},{"startOffset":24124,"endOffset":24135,"count":0},{"startOffset":24187,"endOffset":24209,"count":0},{"startOffset":24228,"endOffset":24305,"count":0},{"startOffset":24319,"endOffset":24421,"count":0},{"startOffset":24433,"endOffset":24447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24496,"endOffset":24646,"count":16},{"startOffset":24542,"endOffset":24566,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24934,"endOffset":25470,"count":260},{"startOffset":24989,"endOffset":25018,"count":0},{"startOffset":25047,"endOffset":25060,"count":17},{"startOffset":25060,"endOffset":25072,"count":243},{"startOffset":25079,"endOffset":25419,"count":17},{"startOffset":25131,"endOffset":25144,"count":0},{"startOffset":25162,"endOffset":25186,"count":0},{"startOffset":25205,"endOffset":25308,"count":0},{"startOffset":25393,"endOffset":25404,"count":0},{"startOffset":25405,"endOffset":25419,"count":0},{"startOffset":25419,"endOffset":25433,"count":243}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25350,"endOffset":25383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25482,"endOffset":25795,"count":243},{"startOffset":25532,"endOffset":25556,"count":0},{"startOffset":25587,"endOffset":25605,"count":0},{"startOffset":25623,"endOffset":25752,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25807,"endOffset":26132,"count":243},{"startOffset":25857,"endOffset":25881,"count":0},{"startOffset":25916,"endOffset":25938,"count":3},{"startOffset":25938,"endOffset":25950,"count":240},{"startOffset":25956,"endOffset":26089,"count":3},{"startOffset":26026,"endOffset":26038,"count":0},{"startOffset":26077,"endOffset":26088,"count":0},{"startOffset":26089,"endOffset":26100,"count":240}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26144,"endOffset":26457,"count":240},{"startOffset":26194,"endOffset":26218,"count":0},{"startOffset":26249,"endOffset":26267,"count":0},{"startOffset":26285,"endOffset":26414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26469,"endOffset":26665,"count":240},{"startOffset":26515,"endOffset":26539,"count":0},{"startOffset":26573,"endOffset":26599,"count":0},{"startOffset":26618,"endOffset":26629,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26677,"endOffset":26871,"count":240},{"startOffset":26723,"endOffset":26747,"count":0},{"startOffset":26780,"endOffset":26805,"count":0},{"startOffset":26824,"endOffset":26835,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26883,"endOffset":27411,"count":240},{"startOffset":26932,"endOffset":26961,"count":0},{"startOffset":27000,"endOffset":27025,"count":0},{"startOffset":27045,"endOffset":27360,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27423,"endOffset":27961,"count":240},{"startOffset":27472,"endOffset":27501,"count":0},{"startOffset":27545,"endOffset":27575,"count":0},{"startOffset":27595,"endOffset":27910,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27973,"endOffset":28640,"count":240},{"startOffset":28021,"endOffset":28045,"count":0},{"startOffset":28073,"endOffset":28086,"count":1},{"startOffset":28086,"endOffset":28099,"count":239},{"startOffset":28105,"endOffset":28597,"count":1},{"startOffset":28149,"endOffset":28174,"count":0},{"startOffset":28240,"endOffset":28267,"count":0},{"startOffset":28334,"endOffset":28361,"count":0},{"startOffset":28449,"endOffset":28462,"count":0},{"startOffset":28468,"endOffset":28550,"count":0},{"startOffset":28585,"endOffset":28596,"count":0},{"startOffset":28597,"endOffset":28608,"count":239}],"isBlockCoverage":true},{"functionName":"ke","ranges":[{"startOffset":28675,"endOffset":29110,"count":78},{"startOffset":28733,"endOffset":28762,"count":41},{"startOffset":28762,"endOffset":29059,"count":37},{"startOffset":28819,"endOffset":28832,"count":22},{"startOffset":28832,"endOffset":28844,"count":15},{"startOffset":28850,"endOffset":28874,"count":22},{"startOffset":28874,"endOffset":28885,"count":15},{"startOffset":28893,"endOffset":28996,"count":42},{"startOffset":28929,"endOffset":28942,"count":20},{"startOffset":28942,"endOffset":28954,"count":22},{"startOffset":28960,"endOffset":28984,"count":20},{"startOffset":28984,"endOffset":28995,"count":22},{"startOffset":29047,"endOffset":29058,"count":0},{"startOffset":29059,"endOffset":29073,"count":0},{"startOffset":29073,"endOffset":29109,"count":37}],"isBlockCoverage":true},{"functionName":"De","ranges":[{"startOffset":29110,"endOffset":29181,"count":0}],"isBlockCoverage":false},{"functionName":"je","ranges":[{"startOffset":29181,"endOffset":29257,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":29454,"endOffset":32915,"count":213366},{"startOffset":29480,"endOffset":29489,"count":0},{"startOffset":29495,"endOffset":29504,"count":8},{"startOffset":29504,"endOffset":29512,"count":213358},{"startOffset":29512,"endOffset":29520,"count":0},{"startOffset":29529,"endOffset":29553,"count":28161},{"startOffset":29553,"endOffset":29622,"count":71400},{"startOffset":29622,"endOffset":29932,"count":29198},{"startOffset":29932,"endOffset":30078,"count":8128},{"startOffset":30000,"endOffset":30038,"count":20783},{"startOffset":30029,"endOffset":30037,"count":2835},{"startOffset":30039,"endOffset":30055,"count":0},{"startOffset":30069,"endOffset":30078,"count":5293},{"startOffset":30078,"endOffset":30226,"count":32039},{"startOffset":30147,"endOffset":30186,"count":61110},{"startOffset":30177,"endOffset":30185,"count":30382},{"startOffset":30187,"endOffset":30203,"count":0},{"startOffset":30217,"endOffset":30226,"count":1657},{"startOffset":30226,"endOffset":30748,"count":0},{"startOffset":30748,"endOffset":30814,"count":36366},{"startOffset":30784,"endOffset":30813,"count":5160},{"startOffset":30814,"endOffset":30933,"count":4023},{"startOffset":30882,"endOffset":30924,"count":38393},{"startOffset":30915,"endOffset":30924,"count":28},{"startOffset":30924,"endOffset":30933,"count":3995},{"startOffset":30933,"endOffset":31848,"count":3896},{"startOffset":31136,"endOffset":31163,"count":222},{"startOffset":31163,"endOffset":31422,"count":3059},{"startOffset":31192,"endOffset":31253,"count":0},{"startOffset":31313,"endOffset":31351,"count":0},{"startOffset":31352,"endOffset":31422,"count":0},{"startOffset":31422,"endOffset":31663,"count":615},{"startOffset":31452,"endOffset":31494,"count":0},{"startOffset":31554,"endOffset":31592,"count":0},{"startOffset":31593,"endOffset":31663,"count":0},{"startOffset":31663,"endOffset":31790,"count":0},{"startOffset":31791,"endOffset":31848,"count":0},{"startOffset":31848,"endOffset":32292,"count":0},{"startOffset":32292,"endOffset":32856,"count":147},{"startOffset":32333,"endOffset":32683,"count":0},{"startOffset":32734,"endOffset":32765,"count":143},{"startOffset":32765,"endOffset":32801,"count":76},{"startOffset":32802,"endOffset":32856,"count":0},{"startOffset":32857,"endOffset":32914,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":29681,"endOffset":29924,"count":58364},{"startOffset":29715,"endOffset":29728,"count":29166},{"startOffset":29728,"endOffset":29739,"count":29198},{"startOffset":29739,"endOffset":29748,"count":32},{"startOffset":29748,"endOffset":29795,"count":29166},{"startOffset":29795,"endOffset":29908,"count":0},{"startOffset":29908,"endOffset":29923,"count":29166}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30384,"endOffset":30715,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30955,"endOffset":31106,"count":3896},{"startOffset":31024,"endOffset":31066,"count":9081},{"startOffset":31050,"endOffset":31059,"count":660},{"startOffset":31059,"endOffset":31066,"count":8421},{"startOffset":31067,"endOffset":31083,"count":0},{"startOffset":31097,"endOffset":31105,"count":3236}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32160,"endOffset":32194,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32252,"endOffset":32287,"count":0}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":32915,"endOffset":33139,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":33139,"endOffset":33211,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":33211,"endOffset":33550,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":33550,"endOffset":33899,"count":0}],"isBlockCoverage":false},{"functionName":"y","ranges":[{"startOffset":33899,"endOffset":34132,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":34132,"endOffset":34423,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":34423,"endOffset":34789,"count":0}],"isBlockCoverage":false},{"functionName":"x","ranges":[{"startOffset":34789,"endOffset":34859,"count":0}],"isBlockCoverage":false},{"functionName":"v","ranges":[{"startOffset":34859,"endOffset":34891,"count":161}],"isBlockCoverage":true},{"functionName":"g","ranges":[{"startOffset":34891,"endOffset":34928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/report-translator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13928,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeMultiArgReportCall","ranges":[{"startOffset":2415,"endOffset":3214,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidNodeInfo","ranges":[{"startOffset":3504,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReportLoc","ranges":[{"startOffset":4193,"endOffset":4434,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidFix","ranges":[{"startOffset":4548,"endOffset":4758,"count":0}],"isBlockCoverage":false},{"functionName":"compareFixesByRange","ranges":[{"startOffset":4976,"endOffset":5077,"count":0}],"isBlockCoverage":false},{"functionName":"mergeFixes","ranges":[{"startOffset":5324,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFixes","ranges":[{"startOffset":6566,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"mapSuggestions","ranges":[{"startOffset":7324,"endOffset":7926,"count":0}],"isBlockCoverage":false},{"functionName":"createProblem","ranges":[{"startOffset":8682,"endOffset":9561,"count":0}],"isBlockCoverage":false},{"functionName":"validateSuggestions","ranges":[{"startOffset":9832,"endOffset":11180,"count":0}],"isBlockCoverage":false},{"functionName":"createReportTranslator","ranges":[{"startOffset":11683,"endOffset":13926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/rule-fixer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4632,"count":1}],"isBlockCoverage":true},{"functionName":"insertTextAt","ranges":[{"startOffset":740,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"insertTextAfter","ranges":[{"startOffset":1439,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"insertTextAfterRange","ranges":[{"startOffset":1930,"endOffset":2016,"count":0}],"isBlockCoverage":false},{"functionName":"insertTextBefore","ranges":[{"startOffset":2346,"endOffset":2457,"count":0}],"isBlockCoverage":false},{"functionName":"insertTextBeforeRange","ranges":[{"startOffset":2840,"endOffset":2927,"count":0}],"isBlockCoverage":false},{"functionName":"replaceText","ranges":[{"startOffset":3241,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTextRange","ranges":[{"startOffset":3722,"endOffset":3823,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":4096,"endOffset":4175,"count":0}],"isBlockCoverage":false},{"functionName":"removeRange","ranges":[{"startOffset":4502,"endOffset":4596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/interpolate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":326,"endOffset":762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/rules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2320,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeRule","ranges":[{"startOffset":786,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"Rules","ranges":[{"startOffset":1139,"endOffset":1203,"count":1}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1404,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1766,"endOffset":2115,"count":1184},{"startOffset":1833,"endOffset":1907,"count":0},{"startOffset":1941,"endOffset":1992,"count":0},{"startOffset":2087,"endOffset":2114,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2121,"endOffset":2292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18090,"count":1}],"isBlockCoverage":true},{"functionName":"accessor-pairs","ranges":[{"startOffset":498,"endOffset":531,"count":9}],"isBlockCoverage":true},{"functionName":"array-bracket-newline","ranges":[{"startOffset":562,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"array-bracket-spacing","ranges":[{"startOffset":633,"endOffset":673,"count":9}],"isBlockCoverage":true},{"functionName":"array-callback-return","ranges":[{"startOffset":704,"endOffset":744,"count":9}],"isBlockCoverage":true},{"functionName":"array-element-newline","ranges":[{"startOffset":775,"endOffset":815,"count":0}],"isBlockCoverage":false},{"functionName":"arrow-body-style","ranges":[{"startOffset":841,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"arrow-parens","ranges":[{"startOffset":898,"endOffset":929,"count":0}],"isBlockCoverage":false},{"functionName":"arrow-spacing","ranges":[{"startOffset":952,"endOffset":984,"count":9}],"isBlockCoverage":true},{"functionName":"block-scoped-var","ranges":[{"startOffset":1010,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"block-spacing","ranges":[{"startOffset":1068,"endOffset":1100,"count":9}],"isBlockCoverage":true},{"functionName":"brace-style","ranges":[{"startOffset":1121,"endOffset":1151,"count":9}],"isBlockCoverage":true},{"functionName":"callback-return","ranges":[{"startOffset":1176,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"camelcase","ranges":[{"startOffset":1227,"endOffset":1255,"count":9}],"isBlockCoverage":true},{"functionName":"capitalized-comments","ranges":[{"startOffset":1285,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"class-methods-use-this","ranges":[{"startOffset":1356,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"comma-dangle","ranges":[{"startOffset":1419,"endOffset":1450,"count":9}],"isBlockCoverage":true},{"functionName":"comma-spacing","ranges":[{"startOffset":1473,"endOffset":1505,"count":9}],"isBlockCoverage":true},{"functionName":"comma-style","ranges":[{"startOffset":1526,"endOffset":1556,"count":9}],"isBlockCoverage":true},{"functionName":"complexity","ranges":[{"startOffset":1574,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"computed-property-spacing","ranges":[{"startOffset":1638,"endOffset":1682,"count":9}],"isBlockCoverage":true},{"functionName":"consistent-return","ranges":[{"startOffset":1709,"endOffset":1745,"count":0}],"isBlockCoverage":false},{"functionName":"consistent-this","ranges":[{"startOffset":1770,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"constructor-super","ranges":[{"startOffset":1831,"endOffset":1867,"count":9}],"isBlockCoverage":true},{"functionName":"curly","ranges":[{"startOffset":1880,"endOffset":1904,"count":9}],"isBlockCoverage":true},{"functionName":"default-case","ranges":[{"startOffset":1926,"endOffset":1957,"count":0}],"isBlockCoverage":false},{"functionName":"default-case-last","ranges":[{"startOffset":1984,"endOffset":2020,"count":9}],"isBlockCoverage":true},{"functionName":"default-param-last","ranges":[{"startOffset":2048,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"dot-location","ranges":[{"startOffset":2107,"endOffset":2138,"count":9}],"isBlockCoverage":true},{"functionName":"dot-notation","ranges":[{"startOffset":2160,"endOffset":2191,"count":9}],"isBlockCoverage":true},{"functionName":"eol-last","ranges":[{"startOffset":2209,"endOffset":2236,"count":9}],"isBlockCoverage":true},{"functionName":"eqeqeq","ranges":[{"startOffset":2250,"endOffset":2275,"count":9}],"isBlockCoverage":true},{"functionName":"for-direction","ranges":[{"startOffset":2298,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"func-call-spacing","ranges":[{"startOffset":2357,"endOffset":2393,"count":9}],"isBlockCoverage":true},{"functionName":"func-name-matching","ranges":[{"startOffset":2421,"endOffset":2458,"count":0}],"isBlockCoverage":false},{"functionName":"func-names","ranges":[{"startOffset":2478,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"func-style","ranges":[{"startOffset":2527,"endOffset":2556,"count":0}],"isBlockCoverage":false},{"functionName":"function-call-argument-newline","ranges":[{"startOffset":2596,"endOffset":2645,"count":0}],"isBlockCoverage":false},{"functionName":"function-paren-newline","ranges":[{"startOffset":2677,"endOffset":2718,"count":0}],"isBlockCoverage":false},{"functionName":"generator-star-spacing","ranges":[{"startOffset":2750,"endOffset":2791,"count":9}],"isBlockCoverage":true},{"functionName":"getter-return","ranges":[{"startOffset":2814,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"global-require","ranges":[{"startOffset":2870,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"grouped-accessor-pairs","ranges":[{"startOffset":2935,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"guard-for-in","ranges":[{"startOffset":2998,"endOffset":3029,"count":0}],"isBlockCoverage":false},{"functionName":"handle-callback-err","ranges":[{"startOffset":3058,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"id-blacklist","ranges":[{"startOffset":3118,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"id-denylist","ranges":[{"startOffset":3170,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"id-length","ranges":[{"startOffset":3219,"endOffset":3247,"count":0}],"isBlockCoverage":false},{"functionName":"id-match","ranges":[{"startOffset":3265,"endOffset":3292,"count":0}],"isBlockCoverage":false},{"functionName":"implicit-arrow-linebreak","ranges":[{"startOffset":3326,"endOffset":3369,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":3383,"endOffset":3408,"count":9}],"isBlockCoverage":true},{"functionName":"indent-legacy","ranges":[{"startOffset":3431,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"init-declarations","ranges":[{"startOffset":3490,"endOffset":3526,"count":0}],"isBlockCoverage":false},{"functionName":"jsx-quotes","ranges":[{"startOffset":3546,"endOffset":3575,"count":9}],"isBlockCoverage":true},{"functionName":"key-spacing","ranges":[{"startOffset":3596,"endOffset":3626,"count":9}],"isBlockCoverage":true},{"functionName":"keyword-spacing","ranges":[{"startOffset":3651,"endOffset":3685,"count":9}],"isBlockCoverage":true},{"functionName":"line-comment-position","ranges":[{"startOffset":3716,"endOffset":3756,"count":0}],"isBlockCoverage":false},{"functionName":"linebreak-style","ranges":[{"startOffset":3781,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"lines-around-comment","ranges":[{"startOffset":3845,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"lines-around-directive","ranges":[{"startOffset":3916,"endOffset":3957,"count":0}],"isBlockCoverage":false},{"functionName":"lines-between-class-members","ranges":[{"startOffset":3994,"endOffset":4040,"count":9}],"isBlockCoverage":true},{"functionName":"logical-assignment-operators","ranges":[{"startOffset":4078,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"max-classes-per-file","ranges":[{"startOffset":4155,"endOffset":4194,"count":0}],"isBlockCoverage":false},{"functionName":"max-depth","ranges":[{"startOffset":4213,"endOffset":4241,"count":0}],"isBlockCoverage":false},{"functionName":"max-len","ranges":[{"startOffset":4258,"endOffset":4284,"count":0}],"isBlockCoverage":false},{"functionName":"max-lines","ranges":[{"startOffset":4303,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"max-lines-per-function","ranges":[{"startOffset":4363,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"max-nested-callbacks","ranges":[{"startOffset":4434,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"max-params","ranges":[{"startOffset":4493,"endOffset":4522,"count":0}],"isBlockCoverage":false},{"functionName":"max-statements","ranges":[{"startOffset":4546,"endOffset":4579,"count":0}],"isBlockCoverage":false},{"functionName":"max-statements-per-line","ranges":[{"startOffset":4612,"endOffset":4654,"count":0}],"isBlockCoverage":false},{"functionName":"multiline-comment-style","ranges":[{"startOffset":4687,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"multiline-ternary","ranges":[{"startOffset":4756,"endOffset":4792,"count":9}],"isBlockCoverage":true},{"functionName":"new-cap","ranges":[{"startOffset":4809,"endOffset":4835,"count":9}],"isBlockCoverage":true},{"functionName":"new-parens","ranges":[{"startOffset":4855,"endOffset":4884,"count":9}],"isBlockCoverage":true},{"functionName":"newline-after-var","ranges":[{"startOffset":4911,"endOffset":4947,"count":0}],"isBlockCoverage":false},{"functionName":"newline-before-return","ranges":[{"startOffset":4978,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"newline-per-chained-call","ranges":[{"startOffset":5052,"endOffset":5095,"count":0}],"isBlockCoverage":false},{"functionName":"no-alert","ranges":[{"startOffset":5113,"endOffset":5140,"count":0}],"isBlockCoverage":false},{"functionName":"no-array-constructor","ranges":[{"startOffset":5170,"endOffset":5209,"count":9}],"isBlockCoverage":true},{"functionName":"no-async-promise-executor","ranges":[{"startOffset":5244,"endOffset":5288,"count":9}],"isBlockCoverage":true},{"functionName":"no-await-in-loop","ranges":[{"startOffset":5314,"endOffset":5349,"count":0}],"isBlockCoverage":false},{"functionName":"no-bitwise","ranges":[{"startOffset":5369,"endOffset":5398,"count":0}],"isBlockCoverage":false},{"functionName":"no-buffer-constructor","ranges":[{"startOffset":5429,"endOffset":5469,"count":0}],"isBlockCoverage":false},{"functionName":"no-caller","ranges":[{"startOffset":5488,"endOffset":5516,"count":9}],"isBlockCoverage":true},{"functionName":"no-case-declarations","ranges":[{"startOffset":5546,"endOffset":5585,"count":9}],"isBlockCoverage":true},{"functionName":"no-catch-shadow","ranges":[{"startOffset":5610,"endOffset":5644,"count":0}],"isBlockCoverage":false},{"functionName":"no-class-assign","ranges":[{"startOffset":5669,"endOffset":5703,"count":9}],"isBlockCoverage":true},{"functionName":"no-compare-neg-zero","ranges":[{"startOffset":5732,"endOffset":5770,"count":9}],"isBlockCoverage":true},{"functionName":"no-cond-assign","ranges":[{"startOffset":5794,"endOffset":5827,"count":9}],"isBlockCoverage":true},{"functionName":"no-confusing-arrow","ranges":[{"startOffset":5855,"endOffset":5892,"count":0}],"isBlockCoverage":false},{"functionName":"no-console","ranges":[{"startOffset":5912,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"no-const-assign","ranges":[{"startOffset":5966,"endOffset":6000,"count":9}],"isBlockCoverage":true},{"functionName":"no-constant-binary-expression","ranges":[{"startOffset":6039,"endOffset":6087,"count":0}],"isBlockCoverage":false},{"functionName":"no-constant-condition","ranges":[{"startOffset":6118,"endOffset":6158,"count":9}],"isBlockCoverage":true},{"functionName":"no-constructor-return","ranges":[{"startOffset":6189,"endOffset":6229,"count":0}],"isBlockCoverage":false},{"functionName":"no-continue","ranges":[{"startOffset":6250,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"no-control-regex","ranges":[{"startOffset":6306,"endOffset":6341,"count":9}],"isBlockCoverage":true},{"functionName":"no-debugger","ranges":[{"startOffset":6362,"endOffset":6392,"count":9}],"isBlockCoverage":true},{"functionName":"no-delete-var","ranges":[{"startOffset":6415,"endOffset":6447,"count":9}],"isBlockCoverage":true},{"functionName":"no-div-regex","ranges":[{"startOffset":6469,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"no-dupe-args","ranges":[{"startOffset":6522,"endOffset":6553,"count":9}],"isBlockCoverage":true},{"functionName":"no-dupe-class-members","ranges":[{"startOffset":6584,"endOffset":6624,"count":9}],"isBlockCoverage":true},{"functionName":"no-dupe-else-if","ranges":[{"startOffset":6649,"endOffset":6683,"count":0}],"isBlockCoverage":false},{"functionName":"no-dupe-keys","ranges":[{"startOffset":6705,"endOffset":6736,"count":9}],"isBlockCoverage":true},{"functionName":"no-duplicate-case","ranges":[{"startOffset":6763,"endOffset":6799,"count":9}],"isBlockCoverage":true},{"functionName":"no-duplicate-imports","ranges":[{"startOffset":6829,"endOffset":6868,"count":0}],"isBlockCoverage":false},{"functionName":"no-else-return","ranges":[{"startOffset":6892,"endOffset":6925,"count":0}],"isBlockCoverage":false},{"functionName":"no-empty","ranges":[{"startOffset":6943,"endOffset":6970,"count":9}],"isBlockCoverage":true},{"functionName":"no-empty-character-class","ranges":[{"startOffset":7004,"endOffset":7047,"count":9}],"isBlockCoverage":true},{"functionName":"no-empty-function","ranges":[{"startOffset":7074,"endOffset":7110,"count":0}],"isBlockCoverage":false},{"functionName":"no-empty-pattern","ranges":[{"startOffset":7136,"endOffset":7171,"count":9}],"isBlockCoverage":true},{"functionName":"no-eq-null","ranges":[{"startOffset":7191,"endOffset":7220,"count":0}],"isBlockCoverage":false},{"functionName":"no-eval","ranges":[{"startOffset":7237,"endOffset":7263,"count":9}],"isBlockCoverage":true},{"functionName":"no-ex-assign","ranges":[{"startOffset":7285,"endOffset":7316,"count":9}],"isBlockCoverage":true},{"functionName":"no-extend-native","ranges":[{"startOffset":7342,"endOffset":7377,"count":9}],"isBlockCoverage":true},{"functionName":"no-extra-bind","ranges":[{"startOffset":7400,"endOffset":7432,"count":9}],"isBlockCoverage":true},{"functionName":"no-extra-boolean-cast","ranges":[{"startOffset":7463,"endOffset":7503,"count":9}],"isBlockCoverage":true},{"functionName":"no-extra-label","ranges":[{"startOffset":7527,"endOffset":7560,"count":0}],"isBlockCoverage":false},{"functionName":"no-extra-parens","ranges":[{"startOffset":7585,"endOffset":7619,"count":9}],"isBlockCoverage":true},{"functionName":"no-extra-semi","ranges":[{"startOffset":7642,"endOffset":7674,"count":0}],"isBlockCoverage":false},{"functionName":"no-fallthrough","ranges":[{"startOffset":7698,"endOffset":7731,"count":9}],"isBlockCoverage":true},{"functionName":"no-floating-decimal","ranges":[{"startOffset":7760,"endOffset":7798,"count":9}],"isBlockCoverage":true},{"functionName":"no-func-assign","ranges":[{"startOffset":7822,"endOffset":7855,"count":9}],"isBlockCoverage":true},{"functionName":"no-global-assign","ranges":[{"startOffset":7881,"endOffset":7916,"count":9}],"isBlockCoverage":true},{"functionName":"no-implicit-coercion","ranges":[{"startOffset":7946,"endOffset":7985,"count":0}],"isBlockCoverage":false},{"functionName":"no-implicit-globals","ranges":[{"startOffset":8014,"endOffset":8052,"count":0}],"isBlockCoverage":false},{"functionName":"no-implied-eval","ranges":[{"startOffset":8077,"endOffset":8111,"count":9}],"isBlockCoverage":true},{"functionName":"no-import-assign","ranges":[{"startOffset":8137,"endOffset":8172,"count":9}],"isBlockCoverage":true},{"functionName":"no-inline-comments","ranges":[{"startOffset":8200,"endOffset":8237,"count":0}],"isBlockCoverage":false},{"functionName":"no-inner-declarations","ranges":[{"startOffset":8268,"endOffset":8308,"count":0}],"isBlockCoverage":false},{"functionName":"no-invalid-regexp","ranges":[{"startOffset":8335,"endOffset":8371,"count":9}],"isBlockCoverage":true},{"functionName":"no-invalid-this","ranges":[{"startOffset":8396,"endOffset":8430,"count":0}],"isBlockCoverage":false},{"functionName":"no-irregular-whitespace","ranges":[{"startOffset":8463,"endOffset":8505,"count":9}],"isBlockCoverage":true},{"functionName":"no-iterator","ranges":[{"startOffset":8526,"endOffset":8556,"count":9}],"isBlockCoverage":true},{"functionName":"no-label-var","ranges":[{"startOffset":8578,"endOffset":8609,"count":0}],"isBlockCoverage":false},{"functionName":"no-labels","ranges":[{"startOffset":8628,"endOffset":8656,"count":9}],"isBlockCoverage":true},{"functionName":"no-lone-blocks","ranges":[{"startOffset":8680,"endOffset":8713,"count":9}],"isBlockCoverage":true},{"functionName":"no-lonely-if","ranges":[{"startOffset":8735,"endOffset":8766,"count":0}],"isBlockCoverage":false},{"functionName":"no-loop-func","ranges":[{"startOffset":8788,"endOffset":8819,"count":0}],"isBlockCoverage":false},{"functionName":"no-loss-of-precision","ranges":[{"startOffset":8849,"endOffset":8888,"count":9}],"isBlockCoverage":true},{"functionName":"no-magic-numbers","ranges":[{"startOffset":8914,"endOffset":8949,"count":0}],"isBlockCoverage":false},{"functionName":"no-misleading-character-class","ranges":[{"startOffset":8988,"endOffset":9036,"count":9}],"isBlockCoverage":true},{"functionName":"no-mixed-operators","ranges":[{"startOffset":9064,"endOffset":9101,"count":9}],"isBlockCoverage":true},{"functionName":"no-mixed-requires","ranges":[{"startOffset":9128,"endOffset":9164,"count":0}],"isBlockCoverage":false},{"functionName":"no-mixed-spaces-and-tabs","ranges":[{"startOffset":9198,"endOffset":9241,"count":9}],"isBlockCoverage":true},{"functionName":"no-multi-assign","ranges":[{"startOffset":9266,"endOffset":9300,"count":0}],"isBlockCoverage":false},{"functionName":"no-multi-spaces","ranges":[{"startOffset":9325,"endOffset":9359,"count":9}],"isBlockCoverage":true},{"functionName":"no-multi-str","ranges":[{"startOffset":9381,"endOffset":9412,"count":9}],"isBlockCoverage":true},{"functionName":"no-multiple-empty-lines","ranges":[{"startOffset":9445,"endOffset":9487,"count":9}],"isBlockCoverage":true},{"functionName":"no-native-reassign","ranges":[{"startOffset":9515,"endOffset":9552,"count":0}],"isBlockCoverage":false},{"functionName":"no-negated-condition","ranges":[{"startOffset":9582,"endOffset":9621,"count":0}],"isBlockCoverage":false},{"functionName":"no-negated-in-lhs","ranges":[{"startOffset":9648,"endOffset":9684,"count":0}],"isBlockCoverage":false},{"functionName":"no-nested-ternary","ranges":[{"startOffset":9711,"endOffset":9747,"count":0}],"isBlockCoverage":false},{"functionName":"no-new","ranges":[{"startOffset":9763,"endOffset":9788,"count":9}],"isBlockCoverage":true},{"functionName":"no-new-func","ranges":[{"startOffset":9809,"endOffset":9839,"count":9}],"isBlockCoverage":true},{"functionName":"no-new-object","ranges":[{"startOffset":9862,"endOffset":9894,"count":9}],"isBlockCoverage":true},{"functionName":"no-new-require","ranges":[{"startOffset":9918,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"no-new-symbol","ranges":[{"startOffset":9974,"endOffset":10006,"count":9}],"isBlockCoverage":true},{"functionName":"no-new-wrappers","ranges":[{"startOffset":10031,"endOffset":10065,"count":9}],"isBlockCoverage":true},{"functionName":"no-nonoctal-decimal-escape","ranges":[{"startOffset":10101,"endOffset":10146,"count":0}],"isBlockCoverage":false},{"functionName":"no-obj-calls","ranges":[{"startOffset":10168,"endOffset":10199,"count":9}],"isBlockCoverage":true},{"functionName":"no-octal","ranges":[{"startOffset":10217,"endOffset":10244,"count":9}],"isBlockCoverage":true},{"functionName":"no-octal-escape","ranges":[{"startOffset":10269,"endOffset":10303,"count":9}],"isBlockCoverage":true},{"functionName":"no-param-reassign","ranges":[{"startOffset":10330,"endOffset":10366,"count":0}],"isBlockCoverage":false},{"functionName":"no-path-concat","ranges":[{"startOffset":10390,"endOffset":10423,"count":0}],"isBlockCoverage":false},{"functionName":"no-plusplus","ranges":[{"startOffset":10444,"endOffset":10474,"count":0}],"isBlockCoverage":false},{"functionName":"no-process-env","ranges":[{"startOffset":10498,"endOffset":10531,"count":0}],"isBlockCoverage":false},{"functionName":"no-process-exit","ranges":[{"startOffset":10556,"endOffset":10590,"count":0}],"isBlockCoverage":false},{"functionName":"no-promise-executor-return","ranges":[{"startOffset":10626,"endOffset":10671,"count":0}],"isBlockCoverage":false},{"functionName":"no-proto","ranges":[{"startOffset":10689,"endOffset":10716,"count":9}],"isBlockCoverage":true},{"functionName":"no-prototype-builtins","ranges":[{"startOffset":10747,"endOffset":10787,"count":9}],"isBlockCoverage":true},{"functionName":"no-redeclare","ranges":[{"startOffset":10809,"endOffset":10840,"count":9}],"isBlockCoverage":true},{"functionName":"no-regex-spaces","ranges":[{"startOffset":10865,"endOffset":10899,"count":9}],"isBlockCoverage":true},{"functionName":"no-restricted-exports","ranges":[{"startOffset":10930,"endOffset":10970,"count":0}],"isBlockCoverage":false},{"functionName":"no-restricted-globals","ranges":[{"startOffset":11001,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"no-restricted-imports","ranges":[{"startOffset":11072,"endOffset":11112,"count":0}],"isBlockCoverage":false},{"functionName":"no-restricted-modules","ranges":[{"startOffset":11143,"endOffset":11183,"count":0}],"isBlockCoverage":false},{"functionName":"no-restricted-properties","ranges":[{"startOffset":11217,"endOffset":11260,"count":0}],"isBlockCoverage":false},{"functionName":"no-restricted-syntax","ranges":[{"startOffset":11290,"endOffset":11329,"count":0}],"isBlockCoverage":false},{"functionName":"no-return-assign","ranges":[{"startOffset":11355,"endOffset":11390,"count":9}],"isBlockCoverage":true},{"functionName":"no-return-await","ranges":[{"startOffset":11415,"endOffset":11449,"count":0}],"isBlockCoverage":false},{"functionName":"no-script-url","ranges":[{"startOffset":11472,"endOffset":11504,"count":0}],"isBlockCoverage":false},{"functionName":"no-self-assign","ranges":[{"startOffset":11528,"endOffset":11561,"count":9}],"isBlockCoverage":true},{"functionName":"no-self-compare","ranges":[{"startOffset":11586,"endOffset":11620,"count":9}],"isBlockCoverage":true},{"functionName":"no-sequences","ranges":[{"startOffset":11642,"endOffset":11673,"count":9}],"isBlockCoverage":true},{"functionName":"no-setter-return","ranges":[{"startOffset":11699,"endOffset":11734,"count":0}],"isBlockCoverage":false},{"functionName":"no-shadow","ranges":[{"startOffset":11753,"endOffset":11781,"count":0}],"isBlockCoverage":false},{"functionName":"no-shadow-restricted-names","ranges":[{"startOffset":11817,"endOffset":11862,"count":9}],"isBlockCoverage":true},{"functionName":"no-spaced-func","ranges":[{"startOffset":11886,"endOffset":11919,"count":0}],"isBlockCoverage":false},{"functionName":"no-sparse-arrays","ranges":[{"startOffset":11945,"endOffset":11980,"count":9}],"isBlockCoverage":true},{"functionName":"no-sync","ranges":[{"startOffset":11997,"endOffset":12023,"count":0}],"isBlockCoverage":false},{"functionName":"no-tabs","ranges":[{"startOffset":12040,"endOffset":12066,"count":9}],"isBlockCoverage":true},{"functionName":"no-template-curly-in-string","ranges":[{"startOffset":12103,"endOffset":12149,"count":9}],"isBlockCoverage":true},{"functionName":"no-ternary","ranges":[{"startOffset":12169,"endOffset":12198,"count":0}],"isBlockCoverage":false},{"functionName":"no-this-before-super","ranges":[{"startOffset":12228,"endOffset":12267,"count":9}],"isBlockCoverage":true},{"functionName":"no-throw-literal","ranges":[{"startOffset":12293,"endOffset":12328,"count":9}],"isBlockCoverage":true},{"functionName":"no-trailing-spaces","ranges":[{"startOffset":12356,"endOffset":12393,"count":9}],"isBlockCoverage":true},{"functionName":"no-undef","ranges":[{"startOffset":12411,"endOffset":12438,"count":9}],"isBlockCoverage":true},{"functionName":"no-undef-init","ranges":[{"startOffset":12461,"endOffset":12493,"count":9}],"isBlockCoverage":true},{"functionName":"no-undefined","ranges":[{"startOffset":12515,"endOffset":12546,"count":0}],"isBlockCoverage":false},{"functionName":"no-underscore-dangle","ranges":[{"startOffset":12576,"endOffset":12615,"count":0}],"isBlockCoverage":false},{"functionName":"no-unexpected-multiline","ranges":[{"startOffset":12648,"endOffset":12690,"count":9}],"isBlockCoverage":true},{"functionName":"no-unmodified-loop-condition","ranges":[{"startOffset":12728,"endOffset":12775,"count":9}],"isBlockCoverage":true},{"functionName":"no-unneeded-ternary","ranges":[{"startOffset":12804,"endOffset":12842,"count":9}],"isBlockCoverage":true},{"functionName":"no-unreachable","ranges":[{"startOffset":12866,"endOffset":12899,"count":9}],"isBlockCoverage":true},{"functionName":"no-unreachable-loop","ranges":[{"startOffset":12928,"endOffset":12966,"count":9}],"isBlockCoverage":true},{"functionName":"no-unsafe-finally","ranges":[{"startOffset":12993,"endOffset":13029,"count":9}],"isBlockCoverage":true},{"functionName":"no-unsafe-negation","ranges":[{"startOffset":13057,"endOffset":13094,"count":9}],"isBlockCoverage":true},{"functionName":"no-unsafe-optional-chaining","ranges":[{"startOffset":13131,"endOffset":13177,"count":0}],"isBlockCoverage":false},{"functionName":"no-unused-expressions","ranges":[{"startOffset":13208,"endOffset":13248,"count":9}],"isBlockCoverage":true},{"functionName":"no-unused-labels","ranges":[{"startOffset":13274,"endOffset":13309,"count":0}],"isBlockCoverage":false},{"functionName":"no-unused-private-class-members","ranges":[{"startOffset":13350,"endOffset":13400,"count":0}],"isBlockCoverage":false},{"functionName":"no-unused-vars","ranges":[{"startOffset":13424,"endOffset":13457,"count":9}],"isBlockCoverage":true},{"functionName":"no-use-before-define","ranges":[{"startOffset":13487,"endOffset":13526,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-backreference","ranges":[{"startOffset":13560,"endOffset":13603,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-call","ranges":[{"startOffset":13628,"endOffset":13662,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-catch","ranges":[{"startOffset":13688,"endOffset":13723,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-computed-key","ranges":[{"startOffset":13756,"endOffset":13798,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-concat","ranges":[{"startOffset":13825,"endOffset":13861,"count":0}],"isBlockCoverage":false},{"functionName":"no-useless-constructor","ranges":[{"startOffset":13893,"endOffset":13934,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-escape","ranges":[{"startOffset":13961,"endOffset":13997,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-rename","ranges":[{"startOffset":14024,"endOffset":14060,"count":9}],"isBlockCoverage":true},{"functionName":"no-useless-return","ranges":[{"startOffset":14087,"endOffset":14123,"count":9}],"isBlockCoverage":true},{"functionName":"no-var","ranges":[{"startOffset":14139,"endOffset":14164,"count":9}],"isBlockCoverage":true},{"functionName":"no-void","ranges":[{"startOffset":14181,"endOffset":14207,"count":9}],"isBlockCoverage":true},{"functionName":"no-warning-comments","ranges":[{"startOffset":14236,"endOffset":14274,"count":0}],"isBlockCoverage":false},{"functionName":"no-whitespace-before-property","ranges":[{"startOffset":14313,"endOffset":14361,"count":9}],"isBlockCoverage":true},{"functionName":"no-with","ranges":[{"startOffset":14378,"endOffset":14404,"count":9}],"isBlockCoverage":true},{"functionName":"nonblock-statement-body-position","ranges":[{"startOffset":14446,"endOffset":14497,"count":0}],"isBlockCoverage":false},{"functionName":"object-curly-newline","ranges":[{"startOffset":14527,"endOffset":14566,"count":9}],"isBlockCoverage":true},{"functionName":"object-curly-spacing","ranges":[{"startOffset":14596,"endOffset":14635,"count":9}],"isBlockCoverage":true},{"functionName":"object-property-newline","ranges":[{"startOffset":14668,"endOffset":14710,"count":9}],"isBlockCoverage":true},{"functionName":"object-shorthand","ranges":[{"startOffset":14736,"endOffset":14771,"count":9}],"isBlockCoverage":true},{"functionName":"one-var","ranges":[{"startOffset":14788,"endOffset":14814,"count":9}],"isBlockCoverage":true},{"functionName":"one-var-declaration-per-line","ranges":[{"startOffset":14852,"endOffset":14899,"count":0}],"isBlockCoverage":false},{"functionName":"operator-assignment","ranges":[{"startOffset":14928,"endOffset":14966,"count":0}],"isBlockCoverage":false},{"functionName":"operator-linebreak","ranges":[{"startOffset":14994,"endOffset":15031,"count":9}],"isBlockCoverage":true},{"functionName":"padded-blocks","ranges":[{"startOffset":15054,"endOffset":15086,"count":9}],"isBlockCoverage":true},{"functionName":"padding-line-between-statements","ranges":[{"startOffset":15127,"endOffset":15177,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-arrow-callback","ranges":[{"startOffset":15208,"endOffset":15248,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-const","ranges":[{"startOffset":15270,"endOffset":15301,"count":9}],"isBlockCoverage":true},{"functionName":"prefer-destructuring","ranges":[{"startOffset":15331,"endOffset":15370,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-exponentiation-operator","ranges":[{"startOffset":15410,"endOffset":15459,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-named-capture-group","ranges":[{"startOffset":15495,"endOffset":15540,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-numeric-literals","ranges":[{"startOffset":15573,"endOffset":15615,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-object-has-own","ranges":[{"startOffset":15646,"endOffset":15686,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-object-spread","ranges":[{"startOffset":15716,"endOffset":15755,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-promise-reject-errors","ranges":[{"startOffset":15793,"endOffset":15840,"count":9}],"isBlockCoverage":true},{"functionName":"prefer-reflect","ranges":[{"startOffset":15864,"endOffset":15897,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-regex-literals","ranges":[{"startOffset":15928,"endOffset":15968,"count":9}],"isBlockCoverage":true},{"functionName":"prefer-rest-params","ranges":[{"startOffset":15996,"endOffset":16033,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-spread","ranges":[{"startOffset":16056,"endOffset":16088,"count":0}],"isBlockCoverage":false},{"functionName":"prefer-template","ranges":[{"startOffset":16113,"endOffset":16147,"count":0}],"isBlockCoverage":false},{"functionName":"quote-props","ranges":[{"startOffset":16168,"endOffset":16198,"count":9}],"isBlockCoverage":true},{"functionName":"quotes","ranges":[{"startOffset":16212,"endOffset":16237,"count":9}],"isBlockCoverage":true},{"functionName":"radix","ranges":[{"startOffset":16250,"endOffset":16274,"count":0}],"isBlockCoverage":false},{"functionName":"require-atomic-updates","ranges":[{"startOffset":16306,"endOffset":16347,"count":0}],"isBlockCoverage":false},{"functionName":"require-await","ranges":[{"startOffset":16370,"endOffset":16402,"count":0}],"isBlockCoverage":false},{"functionName":"require-jsdoc","ranges":[{"startOffset":16425,"endOffset":16457,"count":0}],"isBlockCoverage":false},{"functionName":"require-unicode-regexp","ranges":[{"startOffset":16489,"endOffset":16530,"count":0}],"isBlockCoverage":false},{"functionName":"require-yield","ranges":[{"startOffset":16553,"endOffset":16585,"count":0}],"isBlockCoverage":false},{"functionName":"rest-spread-spacing","ranges":[{"startOffset":16614,"endOffset":16652,"count":9}],"isBlockCoverage":true},{"functionName":"semi","ranges":[{"startOffset":16664,"endOffset":16687,"count":9}],"isBlockCoverage":true},{"functionName":"semi-spacing","ranges":[{"startOffset":16709,"endOffset":16740,"count":9}],"isBlockCoverage":true},{"functionName":"semi-style","ranges":[{"startOffset":16760,"endOffset":16789,"count":0}],"isBlockCoverage":false},{"functionName":"sort-imports","ranges":[{"startOffset":16811,"endOffset":16842,"count":0}],"isBlockCoverage":false},{"functionName":"sort-keys","ranges":[{"startOffset":16861,"endOffset":16889,"count":0}],"isBlockCoverage":false},{"functionName":"sort-vars","ranges":[{"startOffset":16908,"endOffset":16936,"count":0}],"isBlockCoverage":false},{"functionName":"space-before-blocks","ranges":[{"startOffset":16965,"endOffset":17003,"count":9}],"isBlockCoverage":true},{"functionName":"space-before-function-paren","ranges":[{"startOffset":17040,"endOffset":17086,"count":9}],"isBlockCoverage":true},{"functionName":"space-in-parens","ranges":[{"startOffset":17111,"endOffset":17145,"count":9}],"isBlockCoverage":true},{"functionName":"space-infix-ops","ranges":[{"startOffset":17170,"endOffset":17204,"count":9}],"isBlockCoverage":true},{"functionName":"space-unary-ops","ranges":[{"startOffset":17229,"endOffset":17263,"count":9}],"isBlockCoverage":true},{"functionName":"spaced-comment","ranges":[{"startOffset":17287,"endOffset":17320,"count":9}],"isBlockCoverage":true},{"functionName":"strict","ranges":[{"startOffset":17334,"endOffset":17359,"count":0}],"isBlockCoverage":false},{"functionName":"switch-colon-spacing","ranges":[{"startOffset":17389,"endOffset":17428,"count":0}],"isBlockCoverage":false},{"functionName":"symbol-description","ranges":[{"startOffset":17456,"endOffset":17493,"count":9}],"isBlockCoverage":true},{"functionName":"template-curly-spacing","ranges":[{"startOffset":17525,"endOffset":17566,"count":9}],"isBlockCoverage":true},{"functionName":"template-tag-spacing","ranges":[{"startOffset":17596,"endOffset":17635,"count":9}],"isBlockCoverage":true},{"functionName":"unicode-bom","ranges":[{"startOffset":17656,"endOffset":17686,"count":9}],"isBlockCoverage":true},{"functionName":"use-isnan","ranges":[{"startOffset":17705,"endOffset":17733,"count":9}],"isBlockCoverage":true},{"functionName":"valid-jsdoc","ranges":[{"startOffset":17754,"endOffset":17784,"count":0}],"isBlockCoverage":false},{"functionName":"valid-typeof","ranges":[{"startOffset":17806,"endOffset":17837,"count":9}],"isBlockCoverage":true},{"functionName":"vars-on-top","ranges":[{"startOffset":17858,"endOffset":17888,"count":0}],"isBlockCoverage":false},{"functionName":"wrap-iife","ranges":[{"startOffset":17907,"endOffset":17935,"count":9}],"isBlockCoverage":true},{"functionName":"wrap-regex","ranges":[{"startOffset":17955,"endOffset":17984,"count":0}],"isBlockCoverage":false},{"functionName":"yield-star-spacing","ranges":[{"startOffset":18012,"endOffset":18049,"count":9}],"isBlockCoverage":true},{"functionName":"yoda","ranges":[{"startOffset":18061,"endOffset":18084,"count":9}],"isBlockCoverage":true}]},{"scriptId":"302","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/lazy-loading-rule-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3071,"count":1}],"isBlockCoverage":true},{"functionName":"LazyLoadingRuleMap","ranges":[{"startOffset":763,"endOffset":1629,"count":1},{"startOffset":884,"endOffset":1375,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":898,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1816,"endOffset":1907,"count":1332}],"isBlockCoverage":true},{"functionName":"values","ranges":[{"startOffset":1999,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":2199,"endOffset":2319,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":2547,"endOffset":2709,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/safe-emitter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2135,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1564,"endOffset":2133,"count":8}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1651,"endOffset":1867,"count":5784},{"startOffset":1717,"endOffset":1785,"count":4496},{"startOffset":1785,"endOffset":1857,"count":1288}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":1877,"endOffset":2046,"count":17309},{"startOffset":1944,"endOffset":2036,"count":16993}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1991,"endOffset":2020,"count":50775}],"isBlockCoverage":true},{"functionName":"eventNames","ranges":[{"startOffset":2056,"endOffset":2123,"count":8}],"isBlockCoverage":true}]},{"scriptId":"304","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/source-code-fixer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4681,"count":1}],"isBlockCoverage":true},{"functionName":"compareMessagesByFixRange","ranges":[{"startOffset":786,"endOffset":909,"count":0}],"isBlockCoverage":false},{"functionName":"compareMessagesByLocation","ranges":[{"startOffset":1148,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"SourceCodeFixer","ranges":[{"startOffset":1495,"endOffset":1550,"count":0}],"isBlockCoverage":false},{"functionName":"SourceCodeFixer.applyFixes","ranges":[{"startOffset":2060,"endOffset":4644,"count":8},{"startOffset":2347,"endOffset":2472,"count":0},{"startOffset":2473,"endOffset":2477,"count":0},{"startOffset":2498,"endOffset":2519,"count":0},{"startOffset":2520,"endOffset":2532,"count":0},{"startOffset":3709,"endOffset":4643,"count":0}],"isBlockCoverage":true},{"functionName":"attemptFix","ranges":[{"startOffset":2799,"endOffset":3469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3492,"endOffset":3683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/linter/timing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3979,"count":1}],"isBlockCoverage":true},{"functionName":"alignLeft","ranges":[{"startOffset":511,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":847,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"getListSize","ranges":[{"startOffset":1388,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"display","ranges":[{"startOffset":1972,"endOffset":3146,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3187,"endOffset":3974,"count":1},{"startOffset":3818,"endOffset":3899,"count":0}],"isBlockCoverage":true},{"functionName":"time","ranges":[{"startOffset":3446,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3847,"endOffset":3891,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/config/flat-config-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2779,"count":1}],"isBlockCoverage":true},{"functionName":"parseRuleId","ranges":[{"startOffset":489,"endOffset":1059,"count":0}],"isBlockCoverage":false},{"functionName":"getRuleFromConfig","ranges":[{"startOffset":1344,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"getRuleOptionsSchema","ranges":[{"startOffset":1945,"endOffset":2517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"307","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/config/flat-config-array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7519,"count":1}],"isBlockCoverage":true},{"functionName":"splitPluginIdentifier","ranges":[{"startOffset":1036,"endOffset":1213,"count":0}],"isBlockCoverage":false},{"functionName":"FlatConfigArray","ranges":[{"startOffset":1840,"endOffset":2823,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3190,"endOffset":4378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4675,"endOffset":7394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"file:///home/runner/work/deluge/deluge/node_modules/@humanwhocodes/config-array/api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26391,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefault","ranges":[{"startOffset":79,"endOffset":193,"count":3},{"startOffset":150,"endOffset":168,"count":1},{"startOffset":170,"endOffset":185,"count":0}],"isBlockCoverage":true},{"functionName":"assertIsArray","ranges":[{"startOffset":816,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsArrayOfStringsAndFunctions","ranges":[{"startOffset":1168,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1717,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1755,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1908,"endOffset":1942,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1946,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2391,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":3159,"endOffset":3222,"count":0}],"isBlockCoverage":false},{"functionName":"assertNonEmptyFilesArray","ranges":[{"startOffset":3440,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"doMatch","ranges":[{"startOffset":3940,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":4759,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSync","ranges":[{"startOffset":6264,"endOffset":7100,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnorePath","ranges":[{"startOffset":7492,"endOffset":8269,"count":0}],"isBlockCoverage":false},{"functionName":"pathMatches","ranges":[{"startOffset":8719,"endOffset":9849,"count":0}],"isBlockCoverage":false},{"functionName":"assertNormalized","ranges":[{"startOffset":10053,"endOffset":10249,"count":0}],"isBlockCoverage":false},{"functionName":"assertExtraConfigTypes","ranges":[{"startOffset":10447,"endOffset":10832,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigArray","ranges":[{"startOffset":12044,"endOffset":13482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13835,"endOffset":13878,"count":0}],"isBlockCoverage":false},{"functionName":"get files","ranges":[{"startOffset":14196,"endOffset":14660,"count":0}],"isBlockCoverage":false},{"functionName":"get ignores","ranges":[{"startOffset":15011,"endOffset":16588,"count":0}],"isBlockCoverage":false},{"functionName":"isNormalized","ranges":[{"startOffset":16733,"endOffset":16799,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":17054,"endOffset":17439,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSync","ranges":[{"startOffset":17685,"endOffset":18066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18354,"endOffset":18418,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18826,"endOffset":18892,"count":0}],"isBlockCoverage":false},{"functionName":"isExplicitMatch","ranges":[{"startOffset":19267,"endOffset":20207,"count":0}],"isBlockCoverage":false},{"functionName":"getConfig","ranges":[{"startOffset":20406,"endOffset":24391,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":24652,"endOffset":24715,"count":0}],"isBlockCoverage":false},{"functionName":"isFileIgnored","ranges":[{"startOffset":24931,"endOffset":25008,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectoryIgnored","ranges":[{"startOffset":25642,"endOffset":26304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"file:///home/runner/work/deluge/deluge/node_modules/@humanwhocodes/object-schema/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":true}]},{"scriptId":"310","url":"file:///home/runner/work/deluge/deluge/node_modules/@humanwhocodes/object-schema/src/object-schema.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8000,"count":1}],"isBlockCoverage":true},{"functionName":"validateDefinition","ranges":[{"startOffset":1379,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectSchema","ranges":[{"startOffset":2716,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"hasKey","ranges":[{"startOffset":5061,"endOffset":5122,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":5486,"endOffset":6518,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6748,"endOffset":7959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///home/runner/work/deluge/deluge/node_modules/@humanwhocodes/object-schema/src/merge-strategy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1534,"count":1}],"isBlockCoverage":true},{"functionName":"overwrite","ranges":[{"startOffset":575,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":941,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":1411,"endOffset":1491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"312","url":"file:///home/runner/work/deluge/deluge/node_modules/@humanwhocodes/object-schema/src/validation-strategy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2715,"count":1}],"isBlockCoverage":true},{"functionName":"array","ranges":[{"startOffset":527,"endOffset":649,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":845,"endOffset":975,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":1170,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"object","ranges":[{"startOffset":1492,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"object?","ranges":[{"startOffset":1833,"endOffset":1972,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":2167,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"string!","ranges":[{"startOffset":2499,"endOffset":2661,"count":0}],"isBlockCoverage":false}]},{"scriptId":"313","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/config/flat-config-schema.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13502,"count":1}],"isBlockCoverage":true},{"functionName":"isNonNullObject","ranges":[{"startOffset":1169,"endOffset":1260,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":1402,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"deepMerge","ranges":[{"startOffset":1679,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeRuleOptions","ranges":[{"startOffset":3248,"endOffset":3488,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsRuleOptions","ranges":[{"startOffset":3855,"endOffset":4061,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsRuleSeverity","ranges":[{"startOffset":4247,"endOffset":4566,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsPluginMemberName","ranges":[{"startOffset":4775,"endOffset":4997,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsObject","ranges":[{"startOffset":5161,"endOffset":5288,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsObjectOrString","ranges":[{"startOffset":5476,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":6031,"endOffset":6110,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6407,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7043,"endOffset":7435,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":7504,"endOffset":8115,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":8121,"endOffset":8730,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":8823,"endOffset":9299,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":9366,"endOffset":10991,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":10998,"endOffset":12169,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12264,"endOffset":12446,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12540,"endOffset":12748,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/config/rule-validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5028,"count":1}],"isBlockCoverage":true},{"functionName":"throwRuleNotFoundError","ranges":[{"startOffset":1011,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"RuleValidator","ranges":[{"startOffset":2635,"endOffset":2851,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3211,"endOffset":4985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/shared/ajv.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":576,"endOffset":991,"count":4}],"isBlockCoverage":true}]},{"scriptId":"316","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/config/default-config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1890,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1034,"endOffset":1131,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1154,"endOffset":1251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/conf/eslint-recommended.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2615,"count":1}],"isBlockCoverage":true}]},{"scriptId":"318","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/conf/globals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2616,"count":1}],"isBlockCoverage":true}]},{"scriptId":"319","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/cli-engine/load-rules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1349,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":810,"endOffset":1347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/cli-engine/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"hash","ranges":[{"startOffset":784,"endOffset":852,"count":2}],"isBlockCoverage":true}]},{"scriptId":"321","url":"file:///home/runner/work/deluge/deluge/node_modules/imurmurhash/imurmurhash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4412,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":443,"endOffset":4407,"count":1},{"startOffset":4352,"endOffset":4405,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3","ranges":[{"startOffset":811,"endOffset":1083,"count":3},{"startOffset":889,"endOffset":895,"count":1},{"startOffset":896,"endOffset":903,"count":2},{"startOffset":963,"endOffset":980,"count":2},{"startOffset":982,"endOffset":1018,"count":2},{"startOffset":1044,"endOffset":1077,"count":2}],"isBlockCoverage":true},{"functionName":"MurmurHash3.hash","ranges":[{"startOffset":1254,"endOffset":3073,"count":2},{"startOffset":1488,"endOffset":1491,"count":0},{"startOffset":1565,"endOffset":1568,"count":0},{"startOffset":1643,"endOffset":1646,"count":0},{"startOffset":1733,"endOffset":1736,"count":0},{"startOffset":1806,"endOffset":1809,"count":0},{"startOffset":1981,"endOffset":2720,"count":3378},{"startOffset":2348,"endOffset":2394,"count":2},{"startOffset":2394,"endOffset":2720,"count":3376},{"startOffset":2790,"endOffset":2843,"count":1},{"startOffset":2860,"endOffset":2912,"count":1},{"startOffset":2929,"endOffset":2972,"count":1}],"isBlockCoverage":true},{"functionName":"MurmurHash3.result","ranges":[{"startOffset":3193,"endOffset":3797,"count":2},{"startOffset":3300,"endOffset":3524,"count":1}],"isBlockCoverage":true},{"functionName":"MurmurHash3.reset","ranges":[{"startOffset":3937,"endOffset":4078,"count":3},{"startOffset":3997,"endOffset":4003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"322","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/cli-engine/lint-result-cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1015,"endOffset":1042,"count":2}],"isBlockCoverage":true},{"functionName":"isValidCacheStrategy","ranges":[{"startOffset":1278,"endOffset":1399,"count":1}],"isBlockCoverage":true},{"functionName":"hashOfConfigFor","ranges":[{"startOffset":1533,"endOffset":1753,"count":16},{"startOffset":1606,"endOffset":1710,"count":1}],"isBlockCoverage":true},{"functionName":"LintResultCache","ranges":[{"startOffset":2374,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"getCachedLintResults","ranges":[{"startOffset":3548,"endOffset":4970,"count":8},{"startOffset":4186,"endOffset":4250,"count":0},{"startOffset":4290,"endOffset":4395,"count":0},{"startOffset":4530,"endOffset":4730,"count":0},{"startOffset":4741,"endOffset":4969,"count":0}],"isBlockCoverage":true},{"functionName":"setCachedLintResults","ranges":[{"startOffset":5545,"endOffset":6587,"count":8},{"startOffset":5672,"endOffset":5703,"count":0},{"startOffset":6373,"endOffset":6437,"count":0}],"isBlockCoverage":true},{"functionName":"reconcile","ranges":[{"startOffset":6677,"endOffset":6808,"count":1}],"isBlockCoverage":true}]},{"scriptId":"323","url":"file:///home/runner/work/deluge/deluge/node_modules/file-entry-cache/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7892,"count":1}],"isBlockCoverage":true},{"functionName":"createFromFile","ranges":[{"startOffset":98,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":277,"endOffset":7887,"count":1}],"isBlockCoverage":true},{"functionName":"removeNotFoundFiles","ranges":[{"startOffset":500,"endOffset":843,"count":2}],"isBlockCoverage":true},{"functionName":"remover","ranges":[{"startOffset":637,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"getHash","ranges":[{"startOffset":1265,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"hasFileChanged","ranges":[{"startOffset":1650,"endOffset":1728,"count":0}],"isBlockCoverage":false},{"functionName":"analyzeFiles","ranges":[{"startOffset":2185,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"getFileDescriptor","ranges":[{"startOffset":2773,"endOffset":3163,"count":16},{"startOffset":2872,"endOffset":2985,"count":0},{"startOffset":3012,"endOffset":3084,"count":0}],"isBlockCoverage":true},{"functionName":"_getFileDescriptorUsingMtimeAndSize","ranges":[{"startOffset":3209,"endOffset":3846,"count":16},{"startOffset":3521,"endOffset":3637,"count":0},{"startOffset":3742,"endOffset":3760,"count":0},{"startOffset":3761,"endOffset":3779,"count":0}],"isBlockCoverage":true},{"functionName":"_getFileDescriptorUsingChecksum","ranges":[{"startOffset":3888,"endOffset":4525,"count":0}],"isBlockCoverage":false},{"functionName":"getUpdatedFiles","ranges":[{"startOffset":4829,"endOffset":5123,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEntries","ranges":[{"startOffset":5282,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"removeEntry","ranges":[{"startOffset":5791,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"deleteCacheFile","ranges":[{"startOffset":6026,"endOffset":6080,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6185,"endOffset":6263,"count":0}],"isBlockCoverage":false},{"functionName":"_getMetaForFileUsingCheckSum","ranges":[{"startOffset":6302,"endOffset":6583,"count":0}],"isBlockCoverage":false},{"functionName":"_getMetaForFileUsingMtimeAndSize","ranges":[{"startOffset":6626,"endOffset":6882,"count":8}],"isBlockCoverage":true},{"functionName":"reconcile","ranges":[{"startOffset":7003,"endOffset":7875,"count":1},{"startOffset":7112,"endOffset":7121,"count":0},{"startOffset":7238,"endOffset":7267,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7314,"endOffset":7835,"count":8},{"startOffset":7450,"endOffset":7495,"count":0},{"startOffset":7616,"endOffset":7825,"count":0}],"isBlockCoverage":true}]},{"scriptId":"324","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7818,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3343,"endOffset":3425,"count":48}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3427,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3529,"endOffset":3631,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3633,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3739,"endOffset":3845,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3847,"endOffset":4003,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4005,"endOffset":4087,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4089,"endOffset":4145,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4147,"endOffset":4229,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4231,"endOffset":4313,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4315,"endOffset":4401,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5532,"endOffset":5620,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5622,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6914,"endOffset":6979,"count":3}],"isBlockCoverage":true}]},{"scriptId":"325","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15171,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1145,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1513,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":1976,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2509,"endOffset":3177,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3179,"endOffset":4213,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4763,"endOffset":6990,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":6992,"endOffset":7868,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":7871,"endOffset":8033,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8265,"endOffset":8881,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9246,"endOffset":9545,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9547,"endOffset":10273,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10275,"endOffset":10578,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10580,"endOffset":10818,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":10820,"endOffset":11140,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11142,"endOffset":12375,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12377,"endOffset":12821,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":12823,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13083,"endOffset":13202,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":13204,"endOffset":13469,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":13471,"endOffset":14268,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":14270,"endOffset":14984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":578,"endOffset":1376,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1378,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1894,"endOffset":2239,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2241,"endOffset":3216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10335,"count":1}],"isBlockCoverage":false},{"functionName":"lazyRequire","ranges":[{"startOffset":1190,"endOffset":1345,"count":3},{"startOffset":1284,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":1380,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":1443,"endOffset":1502,"count":972}],"isBlockCoverage":true},{"functionName":"toBuf","ranges":[{"startOffset":1677,"endOffset":1856,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1890,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1967,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2043,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2089,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2447,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":4180,"endOffset":4393,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":4395,"endOffset":5383,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":5385,"endOffset":5524,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":5526,"endOffset":5868,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":5870,"endOffset":6066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6111,"endOffset":6380,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":6384,"endOffset":6483,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":6485,"endOffset":6648,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":7184,"endOffset":7464,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":7466,"endOffset":7702,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":7704,"endOffset":7869,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":7871,"endOffset":8083,"count":0}],"isBlockCoverage":false},{"functionName":"getHashLength","ranges":[{"startOffset":8085,"endOffset":8265,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":8404,"endOffset":9370,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":9372,"endOffset":9755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2519,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1889,"endOffset":2132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3595,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":647,"endOffset":1447,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1449,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1966,"endOffset":3547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3647,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":894,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1352,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1869,"endOffset":2323,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2325,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2665,"endOffset":3585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20682,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2258,"endOffset":6210,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2368,"endOffset":2909,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2915,"endOffset":2962,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":2975,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3122,"endOffset":3406,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3460,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3524,"endOffset":3604,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3610,"endOffset":3958,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4091,"endOffset":4359,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4468,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4534,"endOffset":4686,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4692,"endOffset":5068,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5132,"endOffset":5190,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5196,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5551,"endOffset":5610,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5616,"endOffset":6129,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6214,"endOffset":6599,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6601,"endOffset":7453,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7455,"endOffset":7576,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7578,"endOffset":8278,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8280,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8419,"endOffset":9776,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":9975,"endOffset":10111,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10311,"endOffset":10427,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10429,"endOffset":11006,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11008,"endOffset":11513,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11515,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14064,"endOffset":15572,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15574,"endOffset":15662,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15664,"endOffset":15759,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":15761,"endOffset":16459,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":16461,"endOffset":16766,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":16768,"endOffset":17105,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17107,"endOffset":17448,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17450,"endOffset":17532,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18091,"endOffset":18151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18155,"endOffset":18502,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18506,"endOffset":18556,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18560,"endOffset":18614,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18618,"endOffset":18668,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":18672,"endOffset":18730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18734,"endOffset":19085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19089,"endOffset":19293,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":19534,"endOffset":19936,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":20066,"endOffset":20150,"count":0}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":20152,"endOffset":20222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11528,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1285,"endOffset":1439,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1441,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2210,"endOffset":2327,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2329,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2708,"endOffset":3956,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":3958,"endOffset":10060,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":10091,"endOffset":10628,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10630,"endOffset":10832,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10834,"endOffset":11292,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":11294,"endOffset":11428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11555,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1327,"endOffset":3252,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3255,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3691,"endOffset":3853,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3967,"endOffset":4326,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4425,"endOffset":4581,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4692,"endOffset":4864,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4975,"endOffset":5135,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":5249,"endOffset":5411,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5453,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5686,"endOffset":5877,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5881,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":6346,"endOffset":6468,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6501,"endOffset":6699,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6720,"endOffset":7070,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":7073,"endOffset":7208,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":7210,"endOffset":7533,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7607,"endOffset":8675,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBitsECDH","ranges":[{"startOffset":8794,"endOffset":9258,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDeriveBitsECDH","ranges":[{"startOffset":9260,"endOffset":11426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10241,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1227,"endOffset":1975,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1295,"endOffset":1972,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2476,"endOffset":2697,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2699,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":2935,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3356,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3593,"endOffset":3932,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4175,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4519,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4664,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4831,"endOffset":5481,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5510,"endOffset":5813,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5851,"endOffset":5998,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6031,"endOffset":6191,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6195,"endOffset":6407,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6435,"endOffset":6777,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7025,"endOffset":7235,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7237,"endOffset":7828,"count":3},{"startOffset":7633,"endOffset":7706,"count":1},{"startOffset":7706,"endOffset":7768,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8229,"endOffset":8437,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":8842,"endOffset":9059,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9221,"endOffset":10082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1583,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":468,"endOffset":530,"count":48}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":662,"endOffset":970,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":699,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":972,"endOffset":1190,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7083,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":891,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1273,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1392,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1756,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1833,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1916,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2270,"endOffset":2515,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2539,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3205,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4412,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4907,"endOffset":5543,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5546,"endOffset":7009,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4875,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1021,"endOffset":1540,"count":48},{"startOffset":1092,"endOffset":1128,"count":0},{"startOffset":1255,"endOffset":1274,"count":0},{"startOffset":1275,"endOffset":1301,"count":0},{"startOffset":1347,"endOffset":1394,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1671,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1870,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2002,"endOffset":2082,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2109,"endOffset":2621,"count":972},{"startOffset":2250,"endOffset":2288,"count":0},{"startOffset":2365,"endOffset":2511,"count":0},{"startOffset":2562,"endOffset":2604,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2649,"endOffset":2994,"count":48},{"startOffset":2742,"endOffset":2780,"count":0},{"startOffset":2815,"endOffset":2838,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":2997,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3577,"endOffset":3996,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4151,"endOffset":4820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9667,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1119,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1204,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2562,"endOffset":2594,"count":0}],"isBlockCoverage":false},{"functionName":"InternalX509Certificate","ranges":[{"startOffset":2599,"endOffset":2665,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2718,"endOffset":2750,"count":0}],"isBlockCoverage":false},{"functionName":"X509Certificate","ranges":[{"startOffset":2755,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3081,"endOffset":3704,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3708,"endOffset":3872,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3876,"endOffset":3936,"count":0}],"isBlockCoverage":false},{"functionName":"get subject","ranges":[{"startOffset":3940,"endOffset":4156,"count":0}],"isBlockCoverage":false},{"functionName":"get subjectAltName","ranges":[{"startOffset":4160,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"get issuer","ranges":[{"startOffset":4408,"endOffset":4620,"count":0}],"isBlockCoverage":false},{"functionName":"get issuerCertificate","ranges":[{"startOffset":4624,"endOffset":4973,"count":0}],"isBlockCoverage":false},{"functionName":"get infoAccess","ranges":[{"startOffset":4977,"endOffset":5205,"count":0}],"isBlockCoverage":false},{"functionName":"get validFrom","ranges":[{"startOffset":5209,"endOffset":5433,"count":0}],"isBlockCoverage":false},{"functionName":"get validTo","ranges":[{"startOffset":5437,"endOffset":5653,"count":0}],"isBlockCoverage":false},{"functionName":"get fingerprint","ranges":[{"startOffset":5657,"endOffset":5889,"count":0}],"isBlockCoverage":false},{"functionName":"get fingerprint256","ranges":[{"startOffset":5893,"endOffset":6137,"count":0}],"isBlockCoverage":false},{"functionName":"get fingerprint512","ranges":[{"startOffset":6141,"endOffset":6385,"count":0}],"isBlockCoverage":false},{"functionName":"get keyUsage","ranges":[{"startOffset":6389,"endOffset":6609,"count":0}],"isBlockCoverage":false},{"functionName":"get serialNumber","ranges":[{"startOffset":6613,"endOffset":6849,"count":0}],"isBlockCoverage":false},{"functionName":"get raw","ranges":[{"startOffset":6853,"endOffset":7053,"count":0}],"isBlockCoverage":false},{"functionName":"get publicKey","ranges":[{"startOffset":7057,"endOffset":7302,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":7306,"endOffset":7507,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":7632,"endOffset":7668,"count":0}],"isBlockCoverage":false},{"functionName":"get ca","ranges":[{"startOffset":7672,"endOffset":7873,"count":0}],"isBlockCoverage":false},{"functionName":"checkHost","ranges":[{"startOffset":7877,"endOffset":8002,"count":0}],"isBlockCoverage":false},{"functionName":"checkEmail","ranges":[{"startOffset":8006,"endOffset":8137,"count":0}],"isBlockCoverage":false},{"functionName":"checkIP","ranges":[{"startOffset":8141,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"checkIssued","ranges":[{"startOffset":8635,"endOffset":8841,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrivateKey","ranges":[{"startOffset":8845,"endOffset":9108,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":9112,"endOffset":9356,"count":0}],"isBlockCoverage":false},{"functionName":"toLegacyObject","ranges":[{"startOffset":9360,"endOffset":9419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24596,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1308,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1472,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1584,"endOffset":3631,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":3633,"endOffset":4734,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":4736,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":5555,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":7225,"endOffset":8215,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":8217,"endOffset":9216,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":9218,"endOffset":10159,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":10161,"endOffset":11720,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":11722,"endOffset":12391,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":12393,"endOffset":13870,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":13872,"endOffset":15710,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":15803,"endOffset":16473,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":16568,"endOffset":17526,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":17528,"endOffset":18825,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":18827,"endOffset":18982,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":18984,"endOffset":19163,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":19165,"endOffset":20854,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":20856,"endOffset":21052,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":21054,"endOffset":21250,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":21406,"endOffset":21466,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21501,"endOffset":21514,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":21553,"endOffset":21613,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":21617,"endOffset":21717,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21752,"endOffset":21765,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":21781,"endOffset":21935,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///home/runner/work/deluge/deluge/node_modules/json-stable-stringify-without-jsonify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2792,"count":1},{"startOffset":2470,"endOffset":2542,"count":0},{"startOffset":2574,"endOffset":2790,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":2439,"count":1},{"startOffset":102,"endOffset":123,"count":0},{"startOffset":193,"endOffset":226,"count":0},{"startOffset":279,"endOffset":292,"count":0},{"startOffset":402,"endOffset":681,"count":0}],"isBlockCoverage":true},{"functionName":"replacer","ranges":[{"startOffset":338,"endOffset":376,"count":796}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":406,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":715,"endOffset":2410,"count":796},{"startOffset":790,"endOffset":833,"count":0},{"startOffset":875,"endOffset":881,"count":0},{"startOffset":907,"endOffset":921,"count":672},{"startOffset":922,"endOffset":958,"count":4},{"startOffset":960,"endOffset":1005,"count":4},{"startOffset":1089,"endOffset":1120,"count":57},{"startOffset":1120,"endOffset":1158,"count":739},{"startOffset":1158,"endOffset":1174,"count":198},{"startOffset":1176,"endOffset":1228,"count":551},{"startOffset":1228,"endOffset":1256,"count":188},{"startOffset":1256,"endOffset":1552,"count":98},{"startOffset":1334,"endOffset":1487,"count":310},{"startOffset":1400,"endOffset":1423,"count":0},{"startOffset":1552,"endOffset":2404,"count":90},{"startOffset":1611,"endOffset":1768,"count":0},{"startOffset":1853,"endOffset":1865,"count":0},{"startOffset":1944,"endOffset":2291,"count":485},{"startOffset":2079,"endOffset":2088,"count":57},{"startOffset":2088,"endOffset":2291,"count":428}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":2473,"endOffset":2542,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeys","ranges":[{"startOffset":2577,"endOffset":2790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/eslint/flat-eslint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38005,"count":1}],"isBlockCoverage":true},{"functionName":"calculateStatsPerFile","ranges":[{"startOffset":4542,"endOffset":5218,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStatsPerRun","ranges":[{"startOffset":5445,"endOffset":5984,"count":0}],"isBlockCoverage":false},{"functionName":"createRulesMeta","ranges":[{"startOffset":6160,"endOffset":6324,"count":0}],"isBlockCoverage":false},{"functionName":"getOrFindUsedDeprecatedRules","ranges":[{"startOffset":6689,"endOffset":7795,"count":0}],"isBlockCoverage":false},{"functionName":"processLintReport","ranges":[{"startOffset":8105,"endOffset":8478,"count":0}],"isBlockCoverage":false},{"functionName":"compareResultsByFilePath","ranges":[{"startOffset":8773,"endOffset":8951,"count":0}],"isBlockCoverage":false},{"functionName":"findFlatConfigFile","ranges":[{"startOffset":9204,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"loadFlatConfigFile","ranges":[{"startOffset":9494,"endOffset":9723,"count":0}],"isBlockCoverage":false},{"functionName":"calculateConfigArray","ranges":[{"startOffset":10013,"endOffset":12997,"count":0}],"isBlockCoverage":false},{"functionName":"verifyText","ranges":[{"startOffset":13785,"endOffset":15451,"count":0}],"isBlockCoverage":false},{"functionName":"shouldMessageBeFixed","ranges":[{"startOffset":15775,"endOffset":16061,"count":0}],"isBlockCoverage":false},{"functionName":"iterateRuleDeprecationWarnings","ranges":[{"startOffset":16242,"endOffset":17136,"count":0}],"isBlockCoverage":false},{"functionName":"FlatESLint","ranges":[{"startOffset":17521,"endOffset":18784,"count":0}],"isBlockCoverage":false},{"functionName":"get version","ranges":[{"startOffset":18860,"endOffset":18905,"count":0}],"isBlockCoverage":false},{"functionName":"outputFixes","ranges":[{"startOffset":19129,"endOffset":19792,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorResults","ranges":[{"startOffset":19984,"endOffset":20757,"count":0}],"isBlockCoverage":false},{"functionName":"getRulesMetaForResults","ranges":[{"startOffset":21150,"endOffset":22896,"count":0}],"isBlockCoverage":false},{"functionName":"lintFiles","ranges":[{"startOffset":23168,"endOffset":29596,"count":0}],"isBlockCoverage":false},{"functionName":"lintText","ranges":[{"startOffset":30059,"endOffset":32974,"count":0}],"isBlockCoverage":false},{"functionName":"loadFormatter","ranges":[{"startOffset":33694,"endOffset":36516,"count":0}],"isBlockCoverage":false},{"functionName":"calculateConfigForFile","ranges":[{"startOffset":36994,"endOffset":37403,"count":0}],"isBlockCoverage":false},{"functionName":"isPathIgnored","ranges":[{"startOffset":37617,"endOffset":37757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///home/runner/work/deluge/deluge/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///home/runner/work/deluge/deluge/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":945,"endOffset":1327,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///home/runner/work/deluge/deluge/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"file:///home/runner/work/deluge/deluge/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1521,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":68,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///home/runner/work/deluge/deluge/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":38,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":277,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":314,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":514,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":667,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":752,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":791,"endOffset":921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///home/runner/work/deluge/deluge/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/eslint/eslint-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25911,"count":1}],"isBlockCoverage":true},{"functionName":"NoFilesFoundError","ranges":[{"startOffset":1376,"endOffset":1640,"count":0}],"isBlockCoverage":false},{"functionName":"AllFilesIgnoredError","ranges":[{"startOffset":1878,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptyString","ranges":[{"startOffset":2409,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayOfNonEmptyString","ranges":[{"startOffset":2679,"endOffset":2776,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeToPosix","ranges":[{"startOffset":3147,"endOffset":3226,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobPattern","ranges":[{"startOffset":3388,"endOffset":3499,"count":0}],"isBlockCoverage":false},{"functionName":"globSearch","ranges":[{"startOffset":4165,"endOffset":5377,"count":0}],"isBlockCoverage":false},{"functionName":"globMultiSearch","ranges":[{"startOffset":5852,"endOffset":6121,"count":0}],"isBlockCoverage":false},{"functionName":"globMatch","ranges":[{"startOffset":6502,"endOffset":7870,"count":0}],"isBlockCoverage":false},{"functionName":"findFiles","ranges":[{"startOffset":8648,"endOffset":12629,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":12854,"endOffset":13115,"count":0}],"isBlockCoverage":false},{"functionName":"directoryExists","ranges":[{"startOffset":13354,"endOffset":13625,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorMessage","ranges":[{"startOffset":14011,"endOffset":14082,"count":0}],"isBlockCoverage":false},{"functionName":"createIgnoreResult","ranges":[{"startOffset":14319,"endOffset":15383,"count":0}],"isBlockCoverage":false},{"functionName":"isFixType","ranges":[{"startOffset":15729,"endOffset":15843,"count":0}],"isBlockCoverage":false},{"functionName":"isFixTypeArray","ranges":[{"startOffset":16012,"endOffset":16093,"count":0}],"isBlockCoverage":false},{"functionName":"ESLintInvalidOptionsError","ranges":[{"startOffset":16189,"endOffset":16393,"count":0}],"isBlockCoverage":false},{"functionName":"processOptions","ranges":[{"startOffset":16673,"endOffset":22964,"count":0}],"isBlockCoverage":false},{"functionName":"getCacheFile","ranges":[{"startOffset":23656,"endOffset":25507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1390,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":378,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":732,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":956,"endOffset":1154,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":1188,"endOffset":1389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":895,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":148,"endOffset":349,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":354,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":743,"endOffset":813,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":814,"endOffset":894,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3157,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":318,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":821,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"get isDestroyed","ranges":[{"startOffset":1050,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1114,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":1313,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1388,"endOffset":1460,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":1465,"endOffset":1533,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":1538,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":1778,"endOffset":2168,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":2173,"endOffset":2423,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":2428,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":3054,"endOffset":3123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1009,"count":1}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":311,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":631,"endOffset":771,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":807,"endOffset":1008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3686,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":346,"endOffset":598,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":620,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":1625,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":2248,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":3536,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":3607,"endOffset":3685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":985,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":305,"endOffset":594,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":616,"endOffset":753,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":783,"endOffset":984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.stat/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1172,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":100,"endOffset":1000,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":1022,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":1093,"endOffset":1171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.stat/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":619,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":100,"endOffset":597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.stat/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":696,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":135,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":563,"endOffset":665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":582,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":305,"endOffset":522,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///home/runner/work/deluge/deluge/node_modules/run-parallel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1034,"count":1}],"isBlockCoverage":true},{"functionName":"runParallel","ranges":[{"startOffset":167,"endOffset":1033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///home/runner/work/deluge/deluge/node_modules/queue-microtask/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":402,"count":1},{"startOffset":210,"endOffset":218,"count":0},{"startOffset":283,"endOffset":401,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":285,"endOffset":401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":990,"count":1},{"startOffset":295,"endOffset":424,"count":0},{"startOffset":794,"endOffset":837,"count":0},{"startOffset":956,"endOffset":988,"count":0}],"isBlockCoverage":true}]},{"scriptId":"363","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"364","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":145,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":608,"endOffset":700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/providers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":419,"count":1}],"isBlockCoverage":true},{"functionName":"joinPathSegments","ranges":[{"startOffset":112,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1990,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":309,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":551,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":1411,"endOffset":1962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1076,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":209,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":943,"endOffset":1045,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.scandir/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":640,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":363,"endOffset":580,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///home/runner/work/deluge/deluge/node_modules/fastq/queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5513,"count":1}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":77,"endOffset":3391,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3393,"endOffset":3412,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":3414,"endOffset":3917,"count":0}],"isBlockCoverage":false},{"functionName":"queueAsPromised","ranges":[{"startOffset":3919,"endOffset":5443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"file:///home/runner/work/deluge/deluge/node_modules/reusify/reusify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"reusify","ranges":[{"startOffset":14,"endOffset":427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/readers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1052,"count":1}],"isBlockCoverage":true},{"functionName":"isFatalError","ranges":[{"startOffset":199,"endOffset":350,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":388,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":520,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":701,"endOffset":1006,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":358,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":132,"endOffset":329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1021,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":185,"endOffset":630,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":635,"endOffset":984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"SyncProvider","ranges":[{"startOffset":145,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":322,"endOffset":372,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1911,"count":1}],"isBlockCoverage":true},{"functionName":"SyncReader","ranges":[{"startOffset":249,"endOffset":407,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":412,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":554,"endOffset":637,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":642,"endOffset":787,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":792,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1127,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":1269,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":1814,"endOffset":1878,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///home/runner/work/deluge/deluge/node_modules/@nodelib/fs.walk/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1250,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":178,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":1117,"endOffset":1219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///home/runner/work/deluge/deluge/node_modules/is-path-inside/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":290,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":62,"endOffset":288,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rule-tester/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":78,"count":1}],"isBlockCoverage":true}]},{"scriptId":"379","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rule-tester/rule-tester.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6420,"endOffset":6437,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6704,"endOffset":6721,"count":4}],"isBlockCoverage":true},{"functionName":"cloneDeeplyExcludesParent","ranges":[{"startOffset":6957,"endOffset":7390,"count":0}],"isBlockCoverage":false},{"functionName":"freezeDeeply","ranges":[{"startOffset":7489,"endOffset":7867,"count":0}],"isBlockCoverage":false},{"functionName":"sanitize","ranges":[{"startOffset":8012,"endOffset":8303,"count":0}],"isBlockCoverage":false},{"functionName":"defineStartEndAsError","ranges":[{"startOffset":8495,"endOffset":9009,"count":0}],"isBlockCoverage":false},{"functionName":"defineStartEndAsErrorInTree","ranges":[{"startOffset":9286,"endOffset":9575,"count":0}],"isBlockCoverage":false},{"functionName":"wrapParser","ranges":[{"startOffset":9926,"endOffset":10501,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentsDeprecation","ranges":[{"startOffset":10629,"endOffset":10876,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyRuleAPIWarning","ranges":[{"startOffset":11021,"endOffset":11476,"count":0}],"isBlockCoverage":false},{"functionName":"emitMissingSchemaWarning","ranges":[{"startOffset":11643,"endOffset":12111,"count":0}],"isBlockCoverage":false},{"functionName":"itDefaultHandler","ranges":[{"startOffset":12722,"endOffset":13023,"count":0}],"isBlockCoverage":false},{"functionName":"describeDefaultHandler","ranges":[{"startOffset":13275,"endOffset":13354,"count":0}],"isBlockCoverage":false},{"functionName":"RuleTester","ranges":[{"startOffset":13555,"endOffset":14116,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultConfig","ranges":[{"startOffset":14330,"endOffset":14674,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultConfig","ranges":[{"startOffset":14810,"endOffset":14866,"count":0}],"isBlockCoverage":false},{"functionName":"resetDefaultConfig","ranges":[{"startOffset":15036,"endOffset":15120,"count":0}],"isBlockCoverage":false},{"functionName":"get describe","ranges":[{"startOffset":15347,"endOffset":15508,"count":0}],"isBlockCoverage":false},{"functionName":"set describe","ranges":[{"startOffset":15521,"endOffset":15580,"count":0}],"isBlockCoverage":false},{"functionName":"get it","ranges":[{"startOffset":15593,"endOffset":15724,"count":0}],"isBlockCoverage":false},{"functionName":"set it","ranges":[{"startOffset":15737,"endOffset":15784,"count":0}],"isBlockCoverage":false},{"functionName":"only","ranges":[{"startOffset":16049,"endOffset":16205,"count":0}],"isBlockCoverage":false},{"functionName":"get itOnly","ranges":[{"startOffset":16218,"endOffset":17237,"count":0}],"isBlockCoverage":false},{"functionName":"set itOnly","ranges":[{"startOffset":17250,"endOffset":17306,"count":0}],"isBlockCoverage":false},{"functionName":"defineRule","ranges":[{"startOffset":17516,"endOffset":17579,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":18035,"endOffset":42057,"count":0}],"isBlockCoverage":false}]},{"scriptId":"380","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/shared/config-validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11595,"count":1}],"isBlockCoverage":true},{"functionName":"getRuleOptionsSchema","ranges":[{"startOffset":1513,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"validateRuleSeverity","ranges":[{"startOffset":2427,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"validateRuleSchema","ranges":[{"startOffset":3220,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"validateRuleOptions","ranges":[{"startOffset":4276,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"validateEnvironment","ranges":[{"startOffset":5169,"endOffset":5634,"count":0}],"isBlockCoverage":false},{"functionName":"validateRules","ranges":[{"startOffset":5945,"endOffset":6273,"count":0}],"isBlockCoverage":false},{"functionName":"validateGlobals","ranges":[{"startOffset":6511,"endOffset":6980,"count":0}],"isBlockCoverage":false},{"functionName":"validateProcessor","ranges":[{"startOffset":7302,"endOffset":7555,"count":0}],"isBlockCoverage":false},{"functionName":"formatErrors","ranges":[{"startOffset":7722,"endOffset":8750,"count":0}],"isBlockCoverage":false},{"functionName":"validateConfigSchema","ranges":[{"startOffset":9042,"endOffset":9459,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9856,"endOffset":10384,"count":0}],"isBlockCoverage":false},{"functionName":"validateConfigArray","ranges":[{"startOffset":10546,"endOffset":11273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/conf/config-schema.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2601,"count":1}],"isBlockCoverage":true}]},{"scriptId":"382","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/shared/deprecation-warnings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1938,"count":1}],"isBlockCoverage":true},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":1243,"endOffset":1704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17817,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":17816,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":173,"endOffset":17796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14908,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":14907,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":221,"endOffset":14887,"count":5},{"startOffset":375,"endOffset":391,"count":0},{"startOffset":524,"endOffset":973,"count":15},{"startOffset":630,"endOffset":970,"count":0},{"startOffset":1060,"endOffset":1473,"count":0},{"startOffset":1551,"endOffset":1569,"count":3},{"startOffset":1569,"endOffset":4202,"count":2},{"startOffset":2089,"endOffset":2113,"count":0},{"startOffset":2175,"endOffset":2227,"count":0},{"startOffset":2357,"endOffset":2886,"count":79},{"startOffset":2436,"endOffset":2827,"count":0},{"startOffset":2877,"endOffset":2883,"count":0},{"startOffset":2918,"endOffset":3284,"count":0},{"startOffset":3374,"endOffset":3433,"count":0},{"startOffset":3520,"endOffset":3943,"count":0},{"startOffset":4007,"endOffset":4032,"count":0},{"startOffset":4291,"endOffset":4715,"count":0},{"startOffset":4782,"endOffset":4800,"count":3},{"startOffset":4800,"endOffset":5242,"count":2},{"startOffset":4898,"endOffset":5205,"count":0},{"startOffset":5313,"endOffset":5331,"count":4},{"startOffset":5331,"endOffset":7952,"count":1},{"startOffset":5848,"endOffset":5872,"count":0},{"startOffset":5934,"endOffset":5986,"count":0},{"startOffset":6116,"endOffset":6642,"count":2},{"startOffset":6195,"endOffset":6583,"count":0},{"startOffset":6633,"endOffset":6639,"count":0},{"startOffset":6674,"endOffset":7037,"count":0},{"startOffset":7127,"endOffset":7186,"count":0},{"startOffset":7273,"endOffset":7693,"count":0},{"startOffset":7757,"endOffset":7782,"count":0},{"startOffset":8023,"endOffset":8041,"count":3},{"startOffset":8041,"endOffset":8499,"count":2},{"startOffset":8139,"endOffset":8462,"count":0},{"startOffset":8590,"endOffset":9504,"count":0},{"startOffset":9592,"endOffset":10038,"count":0},{"startOffset":10115,"endOffset":10133,"count":3},{"startOffset":10133,"endOffset":10615,"count":2},{"startOffset":10231,"endOffset":10578,"count":0},{"startOffset":10686,"endOffset":10704,"count":2},{"startOffset":10704,"endOffset":11120,"count":3},{"startOffset":10762,"endOffset":11083,"count":0},{"startOffset":11211,"endOffset":11641,"count":0},{"startOffset":11710,"endOffset":11728,"count":3},{"startOffset":11728,"endOffset":12178,"count":2},{"startOffset":11826,"endOffset":12141,"count":0},{"startOffset":12250,"endOffset":12268,"count":4},{"startOffset":12268,"endOffset":12730,"count":1},{"startOffset":12366,"endOffset":12693,"count":0},{"startOffset":12826,"endOffset":13279,"count":0},{"startOffset":13390,"endOffset":13903,"count":0},{"startOffset":13997,"endOffset":14475,"count":0},{"startOffset":14540,"endOffset":14804,"count":0}],"isBlockCoverage":true}]},{"scriptId":"385","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":245,"endOffset":723,"count":5},{"startOffset":506,"endOffset":629,"count":0}],"isBlockCoverage":true}]},{"scriptId":"386","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-config-standard/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":141,"count":1}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9856,"count":1}],"isBlockCoverage":true}]},{"scriptId":"388","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-unresolved.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7099,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":456,"endOffset":551,"count":4},{"startOffset":529,"endOffset":549,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1528,"endOffset":2725,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1541,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6832,"count":1},{"startOffset":719,"endOffset":750,"count":0},{"startOffset":751,"endOffset":988,"count":0}],"isBlockCoverage":true},{"functionName":"createRequire","ranges":[{"startOffset":754,"endOffset":988,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequire","ranges":[{"startOffset":991,"endOffset":1533,"count":22},{"startOffset":1217,"endOffset":1280,"count":0},{"startOffset":1286,"endOffset":1341,"count":0},{"startOffset":1346,"endOffset":1446,"count":0}],"isBlockCoverage":true},{"functionName":"fileExistsWithCaseSync","ranges":[{"startOffset":1608,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":2463,"endOffset":2579,"count":40}],"isBlockCoverage":true},{"functionName":"fullResolve","ranges":[{"startOffset":2581,"endOffset":4343,"count":40},{"startOffset":2771,"endOffset":2806,"count":0},{"startOffset":3094,"endOffset":3135,"count":18},{"startOffset":3135,"endOffset":3879,"count":22},{"startOffset":4007,"endOffset":4279,"count":22},{"startOffset":4198,"endOffset":4207,"count":3},{"startOffset":4207,"endOffset":4279,"count":19},{"startOffset":4279,"endOffset":4342,"count":3}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":3139,"endOffset":3222,"count":19}],"isBlockCoverage":true},{"functionName":"withResolver","ranges":[{"startOffset":3226,"endOffset":3777,"count":22},{"startOffset":3728,"endOffset":3736,"count":0},{"startOffset":3741,"endOffset":3767,"count":0}],"isBlockCoverage":true},{"functionName":"v1","ranges":[{"startOffset":3273,"endOffset":3559,"count":0}],"isBlockCoverage":false},{"functionName":"v2","ranges":[{"startOffset":3565,"endOffset":3649,"count":22}],"isBlockCoverage":true},{"functionName":"resolverReducer","ranges":[{"startOffset":4374,"endOffset":4843,"count":22},{"startOffset":4449,"endOffset":4523,"count":0},{"startOffset":4562,"endOffset":4613,"count":0},{"startOffset":4750,"endOffset":4842,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4473,"endOffset":4501,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDir","ranges":[{"startOffset":4845,"endOffset":4926,"count":0}],"isBlockCoverage":false},{"functionName":"requireResolver","ranges":[{"startOffset":4927,"endOffset":5512,"count":22},{"startOffset":5099,"endOffset":5134,"count":0},{"startOffset":5135,"endOffset":5196,"count":0},{"startOffset":5216,"endOffset":5328,"count":0},{"startOffset":5363,"endOffset":5490,"count":0}],"isBlockCoverage":true},{"functionName":"isResolverValid","ranges":[{"startOffset":5514,"endOffset":5762,"count":22},{"startOffset":5666,"endOffset":5760,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":6045,"endOffset":6775,"count":28},{"startOffset":6167,"endOffset":6190,"count":0},{"startOffset":6215,"endOffset":6773,"count":0}],"isBlockCoverage":true}]},{"scriptId":"390","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1205,"count":1}],"isBlockCoverage":true},{"functionName":"hashify","ranges":[{"startOffset":238,"endOffset":522,"count":216},{"startOffset":283,"endOffset":311,"count":0},{"startOffset":341,"endOffset":374,"count":44},{"startOffset":374,"endOffset":504,"count":172},{"startOffset":409,"endOffset":443,"count":56},{"startOffset":443,"endOffset":504,"count":116},{"startOffset":484,"endOffset":498,"count":4}],"isBlockCoverage":true},{"functionName":"hashArray","ranges":[{"startOffset":551,"endOffset":783,"count":44},{"startOffset":598,"endOffset":626,"count":0}],"isBlockCoverage":true},{"functionName":"hashObject","ranges":[{"startOffset":843,"endOffset":1140,"count":104},{"startOffset":892,"endOffset":920,"count":48}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":979,"endOffset":1100,"count":172}],"isBlockCoverage":true}]},{"scriptId":"391","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/ModuleCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1137,"count":1}],"isBlockCoverage":true},{"functionName":"ModuleCache","ranges":[{"startOffset":130,"endOffset":185,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":329,"endOffset":483,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":487,"endOffset":777,"count":40},{"startOffset":545,"endOffset":695,"count":18},{"startOffset":695,"endOffset":776,"count":22}],"isBlockCoverage":true},{"functionName":"ModuleCache.getSettings","ranges":[{"startOffset":808,"endOffset":1103,"count":40},{"startOffset":1032,"endOffset":1076,"count":0}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1},{"startOffset":232,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4415,"count":1},{"startOffset":673,"endOffset":1049,"count":0},{"startOffset":1052,"endOffset":1068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1376,"endOffset":1425,"count":125}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1434,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1987,"endOffset":2123,"count":3},{"startOffset":2051,"endOffset":2088,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2196,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":2673,"endOffset":2794,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":2883,"endOffset":2975,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3057,"endOffset":3325,"count":1},{"startOffset":3103,"endOffset":3144,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3442,"endOffset":3489,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3654,"endOffset":3861,"count":3},{"startOffset":3791,"endOffset":3859,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4031,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4308,"endOffset":4412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5929,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":121,"endOffset":5902,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":410,"endOffset":463,"count":8}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1108,"endOffset":1399,"count":3},{"startOffset":1208,"endOffset":1319,"count":90}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1579,"endOffset":3602,"count":3}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1636,"endOffset":3096,"count":41},{"startOffset":1725,"endOffset":1996,"count":0},{"startOffset":2181,"endOffset":3058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2380,"endOffset":2914,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3606,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3802,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":4122,"endOffset":4922,"count":1},{"startOffset":4301,"endOffset":4313,"count":0},{"startOffset":4478,"endOffset":4735,"count":0},{"startOffset":4798,"endOffset":4918,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4984,"endOffset":5036,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5188,"endOffset":5617,"count":3},{"startOffset":5252,"endOffset":5278,"count":0},{"startOffset":5367,"endOffset":5449,"count":0},{"startOffset":5513,"endOffset":5594,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":5715,"endOffset":5835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/pkgDir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":222,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":134,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/pkgUp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1927,"count":1}],"isBlockCoverage":true},{"functionName":"findUp","ranges":[{"startOffset":1390,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"pkgUp","ranges":[{"startOffset":1850,"endOffset":1925,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/moduleVisitor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4287,"count":1}],"isBlockCoverage":true},{"functionName":"visitModules","ranges":[{"startOffset":334,"endOffset":3395,"count":16},{"startOffset":562,"endOffset":627,"count":0},{"startOffset":3084,"endOffset":3098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":603,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"checkSourceValue","ranges":[{"startOffset":631,"endOffset":855,"count":68},{"startOffset":701,"endOffset":708,"count":12},{"startOffset":708,"endOffset":792,"count":56},{"startOffset":792,"endOffset":799,"count":0},{"startOffset":799,"endOffset":854,"count":56}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":762,"endOffset":789,"count":0}],"isBlockCoverage":false},{"functionName":"checkSource","ranges":[{"startOffset":890,"endOffset":963,"count":68}],"isBlockCoverage":true},{"functionName":"checkImportCall","ranges":[{"startOffset":1010,"endOffset":1557,"count":650},{"startOffset":1187,"endOffset":1226,"count":0},{"startOffset":1318,"endOffset":1556,"count":0}],"isBlockCoverage":true},{"functionName":"checkCommon","ranges":[{"startOffset":1642,"endOffset":2003,"count":650},{"startOffset":1714,"endOffset":1721,"count":532},{"startOffset":1721,"endOffset":1769,"count":118},{"startOffset":1769,"endOffset":2002,"count":0}],"isBlockCoverage":true},{"functionName":"checkAMD","ranges":[{"startOffset":2007,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"visitors.CallExpression","ranges":[{"startOffset":3197,"endOffset":3368,"count":650},{"startOffset":3347,"endOffset":3362,"count":0}],"isBlockCoverage":true},{"functionName":"makeOptionsSchema","ranges":[{"startOffset":3491,"endOffset":4070,"count":6},{"startOffset":3939,"endOffset":4052,"count":2},{"startOffset":3985,"endOffset":4048,"count":4}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/docsUrl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1462,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":198,"endOffset":293,"count":1},{"startOffset":265,"endOffset":270,"count":0}],"isBlockCoverage":true},{"functionName":"docsUrl","ranges":[{"startOffset":359,"endOffset":609,"count":42},{"startOffset":424,"endOffset":453,"count":1},{"startOffset":454,"endOffset":468,"count":1},{"startOffset":469,"endOffset":513,"count":41}],"isBlockCoverage":true}]},{"scriptId":"399","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/named.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":47,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":426,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":897,"endOffset":992,"count":2},{"startOffset":970,"endOffset":990,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":992,"endOffset":1251,"count":1},{"startOffset":1058,"endOffset":1071,"count":0},{"startOffset":1133,"endOffset":1210,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1534,"endOffset":5509,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1547,"endOffset":5494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/ExportMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":95345,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":94,"endOffset":621,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperties","ranges":[{"startOffset":107,"endOffset":415,"count":1},{"startOffset":188,"endOffset":414,"count":7},{"startOffset":328,"endOffset":355,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":619,"count":1},{"startOffset":556,"endOffset":599,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":2441,"endOffset":2700,"count":1},{"startOffset":2520,"endOffset":2699,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2700,"endOffset":2795,"count":8},{"startOffset":2767,"endOffset":2772,"count":4},{"startOffset":2773,"endOffset":2793,"count":4}],"isBlockCoverage":true},{"functionName":"_classCallCheck","ranges":[{"startOffset":2795,"endOffset":2944,"count":4},{"startOffset":2884,"endOffset":2943,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3102,"endOffset":12476,"count":1}],"isBlockCoverage":true},{"functionName":"ExportMap","ranges":[{"startOffset":3115,"endOffset":4168,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5613,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":5626,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7921,"endOffset":9513,"count":1}],"isBlockCoverage":true},{"functionName":"hasDeep","ranges":[{"startOffset":7934,"endOffset":9497,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9540,"endOffset":10919,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9553,"endOffset":10907,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10950,"endOffset":11592,"count":1}],"isBlockCoverage":true},{"functionName":"forEach","ranges":[{"startOffset":10963,"endOffset":11576,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11040,"endOffset":11101,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11126,"endOffset":11340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11368,"endOffset":11573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11662,"endOffset":12025,"count":1}],"isBlockCoverage":true},{"functionName":"reportErrors","ranges":[{"startOffset":11675,"endOffset":12004,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12057,"endOffset":12134,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12070,"endOffset":12122,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12188,"endOffset":12451,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12201,"endOffset":12439,"count":0}],"isBlockCoverage":false},{"functionName":"captureDoc","ranges":[{"startOffset":12786,"endOffset":13534,"count":5},{"startOffset":12962,"endOffset":12965,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13046,"endOffset":13515,"count":5},{"startOffset":13186,"endOffset":13224,"count":0},{"startOffset":13345,"endOffset":13358,"count":4},{"startOffset":13358,"endOffset":13487,"count":1},{"startOffset":13487,"endOffset":13514,"count":0}],"isBlockCoverage":true},{"functionName":"captureJsDoc","ranges":[{"startOffset":15560,"endOffset":15887,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15647,"endOffset":15873,"count":2},{"startOffset":15728,"endOffset":15735,"count":0},{"startOffset":15809,"endOffset":15872,"count":0}],"isBlockCoverage":true},{"functionName":"captureTomDoc","ranges":[{"startOffset":16323,"endOffset":16814,"count":0}],"isBlockCoverage":false},{"functionName":"ExportMap.get","ranges":[{"startOffset":16921,"endOffset":17087,"count":4},{"startOffset":17021,"endOffset":17033,"count":0}],"isBlockCoverage":true},{"functionName":"ExportMap.for","ranges":[{"startOffset":17107,"endOffset":18317,"count":4},{"startOffset":17304,"endOffset":17316,"count":0},{"startOffset":17382,"endOffset":17509,"count":0},{"startOffset":17596,"endOffset":17642,"count":0},{"startOffset":17720,"endOffset":17816,"count":0},{"startOffset":17965,"endOffset":18063,"count":0},{"startOffset":18220,"endOffset":18232,"count":0}],"isBlockCoverage":true},{"functionName":"ExportMap.parse","ranges":[{"startOffset":18336,"endOffset":28698,"count":4},{"startOffset":18607,"endOffset":18670,"count":0},{"startOffset":19657,"endOffset":19678,"count":0},{"startOffset":19680,"endOffset":19692,"count":0},{"startOffset":28461,"endOffset":28484,"count":0},{"startOffset":28511,"endOffset":28541,"count":0},{"startOffset":28581,"endOffset":28641,"count":0}],"isBlockCoverage":true},{"functionName":"processDynamicImport","ranges":[{"startOffset":18728,"endOffset":19247,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19309,"endOffset":19415,"count":4}],"isBlockCoverage":true},{"functionName":"ImportExpression","ranges":[{"startOffset":19322,"endOffset":19390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19435,"endOffset":19580,"count":4}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":19448,"endOffset":19557,"count":143},{"startOffset":19514,"endOffset":19556,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19818,"endOffset":19894,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19969,"endOffset":20222,"count":49},{"startOffset":20007,"endOffset":20020,"count":6},{"startOffset":20020,"endOffset":20154,"count":43},{"startOffset":20154,"endOffset":20180,"count":0},{"startOffset":20182,"endOffset":20208,"count":0},{"startOffset":20208,"endOffset":20221,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20108,"endOffset":20151,"count":65}],"isBlockCoverage":true},{"functionName":"remotePath","ranges":[{"startOffset":20252,"endOffset":20349,"count":12}],"isBlockCoverage":true},{"functionName":"resolveImport","ranges":[{"startOffset":20349,"endOffset":20487,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespace","ranges":[{"startOffset":20487,"endOffset":20644,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespace","ranges":[{"startOffset":20644,"endOffset":20808,"count":0}],"isBlockCoverage":false},{"functionName":"processSpecifier","ranges":[{"startOffset":20808,"endOffset":21722,"count":0}],"isBlockCoverage":false},{"functionName":"captureDependency","ranges":[{"startOffset":21722,"endOffset":22486,"count":12},{"startOffset":21894,"endOffset":21905,"count":0},{"startOffset":21926,"endOffset":21938,"count":0},{"startOffset":21986,"endOffset":21998,"count":2},{"startOffset":21998,"endOffset":22282,"count":10},{"startOffset":22282,"endOffset":22354,"count":0},{"startOffset":22354,"endOffset":22485,"count":10}],"isBlockCoverage":true},{"functionName":"readTsConfig","ranges":[{"startOffset":22528,"endOffset":23192,"count":1},{"startOffset":22835,"endOffset":23141,"count":0},{"startOffset":23143,"endOffset":23179,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22704,"endOffset":22779,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":22717,"endOffset":22764,"count":2}],"isBlockCoverage":true},{"functionName":"isEsModuleInterop","ranges":[{"startOffset":23192,"endOffset":23591,"count":4},{"startOffset":23438,"endOffset":23511,"count":1},{"startOffset":23527,"endOffset":23546,"count":0},{"startOffset":23547,"endOffset":23581,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23608,"endOffset":28394,"count":21},{"startOffset":23665,"endOffset":23852,"count":0},{"startOffset":23891,"endOffset":24051,"count":0},{"startOffset":24138,"endOffset":25104,"count":12},{"startOffset":25048,"endOffset":25096,"count":0},{"startOffset":25104,"endOffset":25145,"count":9},{"startOffset":25145,"endOffset":25944,"count":5},{"startOffset":25232,"endOffset":25259,"count":1},{"startOffset":25655,"endOffset":25870,"count":0},{"startOffset":25944,"endOffset":26008,"count":9},{"startOffset":26008,"endOffset":26055,"count":0},{"startOffset":26055,"endOffset":26183,"count":9},{"startOffset":26183,"endOffset":28393,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24493,"endOffset":24857,"count":12},{"startOffset":24561,"endOffset":24602,"count":6},{"startOffset":24644,"endOffset":24722,"count":6},{"startOffset":24692,"endOffset":24719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24978,"endOffset":25038,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25717,"endOffset":25862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25893,"endOffset":25941,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26599,"endOffset":26868,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27288,"endOffset":28390,"count":0}],"isBlockCoverage":false},{"functionName":"thunkFor","ranges":[{"startOffset":29121,"endOffset":29225,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29159,"endOffset":29223,"count":0}],"isBlockCoverage":false},{"functionName":"recursivePatternCapture","ranges":[{"startOffset":30429,"endOffset":31102,"count":0}],"isBlockCoverage":false},{"functionName":"childContext","ranges":[{"startOffset":32311,"endOffset":32548,"count":4}],"isBlockCoverage":true},{"functionName":"makeSourceCode","ranges":[{"startOffset":34226,"endOffset":34440,"count":4},{"startOffset":34356,"endOffset":34439,"count":0}],"isBlockCoverage":true}]},{"scriptId":"401","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/node_modules/doctrine/lib/doctrine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32445,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188,"endOffset":32404,"count":1}],"isBlockCoverage":true},{"functionName":"sliceSource","ranges":[{"startOffset":417,"endOffset":508,"count":76}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":532,"endOffset":707,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwnProperty","ranges":[{"startOffset":613,"endOffset":700,"count":83}],"isBlockCoverage":true},{"functionName":"shallowCopy","ranges":[{"startOffset":717,"endOffset":928,"count":1},{"startOffset":797,"endOffset":902,"count":20}],"isBlockCoverage":true},{"functionName":"isASCIIAlphanumeric","ranges":[{"startOffset":934,"endOffset":1167,"count":570},{"startOffset":1007,"endOffset":1020,"count":487},{"startOffset":1033,"endOffset":1096,"count":83},{"startOffset":1071,"endOffset":1084,"count":0},{"startOffset":1097,"endOffset":1160,"count":83},{"startOffset":1135,"endOffset":1148,"count":0}],"isBlockCoverage":true},{"functionName":"isParamTitle","ranges":[{"startOffset":1173,"endOffset":1286,"count":364},{"startOffset":1237,"endOffset":1260,"count":148},{"startOffset":1261,"endOffset":1279,"count":148}],"isBlockCoverage":true},{"functionName":"isReturnTitle","ranges":[{"startOffset":1292,"endOffset":1387,"count":54}],"isBlockCoverage":true},{"functionName":"isProperty","ranges":[{"startOffset":1393,"endOffset":1484,"count":241}],"isBlockCoverage":true},{"functionName":"isNameParameterRequired","ranges":[{"startOffset":1490,"endOffset":1692,"count":80},{"startOffset":1567,"endOffset":1587,"count":33},{"startOffset":1588,"endOffset":1620,"count":32},{"startOffset":1621,"endOffset":1640,"count":32},{"startOffset":1641,"endOffset":1661,"count":32},{"startOffset":1662,"endOffset":1685,"count":32}],"isBlockCoverage":true},{"functionName":"isAllowedName","ranges":[{"startOffset":1698,"endOffset":1827,"count":73},{"startOffset":1776,"endOffset":1796,"count":32},{"startOffset":1797,"endOffset":1820,"count":32}],"isBlockCoverage":true},{"functionName":"isAllowedNested","ranges":[{"startOffset":1833,"endOffset":1929,"count":41},{"startOffset":1900,"endOffset":1922,"count":40}],"isBlockCoverage":true},{"functionName":"isAllowedOptional","ranges":[{"startOffset":1935,"endOffset":2033,"count":144},{"startOffset":2004,"endOffset":2026,"count":142}],"isBlockCoverage":true},{"functionName":"isTypeParameterRequired","ranges":[{"startOffset":2039,"endOffset":2334,"count":94},{"startOffset":2116,"endOffset":2139,"count":53},{"startOffset":2140,"endOffset":2173,"count":37},{"startOffset":2174,"endOffset":2193,"count":37},{"startOffset":2194,"endOffset":2231,"count":37},{"startOffset":2232,"endOffset":2251,"count":37},{"startOffset":2252,"endOffset":2283,"count":37},{"startOffset":2284,"endOffset":2306,"count":29},{"startOffset":2307,"endOffset":2327,"count":23}],"isBlockCoverage":true},{"functionName":"isAllowedType","ranges":[{"startOffset":2522,"endOffset":2962,"count":11},{"startOffset":2806,"endOffset":2826,"count":8},{"startOffset":2827,"endOffset":2849,"count":8},{"startOffset":2850,"endOffset":2873,"count":8},{"startOffset":2874,"endOffset":2907,"count":8},{"startOffset":2908,"endOffset":2930,"count":8},{"startOffset":2931,"endOffset":2955,"count":8}],"isBlockCoverage":true},{"functionName":"unwrapComment","ranges":[{"startOffset":3282,"endOffset":3749,"count":45}],"isBlockCoverage":true},{"functionName":"convertUnwrappedCommentIndex","ranges":[{"startOffset":4140,"endOffset":4791,"count":71},{"startOffset":4442,"endOffset":4705,"count":338},{"startOffset":4575,"endOffset":4695,"count":71},{"startOffset":4705,"endOffset":4790,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4823,"endOffset":31912,"count":1}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":5048,"endOffset":5372,"count":2441},{"startOffset":5190,"endOffset":5268,"count":104},{"startOffset":5219,"endOffset":5255,"count":0},{"startOffset":5270,"endOffset":5318,"count":104}],"isBlockCoverage":true},{"functionName":"scanTitle","ranges":[{"startOffset":5382,"endOffset":5654,"count":83},{"startOffset":5516,"endOffset":5564,"count":570},{"startOffset":5566,"endOffset":5617,"count":487}],"isBlockCoverage":true},{"functionName":"seekContent","ranges":[{"startOffset":5664,"endOffset":6374,"count":83},{"startOffset":5796,"endOffset":6339,"count":1460},{"startOffset":5898,"endOffset":5979,"count":46},{"startOffset":5927,"endOffset":5966,"count":0},{"startOffset":5981,"endOffset":6036,"count":46},{"startOffset":6036,"endOffset":6298,"count":1414},{"startOffset":6055,"endOffset":6298,"count":46},{"startOffset":6159,"endOffset":6280,"count":0},{"startOffset":6298,"endOffset":6339,"count":1414}],"isBlockCoverage":true},{"functionName":"parseType","ranges":[{"startOffset":6552,"endOffset":8436,"count":75},{"startOffset":6718,"endOffset":7126,"count":147},{"startOffset":6818,"endOffset":6868,"count":72},{"startOffset":6868,"endOffset":7112,"count":75},{"startOffset":6902,"endOffset":6979,"count":71},{"startOffset":6979,"endOffset":7112,"count":4},{"startOffset":7153,"endOffset":7197,"count":4},{"startOffset":7197,"endOffset":7320,"count":71},{"startOffset":7320,"endOffset":8001,"count":760},{"startOffset":7424,"endOffset":7474,"count":0},{"startOffset":7530,"endOffset":7732,"count":71},{"startOffset":7732,"endOffset":7825,"count":689},{"startOffset":7766,"endOffset":7825,"count":0},{"startOffset":7825,"endOffset":7863,"count":689},{"startOffset":7863,"endOffset":7930,"count":71},{"startOffset":7930,"endOffset":7987,"count":689},{"startOffset":8001,"endOffset":8032,"count":71},{"startOffset":8032,"endOffset":8159,"count":0},{"startOffset":8159,"endOffset":8203,"count":71},{"startOffset":8203,"endOffset":8326,"count":42},{"startOffset":8326,"endOffset":8435,"count":29}],"isBlockCoverage":true},{"functionName":"scanIdentifier","ranges":[{"startOffset":8446,"endOffset":8890,"count":37},{"startOffset":8583,"endOffset":8615,"count":0},{"startOffset":8617,"endOffset":8661,"count":0},{"startOffset":8730,"endOffset":8791,"count":179},{"startOffset":8793,"endOffset":8849,"count":148}],"isBlockCoverage":true},{"functionName":"skipWhiteSpace","ranges":[{"startOffset":8900,"endOffset":9133,"count":44},{"startOffset":8964,"endOffset":9079,"count":85},{"startOffset":9020,"endOffset":9078,"count":44}],"isBlockCoverage":true},{"functionName":"parseName","ranges":[{"startOffset":9143,"endOffset":13092,"count":44},{"startOffset":9358,"endOffset":9402,"count":3},{"startOffset":9402,"endOffset":9466,"count":41},{"startOffset":9466,"endOffset":9672,"count":7},{"startOffset":9503,"endOffset":9600,"count":0},{"startOffset":9672,"endOffset":10761,"count":34},{"startOffset":9818,"endOffset":9956,"count":0},{"startOffset":9958,"endOffset":10067,"count":0},{"startOffset":10132,"endOffset":10172,"count":0},{"startOffset":10184,"endOffset":10281,"count":0},{"startOffset":10639,"endOffset":10747,"count":3},{"startOffset":10761,"endOffset":10792,"count":34},{"startOffset":10792,"endOffset":13056,"count":0},{"startOffset":13056,"endOffset":13091,"count":34}],"isBlockCoverage":true},{"functionName":"skipToTag","ranges":[{"startOffset":13102,"endOffset":13438,"count":114},{"startOffset":13159,"endOffset":13195,"count":83},{"startOffset":13208,"endOffset":13250,"count":0},{"startOffset":13284,"endOffset":13329,"count":31},{"startOffset":13329,"endOffset":13437,"count":83}],"isBlockCoverage":true},{"functionName":"convertIndex","ranges":[{"startOffset":13448,"endOffset":13664,"count":71},{"startOffset":13527,"endOffset":13577,"count":0}],"isBlockCoverage":true},{"functionName":"TagParser","ranges":[{"startOffset":13674,"endOffset":14198,"count":83},{"startOffset":13943,"endOffset":14009,"count":0}],"isBlockCoverage":true},{"functionName":"addError","ranges":[{"startOffset":14269,"endOffset":14919,"count":14},{"startOffset":14781,"endOffset":14837,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14456,"endOffset":14646,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseType","ranges":[{"startOffset":14962,"endOffset":16133,"count":83},{"startOffset":15066,"endOffset":15746,"count":72},{"startOffset":15225,"endOffset":15520,"count":1},{"startOffset":15539,"endOffset":15732,"count":6},{"startOffset":15746,"endOffset":16098,"count":11},{"startOffset":15784,"endOffset":16098,"count":3},{"startOffset":15954,"endOffset":16084,"count":0},{"startOffset":16098,"endOffset":16132,"count":76}],"isBlockCoverage":true},{"functionName":"TagParser._parseNamePath","ranges":[{"startOffset":16181,"endOffset":16607,"count":3},{"startOffset":16273,"endOffset":16306,"count":0},{"startOffset":16371,"endOffset":16523,"count":0}],"isBlockCoverage":true},{"functionName":"TagParser.parseNamePath","ranges":[{"startOffset":16654,"endOffset":16724,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseNamePathOptional","ranges":[{"startOffset":16779,"endOffset":16848,"count":3}],"isBlockCoverage":true},{"functionName":"TagParser.parseName","ranges":[{"startOffset":16892,"endOffset":19058,"count":73},{"startOffset":17026,"endOffset":19021,"count":41},{"startOffset":17090,"endOffset":17123,"count":0},{"startOffset":17193,"endOffset":18028,"count":7},{"startOffset":17258,"endOffset":17318,"count":0},{"startOffset":17836,"endOffset":18010,"count":0},{"startOffset":18028,"endOffset":19007,"count":34},{"startOffset":18126,"endOffset":18165,"count":0},{"startOffset":18167,"endOffset":18989,"count":0}],"isBlockCoverage":true},{"functionName":"parseDescription","ranges":[{"startOffset":19108,"endOffset":19476,"count":73},{"startOffset":19244,"endOffset":19441,"count":14},{"startOffset":19295,"endOffset":19374,"count":0}],"isBlockCoverage":true},{"functionName":"parseDescription","ranges":[{"startOffset":19522,"endOffset":20277,"count":0}],"isBlockCoverage":false},{"functionName":"parseKind","ranges":[{"startOffset":20320,"endOffset":21086,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccess","ranges":[{"startOffset":21131,"endOffset":21552,"count":0}],"isBlockCoverage":false},{"functionName":"parseThis","ranges":[{"startOffset":21595,"endOffset":22340,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariation","ranges":[{"startOffset":22388,"endOffset":22814,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.ensureEnd","ranges":[{"startOffset":22857,"endOffset":23162,"count":3},{"startOffset":22981,"endOffset":23127,"count":0}],"isBlockCoverage":true},{"functionName":"epilogue","ranges":[{"startOffset":23204,"endOffset":23863,"count":73},{"startOffset":23405,"endOffset":23423,"count":41},{"startOffset":23424,"endOffset":23438,"count":7},{"startOffset":23439,"endOffset":23471,"count":7},{"startOffset":23473,"endOffset":23827,"count":7},{"startOffset":23563,"endOffset":23630,"count":0},{"startOffset":23827,"endOffset":23862,"count":66}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":27745,"endOffset":28779,"count":83},{"startOffset":27865,"endOffset":27997,"count":0},{"startOffset":28131,"endOffset":28269,"count":0},{"startOffset":28323,"endOffset":28386,"count":9},{"startOffset":28386,"endOffset":28532,"count":74},{"startOffset":28594,"endOffset":28738,"count":308},{"startOffset":28672,"endOffset":28724,"count":14},{"startOffset":28738,"endOffset":28778,"count":69}],"isBlockCoverage":true},{"functionName":"parseTag","ranges":[{"startOffset":28790,"endOffset":29313,"count":114},{"startOffset":28913,"endOffset":28957,"count":31},{"startOffset":28957,"endOffset":29236,"count":83},{"startOffset":29236,"endOffset":29278,"count":279},{"startOffset":29278,"endOffset":29312,"count":83}],"isBlockCoverage":true},{"functionName":"scanJSDocDescription","ranges":[{"startOffset":29369,"endOffset":30058,"count":45},{"startOffset":29536,"endOffset":29973,"count":502},{"startOffset":29616,"endOffset":29630,"count":106},{"startOffset":29643,"endOffset":29689,"count":45},{"startOffset":29689,"endOffset":29746,"count":457},{"startOffset":29746,"endOffset":29803,"count":58},{"startOffset":29803,"endOffset":29916,"count":399},{"startOffset":29823,"endOffset":29856,"count":16},{"startOffset":29858,"endOffset":29916,"count":13},{"startOffset":29916,"endOffset":29973,"count":457},{"startOffset":30013,"endOffset":30026,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":30068,"endOffset":31875,"count":45},{"startOffset":30212,"endOffset":30257,"count":0},{"startOffset":30394,"endOffset":30449,"count":0},{"startOffset":30558,"endOffset":31178,"count":0},{"startOffset":31491,"endOffset":31759,"count":114},{"startOffset":31560,"endOffset":31606,"count":45},{"startOffset":31606,"endOffset":31644,"count":69},{"startOffset":31644,"endOffset":31688,"count":0},{"startOffset":31690,"endOffset":31745,"count":69}],"isBlockCoverage":true}]},{"scriptId":"402","url":"file:///home/runner/work/deluge/deluge/node_modules/esutils/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"403","url":"file:///home/runner/work/deluge/deluge/node_modules/esutils/lib/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":1370,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":2127,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":2450,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":3268,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"trailingStatement","ranges":[{"startOffset":3399,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isProblematicIfStatement","ranges":[{"startOffset":3849,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///home/runner/work/deluge/deluge/node_modules/esutils/lib/code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":29569,"count":1},{"startOffset":27989,"endOffset":28199,"count":128},{"startOffset":28045,"endOffset":28058,"count":31},{"startOffset":28059,"endOffset":28107,"count":102},{"startOffset":28094,"endOffset":28107,"count":37},{"startOffset":28108,"endOffset":28143,"count":76},{"startOffset":28144,"endOffset":28158,"count":75},{"startOffset":28273,"endOffset":28531,"count":128},{"startOffset":28328,"endOffset":28341,"count":31},{"startOffset":28342,"endOffset":28390,"count":102},{"startOffset":28377,"endOffset":28390,"count":37},{"startOffset":28391,"endOffset":28439,"count":76},{"startOffset":28426,"endOffset":28439,"count":28},{"startOffset":28440,"endOffset":28475,"count":66},{"startOffset":28476,"endOffset":28490,"count":65}],"isBlockCoverage":true},{"functionName":"isDecimalDigit","ranges":[{"startOffset":26641,"endOffset":26726,"count":79}],"isBlockCoverage":true},{"functionName":"isHexDigit","ranges":[{"startOffset":26732,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":26925,"endOffset":27008,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpace","ranges":[{"startOffset":27243,"endOffset":27434,"count":899},{"startOffset":27298,"endOffset":27312,"count":783},{"startOffset":27313,"endOffset":27327,"count":783},{"startOffset":27328,"endOffset":27342,"count":783},{"startOffset":27343,"endOffset":27357,"count":783},{"startOffset":27358,"endOffset":27427,"count":783},{"startOffset":27386,"endOffset":27427,"count":0}],"isBlockCoverage":true},{"functionName":"isLineTerminator","ranges":[{"startOffset":27469,"endOffset":27583,"count":5713},{"startOffset":27528,"endOffset":27542,"count":5502},{"startOffset":27543,"endOffset":27559,"count":5502},{"startOffset":27560,"endOffset":27576,"count":5502}],"isBlockCoverage":true},{"functionName":"fromCodePoint","ranges":[{"startOffset":27634,"endOffset":27914,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES5","ranges":[{"startOffset":28537,"endOffset":28686,"count":37},{"startOffset":28621,"endOffset":28679,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierPartES5","ranges":[{"startOffset":28692,"endOffset":28838,"count":179},{"startOffset":28774,"endOffset":28831,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierStartES6","ranges":[{"startOffset":28844,"endOffset":28993,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES6","ranges":[{"startOffset":28999,"endOffset":29145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///home/runner/work/deluge/deluge/node_modules/esutils/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictModeReservedWordES6","ranges":[{"startOffset":1405,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES5","ranges":[{"startOffset":1752,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES6","ranges":[{"startOffset":1990,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES5","ranges":[{"startOffset":3224,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES6","ranges":[{"startOffset":3369,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"isRestrictedWord","ranges":[{"startOffset":3514,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES5","ranges":[{"startOffset":3609,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUtf16","ranges":[{"startOffset":4051,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES6","ranges":[{"startOffset":4167,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES5","ranges":[{"startOffset":4909,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES6","ranges":[{"startOffset":5033,"endOffset":5151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/node_modules/doctrine/lib/typed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245,"endOffset":38464,"count":1}],"isBlockCoverage":true},{"functionName":"isTypeName","ranges":[{"startOffset":2016,"endOffset":2193,"count":571},{"startOffset":2115,"endOffset":2148,"count":551},{"startOffset":2149,"endOffset":2186,"count":551}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":2199,"endOffset":2376,"count":77}],"isBlockCoverage":true},{"functionName":"Context.restore","ranges":[{"startOffset":2410,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"Context.save","ranges":[{"startOffset":2573,"endOffset":2651,"count":77}],"isBlockCoverage":true},{"functionName":"maybeAddRange","ranges":[{"startOffset":2658,"endOffset":2831,"count":87},{"startOffset":2718,"endOffset":2804,"count":0}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":2837,"endOffset":2941,"count":572}],"isBlockCoverage":true},{"functionName":"scanHexEscape","ranges":[{"startOffset":2947,"endOffset":3410,"count":0}],"isBlockCoverage":false},{"functionName":"scanString","ranges":[{"startOffset":3416,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"scanNumber","ranges":[{"startOffset":6823,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"scanTypeName","ranges":[{"startOffset":10613,"endOffset":11183,"count":79},{"startOffset":10718,"endOffset":10757,"count":492},{"startOffset":10759,"endOffset":11150,"count":472},{"startOffset":10844,"endOffset":11108,"count":2},{"startOffset":10889,"endOffset":10950,"count":0},{"startOffset":11048,"endOffset":11094,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":11189,"endOffset":14768,"count":165},{"startOffset":11281,"endOffset":11335,"count":100},{"startOffset":11337,"endOffset":11371,"count":0},{"startOffset":11401,"endOffset":11469,"count":65},{"startOffset":11469,"endOffset":11540,"count":100},{"startOffset":11540,"endOffset":11550,"count":0},{"startOffset":11570,"endOffset":11651,"count":0},{"startOffset":11661,"endOffset":11764,"count":1},{"startOffset":11774,"endOffset":11877,"count":0},{"startOffset":11887,"endOffset":11991,"count":6},{"startOffset":12001,"endOffset":12105,"count":0},{"startOffset":12115,"endOffset":12219,"count":0},{"startOffset":12229,"endOffset":12333,"count":0},{"startOffset":12343,"endOffset":12447,"count":0},{"startOffset":12457,"endOffset":12561,"count":0},{"startOffset":12571,"endOffset":13454,"count":0},{"startOffset":13464,"endOffset":13564,"count":6},{"startOffset":13574,"endOffset":13674,"count":6},{"startOffset":13684,"endOffset":13786,"count":0},{"startOffset":13796,"endOffset":13898,"count":2},{"startOffset":13908,"endOffset":14014,"count":0},{"startOffset":14024,"endOffset":14126,"count":0},{"startOffset":14136,"endOffset":14239,"count":0},{"startOffset":14249,"endOffset":14329,"count":0},{"startOffset":14339,"endOffset":14752,"count":79},{"startOffset":14397,"endOffset":14480,"count":0}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":14774,"endOffset":14908,"count":5},{"startOffset":14853,"endOffset":14884,"count":4}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":14914,"endOffset":15075,"count":84},{"startOffset":14979,"endOffset":15053,"count":1},{"startOffset":15053,"endOffset":15074,"count":83}],"isBlockCoverage":true},{"functionName":"parseUnionType","ranges":[{"startOffset":15325,"endOffset":15957,"count":1},{"startOffset":15649,"endOffset":15695,"count":0},{"startOffset":15755,"endOffset":15956,"count":0}],"isBlockCoverage":true},{"functionName":"parseArrayType","ranges":[{"startOffset":16162,"endOffset":17077,"count":0}],"isBlockCoverage":false},{"functionName":"parseFieldName","ranges":[{"startOffset":17083,"endOffset":17416,"count":0}],"isBlockCoverage":false},{"functionName":"parseFieldType","ranges":[{"startOffset":17636,"endOffset":18158,"count":0}],"isBlockCoverage":false},{"functionName":"parseRecordType","ranges":[{"startOffset":18319,"endOffset":18990,"count":0}],"isBlockCoverage":false},{"functionName":"parseNameExpression","ranges":[{"startOffset":19264,"endOffset":19784,"count":77},{"startOffset":19420,"endOffset":19534,"count":1},{"startOffset":19536,"endOffset":19646,"count":0}],"isBlockCoverage":true},{"functionName":"parseTypeExpressionList","ranges":[{"startOffset":19910,"endOffset":20163,"count":6},{"startOffset":20048,"endOffset":20132,"count":0}],"isBlockCoverage":true},{"functionName":"parseTypeName","ranges":[{"startOffset":20401,"endOffset":20932,"count":77},{"startOffset":20592,"endOffset":20905,"count":6},{"startOffset":20905,"endOffset":20931,"count":71}],"isBlockCoverage":true},{"functionName":"parseResultType","ranges":[{"startOffset":21134,"endOffset":21446,"count":0}],"isBlockCoverage":false},{"functionName":"parseParametersType","ranges":[{"startOffset":22129,"endOffset":23843,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionType","ranges":[{"startOffset":24198,"endOffset":25939,"count":0}],"isBlockCoverage":false},{"functionName":"parseBasicTypeExpression","ranges":[{"startOffset":26139,"endOffset":28221,"count":80},{"startOffset":26243,"endOffset":26409,"count":0},{"startOffset":26419,"endOffset":26474,"count":1},{"startOffset":26484,"endOffset":26539,"count":0},{"startOffset":26549,"endOffset":26605,"count":0},{"startOffset":26615,"endOffset":27696,"count":79},{"startOffset":26714,"endOffset":26894,"count":1},{"startOffset":26894,"endOffset":26935,"count":78},{"startOffset":26935,"endOffset":27120,"count":1},{"startOffset":27120,"endOffset":27175,"count":77},{"startOffset":27177,"endOffset":27409,"count":0},{"startOffset":27409,"endOffset":27487,"count":77},{"startOffset":27487,"endOffset":27659,"count":0},{"startOffset":27659,"endOffset":27696,"count":77},{"startOffset":27706,"endOffset":27913,"count":0},{"startOffset":27923,"endOffset":28135,"count":0},{"startOffset":28145,"endOffset":28205,"count":0}],"isBlockCoverage":true},{"functionName":"parseTypeExpression","ranges":[{"startOffset":28474,"endOffset":30747,"count":80},{"startOffset":28576,"endOffset":29262,"count":0},{"startOffset":29294,"endOffset":29580,"count":0},{"startOffset":29711,"endOffset":29940,"count":0},{"startOffset":29940,"endOffset":29980,"count":79},{"startOffset":29980,"endOffset":30210,"count":0},{"startOffset":30210,"endOffset":30248,"count":79},{"startOffset":30248,"endOffset":30719,"count":0},{"startOffset":30719,"endOffset":30746,"count":79}],"isBlockCoverage":true},{"functionName":"parseTop","ranges":[{"startOffset":31027,"endOffset":31565,"count":77},{"startOffset":31150,"endOffset":31186,"count":74},{"startOffset":31186,"endOffset":31436,"count":2},{"startOffset":31393,"endOffset":31436,"count":0},{"startOffset":31436,"endOffset":31564,"count":2}],"isBlockCoverage":true},{"functionName":"parseTopParamType","ranges":[{"startOffset":31571,"endOffset":32116,"count":42},{"startOffset":31655,"endOffset":31840,"count":0},{"startOffset":31904,"endOffset":32088,"count":0},{"startOffset":32088,"endOffset":32115,"count":41}],"isBlockCoverage":true},{"functionName":"parseType","ranges":[{"startOffset":32122,"endOffset":32672,"count":29},{"startOffset":32348,"endOffset":32352,"count":0},{"startOffset":32433,"endOffset":32546,"count":0},{"startOffset":32581,"endOffset":32644,"count":5},{"startOffset":32644,"endOffset":32671,"count":24}],"isBlockCoverage":true},{"functionName":"parseParamType","ranges":[{"startOffset":32678,"endOffset":33242,"count":42},{"startOffset":32909,"endOffset":32913,"count":0},{"startOffset":32985,"endOffset":33001,"count":41},{"startOffset":33003,"endOffset":33116,"count":0},{"startOffset":33116,"endOffset":33151,"count":41},{"startOffset":33151,"endOffset":33214,"count":0},{"startOffset":33214,"endOffset":33241,"count":41}],"isBlockCoverage":true},{"functionName":"stringifyImpl","ranges":[{"startOffset":33248,"endOffset":38132,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":38138,"endOffset":38317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/node_modules/doctrine/lib/utility.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":99,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"DoctrineError","ranges":[{"startOffset":236,"endOffset":344,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":376,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"Middle","ranges":[{"startOffset":411,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"throwError","ranges":[{"startOffset":616,"endOffset":694,"count":6}],"isBlockCoverage":true}]},{"scriptId":"408","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"409","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":125}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":2},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":2},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":2},{"startOffset":895,"endOffset":1003,"count":77}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":2}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":4},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":2},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4537,"count":1}],"isBlockCoverage":true},{"functionName":"getBabelEslintVisitorKeys","ranges":[{"startOffset":230,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"keysFromParser","ranges":[{"startOffset":570,"endOffset":993,"count":4},{"startOffset":724,"endOffset":751,"count":0},{"startOffset":753,"endOffset":795,"count":0},{"startOffset":877,"endOffset":992,"count":0}],"isBlockCoverage":true},{"functionName":"makeParseReturn","ranges":[{"startOffset":1147,"endOffset":1278,"count":4}],"isBlockCoverage":true},{"functionName":"stripUnicodeBOM","ranges":[{"startOffset":1280,"endOffset":1377,"count":4},{"startOffset":1352,"endOffset":1367,"count":0}],"isBlockCoverage":true},{"functionName":"transformHashbang","ranges":[{"startOffset":1379,"endOffset":1490,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1454,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1510,"endOffset":4088,"count":4},{"startOffset":1575,"endOffset":1625,"count":0},{"startOffset":1743,"endOffset":1786,"count":0},{"startOffset":3255,"endOffset":3955,"count":0}],"isBlockCoverage":true},{"functionName":"getParserPath","ranges":[{"startOffset":4091,"endOffset":4536,"count":4},{"startOffset":4208,"endOffset":4471,"count":0}],"isBlockCoverage":true}]},{"scriptId":"413","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/module-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":778,"count":1}],"isBlockCoverage":true},{"functionName":"createModule","ranges":[{"startOffset":137,"endOffset":312,"count":4}],"isBlockCoverage":true},{"functionName":"moduleRequire","ranges":[{"startOffset":332,"endOffset":776,"count":4},{"startOffset":583,"endOffset":775,"count":0}],"isBlockCoverage":true}]},{"scriptId":"414","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/visit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":569,"count":1}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":60,"endOffset":567,"count":2247},{"startOffset":114,"endOffset":122,"count":2157},{"startOffset":124,"endOffset":141,"count":90},{"startOffset":141,"endOffset":215,"count":2157},{"startOffset":215,"endOffset":249,"count":143},{"startOffset":249,"endOffset":304,"count":2157},{"startOffset":304,"endOffset":321,"count":0},{"startOffset":321,"endOffset":521,"count":2157},{"startOffset":521,"endOffset":565,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":344,"endOffset":461,"count":2003}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":400,"endOffset":455,"count":2243}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1734,"count":1}],"isBlockCoverage":true},{"functionName":"validExtensions","ranges":[{"startOffset":206,"endOffset":436,"count":8},{"startOffset":258,"endOffset":294,"count":7},{"startOffset":296,"endOffset":323,"count":7},{"startOffset":323,"endOffset":435,"count":1}],"isBlockCoverage":true},{"functionName":"makeValidExtensionSet","ranges":[{"startOffset":438,"endOffset":1016,"count":1},{"startOffset":684,"endOffset":998,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":966,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"ignore","ranges":[{"startOffset":1087,"endOffset":1584,"count":4},{"startOffset":1206,"endOffset":1218,"count":0},{"startOffset":1279,"endOffset":1583,"count":0}],"isBlockCoverage":true},{"functionName":"hasValidExtension","ranges":[{"startOffset":1587,"endOffset":1686,"count":8}],"isBlockCoverage":true}]},{"scriptId":"416","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/unambiguous.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":918,"count":1}],"isBlockCoverage":true},{"functionName":"isMaybeUnambiguousModule","ranges":[{"startOffset":416,"endOffset":494,"count":4}],"isBlockCoverage":true},{"functionName":"isUnambiguousModule","ranges":[{"startOffset":798,"endOffset":916,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":869,"endOffset":912,"count":4}],"isBlockCoverage":true}]},{"scriptId":"417","url":"file:///home/runner/work/deluge/deluge/node_modules/tsconfig-paths/lib/tsconfig-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4651,"count":1}],"isBlockCoverage":true},{"functionName":"__assign","ranges":[{"startOffset":56,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"tsConfigLoader","ranges":[{"startOffset":698,"endOffset":1179,"count":1},{"startOffset":831,"endOffset":835,"count":0}],"isBlockCoverage":true},{"functionName":"loadSyncDefault","ranges":[{"startOffset":1221,"endOffset":1868,"count":1},{"startOffset":1578,"endOffset":1777,"count":0},{"startOffset":1801,"endOffset":1826,"count":0},{"startOffset":1827,"endOffset":1858,"count":0}],"isBlockCoverage":true},{"functionName":"resolveConfigPath","ranges":[{"startOffset":1869,"endOffset":2338,"count":1},{"startOffset":1931,"endOffset":2130,"count":0},{"startOffset":2166,"endOffset":2207,"count":0},{"startOffset":2289,"endOffset":2323,"count":0}],"isBlockCoverage":true},{"functionName":"walkForTsConfig","ranges":[{"startOffset":2339,"endOffset":2796,"count":6},{"startOffset":2420,"endOffset":2451,"count":1},{"startOffset":2546,"endOffset":2580,"count":0},{"startOffset":2704,"endOffset":2737,"count":1},{"startOffset":2737,"endOffset":2795,"count":5}],"isBlockCoverage":true},{"functionName":"loadTsconfig","ranges":[{"startOffset":2840,"endOffset":4570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///home/runner/work/deluge/deluge/node_modules/json5/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":418,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":232,"endOffset":314,"count":2},{"startOffset":295,"endOffset":299,"count":0}],"isBlockCoverage":true}]},{"scriptId":"419","url":"file:///home/runner/work/deluge/deluge/node_modules/json5/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13014,"count":1},{"startOffset":176,"endOffset":300,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":144,"endOffset":176,"count":0}],"isBlockCoverage":false},{"functionName":"_typeof","ranges":[{"startOffset":177,"endOffset":300,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":391,"endOffset":622,"count":1},{"startOffset":464,"endOffset":621,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":776,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"internalize","ranges":[{"startOffset":1072,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"lex","ranges":[{"startOffset":1500,"endOffset":1647,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1647,"endOffset":1733,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1733,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":1885,"endOffset":2195,"count":0}],"isBlockCoverage":false},{"functionName":"comment","ranges":[{"startOffset":2204,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineComment","ranges":[{"startOffset":2379,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineCommentAsterisk","ranges":[{"startOffset":2550,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineComment","ranges":[{"startOffset":2755,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":2931,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"identifierNameStartEscape","ranges":[{"startOffset":3746,"endOffset":3986,"count":0}],"isBlockCoverage":false},{"functionName":"identifierName","ranges":[{"startOffset":4002,"endOffset":4246,"count":0}],"isBlockCoverage":false},{"functionName":"identifierNameEscape","ranges":[{"startOffset":4268,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":4538,"endOffset":4951,"count":0}],"isBlockCoverage":false},{"functionName":"zero","ranges":[{"startOffset":4957,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"decimalInteger","ranges":[{"startOffset":5215,"endOffset":5461,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPointLeading","ranges":[{"startOffset":5482,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPoint","ranges":[{"startOffset":5622,"endOffset":5839,"count":0}],"isBlockCoverage":false},{"functionName":"decimalFraction","ranges":[{"startOffset":5856,"endOffset":6049,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponent","ranges":[{"startOffset":6066,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentSign","ranges":[{"startOffset":6296,"endOffset":6429,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentInteger","ranges":[{"startOffset":6453,"endOffset":6577,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimal","ranges":[{"startOffset":6590,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimalInteger","ranges":[{"startOffset":6734,"endOffset":6857,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":6865,"endOffset":7257,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":7264,"endOffset":7362,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyName","ranges":[{"startOffset":7382,"endOffset":7758,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyName","ranges":[{"startOffset":7777,"endOffset":7881,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyValue","ranges":[{"startOffset":7902,"endOffset":7950,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyValue","ranges":[{"startOffset":7970,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"beforeArrayValue","ranges":[{"startOffset":8108,"endOffset":8202,"count":0}],"isBlockCoverage":false},{"functionName":"afterArrayValue","ranges":[{"startOffset":8219,"endOffset":8336,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":8341,"endOffset":8382,"count":0}],"isBlockCoverage":false},{"functionName":"newToken","ranges":[{"startOffset":8384,"endOffset":8468,"count":0}],"isBlockCoverage":false},{"functionName":"literal","ranges":[{"startOffset":8468,"endOffset":8985,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":8985,"endOffset":9588,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":9588,"endOffset":9824,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeEscape","ranges":[{"startOffset":9824,"endOffset":10023,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":10046,"endOffset":10112,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyName","ranges":[{"startOffset":10132,"endOffset":10326,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyName","ranges":[{"startOffset":10345,"endOffset":10449,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyValue","ranges":[{"startOffset":10470,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"beforeArrayValue","ranges":[{"startOffset":10568,"endOffset":10707,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyValue","ranges":[{"startOffset":10727,"endOffset":10882,"count":0}],"isBlockCoverage":false},{"functionName":"afterArrayValue","ranges":[{"startOffset":10899,"endOffset":11049,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":11054,"endOffset":11070,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":11072,"endOffset":11800,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":11800,"endOffset":11995,"count":0}],"isBlockCoverage":false},{"functionName":"invalidChar","ranges":[{"startOffset":11995,"endOffset":12196,"count":0}],"isBlockCoverage":false},{"functionName":"invalidEOF","ranges":[{"startOffset":12196,"endOffset":12288,"count":0}],"isBlockCoverage":false},{"functionName":"invalidIdentifier","ranges":[{"startOffset":12288,"endOffset":12405,"count":0}],"isBlockCoverage":false},{"functionName":"separatorChar","ranges":[{"startOffset":12405,"endOffset":12507,"count":0}],"isBlockCoverage":false},{"functionName":"formatChar","ranges":[{"startOffset":12507,"endOffset":12862,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":12862,"endOffset":12980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///home/runner/work/deluge/deluge/node_modules/json5/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":329,"endOffset":560,"count":1},{"startOffset":402,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"isSpaceSeparator","ranges":[{"startOffset":560,"endOffset":628,"count":0}],"isBlockCoverage":false},{"functionName":"isIdStartChar","ranges":[{"startOffset":628,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"isIdContinueChar","ranges":[{"startOffset":736,"endOffset":894,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":894,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":937,"endOffset":989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///home/runner/work/deluge/deluge/node_modules/json5/lib/unicode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15481,"count":1}],"isBlockCoverage":true}]},{"scriptId":"422","url":"file:///home/runner/work/deluge/deluge/node_modules/json5/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6146,"count":1},{"startOffset":176,"endOffset":300,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":144,"endOffset":176,"count":0}],"isBlockCoverage":false},{"functionName":"_typeof","ranges":[{"startOffset":177,"endOffset":300,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":395,"endOffset":626,"count":1},{"startOffset":468,"endOffset":625,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":626,"endOffset":6112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///home/runner/work/deluge/deluge/node_modules/array-includes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":779,"count":1}],"isBlockCoverage":true},{"functionName":"includes","ranges":[{"startOffset":495,"endOffset":652,"count":15}],"isBlockCoverage":true}]},{"scriptId":"424","url":"file:///home/runner/work/deluge/deluge/node_modules/define-properties/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1335,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":277,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":536,"endOffset":890,"count":27},{"startOffset":600,"endOffset":643,"count":0},{"startOffset":645,"endOffset":659,"count":0},{"startOffset":813,"endOffset":888,"count":0}],"isBlockCoverage":true},{"functionName":"defineProperties","ranges":[{"startOffset":916,"endOffset":1234,"count":9},{"startOffset":980,"endOffset":994,"count":0},{"startOffset":1155,"endOffset":1232,"count":27}],"isBlockCoverage":true}]},{"scriptId":"425","url":"file:///home/runner/work/deluge/deluge/node_modules/object-keys/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":823,"count":1},{"startOffset":185,"endOffset":214,"count":0}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":144,"endOffset":184,"count":9}],"isBlockCoverage":true},{"functionName":"shimObjectKeys","ranges":[{"startOffset":266,"endOffset":793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///home/runner/work/deluge/deluge/node_modules/object-keys/isArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":422,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":72,"endOffset":420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///home/runner/work/deluge/deluge/node_modules/has-property-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":817,"count":1}],"isBlockCoverage":true},{"functionName":"hasPropertyDescriptors","ranges":[{"startOffset":160,"endOffset":382,"count":3},{"startOffset":291,"endOffset":362,"count":0},{"startOffset":365,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"hasArrayLengthDefineBug","ranges":[{"startOffset":434,"endOffset":773,"count":1},{"startOffset":574,"endOffset":593,"count":0},{"startOffset":671,"endOffset":771,"count":0}],"isBlockCoverage":true}]},{"scriptId":"428","url":"file:///home/runner/work/deluge/deluge/node_modules/get-intrinsic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12719,"count":1},{"startOffset":420,"endOffset":491,"count":0},{"startOffset":993,"endOffset":1009,"count":0},{"startOffset":1093,"endOffset":1132,"count":0},{"startOffset":1239,"endOffset":1250,"count":0},{"startOffset":1354,"endOffset":1365,"count":0},{"startOffset":1456,"endOffset":1467,"count":0},{"startOffset":1557,"endOffset":1568,"count":0},{"startOffset":1806,"endOffset":1817,"count":0},{"startOffset":1872,"endOffset":1883,"count":0},{"startOffset":1964,"endOffset":1975,"count":0},{"startOffset":2298,"endOffset":2309,"count":0},{"startOffset":2381,"endOffset":2392,"count":0},{"startOffset":2480,"endOffset":2491,"count":0},{"startOffset":2626,"endOffset":2637,"count":0},{"startOffset":2702,"endOffset":2713,"count":0},{"startOffset":2779,"endOffset":2790,"count":0},{"startOffset":2928,"endOffset":2939,"count":0},{"startOffset":2984,"endOffset":2995,"count":0},{"startOffset":3034,"endOffset":3045,"count":0},{"startOffset":3122,"endOffset":3133,"count":0},{"startOffset":3334,"endOffset":3345,"count":0},{"startOffset":3398,"endOffset":3409,"count":0},{"startOffset":3530,"endOffset":3541,"count":0},{"startOffset":3611,"endOffset":3622,"count":0},{"startOffset":3699,"endOffset":3710,"count":0},{"startOffset":3818,"endOffset":3829,"count":0},{"startOffset":3947,"endOffset":3958,"count":0},{"startOffset":3993,"endOffset":4004,"count":0},{"startOffset":4183,"endOffset":4194,"count":0},{"startOffset":4274,"endOffset":4285,"count":0},{"startOffset":4360,"endOffset":4371,"count":0},{"startOffset":4440,"endOffset":4451,"count":0},{"startOffset":4537,"endOffset":4548,"count":0},{"startOffset":4605,"endOffset":4616,"count":0},{"startOffset":4673,"endOffset":4684,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":192,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":516,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":589,"endOffset":988,"count":1},{"startOffset":929,"endOffset":981,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":1096,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"doEval","ranges":[{"startOffset":4712,"endOffset":5370,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":8836,"endOffset":9387,"count":112},{"startOffset":8960,"endOffset":8975,"count":83},{"startOffset":8977,"endOffset":9057,"count":0},{"startOffset":9080,"endOffset":9096,"count":83},{"startOffset":9098,"endOffset":9178,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9227,"endOffset":9367,"count":199},{"startOffset":9304,"endOffset":9345,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":9434,"endOffset":10110,"count":112},{"startOffset":9565,"endOffset":9650,"count":0},{"startOffset":9762,"endOffset":9801,"count":0},{"startOffset":9837,"endOffset":9853,"count":0},{"startOffset":9855,"endOffset":9963,"count":0},{"startOffset":10040,"endOffset":10109,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":10130,"endOffset":12717,"count":112},{"startOffset":10226,"endOffset":10299,"count":0},{"startOffset":10326,"endOffset":10362,"count":50},{"startOffset":10364,"endOffset":10437,"count":0},{"startOffset":10481,"endOffset":10597,"count":0},{"startOffset":10684,"endOffset":10688,"count":0},{"startOffset":10918,"endOffset":11001,"count":0},{"startOffset":11060,"endOffset":12700,"count":87},{"startOffset":11284,"endOffset":11301,"count":0},{"startOffset":11306,"endOffset":11394,"count":0},{"startOffset":11435,"endOffset":11470,"count":0},{"startOffset":11606,"endOffset":11653,"count":45},{"startOffset":11653,"endOffset":12697,"count":42},{"startOffset":11705,"endOffset":11874,"count":0},{"startOffset":11916,"endOffset":12535,"count":35},{"startOffset":12426,"endOffset":12459,"count":0},{"startOffset":12461,"endOffset":12491,"count":0},{"startOffset":12535,"endOffset":12605,"count":7}],"isBlockCoverage":true}]},{"scriptId":"429","url":"file:///home/runner/work/deluge/deluge/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":131,"endOffset":418,"count":8},{"startOffset":200,"endOffset":217,"count":0},{"startOffset":253,"endOffset":270,"count":0},{"startOffset":315,"endOffset":332,"count":0},{"startOffset":373,"endOffset":390,"count":0}],"isBlockCoverage":true}]},{"scriptId":"430","url":"file:///home/runner/work/deluge/deluge/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":90,"endOffset":1759,"count":12},{"startOffset":203,"endOffset":220,"count":0},{"startOffset":279,"endOffset":1198,"count":0},{"startOffset":1200,"endOffset":1320,"count":0},{"startOffset":1322,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":1758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"431","url":"file:///home/runner/work/deluge/deluge/node_modules/function-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1},{"startOffset":107,"endOffset":124,"count":0}],"isBlockCoverage":true}]},{"scriptId":"432","url":"file:///home/runner/work/deluge/deluge/node_modules/function-bind/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1463,"count":1}],"isBlockCoverage":true},{"functionName":"bind","ranges":[{"startOffset":247,"endOffset":1461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///home/runner/work/deluge/deluge/node_modules/has/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":129,"count":1}],"isBlockCoverage":true}]},{"scriptId":"434","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/RequireObjectCoercible.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":70,"count":1}],"isBlockCoverage":true}]},{"scriptId":"435","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/5/CheckObjectCoercible.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"CheckObjectCoercible","ranges":[{"startOffset":177,"endOffset":343,"count":15},{"startOffset":248,"endOffset":326,"count":0}],"isBlockCoverage":true}]},{"scriptId":"436","url":"file:///home/runner/work/deluge/deluge/node_modules/call-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1306,"count":1},{"startOffset":268,"endOffset":295,"count":0},{"startOffset":551,"endOffset":629,"count":0},{"startOffset":1261,"endOffset":1305,"count":0}],"isBlockCoverage":true},{"functionName":"callBind","ranges":[{"startOffset":650,"endOffset":1078,"count":36}],"isBlockCoverage":true},{"functionName":"applyBind","ranges":[{"startOffset":1097,"endOffset":1169,"count":2}],"isBlockCoverage":true}]},{"scriptId":"437","url":"file:///home/runner/work/deluge/deluge/node_modules/call-bind/callBound.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":413,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":177,"endOffset":411,"count":28},{"startOffset":390,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"438","url":"file:///home/runner/work/deluge/deluge/node_modules/array-includes/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1300,"count":1}],"isBlockCoverage":true},{"functionName":"includes","ranges":[{"startOffset":715,"endOffset":1298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToIntegerOrInfinity.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1}],"isBlockCoverage":true},{"functionName":"ToIntegerOrInfinity","ranges":[{"startOffset":331,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/abs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"abs","ranges":[{"startOffset":169,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/floor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"floor","ranges":[{"startOffset":146,"endOffset":215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2129,"count":1}],"isBlockCoverage":true},{"functionName":"$trim","ranges":[{"startOffset":1195,"endOffset":1255,"count":0}],"isBlockCoverage":false},{"functionName":"ToNumber","ranges":[{"startOffset":1382,"endOffset":2127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///home/runner/work/deluge/deluge/node_modules/safe-regex-test/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":434,"count":1}],"isBlockCoverage":true},{"functionName":"regexTester","ranges":[{"startOffset":256,"endOffset":432,"count":4},{"startOffset":308,"endOffset":364,"count":0}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":373,"endOffset":429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///home/runner/work/deluge/deluge/node_modules/is-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1405,"count":1},{"startOffset":1163,"endOffset":1403,"count":0}],"isBlockCoverage":true},{"functionName":"throwRegexMarker","ranges":[{"startOffset":346,"endOffset":385,"count":4}],"isBlockCoverage":true},{"functionName":"isRegex","ranges":[{"startOffset":799,"endOffset":1161,"count":4},{"startOffset":868,"endOffset":890,"count":0},{"startOffset":1043,"endOffset":1065,"count":0}],"isBlockCoverage":true},{"functionName":"isRegex","ranges":[{"startOffset":1165,"endOffset":1403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///home/runner/work/deluge/deluge/node_modules/has-tostringtag/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"hasToStringTagShams","ranges":[{"startOffset":80,"endOffset":160,"count":3}],"isBlockCoverage":true}]},{"scriptId":"446","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/isPrimitive.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":32,"endOffset":149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToPrimitive.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":287,"count":1}],"isBlockCoverage":true},{"functionName":"ToPrimitive","ranges":[{"startOffset":151,"endOffset":285,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///home/runner/work/deluge/deluge/node_modules/es-to-primitive/es2015.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2139,"count":1}],"isBlockCoverage":true},{"functionName":"OrdinaryToPrimitive","ranges":[{"startOffset":299,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"GetMethod","ranges":[{"startOffset":949,"endOffset":1218,"count":0}],"isBlockCoverage":false},{"functionName":"ToPrimitive","ranges":[{"startOffset":1305,"endOffset":2137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///home/runner/work/deluge/deluge/node_modules/es-to-primitive/helpers/isPrimitive.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":32,"endOffset":149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///home/runner/work/deluge/deluge/node_modules/is-callable/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3224,"count":1},{"startOffset":575,"endOffset":604,"count":0},{"startOffset":609,"endOffset":640,"count":0},{"startOffset":1659,"endOffset":2355,"count":0},{"startOffset":2754,"endOffset":3222,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":342,"endOffset":388,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":482,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"isES6ClassFunction","ranges":[{"startOffset":699,"endOffset":870,"count":0}],"isBlockCoverage":false},{"functionName":"tryFunctionToStr","ranges":[{"startOffset":897,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentDotAll","ranges":[{"startOffset":1578,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentDotAll","ranges":[{"startOffset":1826,"endOffset":2349,"count":0}],"isBlockCoverage":false},{"functionName":"isCallable","ranges":[{"startOffset":2390,"endOffset":2752,"count":0}],"isBlockCoverage":false},{"functionName":"isCallable","ranges":[{"startOffset":2756,"endOffset":3222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"file:///home/runner/work/deluge/deluge/node_modules/is-date-object/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":522,"count":1}],"isBlockCoverage":true},{"functionName":"tryDateGetDayCall","ranges":[{"startOffset":71,"endOffset":186,"count":0}],"isBlockCoverage":false},{"functionName":"isDateObject","ranges":[{"startOffset":336,"endOffset":520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///home/runner/work/deluge/deluge/node_modules/is-symbol/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":767,"count":1},{"startOffset":634,"endOffset":766,"count":0}],"isBlockCoverage":true},{"functionName":"isRealSymbolObject","ranges":[{"startOffset":221,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":399,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":661,"endOffset":763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/isNaN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1},{"startOffset":45,"endOffset":86,"count":0}],"isBlockCoverage":true},{"functionName":"isNaN","ranges":[{"startOffset":48,"endOffset":86,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/isFinite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":214,"count":1},{"startOffset":41,"endOffset":76,"count":0},{"startOffset":112,"endOffset":212,"count":0}],"isBlockCoverage":true},{"functionName":"$isNaN","ranges":[{"startOffset":44,"endOffset":76,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":115,"endOffset":212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true},{"functionName":"sign","ranges":[{"startOffset":32,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"ToLength","ranges":[{"startOffset":155,"endOffset":360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/maxSafeInteger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1},{"startOffset":180,"endOffset":203,"count":0}],"isBlockCoverage":true}]},{"scriptId":"458","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":334,"count":1}],"isBlockCoverage":true},{"functionName":"ToObject","ranges":[{"startOffset":248,"endOffset":332,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/SameValueZero.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":223,"count":1}],"isBlockCoverage":true},{"functionName":"SameValueZero","ranges":[{"startOffset":142,"endOffset":221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///home/runner/work/deluge/deluge/node_modules/is-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":560,"count":1}],"isBlockCoverage":true},{"functionName":"tryStringObject","ranges":[{"startOffset":78,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":343,"endOffset":558,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///home/runner/work/deluge/deluge/node_modules/array-includes/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":301,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":299,"count":1},{"startOffset":273,"endOffset":298,"count":0}],"isBlockCoverage":true}]},{"scriptId":"462","url":"file:///home/runner/work/deluge/deluge/node_modules/array-includes/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"shimArrayPrototypeIncludes","ranges":[{"startOffset":117,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/default.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4482,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":194,"endOffset":289,"count":2},{"startOffset":267,"endOffset":287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":435,"endOffset":1348,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":448,"endOffset":1333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/namespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25800,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":449,"endOffset":544,"count":4},{"startOffset":522,"endOffset":542,"count":0}],"isBlockCoverage":true},{"functionName":"processBodyStatement","ranges":[{"startOffset":546,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2178,"endOffset":8690,"count":1}],"isBlockCoverage":true},{"functionName":"namespaceRule","ranges":[{"startOffset":2191,"endOffset":8668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/declaredScope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":301,"count":1}],"isBlockCoverage":true},{"functionName":"declaredScope","ranges":[{"startOffset":60,"endOffset":299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/importDeclaration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":934,"count":1}],"isBlockCoverage":true},{"functionName":"importDeclaration","ranges":[{"startOffset":114,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-namespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22642,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":196,"endOffset":291,"count":2},{"startOffset":263,"endOffset":268,"count":1},{"startOffset":269,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":291,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2193,"endOffset":5673,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2206,"endOffset":5658,"count":0}],"isBlockCoverage":false},{"functionName":"usesNamespaceAsObject","ranges":[{"startOffset":5907,"endOffset":6263,"count":0}],"isBlockCoverage":false},{"functionName":"getMemberPropertyName","ranges":[{"startOffset":6425,"endOffset":6606,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableNamesInScope","ranges":[{"startOffset":6712,"endOffset":7178,"count":0}],"isBlockCoverage":false},{"functionName":"generateLocalNames","ranges":[{"startOffset":7277,"endOffset":7989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30620,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":47,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":426,"endOffset":640,"count":19},{"startOffset":482,"endOffset":639,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":935,"endOffset":1030,"count":3},{"startOffset":1002,"endOffset":1007,"count":2},{"startOffset":1008,"endOffset":1028,"count":1}],"isBlockCoverage":true},{"functionName":"isTypescriptFunctionOverloads","ranges":[{"startOffset":5561,"endOffset":5822,"count":0}],"isBlockCoverage":false},{"functionName":"isTypescriptNamespaceMerging","ranges":[{"startOffset":6037,"endOffset":6736,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSkipTypescriptNamespace","ranges":[{"startOffset":7016,"endOffset":7403,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7548,"endOffset":14082,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":7561,"endOffset":14067,"count":8}],"isBlockCoverage":true},{"functionName":"addNamed","ranges":[{"startOffset":7654,"endOffset":8077,"count":11},{"startOffset":7738,"endOffset":7793,"count":0},{"startOffset":7863,"endOffset":7897,"count":0}],"isBlockCoverage":true},{"functionName":"getParent","ranges":[{"startOffset":8085,"endOffset":8392,"count":10},{"startOffset":8177,"endOffset":8225,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8443,"endOffset":8598,"count":8}],"isBlockCoverage":true},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":8456,"endOffset":8565,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8628,"endOffset":8851,"count":8}],"isBlockCoverage":true},{"functionName":"ExportSpecifier","ranges":[{"startOffset":8641,"endOffset":8827,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8888,"endOffset":10464,"count":8}],"isBlockCoverage":true},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":8901,"endOffset":10433,"count":6},{"startOffset":8983,"endOffset":8990,"count":0},{"startOffset":9375,"endOffset":9479,"count":0},{"startOffset":9674,"endOffset":10421,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10077,"endOffset":10172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10499,"endOffset":11551,"count":8}],"isBlockCoverage":true},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":10512,"endOffset":11522,"count":4},{"startOffset":10587,"endOffset":10594,"count":0},{"startOffset":10720,"endOffset":10741,"count":0},{"startOffset":10743,"endOffset":10750,"count":0},{"startOffset":10879,"endOffset":10886,"count":0},{"startOffset":10933,"endOffset":11027,"count":0},{"startOffset":11346,"endOffset":11510,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11135,"endOffset":11320,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11580,"endOffset":14055,"count":8}],"isBlockCoverage":true},{"functionName":"ProgramExit","ranges":[{"startOffset":11593,"endOffset":14035,"count":8},{"startOffset":12265,"endOffset":13563,"count":11},{"startOffset":12420,"endOffset":12521,"count":0},{"startOffset":12523,"endOffset":13321,"count":0},{"startOffset":13323,"endOffset":13543,"count":0},{"startOffset":13565,"endOffset":13627,"count":0},{"startOffset":13674,"endOffset":13697,"count":0},{"startOffset":13699,"endOffset":13724,"count":0},{"startOffset":13759,"endOffset":13783,"count":0},{"startOffset":13803,"endOffset":13865,"count":0},{"startOffset":13912,"endOffset":13935,"count":0},{"startOffset":13937,"endOffset":13962,"count":0},{"startOffset":13997,"endOffset":14021,"count":0}],"isBlockCoverage":true}]},{"scriptId":"469","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-mutable-exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7401,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":354,"endOffset":3191,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":367,"endOffset":3176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/extensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19571,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":453,"endOffset":548,"count":4},{"startOffset":520,"endOffset":525,"count":3},{"startOffset":526,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"buildProperties","ranges":[{"startOffset":845,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2558,"endOffset":5953,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2571,"endOffset":5938,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/core/importType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17453,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":96,"endOffset":704,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":109,"endOffset":481,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":488,"endOffset":702,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1372,"endOffset":1467,"count":2},{"startOffset":1439,"endOffset":1444,"count":1},{"startOffset":1445,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"baseModule","ranges":[{"startOffset":1467,"endOffset":1801,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalRegexMatch","ranges":[{"startOffset":1801,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":1976,"endOffset":2067,"count":28}],"isBlockCoverage":true},{"functionName":"isBuiltIn","ranges":[{"startOffset":2140,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModule","ranges":[{"startOffset":2379,"endOffset":2628,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleMain","ranges":[{"startOffset":2628,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"isModule","ranges":[{"startOffset":2890,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleMain","ranges":[{"startOffset":2997,"endOffset":3070,"count":0}],"isBlockCoverage":false},{"functionName":"isScoped","ranges":[{"startOffset":3107,"endOffset":3172,"count":0}],"isBlockCoverage":false},{"functionName":"isScopedMain","ranges":[{"startOffset":3214,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeToParent","ranges":[{"startOffset":3287,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":3417,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeToSibling","ranges":[{"startOffset":3481,"endOffset":3549,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalPath","ranges":[{"startOffset":3549,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalPath","ranges":[{"startOffset":4073,"endOffset":4272,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalLookingName","ranges":[{"startOffset":4272,"endOffset":4351,"count":0}],"isBlockCoverage":false},{"functionName":"typeTest","ranges":[{"startOffset":4351,"endOffset":4962,"count":0}],"isBlockCoverage":false},{"functionName":"resolveImportType","ranges":[{"startOffset":4962,"endOffset":5080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///home/runner/work/deluge/deluge/node_modules/is-core-module/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1757,"count":1}],"isBlockCoverage":true},{"functionName":"specifierIncluded","ranges":[{"startOffset":42,"endOffset":634,"count":0}],"isBlockCoverage":false},{"functionName":"matchesRange","ranges":[{"startOffset":636,"endOffset":906,"count":0}],"isBlockCoverage":false},{"functionName":"versionIncluded","ranges":[{"startOffset":908,"endOffset":1602,"count":2},{"startOffset":1035,"endOffset":1132,"count":0},{"startOffset":1135,"endOffset":1148,"count":0},{"startOffset":1185,"endOffset":1402,"count":0},{"startOffset":1404,"endOffset":1601,"count":0}],"isBlockCoverage":true},{"functionName":"isCore","ranges":[{"startOffset":1657,"endOffset":1755,"count":36},{"startOffset":1712,"endOffset":1752,"count":2}],"isBlockCoverage":true}]},{"scriptId":"473","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/core/packagePath.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3449,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":475,"endOffset":570,"count":2},{"startOffset":548,"endOffset":568,"count":0}],"isBlockCoverage":true},{"functionName":"getContextPackagePath","ranges":[{"startOffset":570,"endOffset":723,"count":0}],"isBlockCoverage":false},{"functionName":"getFilePackagePath","ranges":[{"startOffset":723,"endOffset":845,"count":0}],"isBlockCoverage":false},{"functionName":"getFilePackageName","ranges":[{"startOffset":845,"endOffset":1212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-module-utils/readPkgUp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1727,"count":1}],"isBlockCoverage":true},{"functionName":"stripBOM","ranges":[{"startOffset":111,"endOffset":174,"count":0}],"isBlockCoverage":false},{"functionName":"readPkgUp","ranges":[{"startOffset":1481,"endOffset":1725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-restricted-paths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21398,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":681,"endOffset":776,"count":7},{"startOffset":748,"endOffset":753,"count":4},{"startOffset":754,"endOffset":774,"count":3}],"isBlockCoverage":true},{"functionName":"containsPath","ranges":[{"startOffset":797,"endOffset":959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1714,"endOffset":7024,"count":1}],"isBlockCoverage":true},{"functionName":"noRestrictedPaths","ranges":[{"startOffset":1727,"endOffset":6998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-internal-modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16051,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":528,"endOffset":623,"count":5},{"startOffset":595,"endOffset":600,"count":4},{"startOffset":601,"endOffset":621,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1212,"endOffset":4997,"count":1}],"isBlockCoverage":true},{"functionName":"noReachingInside","ranges":[{"startOffset":1225,"endOffset":4972,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/group-exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15686,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":304,"endOffset":399,"count":3},{"startOffset":371,"endOffset":376,"count":1},{"startOffset":377,"endOffset":397,"count":2}],"isBlockCoverage":true},{"functionName":"accessorChain","ranges":[{"startOffset":1537,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1828,"endOffset":5123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///home/runner/work/deluge/deluge/node_modules/object.values/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true}]},{"scriptId":"479","url":"file:///home/runner/work/deluge/deluge/node_modules/object.values/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":491,"count":1}],"isBlockCoverage":true},{"functionName":"values","ranges":[{"startOffset":282,"endOffset":489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///home/runner/work/deluge/deluge/node_modules/object.values/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":187,"count":1},{"startOffset":168,"endOffset":184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"481","url":"file:///home/runner/work/deluge/deluge/node_modules/object.values/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1}],"isBlockCoverage":true},{"functionName":"shimValues","ranges":[{"startOffset":117,"endOffset":312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true}]},{"scriptId":"483","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flat/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":725,"count":1}],"isBlockCoverage":true},{"functionName":"flat","ranges":[{"startOffset":399,"endOffset":723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ArraySpeciesCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1370,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySpeciesCreate","ranges":[{"startOffset":494,"endOffset":1367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ArrayCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1667,"count":1},{"startOffset":425,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"$setProto","ranges":[{"startOffset":537,"endOffset":650,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayCreate","ranges":[{"startOffset":742,"endOffset":1665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsIntegralNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":473,"count":1}],"isBlockCoverage":true},{"functionName":"IsIntegralNumber","ranges":[{"startOffset":264,"endOffset":471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/Type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":297,"count":1}],"isBlockCoverage":true},{"functionName":"Type","ranges":[{"startOffset":151,"endOffset":295,"count":15},{"startOffset":198,"endOffset":221,"count":0},{"startOffset":250,"endOffset":273,"count":0}],"isBlockCoverage":true}]},{"scriptId":"488","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/5/Type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":438,"count":1}],"isBlockCoverage":true},{"functionName":"Type","ranges":[{"startOffset":82,"endOffset":436,"count":15},{"startOffset":118,"endOffset":139,"count":0},{"startOffset":171,"endOffset":197,"count":0},{"startOffset":276,"endOffset":434,"count":0}],"isBlockCoverage":true}]},{"scriptId":"489","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/Get.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":602,"count":1}],"isBlockCoverage":true},{"functionName":"Get","ranges":[{"startOffset":307,"endOffset":600,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///home/runner/work/deluge/deluge/node_modules/object-inspect/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18486,"count":1},{"startOffset":180,"endOffset":186,"count":0},{"startOffset":301,"endOffset":307,"count":0},{"startOffset":539,"endOffset":545,"count":0},{"startOffset":660,"endOffset":666,"count":0},{"startOffset":839,"endOffset":845,"count":0},{"startOffset":968,"endOffset":974,"count":0},{"startOffset":1101,"endOffset":1107,"count":0},{"startOffset":1717,"endOffset":1723,"count":0},{"startOffset":1880,"endOffset":1886,"count":0},{"startOffset":2132,"endOffset":2142,"count":0},{"startOffset":2184,"endOffset":2190,"count":0},{"startOffset":2292,"endOffset":2316,"count":0},{"startOffset":2342,"endOffset":2531,"count":0},{"startOffset":3403,"endOffset":3409,"count":0},{"startOffset":12577,"endOffset":12618,"count":0}],"isBlockCoverage":true},{"functionName":"gPO","ranges":[{"startOffset":2426,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":2534,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"inspect_","ranges":[{"startOffset":3429,"endOffset":10617,"count":0}],"isBlockCoverage":false},{"functionName":"wrapQuotes","ranges":[{"startOffset":10620,"endOffset":10784,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":10786,"endOffset":10860,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":10862,"endOffset":10997,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":10998,"endOffset":11131,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":11132,"endOffset":11269,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":11270,"endOffset":11405,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":11406,"endOffset":11543,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":11544,"endOffset":11681,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":11682,"endOffset":11821,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":11931,"endOffset":12312,"count":1},{"startOffset":11983,"endOffset":12062,"count":0},{"startOffset":12124,"endOffset":12164,"count":0},{"startOffset":12165,"endOffset":12180,"count":0},{"startOffset":12182,"endOffset":12311,"count":0}],"isBlockCoverage":true},{"functionName":"isBigInt","ranges":[{"startOffset":12314,"endOffset":12530,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":12580,"endOffset":12618,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":12620,"endOffset":12680,"count":0}],"isBlockCoverage":false},{"functionName":"toStr","ranges":[{"startOffset":12682,"endOffset":12742,"count":0}],"isBlockCoverage":false},{"functionName":"nameOf","ranges":[{"startOffset":12744,"endOffset":12921,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":12923,"endOffset":13105,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":13107,"endOffset":13446,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":13448,"endOffset":13828,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":13830,"endOffset":14037,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":14039,"endOffset":14378,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":14380,"endOffset":14760,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":14762,"endOffset":15026,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":15028,"endOffset":15538,"count":0}],"isBlockCoverage":false},{"functionName":"lowbyte","ranges":[{"startOffset":15540,"endOffset":15808,"count":0}],"isBlockCoverage":false},{"functionName":"markBoxed","ranges":[{"startOffset":15810,"endOffset":15871,"count":0}],"isBlockCoverage":false},{"functionName":"weakCollectionOf","ranges":[{"startOffset":15873,"endOffset":15936,"count":0}],"isBlockCoverage":false},{"functionName":"collectionOf","ranges":[{"startOffset":15938,"endOffset":16145,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineValues","ranges":[{"startOffset":16147,"endOffset":16322,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":16324,"endOffset":16710,"count":0}],"isBlockCoverage":false},{"functionName":"indentedJoin","ranges":[{"startOffset":16712,"endOffset":16923,"count":0}],"isBlockCoverage":false},{"functionName":"arrObjKeys","ranges":[{"startOffset":16925,"endOffset":18485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///home/runner/work/deluge/deluge/node_modules/object-inspect/util.inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsPropertyKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"IsPropertyKey","ranges":[{"startOffset":99,"endOffset":205,"count":3},{"startOffset":171,"endOffset":202,"count":0}],"isBlockCoverage":true}]},{"scriptId":"493","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1}],"isBlockCoverage":true}]},{"scriptId":"494","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/IsArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":349,"count":1},{"startOffset":171,"endOffset":233,"count":0},{"startOffset":268,"endOffset":347,"count":0}],"isBlockCoverage":true},{"functionName":"IsArray","ranges":[{"startOffset":271,"endOffset":347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsConstructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1149,"count":1},{"startOffset":262,"endOffset":347,"count":0},{"startOffset":910,"endOffset":1148,"count":0}],"isBlockCoverage":true},{"functionName":"[[Get]]","ranges":[{"startOffset":241,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"[[Get]]","ranges":[{"startOffset":576,"endOffset":623,"count":0}],"isBlockCoverage":false},{"functionName":"IsConstructor","ranges":[{"startOffset":674,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"IsConstructor","ranges":[{"startOffset":936,"endOffset":1145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/GetIntrinsic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"497","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/DefinePropertyOrThrow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1466,"count":1}],"isBlockCoverage":true},{"functionName":"DefinePropertyOrThrow","ranges":[{"startOffset":700,"endOffset":1464,"count":2},{"startOffset":772,"endOffset":843,"count":0},{"startOffset":869,"endOffset":947,"count":0},{"startOffset":1098,"endOffset":1126,"count":0},{"startOffset":1265,"endOffset":1354,"count":0}],"isBlockCoverage":true}]},{"scriptId":"498","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/isPropertyDescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":721,"count":1}],"isBlockCoverage":true},{"functionName":"IsPropertyDescriptor","ranges":[{"startOffset":151,"endOffset":719,"count":4},{"startOffset":226,"endOffset":246,"count":0},{"startOffset":428,"endOffset":538,"count":6},{"startOffset":513,"endOffset":535,"count":0},{"startOffset":571,"endOffset":603,"count":0},{"startOffset":605,"endOffset":703,"count":0}],"isBlockCoverage":true}]},{"scriptId":"499","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/DefineOwnProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1},{"startOffset":388,"endOffset":420,"count":0}],"isBlockCoverage":true},{"functionName":"DefineOwnProperty","ranges":[{"startOffset":601,"endOffset":1589,"count":3},{"startOffset":718,"endOffset":1260,"count":0},{"startOffset":1295,"endOffset":1312,"count":0},{"startOffset":1315,"endOffset":1337,"count":0},{"startOffset":1340,"endOffset":1353,"count":0},{"startOffset":1356,"endOffset":1389,"count":0},{"startOffset":1393,"endOffset":1518,"count":0}],"isBlockCoverage":true}]},{"scriptId":"500","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/FromPropertyDescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"FromPropertyDescriptor","ranges":[{"startOffset":270,"endOffset":448,"count":3}],"isBlockCoverage":true}]},{"scriptId":"501","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/assertRecord.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1392,"count":1}],"isBlockCoverage":true},{"functionName":"isPropertyDescriptor","ranges":[{"startOffset":364,"endOffset":937,"count":7},{"startOffset":592,"endOffset":685,"count":13},{"startOffset":657,"endOffset":681,"count":0},{"startOffset":766,"endOffset":789,"count":1},{"startOffset":804,"endOffset":817,"count":1},{"startOffset":819,"endOffset":919,"count":0}],"isBlockCoverage":true},{"functionName":"assertRecord","ranges":[{"startOffset":1054,"endOffset":1390,"count":7},{"startOffset":1196,"endOffset":1264,"count":0},{"startOffset":1317,"endOffset":1388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"502","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/isMatchRecord.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"isMatchRecord","ranges":[{"startOffset":122,"endOffset":530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/fromPropertyDescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":580,"count":1}],"isBlockCoverage":true},{"functionName":"fromPropertyDescriptor","ranges":[{"startOffset":32,"endOffset":578,"count":3},{"startOffset":106,"endOffset":125,"count":0},{"startOffset":167,"endOffset":204,"count":1},{"startOffset":234,"endOffset":279,"count":1},{"startOffset":304,"endOffset":337,"count":2},{"startOffset":362,"endOffset":395,"count":0},{"startOffset":427,"endOffset":476,"count":2},{"startOffset":510,"endOffset":563,"count":1}],"isBlockCoverage":true}]},{"scriptId":"504","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsAccessorDescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":465,"count":1}],"isBlockCoverage":true},{"functionName":"IsAccessorDescriptor","ranges":[{"startOffset":220,"endOffset":463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsDataDescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"IsDataDescriptor","ranges":[{"startOffset":216,"endOffset":462,"count":4},{"startOffset":284,"endOffset":304,"count":0},{"startOffset":445,"endOffset":461,"count":0}],"isBlockCoverage":true}]},{"scriptId":"506","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/SameValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":307,"count":1}],"isBlockCoverage":true},{"functionName":"SameValue","ranges":[{"startOffset":127,"endOffset":305,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToPropertyDescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1452,"count":1}],"isBlockCoverage":true},{"functionName":"ToPropertyDescriptor","ranges":[{"startOffset":320,"endOffset":1450,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToBoolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true},{"functionName":"ToBoolean","ranges":[{"startOffset":83,"endOffset":128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsCallable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":108,"count":1}],"isBlockCoverage":true}]},{"scriptId":"510","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/FlattenIntoArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1752,"count":1}],"isBlockCoverage":true},{"functionName":"FlattenIntoArray","ranges":[{"startOffset":597,"endOffset":1750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/Call.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":623,"count":1},{"startOffset":244,"endOffset":286,"count":0}],"isBlockCoverage":true},{"functionName":"Call","ranges":[{"startOffset":364,"endOffset":621,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/CreateDataPropertyOrThrow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"CreateDataPropertyOrThrow","ranges":[{"startOffset":344,"endOffset":732,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/CreateDataProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1279,"count":1}],"isBlockCoverage":true},{"functionName":"CreateDataProperty","ranges":[{"startOffset":614,"endOffset":1277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/OrdinaryGetOwnProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1257,"count":1}],"isBlockCoverage":true},{"functionName":"OrdinaryGetOwnProperty","ranges":[{"startOffset":625,"endOffset":1255,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":262,"count":1},{"startOffset":176,"endOffset":234,"count":0}],"isBlockCoverage":true}]},{"scriptId":"516","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":545,"count":1}],"isBlockCoverage":true},{"functionName":"IsRegExp","ranges":[{"startOffset":278,"endOffset":543,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IsExtensible.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509,"count":1},{"startOffset":446,"endOffset":507,"count":0}],"isBlockCoverage":true},{"functionName":"IsExtensible","ranges":[{"startOffset":363,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"IsExtensible","ranges":[{"startOffset":448,"endOffset":507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/HasProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":517,"count":1}],"isBlockCoverage":true},{"functionName":"HasProperty","ranges":[{"startOffset":269,"endOffset":515,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/LengthOfArrayLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":495,"count":1}],"isBlockCoverage":true},{"functionName":"LengthOfArrayLike","ranges":[{"startOffset":289,"endOffset":465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":396,"count":1}],"isBlockCoverage":true},{"functionName":"ToString","ranges":[{"startOffset":227,"endOffset":394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flat/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":157,"count":1},{"startOffset":137,"endOffset":154,"count":0}],"isBlockCoverage":true}]},{"scriptId":"522","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flat/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":399,"count":1}],"isBlockCoverage":true},{"functionName":"shimFlat","ranges":[{"startOffset":172,"endOffset":397,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///home/runner/work/deluge/deluge/node_modules/es-shim-unscopables/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"shimUnscopables","ranges":[{"startOffset":248,"endOffset":544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-relative-packages.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9426,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":620,"endOffset":715,"count":6},{"startOffset":687,"endOffset":692,"count":5},{"startOffset":693,"endOffset":713,"count":1}],"isBlockCoverage":true},{"functionName":"toPosixPath","ranges":[{"startOffset":749,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"findNamedPackage","ranges":[{"startOffset":824,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"checkImportForRelativePackage","ranges":[{"startOffset":1059,"endOffset":2482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2704,"endOffset":2920,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2717,"endOffset":2905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-relative-parent-imports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6077,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":465,"endOffset":560,"count":4},{"startOffset":538,"endOffset":558,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":767,"endOffset":2083,"count":1}],"isBlockCoverage":true},{"functionName":"noRelativePackages","ranges":[{"startOffset":780,"endOffset":2056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-self-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4186,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":336,"endOffset":431,"count":3},{"startOffset":409,"endOffset":429,"count":0}],"isBlockCoverage":true},{"functionName":"isImportingSelf","ranges":[{"startOffset":433,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1157,"endOffset":1372,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1170,"endOffset":1357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-cycle.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19150,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":47,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":426,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":3153,"endOffset":3248,"count":4},{"startOffset":3226,"endOffset":3246,"count":0}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":3248,"endOffset":3434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4046,"endOffset":8714,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4059,"endOffset":8699,"count":0}],"isBlockCoverage":false},{"functionName":"routeString","ranges":[{"startOffset":8722,"endOffset":8857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-default.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3282,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":352,"endOffset":1028,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":365,"endOffset":1013,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":436,"endOffset":1001,"count":8}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":449,"endOffset":975,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":520,"endOffset":961,"count":28},{"startOffset":610,"endOffset":651,"count":0},{"startOffset":701,"endOffset":757,"count":18},{"startOffset":722,"endOffset":742,"count":0},{"startOffset":759,"endOffset":947,"count":0}],"isBlockCoverage":true}]},{"scriptId":"529","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-as-default.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4864,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":321,"endOffset":416,"count":3},{"startOffset":394,"endOffset":414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":574,"endOffset":1554,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":587,"endOffset":1539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-as-default-member.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12879,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":327,"endOffset":422,"count":3},{"startOffset":400,"endOffset":420,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":772,"endOffset":4431,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":785,"endOffset":4416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-anonymous-default-export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11942,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":2},{"startOffset":239,"endOffset":244,"count":1},{"startOffset":245,"endOffset":265,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1746,"endOffset":1826,"count":1}],"isBlockCoverage":true},{"functionName":"forbid","ranges":[{"startOffset":1759,"endOffset":1811,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2056,"endOffset":2136,"count":1}],"isBlockCoverage":true},{"functionName":"forbid","ranges":[{"startOffset":2069,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2807,"endOffset":2841,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2851,"endOffset":2969,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3015,"endOffset":3049,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3059,"endOffset":3180,"count":8},{"startOffset":3139,"endOffset":3155,"count":1},{"startOffset":3156,"endOffset":3163,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3460,"endOffset":4112,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3473,"endOffset":4097,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-unused-modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":108687,"count":1},{"startOffset":133,"endOffset":277,"count":0},{"startOffset":3207,"endOffset":4655,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":97,"endOffset":132,"count":0}],"isBlockCoverage":false},{"functionName":"_typeof","ranges":[{"startOffset":135,"endOffset":277,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1057,"endOffset":1152,"count":7},{"startOffset":1124,"endOffset":1129,"count":5},{"startOffset":1130,"endOffset":1150,"count":2}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":1152,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"listFilesToProcess","ranges":[{"startOffset":3950,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"listFilesToProcess","ranges":[{"startOffset":4257,"endOffset":4642,"count":0}],"isBlockCoverage":false},{"functionName":"listFilesToProcess","ranges":[{"startOffset":4702,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"forEachDeclarationIdentifier","ranges":[{"startOffset":5742,"endOffset":6545,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModule","ranges":[{"startOffset":8960,"endOffset":9035,"count":0}],"isBlockCoverage":false},{"functionName":"resolveFiles","ranges":[{"startOffset":9236,"endOffset":9966,"count":0}],"isBlockCoverage":false},{"functionName":"prepareImportsAndExports","ranges":[{"startOffset":10104,"endOffset":13154,"count":0}],"isBlockCoverage":false},{"functionName":"determineUsage","ranges":[{"startOffset":13308,"endOffset":14289,"count":0}],"isBlockCoverage":false},{"functionName":"getSrc","ranges":[{"startOffset":14305,"endOffset":14388,"count":0}],"isBlockCoverage":false},{"functionName":"doPreparation","ranges":[{"startOffset":14600,"endOffset":15172,"count":0}],"isBlockCoverage":false},{"functionName":"newNamespaceImportExists","ranges":[{"startOffset":15206,"endOffset":15370,"count":0}],"isBlockCoverage":false},{"functionName":"newDefaultImportExists","ranges":[{"startOffset":15402,"endOffset":15562,"count":0}],"isBlockCoverage":false},{"functionName":"fileIsInPkg","ranges":[{"startOffset":15583,"endOffset":16835,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18398,"endOffset":36189,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":18411,"endOffset":36174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/unsupported-api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":862,"count":1}],"isBlockCoverage":true}]},{"scriptId":"534","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rule-tester/flat-rule-tester.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41759,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4879,"endOffset":4896,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5163,"endOffset":5180,"count":4}],"isBlockCoverage":true},{"functionName":"cloneDeeplyExcludesParent","ranges":[{"startOffset":5416,"endOffset":5849,"count":0}],"isBlockCoverage":false},{"functionName":"freezeDeeply","ranges":[{"startOffset":5948,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"sanitize","ranges":[{"startOffset":6471,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"defineStartEndAsError","ranges":[{"startOffset":6954,"endOffset":7468,"count":0}],"isBlockCoverage":false},{"functionName":"defineStartEndAsErrorInTree","ranges":[{"startOffset":7745,"endOffset":8034,"count":0}],"isBlockCoverage":false},{"functionName":"wrapParser","ranges":[{"startOffset":8385,"endOffset":8960,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentsDeprecation","ranges":[{"startOffset":9088,"endOffset":9335,"count":0}],"isBlockCoverage":false},{"functionName":"itDefaultHandler","ranges":[{"startOffset":9946,"endOffset":10247,"count":0}],"isBlockCoverage":false},{"functionName":"describeDefaultHandler","ranges":[{"startOffset":10499,"endOffset":10578,"count":0}],"isBlockCoverage":false},{"functionName":"FlatRuleTester","ranges":[{"startOffset":10783,"endOffset":11229,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultConfig","ranges":[{"startOffset":11443,"endOffset":11809,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultConfig","ranges":[{"startOffset":11945,"endOffset":12007,"count":0}],"isBlockCoverage":false},{"functionName":"resetDefaultConfig","ranges":[{"startOffset":12177,"endOffset":12328,"count":0}],"isBlockCoverage":false},{"functionName":"get describe","ranges":[{"startOffset":12555,"endOffset":12716,"count":0}],"isBlockCoverage":false},{"functionName":"set describe","ranges":[{"startOffset":12729,"endOffset":12788,"count":0}],"isBlockCoverage":false},{"functionName":"get it","ranges":[{"startOffset":12801,"endOffset":12932,"count":0}],"isBlockCoverage":false},{"functionName":"set it","ranges":[{"startOffset":12945,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"only","ranges":[{"startOffset":13257,"endOffset":13413,"count":0}],"isBlockCoverage":false},{"functionName":"get itOnly","ranges":[{"startOffset":13426,"endOffset":14445,"count":0}],"isBlockCoverage":false},{"functionName":"set itOnly","ranges":[{"startOffset":14458,"endOffset":14514,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":14971,"endOffset":41641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-commonjs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14101,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":104,"endOffset":199,"count":1},{"startOffset":177,"endOffset":197,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeLegacyOptions","ranges":[{"startOffset":590,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"allowPrimitive","ranges":[{"startOffset":768,"endOffset":983,"count":0}],"isBlockCoverage":false},{"functionName":"allowRequire","ranges":[{"startOffset":985,"endOffset":1056,"count":0}],"isBlockCoverage":false},{"functionName":"allowConditionalRequire","ranges":[{"startOffset":1058,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"validateScope","ranges":[{"startOffset":1163,"endOffset":1244,"count":0}],"isBlockCoverage":false},{"functionName":"isConditional","ranges":[{"startOffset":1299,"endOffset":1570,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralString","ranges":[{"startOffset":1572,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2588,"endOffset":4203,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2601,"endOffset":4188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-amd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4390,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":104,"endOffset":199,"count":1},{"startOffset":177,"endOffset":197,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":529,"endOffset":1352,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":542,"endOffset":1337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"537","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-duplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45983,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":47,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":426,"endOffset":640,"count":24},{"startOffset":482,"endOffset":639,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":835,"endOffset":930,"count":2},{"startOffset":908,"endOffset":928,"count":0}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":930,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"_toArray","ranges":[{"startOffset":1116,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"checkImports","ranges":[{"startOffset":1193,"endOffset":2930,"count":28},{"startOffset":1508,"endOffset":2713,"count":24},{"startOffset":1641,"endOffset":2707,"count":0},{"startOffset":2715,"endOffset":2775,"count":0},{"startOffset":2821,"endOffset":2843,"count":0},{"startOffset":2845,"endOffset":2869,"count":0},{"startOffset":2903,"endOffset":2926,"count":0}],"isBlockCoverage":true},{"functionName":"getFix","ranges":[{"startOffset":2932,"endOffset":10443,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuator","ranges":[{"startOffset":10445,"endOffset":10544,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultImportName","ranges":[{"startOffset":10603,"endOffset":10845,"count":0}],"isBlockCoverage":false},{"functionName":"hasNamespace","ranges":[{"startOffset":10896,"endOffset":11083,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10971,"endOffset":11047,"count":28}],"isBlockCoverage":true},{"functionName":"hasSpecifiers","ranges":[{"startOffset":11142,"endOffset":11321,"count":0}],"isBlockCoverage":false},{"functionName":"hasProblematicComments","ranges":[{"startOffset":11468,"endOffset":11670,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommentBefore","ranges":[{"startOffset":11787,"endOffset":11965,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommentAfter","ranges":[{"startOffset":12058,"endOffset":12231,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommentInsideNonSpecifiers","ranges":[{"startOffset":12329,"endOffset":13101,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13424,"endOffset":16101,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":13437,"endOffset":16086,"count":8},{"startOffset":13565,"endOffset":13615,"count":0},{"startOffset":13840,"endOffset":14067,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13645,"endOffset":13789,"count":8}],"isBlockCoverage":true},{"functionName":"defaultResolver","ranges":[{"startOffset":13658,"endOffset":13765,"count":24},{"startOffset":13750,"endOffset":13763,"count":4}],"isBlockCoverage":true},{"functionName":"resolver","ranges":[{"startOffset":13842,"endOffset":14067,"count":0}],"isBlockCoverage":false},{"functionName":"getImportMap","ranges":[{"startOffset":14129,"endOffset":14716,"count":24},{"startOffset":14195,"endOffset":14403,"count":7},{"startOffset":14485,"endOffset":14643,"count":0},{"startOffset":14676,"endOffset":14692,"count":1},{"startOffset":14693,"endOffset":14707,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14760,"endOffset":15185,"count":8}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":14773,"endOffset":15159,"count":24},{"startOffset":15012,"endOffset":15078,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15214,"endOffset":16074,"count":8}],"isBlockCoverage":true},{"functionName":"ProgramExit","ranges":[{"startOffset":15227,"endOffset":16054,"count":8},{"startOffset":15544,"endOffset":15820,"count":7},{"startOffset":15822,"endOffset":15884,"count":0},{"startOffset":15931,"endOffset":15954,"count":0},{"startOffset":15956,"endOffset":15981,"count":0},{"startOffset":16016,"endOffset":16040,"count":0}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/first.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19701,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true},{"functionName":"getImportValue","ranges":[{"startOffset":196,"endOffset":337,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":596,"endOffset":6475,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":609,"endOffset":6460,"count":8}],"isBlockCoverage":true},{"functionName":"isPossibleDirective","ranges":[{"startOffset":642,"endOffset":837,"count":8},{"startOffset":730,"endOffset":775,"count":0},{"startOffset":776,"endOffset":828,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":873,"endOffset":6448,"count":8}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":886,"endOffset":6432,"count":8},{"startOffset":962,"endOffset":999,"count":0},{"startOffset":4247,"endOffset":6431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1538,"endOffset":4201,"count":53},{"startOffset":1597,"endOffset":1625,"count":8},{"startOffset":1627,"endOffset":1668,"count":0},{"startOffset":1760,"endOffset":1804,"count":29},{"startOffset":1806,"endOffset":4130,"count":24},{"startOffset":1843,"endOffset":2253,"count":0},{"startOffset":2294,"endOffset":4050,"count":0},{"startOffset":4130,"endOffset":4187,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4279,"endOffset":6418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/max-dependencies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6017,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":227,"endOffset":322,"count":2},{"startOffset":300,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"countDependencies","ranges":[{"startOffset":438,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1050,"endOffset":1919,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1063,"endOffset":1904,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-extraneous-dependencies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33602,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":47,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":426,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1458,"endOffset":1553,"count":8},{"startOffset":1525,"endOffset":1530,"count":5},{"startOffset":1531,"endOffset":1551,"count":3}],"isBlockCoverage":true},{"functionName":"hasKeys","ranges":[{"startOffset":1587,"endOffset":1728,"count":0}],"isBlockCoverage":false},{"functionName":"arrayOrKeys","ranges":[{"startOffset":1730,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"extractDepFields","ranges":[{"startOffset":1855,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"getDependencies","ranges":[{"startOffset":2355,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"missingErrorMessage","ranges":[{"startOffset":4505,"endOffset":4708,"count":0}],"isBlockCoverage":false},{"functionName":"devDepErrorMessage","ranges":[{"startOffset":4710,"endOffset":4868,"count":0}],"isBlockCoverage":false},{"functionName":"optDepErrorMessage","ranges":[{"startOffset":4870,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleOriginalName","ranges":[{"startOffset":5041,"endOffset":5291,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleRealName","ranges":[{"startOffset":5293,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"checkDependencyDeclaration","ranges":[{"startOffset":5392,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"reportIfMissing","ranges":[{"startOffset":6638,"endOffset":8592,"count":0}],"isBlockCoverage":false},{"functionName":"testConfig","ranges":[{"startOffset":8594,"endOffset":8999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9569,"endOffset":10404,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":9582,"endOffset":10389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-absolute-path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3042,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":276,"endOffset":371,"count":2},{"startOffset":349,"endOffset":369,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":568,"endOffset":992,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":581,"endOffset":977,"count":8}],"isBlockCoverage":true},{"functionName":"reportIfAbsolute","ranges":[{"startOffset":614,"endOffset":806,"count":28},{"startOffset":705,"endOffset":798,"count":0}],"isBlockCoverage":true}]},{"scriptId":"542","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-nodejs-modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4484,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":331,"endOffset":426,"count":3},{"startOffset":404,"endOffset":424,"count":0}],"isBlockCoverage":true},{"functionName":"reportIfMissing","ranges":[{"startOffset":428,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1042,"endOffset":1354,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1055,"endOffset":1339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-webpack-loader-syntax.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2983,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":227,"endOffset":322,"count":2},{"startOffset":300,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"reportIfNonStandard","ranges":[{"startOffset":324,"endOffset":563,"count":28},{"startOffset":416,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":726,"endOffset":945,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":739,"endOffset":930,"count":8}],"isBlockCoverage":true},{"functionName":"commonjs","ranges":[{"startOffset":811,"endOffset":902,"count":28}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/order.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83257,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":47,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":426,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1045,"endOffset":1140,"count":4},{"startOffset":1112,"endOffset":1117,"count":3},{"startOffset":1118,"endOffset":1138,"count":1}],"isBlockCoverage":true},{"functionName":"reverse","ranges":[{"startOffset":1243,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"getTokensOrCommentsAfter","ranges":[{"startOffset":1374,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"getTokensOrCommentsBefore","ranges":[{"startOffset":1721,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"takeTokensAfterWhile","ranges":[{"startOffset":2080,"endOffset":2384,"count":0}],"isBlockCoverage":false},{"functionName":"takeTokensBeforeWhile","ranges":[{"startOffset":2386,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"findOutOfOrder","ranges":[{"startOffset":2709,"endOffset":3066,"count":0}],"isBlockCoverage":false},{"functionName":"findRootNode","ranges":[{"startOffset":3068,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"findEndOfLineWithComments","ranges":[{"startOffset":3235,"endOffset":3844,"count":0}],"isBlockCoverage":false},{"functionName":"commentOnSameLineAs","ranges":[{"startOffset":3846,"endOffset":4070,"count":0}],"isBlockCoverage":false},{"functionName":"findStartOfLineWithComments","ranges":[{"startOffset":4072,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainRequireModule","ranges":[{"startOffset":4529,"endOffset":5100,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainImportModule","ranges":[{"startOffset":5102,"endOffset":5241,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainImportEquals","ranges":[{"startOffset":5243,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"canCrossNodeWhileReorder","ranges":[{"startOffset":5370,"endOffset":5508,"count":0}],"isBlockCoverage":false},{"functionName":"canReorderItems","ranges":[{"startOffset":5510,"endOffset":6455,"count":0}],"isBlockCoverage":false},{"functionName":"fixOutOfOrder","ranges":[{"startOffset":6457,"endOffset":7965,"count":0}],"isBlockCoverage":false},{"functionName":"reportOutOfOrder","ranges":[{"startOffset":7967,"endOffset":8286,"count":0}],"isBlockCoverage":false},{"functionName":"makeOutOfOrderReport","ranges":[{"startOffset":8288,"endOffset":8809,"count":0}],"isBlockCoverage":false},{"functionName":"getSorter","ranges":[{"startOffset":8811,"endOffset":9196,"count":0}],"isBlockCoverage":false},{"functionName":"mutateRanksToAlphabetize","ranges":[{"startOffset":9198,"endOffset":10582,"count":0}],"isBlockCoverage":false},{"functionName":"computePathRank","ranges":[{"startOffset":10598,"endOffset":11140,"count":0}],"isBlockCoverage":false},{"functionName":"computeRank","ranges":[{"startOffset":11142,"endOffset":11879,"count":0}],"isBlockCoverage":false},{"functionName":"registerNode","ranges":[{"startOffset":11881,"endOffset":12134,"count":0}],"isBlockCoverage":false},{"functionName":"getRequireBlock","ranges":[{"startOffset":12136,"endOffset":12643,"count":0}],"isBlockCoverage":false},{"functionName":"convertGroupsToRanks","ranges":[{"startOffset":12968,"endOffset":13850,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathGroupsForRanks","ranges":[{"startOffset":13852,"endOffset":15052,"count":0}],"isBlockCoverage":false},{"functionName":"fixNewLineAfterImport","ranges":[{"startOffset":15054,"endOffset":15538,"count":0}],"isBlockCoverage":false},{"functionName":"removeNewLineAfterImport","ranges":[{"startOffset":15540,"endOffset":16075,"count":0}],"isBlockCoverage":false},{"functionName":"makeNewlinesBetweenReport","ranges":[{"startOffset":16077,"endOffset":17787,"count":0}],"isBlockCoverage":false},{"functionName":"getAlphabetizeConfig","ranges":[{"startOffset":17789,"endOffset":18047,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19483,"endOffset":23687,"count":1}],"isBlockCoverage":true},{"functionName":"importOrderRule","ranges":[{"startOffset":19496,"endOffset":23663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/core/staticRequire.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1623,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticRequire","ranges":[{"startOffset":148,"endOffset":410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/newline-after-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21298,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":297,"endOffset":392,"count":3},{"startOffset":364,"endOffset":369,"count":2},{"startOffset":370,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"containsNodeOrEqual","ranges":[{"startOffset":779,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeBody","ranges":[{"startOffset":926,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeIndexInScopeBody","ranges":[{"startOffset":1199,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"getLineDifference","ranges":[{"startOffset":1346,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"isClassWithDecorator","ranges":[{"startOffset":1448,"endOffset":1575,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultClass","ranges":[{"startOffset":1577,"endOffset":1715,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNameClass","ranges":[{"startOffset":1717,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2225,"endOffset":6296,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2238,"endOffset":6281,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/prefer-default-export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9777,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":101,"endOffset":196,"count":1},{"startOffset":174,"endOffset":194,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":359,"endOffset":3327,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":372,"endOffset":3312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-default-export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5851,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":353,"endOffset":1877,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":366,"endOffset":1862,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4060,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":344,"endOffset":1302,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":357,"endOffset":1287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-dynamic-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6990,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true},{"functionName":"isRequire","ranges":[{"startOffset":196,"endOffset":363,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicImport","ranges":[{"startOffset":365,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticValue","ranges":[{"startOffset":468,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":980,"endOffset":2044,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":993,"endOffset":2029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/unambiguous.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3524,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":167,"endOffset":262,"count":1},{"startOffset":240,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1060,"endOffset":1542,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1073,"endOffset":1527,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-unassigned-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8625,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":380,"endOffset":475,"count":4},{"startOffset":447,"endOffset":452,"count":2},{"startOffset":453,"endOffset":473,"count":2}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":477,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"testIsAllow","ranges":[{"startOffset":603,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1199,"endOffset":2050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-useless-path-segments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20129,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":461,"endOffset":556,"count":4},{"startOffset":528,"endOffset":533,"count":3},{"startOffset":534,"endOffset":554,"count":1}],"isBlockCoverage":true},{"functionName":"toRelativePath","ranges":[{"startOffset":3099,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3406,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"countRelativeParents","ranges":[{"startOffset":3495,"endOffset":3651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4013,"endOffset":8183,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4026,"endOffset":8168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/dynamic-import-chunkname.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12915,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":163,"endOffset":258,"count":2},{"startOffset":230,"endOffset":235,"count":1},{"startOffset":236,"endOffset":256,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":669,"endOffset":4525,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":682,"endOffset":4510,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-import-module-exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10714,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":272,"endOffset":367,"count":3},{"startOffset":339,"endOffset":344,"count":1},{"startOffset":345,"endOffset":365,"count":2}],"isBlockCoverage":true},{"functionName":"getEntryPoint","ranges":[{"startOffset":369,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"findScope","ranges":[{"startOffset":768,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1526,"endOffset":3212,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1539,"endOffset":3197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/exports-last.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4574,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true},{"functionName":"isNonExportStatement","ranges":[{"startOffset":196,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":532,"endOffset":1468,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":545,"endOffset":1453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-deprecated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15894,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":322,"endOffset":417,"count":3},{"startOffset":395,"endOffset":415,"count":0}],"isBlockCoverage":true},{"functionName":"message","ranges":[{"startOffset":419,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"getDeprecation","ranges":[{"startOffset":544,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":861,"endOffset":4892,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":874,"endOffset":4877,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/imports-first.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":172,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"559","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/recommended.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":624,"count":1}],"isBlockCoverage":true}]},{"scriptId":"560","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true}]},{"scriptId":"561","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/warnings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true}]},{"scriptId":"562","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/stage-0.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":203,"count":1}],"isBlockCoverage":true}]},{"scriptId":"563","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/react.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":415,"count":1}],"isBlockCoverage":true}]},{"scriptId":"564","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/react-native.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true}]},{"scriptId":"565","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/electron.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":137,"count":1}],"isBlockCoverage":true}]},{"scriptId":"566","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/config/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":825,"count":1}],"isBlockCoverage":true}]},{"scriptId":"567","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3252,"count":1}],"isBlockCoverage":true},{"functionName":"get recommended","ranges":[{"startOffset":277,"endOffset":360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/configs/recommended-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":584,"count":1}],"isBlockCoverage":true}]},{"scriptId":"569","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/configs/_commons.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2257,"count":1}],"isBlockCoverage":true}]},{"scriptId":"570","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/configs/recommended-script.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true}]},{"scriptId":"571","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/callback-return.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6540,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":719,"endOffset":6536,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/exports-style.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11684,"count":1}],"isBlockCoverage":true},{"functionName":"getStaticPropertyName","ranges":[{"startOffset":407,"endOffset":1181,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignee","ranges":[{"startOffset":1347,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"getTopAssignment","ranges":[{"startOffset":1817,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"createAssignmentList","ranges":[{"startOffset":2435,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleExportsNodes","ranges":[{"startOffset":2717,"endOffset":3098,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsNodes","ranges":[{"startOffset":3272,"endOffset":3475,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementForProperty","ranges":[{"startOffset":3477,"endOffset":5188,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsObjectAssignment","ranges":[{"startOffset":5240,"endOffset":5535,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsReference","ranges":[{"startOffset":5615,"endOffset":5756,"count":0}],"isBlockCoverage":false},{"functionName":"fixModuleExports","ranges":[{"startOffset":5758,"endOffset":6435,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":7502,"endOffset":11680,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/file-extension-in-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4650,"count":1}],"isBlockCoverage":true},{"functionName":"getExistingExtensions","ranges":[{"startOffset":872,"endOffset":1306,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2179,"endOffset":4646,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/map-typescript-extension.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1437,"count":1}],"isBlockCoverage":true},{"functionName":"mapTypescriptExtension","ranges":[{"startOffset":1013,"endOffset":1436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/is-typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":408,"count":1}],"isBlockCoverage":true},{"functionName":"isTypescript","ranges":[{"startOffset":247,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/visit-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2254,"count":1}],"isBlockCoverage":true},{"functionName":"visitImport","ranges":[{"startOffset":978,"endOffset":2253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-resolve-paths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1220,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":344,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePaths","ranges":[{"startOffset":854,"endOffset":1117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-try-extensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1311,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":369,"endOffset":544,"count":0}],"isBlockCoverage":false},{"functionName":"getTryExtensions","ranges":[{"startOffset":906,"endOffset":1170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/import-target.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4010,"count":1}],"isBlockCoverage":true},{"functionName":"getFilePath","ranges":[{"startOffset":717,"endOffset":2266,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":2463,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"ImportTarget","ranges":[{"startOffset":3148,"endOffset":4007,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174,"count":1}],"isBlockCoverage":true}]},{"scriptId":"581","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11387,"count":1},{"startOffset":403,"endOffset":416,"count":0}],"isBlockCoverage":true},{"functionName":"defaultPaths","ranges":[{"startOffset":466,"endOffset":592,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":615,"endOffset":893,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":915,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":1209,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"maybeRealpath","ranges":[{"startOffset":1447,"endOffset":1612,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReadPackage","ranges":[{"startOffset":1640,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageCandidates","ranges":[{"startOffset":2017,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2243,"endOffset":11385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/homedir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":805,"count":1},{"startOffset":183,"endOffset":803,"count":0}],"isBlockCoverage":true},{"functionName":"homedir","ranges":[{"startOffset":186,"endOffset":803,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/caller.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/node-modules-paths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1294,"count":1},{"startOffset":51,"endOffset":75,"count":0}],"isBlockCoverage":true},{"functionName":"getNodeModulesDirs","ranges":[{"startOffset":141,"endOffset":762,"count":14},{"startOffset":263,"endOffset":291,"count":0},{"startOffset":332,"endOffset":364,"count":0},{"startOffset":489,"endOffset":564,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590,"endOffset":754,"count":98}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":654,"endOffset":745,"count":98}],"isBlockCoverage":true},{"functionName":"nodeModulesPaths","ranges":[{"startOffset":782,"endOffset":1292,"count":14},{"startOffset":887,"endOffset":920,"count":0},{"startOffset":1000,"endOffset":1174,"count":0},{"startOffset":1283,"endOffset":1289,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1081,"endOffset":1139,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/normalize-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":348,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":346,"count":26},{"startOffset":338,"endOffset":343,"count":0}],"isBlockCoverage":true}]},{"scriptId":"586","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1653,"count":1},{"startOffset":94,"endOffset":99,"count":0},{"startOffset":1469,"endOffset":1629,"count":151}],"isBlockCoverage":true},{"functionName":"specifierIncluded","ranges":[{"startOffset":102,"endOffset":742,"count":269},{"startOffset":221,"endOffset":226,"count":0},{"startOffset":280,"endOffset":290,"count":0},{"startOffset":337,"endOffset":716,"count":336},{"startOffset":377,"endOffset":381,"count":0},{"startOffset":431,"endOffset":435,"count":63},{"startOffset":467,"endOffset":557,"count":67},{"startOffset":557,"endOffset":582,"count":269},{"startOffset":582,"endOffset":623,"count":83},{"startOffset":623,"endOffset":688,"count":186},{"startOffset":688,"endOffset":716,"count":0},{"startOffset":716,"endOffset":741,"count":0}],"isBlockCoverage":true},{"functionName":"matchesRange","ranges":[{"startOffset":744,"endOffset":1009,"count":189},{"startOffset":852,"endOffset":869,"count":0},{"startOffset":918,"endOffset":990,"count":269},{"startOffset":967,"endOffset":984,"count":86},{"startOffset":990,"endOffset":1008,"count":103}],"isBlockCoverage":true},{"functionName":"versionIncluded","ranges":[{"startOffset":1011,"endOffset":1394,"count":151},{"startOffset":1099,"endOffset":1125,"count":27},{"startOffset":1125,"endOffset":1186,"count":124},{"startOffset":1188,"endOffset":1351,"count":65},{"startOffset":1246,"endOffset":1323,"count":130},{"startOffset":1297,"endOffset":1313,"count":59},{"startOffset":1323,"endOffset":1351,"count":6},{"startOffset":1351,"endOffset":1393,"count":59}],"isBlockCoverage":true}]},{"scriptId":"587","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/is-core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116,"count":1}],"isBlockCoverage":true},{"functionName":"isCore","ranges":[{"startOffset":64,"endOffset":114,"count":22}],"isBlockCoverage":true}]},{"scriptId":"588","url":"file:///home/runner/work/deluge/deluge/node_modules/resolve/lib/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7021,"count":1},{"startOffset":415,"endOffset":432,"count":0}],"isBlockCoverage":true},{"functionName":"defaultPaths","ranges":[{"startOffset":482,"endOffset":608,"count":26}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":631,"endOffset":905,"count":162},{"startOffset":736,"endOffset":848,"count":0},{"startOffset":867,"endOffset":902,"count":72},{"startOffset":885,"endOffset":901,"count":11}],"isBlockCoverage":true},{"functionName":"isDirectory","ranges":[{"startOffset":927,"endOffset":1190,"count":49},{"startOffset":1035,"endOffset":1147,"count":0},{"startOffset":1166,"endOffset":1187,"count":13}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":1219,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"maybeRealpathSync","ranges":[{"startOffset":1448,"endOffset":1604,"count":112},{"startOffset":1549,"endOffset":1588,"count":0}],"isBlockCoverage":true},{"functionName":"defaultReadPackageSync","ranges":[{"startOffset":1636,"endOffset":1823,"count":38},{"startOffset":1803,"endOffset":1821,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageCandidates","ranges":[{"startOffset":1853,"endOffset":2059,"count":14},{"startOffset":1992,"endOffset":2040,"count":126}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":2079,"endOffset":7019,"count":26},{"startOffset":2145,"endOffset":2207,"count":0},{"startOffset":2583,"endOffset":2606,"count":0},{"startOffset":2608,"endOffset":2708,"count":0},{"startOffset":2795,"endOffset":2805,"count":0},{"startOffset":2902,"endOffset":2927,"count":0},{"startOffset":3290,"endOffset":3548,"count":12},{"startOffset":3402,"endOffset":3413,"count":0},{"startOffset":3450,"endOffset":3477,"count":0},{"startOffset":3548,"endOffset":3748,"count":14},{"startOffset":3591,"endOffset":3616,"count":0},{"startOffset":3694,"endOffset":3742,"count":11},{"startOffset":3748,"endOffset":7018,"count":3}],"isBlockCoverage":true},{"functionName":"loadAsFileSync","ranges":[{"startOffset":3886,"endOffset":4504,"count":38},{"startOffset":3976,"endOffset":3986,"count":28},{"startOffset":3987,"endOffset":3997,"count":28},{"startOffset":3998,"endOffset":4016,"count":28},{"startOffset":4018,"endOffset":4258,"count":0},{"startOffset":4283,"endOffset":4316,"count":22},{"startOffset":4316,"endOffset":4370,"count":16},{"startOffset":4370,"endOffset":4498,"count":61},{"startOffset":4444,"endOffset":4488,"count":1}],"isBlockCoverage":true},{"functionName":"loadpkg","ranges":[{"startOffset":4510,"endOffset":5219,"count":60},{"startOffset":4573,"endOffset":4580,"count":0},{"startOffset":4622,"endOffset":4650,"count":0},{"startOffset":4652,"endOffset":4683,"count":0},{"startOffset":4736,"endOffset":4743,"count":10},{"startOffset":4743,"endOffset":4869,"count":50},{"startOffset":4869,"endOffset":4927,"count":22},{"startOffset":4927,"endOffset":5025,"count":28},{"startOffset":5027,"endOffset":5218,"count":28}],"isBlockCoverage":true},{"functionName":"loadAsDirectorySync","ranges":[{"startOffset":5225,"endOffset":6481,"count":13},{"startOffset":5380,"endOffset":6419,"count":10},{"startOffset":5480,"endOffset":5492,"count":0},{"startOffset":5780,"endOffset":6002,"count":0},{"startOffset":6062,"endOffset":6121,"count":0},{"startOffset":6251,"endOffset":6364,"count":0},{"startOffset":6383,"endOffset":6395,"count":0},{"startOffset":6419,"endOffset":6480,"count":3}],"isBlockCoverage":true},{"functionName":"loadNodeModulesSync","ranges":[{"startOffset":6487,"endOffset":7017,"count":14},{"startOffset":6645,"endOffset":6685,"count":0},{"startOffset":6744,"endOffset":7011,"count":49},{"startOffset":6825,"endOffset":7001,"count":13},{"startOffset":6895,"endOffset":6904,"count":0},{"startOffset":6978,"endOffset":6987,"count":11}],"isBlockCoverage":true},{"functionName":"thunk","ranges":[{"startOffset":6548,"endOffset":6608,"count":14}],"isBlockCoverage":true}]},{"scriptId":"589","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/converted-esm/import-meta-resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31873,"count":1},{"startOffset":1499,"endOffset":1502,"count":0},{"startOffset":31794,"endOffset":31871,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":7}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":480,"count":1},{"startOffset":416,"endOffset":478,"count":3}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":499,"endOffset":907,"count":7},{"startOffset":586,"endOffset":618,"count":2},{"startOffset":676,"endOffset":884,"count":177},{"startOffset":728,"endOffset":748,"count":174}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":789,"endOffset":807,"count":2}],"isBlockCoverage":true},{"functionName":"__toESM","ranges":[{"startOffset":923,"endOffset":1211,"count":6},{"startOffset":1045,"endOffset":1049,"count":0},{"startOffset":1074,"endOffset":1084,"count":0},{"startOffset":1085,"endOffset":1106,"count":0},{"startOffset":1107,"endOffset":1157,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1116,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1249,"endOffset":1434,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1271,"endOffset":1431,"count":1}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":1629,"endOffset":1649,"count":2}],"isBlockCoverage":true},{"functionName":"getPackageType","ranges":[{"startOffset":1669,"endOffset":1689,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":1708,"endOffset":1727,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2120,"endOffset":2201,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":2202,"endOffset":2624,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3182,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3634,"endOffset":4342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4417,"endOffset":4520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4615,"endOffset":4803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4900,"endOffset":5202,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5571,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5977,"endOffset":6270,"count":0}],"isBlockCoverage":false},{"functionName":"createError","ranges":[{"startOffset":6280,"endOffset":6391,"count":10}],"isBlockCoverage":true},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":6392,"endOffset":7207,"count":10}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6458,"endOffset":7205,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7244,"endOffset":7580,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":7583,"endOffset":7845,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":7846,"endOffset":7994,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8041,"endOffset":8404,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":8407,"endOffset":9131,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":9340,"endOffset":10191,"count":0}],"isBlockCoverage":false},{"functionName":"emitFolderMapDeprecation","ranges":[{"startOffset":10967,"endOffset":11572,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":11573,"endOffset":12601,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":12602,"endOffset":12910,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":12911,"endOffset":13045,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":13046,"endOffset":14261,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":14262,"endOffset":15226,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":15227,"endOffset":15323,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":15324,"endOffset":16648,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":16649,"endOffset":17376,"count":0}],"isBlockCoverage":false},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":17377,"endOffset":17629,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":17630,"endOffset":17866,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":17867,"endOffset":18206,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":18207,"endOffset":18588,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":18589,"endOffset":20099,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":20100,"endOffset":20262,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":20263,"endOffset":22347,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":22348,"endOffset":23266,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":23267,"endOffset":24972,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":24973,"endOffset":26867,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":26868,"endOffset":26981,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":26982,"endOffset":27925,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":27926,"endOffset":29626,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":29627,"endOffset":29904,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":29905,"endOffset":30096,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":30097,"endOffset":30598,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":30599,"endOffset":31681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":869,"endOffset":1447,"count":1},{"startOffset":1049,"endOffset":1155,"count":10},{"startOffset":1118,"endOffset":1151,"count":8},{"startOffset":1177,"endOffset":1426,"count":0}],"isBlockCoverage":true}]},{"scriptId":"591","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2574,"count":1}],"isBlockCoverage":true}]},{"scriptId":"592","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6672,"count":1}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":276,"endOffset":453,"count":40},{"startOffset":433,"endOffset":438,"count":4},{"startOffset":439,"endOffset":450,"count":36}],"isBlockCoverage":true}]},{"scriptId":"593","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":467,"count":1},{"startOffset":233,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"594","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":240}],"isBlockCoverage":true}]},{"scriptId":"595","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8008,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":303,"endOffset":2193,"count":40},{"startOffset":408,"endOffset":613,"count":20},{"startOffset":558,"endOffset":607,"count":0},{"startOffset":613,"endOffset":716,"count":20},{"startOffset":652,"endOffset":716,"count":0},{"startOffset":716,"endOffset":755,"count":20},{"startOffset":755,"endOffset":855,"count":0},{"startOffset":855,"endOffset":1194,"count":20},{"startOffset":1194,"endOffset":1207,"count":0},{"startOffset":1208,"endOffset":1220,"count":20},{"startOffset":1235,"endOffset":1299,"count":0},{"startOffset":1299,"endOffset":1484,"count":20},{"startOffset":1486,"endOffset":1544,"count":0},{"startOffset":1544,"endOffset":1601,"count":20},{"startOffset":1603,"endOffset":1661,"count":0},{"startOffset":1661,"endOffset":1718,"count":20},{"startOffset":1720,"endOffset":1778,"count":0},{"startOffset":1778,"endOffset":1873,"count":20},{"startOffset":1873,"endOffset":2125,"count":0},{"startOffset":2125,"endOffset":2149,"count":20},{"startOffset":2149,"endOffset":2166,"count":0},{"startOffset":2167,"endOffset":2171,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1925,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2197,"endOffset":2393,"count":20},{"startOffset":2304,"endOffset":2365,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2397,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2442,"endOffset":2832,"count":10},{"startOffset":2559,"endOffset":2702,"count":0},{"startOffset":2744,"endOffset":2766,"count":0},{"startOffset":2803,"endOffset":2828,"count":0}],"isBlockCoverage":true},{"functionName":"compareMain","ranges":[{"startOffset":2836,"endOffset":3127,"count":10},{"startOffset":2894,"endOffset":2947,"count":0},{"startOffset":3012,"endOffset":3064,"count":0},{"startOffset":3065,"endOffset":3117,"count":0}],"isBlockCoverage":true},{"functionName":"comparePre","ranges":[{"startOffset":3131,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":3986,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4681,"endOffset":7980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":383,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":186,"endOffset":352,"count":60},{"startOffset":208,"endOffset":212,"count":20},{"startOffset":215,"endOffset":352,"count":40},{"startOffset":245,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279,"endOffset":294,"count":120}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":303,"endOffset":347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":10},{"startOffset":195,"endOffset":198,"count":0},{"startOffset":221,"endOffset":225,"count":0},{"startOffset":248,"endOffset":251,"count":0},{"startOffset":264,"endOffset":268,"count":1},{"startOffset":273,"endOffset":276,"count":9}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":217,"endOffset":637,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":74,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":10}],"isBlockCoverage":true}]},{"scriptId":"605","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"606","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"616","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":9}],"isBlockCoverage":true}]},{"scriptId":"618","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":925,"count":10},{"startOffset":224,"endOffset":386,"count":0},{"startOffset":392,"endOffset":554,"count":0},{"startOffset":560,"endOffset":568,"count":0},{"startOffset":573,"endOffset":582,"count":0},{"startOffset":587,"endOffset":626,"count":0},{"startOffset":632,"endOffset":672,"count":0},{"startOffset":678,"endOffset":716,"count":0},{"startOffset":722,"endOffset":762,"count":9},{"startOffset":768,"endOffset":806,"count":1},{"startOffset":812,"endOffset":852,"count":0},{"startOffset":858,"endOffset":919,"count":0}],"isBlockCoverage":true}]},{"scriptId":"620","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1505,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":137,"endOffset":1480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3610,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":135,"endOffset":636,"count":10},{"startOffset":238,"endOffset":358,"count":0},{"startOffset":510,"endOffset":539,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":640,"endOffset":1136,"count":10},{"startOffset":688,"endOffset":711,"count":0},{"startOffset":772,"endOffset":836,"count":0},{"startOffset":884,"endOffset":888,"count":0},{"startOffset":920,"endOffset":952,"count":0},{"startOffset":1031,"endOffset":1062,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1140,"endOffset":1179,"count":10}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":1183,"endOffset":1563,"count":10},{"startOffset":1307,"endOffset":1332,"count":0},{"startOffset":1371,"endOffset":1492,"count":0}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":1567,"endOffset":3324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14139,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":1814,"count":10},{"startOffset":155,"endOffset":379,"count":0},{"startOffset":418,"endOffset":562,"count":0},{"startOffset":1146,"endOffset":1213,"count":0},{"startOffset":1314,"endOffset":1791,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":849,"endOffset":879,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1104,"endOffset":1117,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1440,"endOffset":1461,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1818,"endOffset":1984,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1867,"endOffset":1925,"count":10}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1988,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2031,"endOffset":4281,"count":10},{"startOffset":2346,"endOffset":2373,"count":0},{"startOffset":2477,"endOffset":2501,"count":0},{"startOffset":3377,"endOffset":3616,"count":0},{"startOffset":4030,"endOffset":4061,"count":0},{"startOffset":4131,"endOffset":4150,"count":0},{"startOffset":4152,"endOffset":4185,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3191,"endOffset":3234,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3320,"endOffset":3359,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3483,"endOffset":3609,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3921,"endOffset":3963,"count":10}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":4285,"endOffset":4915,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":4983,"endOffset":5365,"count":10},{"startOffset":5018,"endOffset":5044,"count":0},{"startOffset":5157,"endOffset":5198,"count":0},{"startOffset":5309,"endOffset":5338,"count":8},{"startOffset":5344,"endOffset":5364,"count":2}],"isBlockCoverage":true},{"functionName":"isNullSet","ranges":[{"startOffset":5775,"endOffset":5802,"count":10}],"isBlockCoverage":true},{"functionName":"isAny","ranges":[{"startOffset":5817,"endOffset":5836,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":5958,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":6534,"endOffset":6847,"count":10}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":6861,"endOffset":6912,"count":30}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":7248,"endOffset":7357,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7298,"endOffset":7346,"count":10}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":7380,"endOffset":8054,"count":10},{"startOffset":7427,"endOffset":7445,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7485,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":8347,"endOffset":8456,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8397,"endOffset":8445,"count":10}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":8479,"endOffset":9781,"count":10},{"startOffset":8558,"endOffset":8576,"count":0},{"startOffset":8629,"endOffset":8635,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8666,"endOffset":9778,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":9806,"endOffset":9961,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9899,"endOffset":9948,"count":10}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":9985,"endOffset":11685,"count":10},{"startOffset":10053,"endOffset":10072,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10113,"endOffset":11682,"count":10},{"startOffset":10313,"endOffset":10320,"count":0},{"startOffset":10322,"endOffset":10345,"count":0},{"startOffset":10510,"endOffset":10516,"count":0},{"startOffset":10535,"endOffset":10712,"count":0},{"startOffset":10736,"endOffset":11480,"count":0},{"startOffset":11494,"endOffset":11548,"count":0},{"startOffset":11562,"endOffset":11629,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":11831,"endOffset":12006,"count":10}],"isBlockCoverage":true},{"functionName":"replaceGTE0","ranges":[{"startOffset":12028,"endOffset":12178,"count":10},{"startOffset":12150,"endOffset":12161,"count":0}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":12420,"endOffset":13096,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12429,"endOffset":13096,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":13114,"endOffset":14138,"count":10},{"startOffset":13215,"endOffset":13241,"count":2},{"startOffset":13245,"endOffset":13279,"count":8},{"startOffset":13279,"endOffset":13308,"count":0},{"startOffset":13310,"endOffset":14121,"count":0},{"startOffset":14121,"endOffset":14137,"count":8}],"isBlockCoverage":true}]},{"scriptId":"623","url":"file:///home/runner/work/deluge/deluge/node_modules/lru-cache/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8186,"count":1}],"isBlockCoverage":true},{"functionName":"naiveLength","ranges":[{"startOffset":510,"endOffset":517,"count":13}],"isBlockCoverage":true},{"functionName":"LRUCache","ranges":[{"startOffset":853,"endOffset":1751,"count":2},{"startOffset":920,"endOffset":946,"count":0},{"startOffset":972,"endOffset":984,"count":0},{"startOffset":1069,"endOffset":1125,"count":0},{"startOffset":1235,"endOffset":1246,"count":0},{"startOffset":1350,"endOffset":1363,"count":0},{"startOffset":1439,"endOffset":1476,"count":0},{"startOffset":1484,"endOffset":1530,"count":0}],"isBlockCoverage":true},{"functionName":"set max","ranges":[{"startOffset":1799,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":1972,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"set allowStale","ranges":[{"startOffset":2013,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"get allowStale","ranges":[{"startOffset":2086,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"set maxAge","ranges":[{"startOffset":2142,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"get maxAge","ranges":[{"startOffset":2303,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"set lengthCalculator","ranges":[{"startOffset":2408,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"get lengthCalculator","ranges":[{"startOffset":2768,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":2830,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"get itemCount","ranges":[{"startOffset":2870,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":2923,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":3142,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3360,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3429,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3502,"endOffset":3858,"count":2},{"startOffset":3535,"endOffset":3560,"count":0},{"startOffset":3561,"endOffset":3593,"count":0},{"startOffset":3595,"endOffset":3673,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":3862,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"dumpLru","ranges":[{"startOffset":4068,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4114,"endOffset":5376,"count":13},{"startOffset":4194,"endOffset":4223,"count":0},{"startOffset":4231,"endOffset":4277,"count":0},{"startOffset":4302,"endOffset":4314,"count":0},{"startOffset":4402,"endOffset":4996,"count":0},{"startOffset":5145,"endOffset":5231,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":5380,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5517,"endOffset":5564,"count":29}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":5568,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":5621,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":5750,"endOffset":5801,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5805,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"prune","ranges":[{"startOffset":6382,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6475,"endOffset":6871,"count":29},{"startOffset":6547,"endOffset":6869,"count":0}],"isBlockCoverage":true},{"functionName":"isStale","ranges":[{"startOffset":6889,"endOffset":7094,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":7109,"endOffset":7497,"count":13},{"startOffset":7151,"endOffset":7495,"count":0}],"isBlockCoverage":true},{"functionName":"del","ranges":[{"startOffset":7511,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"Entry","ranges":[{"startOffset":7756,"endOffset":7923,"count":13}],"isBlockCoverage":true},{"functionName":"forEachStep","ranges":[{"startOffset":7947,"endOffset":8158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///home/runner/work/deluge/deluge/node_modules/yallist/yallist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8411,"count":1},{"startOffset":8397,"endOffset":8410,"count":0}],"isBlockCoverage":true},{"functionName":"Yallist","ranges":[{"startOffset":85,"endOffset":517,"count":2},{"startOffset":163,"endOffset":193,"count":0},{"startOffset":263,"endOffset":300,"count":0},{"startOffset":302,"endOffset":371,"count":0},{"startOffset":403,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":321,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.removeNode","ranges":[{"startOffset":550,"endOffset":1001,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshiftNode","ranges":[{"startOffset":1035,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pushNode","ranges":[{"startOffset":1365,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.push","ranges":[{"startOffset":1691,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshift","ranges":[{"startOffset":1844,"endOffset":1970,"count":13}],"isBlockCoverage":true},{"functionName":"Yallist.pop","ranges":[{"startOffset":1996,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.shift","ranges":[{"startOffset":2252,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEach","ranges":[{"startOffset":2510,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEachReverse","ranges":[{"startOffset":2728,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.get","ranges":[{"startOffset":2949,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.getReverse","ranges":[{"startOffset":3215,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.map","ranges":[{"startOffset":3474,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.mapReverse","ranges":[{"startOffset":3723,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduce","ranges":[{"startOffset":3968,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduceReverse","ranges":[{"startOffset":4399,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArray","ranges":[{"startOffset":4838,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArrayReverse","ranges":[{"startOffset":5055,"endOffset":5235,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.slice","ranges":[{"startOffset":5263,"endOffset":5790,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.sliceReverse","ranges":[{"startOffset":5825,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.splice","ranges":[{"startOffset":6391,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reverse","ranges":[{"startOffset":7064,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7324,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":7645,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":7795,"endOffset":7946,"count":13},{"startOffset":7897,"endOffset":7928,"count":2}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":7948,"endOffset":8300,"count":13},{"startOffset":8021,"endOffset":8071,"count":0},{"startOffset":8126,"endOffset":8173,"count":0},{"startOffset":8219,"endOffset":8266,"count":11},{"startOffset":8266,"endOffset":8298,"count":2}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///home/runner/work/deluge/deluge/node_modules/yallist/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":30,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"Yallist.<computed>","ranges":[{"startOffset":90,"endOffset":204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":10},{"startOffset":141,"endOffset":174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"629","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1500,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2190,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":390,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"634","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"635","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///home/runner/work/deluge/deluge/node_modules/builtins/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7418,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1996,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2750,"endOffset":6882,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":6933,"endOffset":7137,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7188,"endOffset":7392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/strip-import-path-params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":240,"count":1}],"isBlockCoverage":true},{"functionName":"stripImportPathParams","ranges":[{"startOffset":121,"endOffset":239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/global-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2610,"count":1}],"isBlockCoverage":true},{"functionName":"findReference","ranges":[{"startOffset":576,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"isShadowed","ranges":[{"startOffset":1194,"endOffset":1361,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1875,"endOffset":2606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"640","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/handle-callback-err.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2942,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":652,"endOffset":2938,"count":8},{"startOffset":719,"endOffset":727,"count":0}],"isBlockCoverage":true},{"functionName":"isPattern","ranges":[{"startOffset":1013,"endOffset":1143,"count":86}],"isBlockCoverage":true},{"functionName":"matchesConfiguredErrorName","ranges":[{"startOffset":1423,"endOffset":1680,"count":86},{"startOffset":1628,"endOffset":1679,"count":0}],"isBlockCoverage":true},{"functionName":"getParameters","ranges":[{"startOffset":1887,"endOffset":2091,"count":146}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1978,"endOffset":2067,"count":272},{"startOffset":2027,"endOffset":2067,"count":201}],"isBlockCoverage":true},{"functionName":"checkForError","ranges":[{"startOffset":2277,"endOffset":2757,"count":146},{"startOffset":2503,"endOffset":2569,"count":86},{"startOffset":2584,"endOffset":2747,"count":5},{"startOffset":2646,"endOffset":2733,"count":0}],"isBlockCoverage":true}]},{"scriptId":"641","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-callback-literal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2372,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":648,"endOffset":1328,"count":8}],"isBlockCoverage":true},{"functionName":"isCallback","ranges":[{"startOffset":724,"endOffset":813,"count":137}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":844,"endOffset":1311,"count":325},{"startOffset":1021,"endOffset":1067,"count":267},{"startOffset":1068,"endOffset":1113,"count":137},{"startOffset":1132,"endOffset":1297,"count":0}],"isBlockCoverage":true},{"functionName":"couldBeError","ranges":[{"startOffset":1527,"endOffset":2371,"count":270},{"startOffset":1590,"endOffset":1608,"count":71},{"startOffset":1617,"endOffset":1639,"count":90},{"startOffset":1648,"endOffset":1669,"count":90},{"startOffset":1678,"endOffset":1702,"count":124},{"startOffset":1711,"endOffset":1743,"count":124},{"startOffset":1752,"endOffset":1799,"count":124},{"startOffset":1838,"endOffset":1910,"count":0},{"startOffset":1920,"endOffset":2080,"count":0},{"startOffset":2090,"endOffset":2186,"count":3},{"startOffset":2159,"endOffset":2186,"count":0},{"startOffset":2196,"endOffset":2306,"count":0},{"startOffset":2316,"endOffset":2363,"count":143}],"isBlockCoverage":true}]},{"scriptId":"642","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-deprecated-api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22696,"count":1}],"isBlockCoverage":true},{"functionName":"toReplaceMessage","ranges":[{"startOffset":17848,"endOffset":18260,"count":0}],"isBlockCoverage":false},{"functionName":"toName","ranges":[{"startOffset":18427,"endOffset":18657,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptions","ranges":[{"startOffset":18853,"endOffset":19254,"count":8}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":20782,"endOffset":22692,"count":8}],"isBlockCoverage":true},{"functionName":"reportItem","ranges":[{"startOffset":21223,"endOffset":21593,"count":0}],"isBlockCoverage":false},{"functionName":"Program:exit","ranges":[{"startOffset":21624,"endOffset":22675,"count":8},{"startOffset":21853,"endOffset":22126,"count":0},{"startOffset":22309,"endOffset":22661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"643","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/enumerate-property-names.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1045,"count":1}],"isBlockCoverage":true},{"functionName":"enumeratePropertyNames","ranges":[{"startOffset":456,"endOffset":1003,"count":443},{"startOffset":557,"endOffset":1001,"count":438},{"startOffset":634,"endOffset":666,"count":0},{"startOffset":717,"endOffset":768,"count":3},{"startOffset":799,"endOffset":854,"count":3},{"startOffset":880,"endOffset":924,"count":367}],"isBlockCoverage":true}]},{"scriptId":"644","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-configured-node-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1332,"count":1}],"isBlockCoverage":true},{"functionName":"getEnginesNode","ranges":[{"startOffset":510,"endOffset":658,"count":8},{"startOffset":635,"endOffset":655,"count":0}],"isBlockCoverage":true},{"functionName":"getConfiguredNodeVersion","ranges":[{"startOffset":1151,"endOffset":1331,"count":8}],"isBlockCoverage":true}]},{"scriptId":"645","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2574,"count":1}],"isBlockCoverage":true}]},{"scriptId":"646","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6672,"count":1}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":276,"endOffset":453,"count":40},{"startOffset":433,"endOffset":438,"count":4},{"startOffset":439,"endOffset":450,"count":36}],"isBlockCoverage":true}]},{"scriptId":"647","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":467,"count":1},{"startOffset":233,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"648","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":313}],"isBlockCoverage":true}]},{"scriptId":"649","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8008,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":303,"endOffset":2193,"count":4},{"startOffset":408,"endOffset":613,"count":0},{"startOffset":652,"endOffset":716,"count":0},{"startOffset":755,"endOffset":855,"count":0},{"startOffset":1194,"endOffset":1207,"count":0},{"startOffset":1235,"endOffset":1299,"count":0},{"startOffset":1486,"endOffset":1544,"count":0},{"startOffset":1603,"endOffset":1661,"count":0},{"startOffset":1720,"endOffset":1778,"count":0},{"startOffset":1839,"endOffset":1873,"count":3},{"startOffset":1873,"endOffset":2125,"count":1},{"startOffset":2149,"endOffset":2166,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1925,"endOffset":2118,"count":1},{"startOffset":2092,"endOffset":2117,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2197,"endOffset":2393,"count":4},{"startOffset":2304,"endOffset":2365,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2397,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2442,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2836,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3131,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":3986,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4681,"endOffset":7980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":383,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":186,"endOffset":352,"count":42},{"startOffset":208,"endOffset":212,"count":22},{"startOffset":215,"endOffset":352,"count":20},{"startOffset":245,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279,"endOffset":294,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":303,"endOffset":347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":217,"endOffset":637,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":74,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":925,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1505,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":137,"endOffset":1480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3610,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":135,"endOffset":636,"count":20},{"startOffset":238,"endOffset":358,"count":0},{"startOffset":510,"endOffset":539,"count":0},{"startOffset":539,"endOffset":635,"count":4}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":640,"endOffset":1136,"count":20},{"startOffset":688,"endOffset":711,"count":0},{"startOffset":772,"endOffset":836,"count":16},{"startOffset":836,"endOffset":883,"count":4},{"startOffset":884,"endOffset":888,"count":0},{"startOffset":920,"endOffset":952,"count":0},{"startOffset":952,"endOffset":1031,"count":4},{"startOffset":1031,"endOffset":1062,"count":0},{"startOffset":1062,"endOffset":1132,"count":4}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1140,"endOffset":1179,"count":4}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":1183,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1567,"endOffset":3324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14139,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":1814,"count":18},{"startOffset":155,"endOffset":379,"count":0},{"startOffset":418,"endOffset":562,"count":0},{"startOffset":1146,"endOffset":1213,"count":0},{"startOffset":1213,"endOffset":1314,"count":2},{"startOffset":1314,"endOffset":1791,"count":1},{"startOffset":1496,"endOffset":1532,"count":0},{"startOffset":1662,"endOffset":1777,"count":2},{"startOffset":1693,"endOffset":1707,"count":1},{"startOffset":1709,"endOffset":1767,"count":0},{"startOffset":1791,"endOffset":1813,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":849,"endOffset":879,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1104,"endOffset":1117,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1440,"endOffset":1461,"count":2}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1818,"endOffset":1984,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1867,"endOffset":1925,"count":3}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1988,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2031,"endOffset":4281,"count":19},{"startOffset":2346,"endOffset":2373,"count":0},{"startOffset":2477,"endOffset":2501,"count":0},{"startOffset":3377,"endOffset":3616,"count":0},{"startOffset":4001,"endOffset":4104,"count":4},{"startOffset":4030,"endOffset":4061,"count":0},{"startOffset":4104,"endOffset":4131,"count":3},{"startOffset":4131,"endOffset":4150,"count":1},{"startOffset":4152,"endOffset":4185,"count":0},{"startOffset":4185,"endOffset":4280,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3191,"endOffset":3234,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3320,"endOffset":3359,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3483,"endOffset":3609,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3921,"endOffset":3963,"count":20}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":4285,"endOffset":4915,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":4983,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"isNullSet","ranges":[{"startOffset":5775,"endOffset":5802,"count":6}],"isBlockCoverage":true},{"functionName":"isAny","ranges":[{"startOffset":5817,"endOffset":5836,"count":1}],"isBlockCoverage":true},{"functionName":"isSatisfiable","ranges":[{"startOffset":5958,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":6534,"endOffset":6847,"count":20}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":6861,"endOffset":6912,"count":11},{"startOffset":6871,"endOffset":6898,"count":8},{"startOffset":6899,"endOffset":6912,"count":8}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":7248,"endOffset":7357,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7298,"endOffset":7346,"count":20}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":7380,"endOffset":8054,"count":20},{"startOffset":7427,"endOffset":7445,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7485,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":8347,"endOffset":8456,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8397,"endOffset":8445,"count":20}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":8479,"endOffset":9781,"count":20},{"startOffset":8558,"endOffset":8576,"count":0},{"startOffset":8629,"endOffset":8635,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8666,"endOffset":9778,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":9806,"endOffset":9961,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9899,"endOffset":9948,"count":20}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":9985,"endOffset":11685,"count":20},{"startOffset":10053,"endOffset":10072,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10113,"endOffset":11682,"count":4},{"startOffset":10261,"endOffset":10270,"count":3},{"startOffset":10313,"endOffset":10320,"count":0},{"startOffset":10322,"endOffset":10345,"count":0},{"startOffset":10510,"endOffset":10516,"count":0},{"startOffset":10535,"endOffset":10712,"count":0},{"startOffset":10736,"endOffset":11480,"count":3},{"startOffset":10840,"endOffset":10863,"count":1},{"startOffset":10901,"endOffset":11117,"count":0},{"startOffset":11142,"endOffset":11379,"count":0},{"startOffset":11405,"endOffset":11432,"count":1},{"startOffset":11480,"endOffset":11629,"count":1},{"startOffset":11494,"endOffset":11548,"count":0},{"startOffset":11562,"endOffset":11629,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":11831,"endOffset":12006,"count":20}],"isBlockCoverage":true},{"functionName":"replaceGTE0","ranges":[{"startOffset":12028,"endOffset":12178,"count":20},{"startOffset":12150,"endOffset":12161,"count":0}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":12420,"endOffset":13096,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12429,"endOffset":13096,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":13114,"endOffset":14138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1500,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2190,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":390,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7418,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1996,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2750,"endOffset":6882,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":6933,"endOffset":7137,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7188,"endOffset":7392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-package-json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1788,"count":1}],"isBlockCoverage":true},{"functionName":"readPackageJson","ranges":[{"startOffset":431,"endOffset":815,"count":3},{"startOffset":656,"endOffset":672,"count":1},{"startOffset":674,"endOffset":746,"count":1},{"startOffset":753,"endOffset":814,"count":2}],"isBlockCoverage":true},{"functionName":"getPackageJson","ranges":[{"startOffset":1108,"endOffset":1787,"count":8},{"startOffset":1285,"endOffset":1714,"count":10},{"startOffset":1335,"endOffset":1462,"count":7},{"startOffset":1371,"endOffset":1428,"count":1},{"startOffset":1462,"endOffset":1518,"count":3},{"startOffset":1518,"endOffset":1624,"count":1},{"startOffset":1624,"endOffset":1714,"count":2},{"startOffset":1714,"endOffset":1786,"count":0}],"isBlockCoverage":true}]},{"scriptId":"690","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"Cache","ranges":[{"startOffset":345,"endOffset":395,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":551,"endOffset":857,"count":10},{"startOffset":653,"endOffset":831,"count":7},{"startOffset":788,"endOffset":831,"count":0},{"startOffset":831,"endOffset":856,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1025,"endOffset":1298,"count":3},{"startOffset":1149,"endOffset":1226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"691","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-semver-range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":729,"count":1}],"isBlockCoverage":true},{"functionName":"getSemverRange","ranges":[{"startOffset":455,"endOffset":728,"count":24},{"startOffset":535,"endOffset":542,"count":17},{"startOffset":558,"endOffset":710,"count":17},{"startOffset":615,"endOffset":678,"count":16}],"isBlockCoverage":true}]},{"scriptId":"692","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-exports-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2252,"count":1}],"isBlockCoverage":true},{"functionName":"isExports","ranges":[{"startOffset":186,"endOffset":461,"count":60},{"startOffset":317,"endOffset":351,"count":16},{"startOffset":352,"endOffset":409,"count":0},{"startOffset":410,"endOffset":453,"count":0}],"isBlockCoverage":true},{"functionName":"isModuleExports","ranges":[{"startOffset":463,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1460,"endOffset":2248,"count":8}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":1507,"endOffset":2231,"count":60},{"startOffset":1655,"endOffset":1898,"count":0},{"startOffset":1899,"endOffset":2086,"count":0},{"startOffset":2151,"endOffset":2230,"count":0}],"isBlockCoverage":true}]},{"scriptId":"693","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-extraneous-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1461,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1196,"endOffset":1457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"694","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/check-extraneous.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1672,"count":1}],"isBlockCoverage":true},{"functionName":"checkExtraneous","ranges":[{"startOffset":609,"endOffset":1596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-allow-modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1270,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":344,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowModules","ranges":[{"startOffset":854,"endOffset":1090,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-convert-path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5283,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":226,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeValue","ranges":[{"startOffset":460,"endOffset":672,"count":0}],"isBlockCoverage":false},{"functionName":"toStringArray","ranges":[{"startOffset":813,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"createMatch","ranges":[{"startOffset":1232,"endOffset":1558,"count":0}],"isBlockCoverage":false},{"functionName":"defineConvert","ranges":[{"startOffset":1799,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":2183,"endOffset":2436,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2647,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"getConvertPath","ranges":[{"startOffset":3677,"endOffset":3911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-extraneous-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1590,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1324,"endOffset":1586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/visit-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2188,"count":1}],"isBlockCoverage":true},{"functionName":"visitRequire","ranges":[{"startOffset":937,"endOffset":2187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-missing-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1333,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1079,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/check-existence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1860,"count":1}],"isBlockCoverage":true},{"functionName":"checkExistence","ranges":[{"startOffset":703,"endOffset":1793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/exists.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1480,"count":1}],"isBlockCoverage":true},{"functionName":"existsCaseSensitive","ranges":[{"startOffset":429,"endOffset":762,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":967,"endOffset":1479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-missing-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1462,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1207,"endOffset":1458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-mixed-requires.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7430,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2399,"endOffset":7426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-new-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1009,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":598,"endOffset":1005,"count":8}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":645,"endOffset":988,"count":38},{"startOffset":814,"endOffset":974,"count":0}],"isBlockCoverage":true}]},{"scriptId":"705","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-path-concat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6420,"count":1}],"isBlockCoverage":true},{"functionName":"collectFirstCharsOfTemplateElement","ranges":[{"startOffset":631,"endOffset":1115,"count":0}],"isBlockCoverage":false},{"functionName":"collectFirstChars","ranges":[{"startOffset":1441,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":3410,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"isConcat","ranges":[{"startOffset":3913,"endOffset":4594,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5173,"endOffset":6416,"count":8}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":5220,"endOffset":6399,"count":8},{"startOffset":5596,"endOffset":5654,"count":0},{"startOffset":5798,"endOffset":5856,"count":0},{"startOffset":6105,"endOffset":6385,"count":0}],"isBlockCoverage":true}]},{"scriptId":"706","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-process-env.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1288,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":769,"endOffset":1284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-process-exit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":956,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":606,"endOffset":952,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-restricted-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1771,"endOffset":1944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/check-restricted.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3420,"count":1}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":636,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"Restriction","ranges":[{"startOffset":975,"endOffset":1497,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":1692,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"createRestriction","ranges":[{"startOffset":2123,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"createRestrictions","ranges":[{"startOffset":2456,"endOffset":2540,"count":0}],"isBlockCoverage":false},{"functionName":"checkForRestriction","ranges":[{"startOffset":2782,"endOffset":3302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-restricted-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1950,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1773,"endOffset":1946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1462,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":904,"endOffset":1458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-unpublished-bin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"isBinFile","ranges":[{"startOffset":649,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1690,"endOffset":3069,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/get-npmignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5338,"count":1}],"isBlockCoverage":true},{"functionName":"isAncestorFiles","ranges":[{"startOffset":782,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":1013,"endOffset":1085,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":1278,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":1475,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"filterNeverIgnoredFiles","ranges":[{"startOffset":1761,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhiteList","ranges":[{"startOffset":2376,"endOffset":3064,"count":0}],"isBlockCoverage":false},{"functionName":"parseNpmignore","ranges":[{"startOffset":3418,"endOffset":3850,"count":0}],"isBlockCoverage":false},{"functionName":"getNpmignore","ranges":[{"startOffset":4303,"endOffset":5337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-unpublished-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1450,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1188,"endOffset":1446,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/check-publish.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2793,"count":1}],"isBlockCoverage":true},{"functionName":"checkPublish","ranges":[{"startOffset":736,"endOffset":2718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-unpublished-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1579,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1316,"endOffset":1575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-unsupported-features/es-builtins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5874,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":5714,"endOffset":5870,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/check-unsupported-builtins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3668,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":811,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"isSupported","ranges":[{"startOffset":1243,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"supportedVersionToString","ranges":[{"startOffset":2044,"endOffset":2326,"count":0}],"isBlockCoverage":false},{"functionName":"checkUnsupportedBuiltins","ranges":[{"startOffset":2575,"endOffset":3507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"719","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-unsupported-features/es-syntax.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24484,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":1352,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1762,"endOffset":1784,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":2144,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":4402,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":9708,"endOffset":9744,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":9870,"endOffset":10144,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptions","ranges":[{"startOffset":11118,"endOffset":11399,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeScope","ranges":[{"startOffset":11607,"endOffset":11805,"count":0}],"isBlockCoverage":false},{"functionName":"defineVisitor","ranges":[{"startOffset":12047,"endOffset":15076,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":24396,"endOffset":24480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9994,"count":1}],"isBlockCoverage":true},{"functionName":"get no-5","ranges":[{"startOffset":1242,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"get no-2015","ranges":[{"startOffset":1368,"endOffset":1493,"count":0}],"isBlockCoverage":false},{"functionName":"get no-2016","ranges":[{"startOffset":1503,"endOffset":1628,"count":0}],"isBlockCoverage":false},{"functionName":"get no-2017","ranges":[{"startOffset":1638,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"get no-2018","ranges":[{"startOffset":1773,"endOffset":1898,"count":0}],"isBlockCoverage":false},{"functionName":"get no-2019","ranges":[{"startOffset":1908,"endOffset":2033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2272,"count":1}],"isBlockCoverage":true},{"functionName":"definePatternSearchGenerator","ranges":[{"startOffset":563,"endOffset":705,"count":2}],"isBlockCoverage":true},{"functionName":"isCommaToken","ranges":[{"startOffset":900,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"getRegExpCalls","ranges":[{"startOffset":1330,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"printWarningOfDeprecatedConfig","ranges":[{"startOffset":1833,"endOffset":2268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"722","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":59803,"count":1},{"startOffset":7651,"endOffset":7822,"count":0},{"startOffset":8928,"endOffset":8939,"count":0}],"isBlockCoverage":true},{"functionName":"_interopDefault","ranges":[{"startOffset":141,"endOffset":255,"count":1},{"startOffset":232,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"getInnermostScope","ranges":[{"startOffset":532,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"findVariable","ranges":[{"startOffset":1310,"endOffset":1782,"count":0}],"isBlockCoverage":false},{"functionName":"negate0","ranges":[{"startOffset":1948,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":2221,"endOffset":2270,"count":11}],"isBlockCoverage":true},{"functionName":"isArrowToken","ranges":[{"startOffset":2442,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":2707,"endOffset":2801,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonToken","ranges":[{"startOffset":2979,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":3247,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"isOpeningParenToken","ranges":[{"startOffset":3541,"endOffset":3642,"count":0}],"isBlockCoverage":false},{"functionName":"isClosingParenToken","ranges":[{"startOffset":3840,"endOffset":3941,"count":0}],"isBlockCoverage":false},{"functionName":"isOpeningBracketToken","ranges":[{"startOffset":4147,"endOffset":4250,"count":0}],"isBlockCoverage":false},{"functionName":"isClosingBracketToken","ranges":[{"startOffset":4454,"endOffset":4557,"count":0}],"isBlockCoverage":false},{"functionName":"isOpeningBraceToken","ranges":[{"startOffset":4745,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"isClosingBraceToken","ranges":[{"startOffset":5032,"endOffset":5133,"count":0}],"isBlockCoverage":false},{"functionName":"isCommentToken","ranges":[{"startOffset":5307,"endOffset":5460,"count":0}],"isBlockCoverage":false},{"functionName":"getOpeningParenOfParams","ranges":[{"startOffset":6285,"endOffset":6485,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionHeadLocation","ranges":[{"startOffset":6751,"endOffset":7505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9219,"endOffset":9231,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9253,"endOffset":9281,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9820,"endOffset":9848,"count":72}],"isBlockCoverage":true},{"functionName":"getPropertyDescriptor","ranges":[{"startOffset":10107,"endOffset":10422,"count":0}],"isBlockCoverage":false},{"functionName":"isGetter","ranges":[{"startOffset":10586,"endOffset":10710,"count":0}],"isBlockCoverage":false},{"functionName":"getElementValues","ranges":[{"startOffset":10987,"endOffset":11743,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":11784,"endOffset":11960,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":11967,"endOffset":12143,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":12192,"endOffset":14531,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":14538,"endOffset":16511,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":16518,"endOffset":16847,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":16854,"endOffset":16963,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":16970,"endOffset":17957,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":17964,"endOffset":18288,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":18295,"endOffset":18899,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":18906,"endOffset":19541,"count":0}],"isBlockCoverage":false},{"functionName":"ChainExpression","ranges":[{"startOffset":19548,"endOffset":19777,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":19784,"endOffset":20185,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":20192,"endOffset":21441,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":21448,"endOffset":21613,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":21620,"endOffset":22226,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":22233,"endOffset":22673,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":22680,"endOffset":23555,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticValueR","ranges":[{"startOffset":23849,"endOffset":24053,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticValue","ranges":[{"startOffset":24462,"endOffset":24626,"count":0}],"isBlockCoverage":false},{"functionName":"getStringIfConstant","ranges":[{"startOffset":25052,"endOffset":25529,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyName","ranges":[{"startOffset":25977,"endOffset":26599,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionNameWithKind","ranges":[{"startOffset":26776,"endOffset":28349,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":28901,"endOffset":29000,"count":0}],"isBlockCoverage":false},{"functionName":"$visit","ranges":[{"startOffset":29082,"endOffset":29360,"count":0}],"isBlockCoverage":false},{"functionName":"$visitChildren","ranges":[{"startOffset":29371,"endOffset":30169,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":30180,"endOffset":30242,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":30252,"endOffset":30310,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":30320,"endOffset":30373,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":30383,"endOffset":30781,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":30791,"endOffset":30843,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":30853,"endOffset":30910,"count":0}],"isBlockCoverage":false},{"functionName":"ImportExpression","ranges":[{"startOffset":30920,"endOffset":30974,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":30984,"endOffset":31407,"count":0}],"isBlockCoverage":false},{"functionName":"MethodDefinition","ranges":[{"startOffset":31417,"endOffset":31750,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":31760,"endOffset":31811,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":31821,"endOffset":32146,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":32156,"endOffset":32609,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":32619,"endOffset":32673,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":32683,"endOffset":32736,"count":0}],"isBlockCoverage":false},{"functionName":"hasSideEffect","ranges":[{"startOffset":33437,"endOffset":33720,"count":0}],"isBlockCoverage":false},{"functionName":"getParentSyntaxParen","ranges":[{"startOffset":34022,"endOffset":35473,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesized","ranges":[{"startOffset":36021,"endOffset":37140,"count":0}],"isBlockCoverage":false},{"functionName":"isEscaped","ranges":[{"startOffset":37651,"endOffset":37836,"count":0}],"isBlockCoverage":false},{"functionName":"replaceS","ranges":[{"startOffset":38119,"endOffset":39174,"count":0}],"isBlockCoverage":false},{"functionName":"replaceF","ranges":[{"startOffset":39461,"endOffset":39838,"count":0}],"isBlockCoverage":false},{"functionName":"PatternMatcher","ranges":[{"startOffset":40094,"endOffset":40542,"count":2},{"startOffset":40185,"endOffset":40270,"count":0},{"startOffset":40313,"endOffset":40391,"count":0}],"isBlockCoverage":true},{"functionName":"execAll","ranges":[{"startOffset":40758,"endOffset":41181,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":41385,"endOffset":41496,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41815,"endOffset":42012,"count":0}],"isBlockCoverage":false},{"functionName":"isModifiedGlobal","ranges":[{"startOffset":42498,"endOffset":42673,"count":0}],"isBlockCoverage":false},{"functionName":"isPassThrough","ranges":[{"startOffset":42944,"endOffset":43435,"count":0}],"isBlockCoverage":false},{"functionName":"ReferenceTracker","ranges":[{"startOffset":43907,"endOffset":44244,"count":0}],"isBlockCoverage":false},{"functionName":"iterateGlobalReferences","ranges":[{"startOffset":44483,"endOffset":45381,"count":0}],"isBlockCoverage":false},{"functionName":"iterateCjsReferences","ranges":[{"startOffset":45620,"endOffset":46287,"count":0}],"isBlockCoverage":false},{"functionName":"iterateEsmReferences","ranges":[{"startOffset":46520,"endOffset":48849,"count":0}],"isBlockCoverage":false},{"functionName":"_iterateVariableReferences","ranges":[{"startOffset":49288,"endOffset":50011,"count":0}],"isBlockCoverage":false},{"functionName":"_iteratePropertyReferences","ranges":[{"startOffset":50400,"endOffset":52739,"count":0}],"isBlockCoverage":false},{"functionName":"_iterateLhsReferences","ranges":[{"startOffset":53104,"endOffset":54566,"count":0}],"isBlockCoverage":false},{"functionName":"_iterateImportReferences","ranges":[{"startOffset":54949,"endOffset":56805,"count":0}],"isBlockCoverage":false},{"functionName":"exceptDefault","ranges":[{"startOffset":57128,"endOffset":57215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"723","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-visitor-keys/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2195,"count":1},{"startOffset":298,"endOffset":332,"count":82}],"isBlockCoverage":true},{"functionName":"filterKey","ranges":[{"startOffset":633,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":1206,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"unionWith","ranges":[{"startOffset":1622,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-es5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":972,"count":1}],"isBlockCoverage":true}]},{"scriptId":"725","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-es2015.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2787,"count":1}],"isBlockCoverage":true}]},{"scriptId":"726","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-es2016.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":214,"count":1}],"isBlockCoverage":true}]},{"scriptId":"727","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-es2017.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true}]},{"scriptId":"728","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-es2018.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":531,"count":1}],"isBlockCoverage":true}]},{"scriptId":"729","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-es2019.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":376,"count":1}],"isBlockCoverage":true}]},{"scriptId":"730","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-es2020.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":515,"count":1}],"isBlockCoverage":true}]},{"scriptId":"731","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/no-new-in-esnext.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":352,"count":1}],"isBlockCoverage":true}]},{"scriptId":"732","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/restrict-to-es3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"733","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/restrict-to-es5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":442,"count":1}],"isBlockCoverage":true}]},{"scriptId":"734","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/restrict-to-es2015.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true}]},{"scriptId":"735","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/restrict-to-es2016.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":348,"count":1}],"isBlockCoverage":true}]},{"scriptId":"736","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/restrict-to-es2017.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":301,"count":1}],"isBlockCoverage":true}]},{"scriptId":"737","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/restrict-to-es2018.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true}]},{"scriptId":"738","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/configs/restrict-to-es2019.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true}]},{"scriptId":"739","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-accessor-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":892,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":603,"endOffset":888,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-array-from.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-array-isarray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1250,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1246,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-array-of.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1241,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":657,"endOffset":1237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-arrow-functions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4245,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":688,"endOffset":4241,"count":0}],"isBlockCoverage":false}]},{"scriptId":"744","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-async-functions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":621,"endOffset":795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-async-iteration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":919,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":596,"endOffset":915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-atomics.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1186,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":653,"endOffset":1182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-bigint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1425,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":645,"endOffset":1421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"748","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-binary-numeric-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":912,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":648,"endOffset":908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-block-scoped-functions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":841,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":630,"endOffset":837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-block-scoped-variables.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":883,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":630,"endOffset":879,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-classes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":785,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":595,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-computed-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":817,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":609,"endOffset":813,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-date-now.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1235,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":651,"endOffset":1231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-default-parameters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":606,"endOffset":788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-destructuring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":964,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":590,"endOffset":960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-dynamic-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":598,"endOffset":765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-exponential-operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":615,"endOffset":867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-export-ns-from.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":786,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":593,"endOffset":782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-for-of-loops.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":771,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":602,"endOffset":767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-generators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":624,"endOffset":802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-global-this.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":665,"endOffset":1197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-import-meta.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":611,"endOffset":818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1171,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":641,"endOffset":1167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-json-superset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1786,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":778,"endOffset":1782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-keyword-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2216,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1520,"endOffset":2212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-logical-assignment-operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2145,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":641,"endOffset":2141,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-malformed-template-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1090,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":705,"endOffset":1086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1174,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":645,"endOffset":1170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-acosh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"770","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-asinh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-atanh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-cbrt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-clz32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-cosh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"775","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-expm1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"776","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-fround.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1250,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":663,"endOffset":1246,"count":0}],"isBlockCoverage":false}]},{"scriptId":"777","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-hypot.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"778","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-imul.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"779","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-log1p.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-log2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-log10.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-sinh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-tanh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"785","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-math-trunc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":849,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":573,"endOffset":845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-new-target.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":823,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":613,"endOffset":819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"788","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-nullish-coalescing-operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1318,"count":1}],"isBlockCoverage":true},{"functionName":"isNullishCoalescingOperator","ranges":[{"startOffset":331,"endOffset":441,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":943,"endOffset":1314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-epsilon.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":673,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-isfinite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":671,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"791","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-isinteger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1265,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":673,"endOffset":1261,"count":0}],"isBlockCoverage":false}]},{"scriptId":"792","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-isnan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1253,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":665,"endOffset":1249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-issafeinteger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1277,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":681,"endOffset":1273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"794","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-maxsafeinteger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1288,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":689,"endOffset":1284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"795","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-minsafeinteger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1288,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":689,"endOffset":1284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-parsefloat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1268,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":675,"endOffset":1264,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-number-parseint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":671,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"798","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-numeric-separators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1447,"count":1}],"isBlockCoverage":true},{"functionName":"removeNumericSeparators","ranges":[{"startOffset":262,"endOffset":337,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":811,"endOffset":1443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"799","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1256,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":667,"endOffset":1252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"800","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-defineproperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1280,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":681,"endOffset":1276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"801","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-defineproperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":677,"endOffset":1270,"count":0}],"isBlockCoverage":false}]},{"scriptId":"802","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-entries.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1259,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":669,"endOffset":1255,"count":0}],"isBlockCoverage":false}]},{"scriptId":"803","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-freeze.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1250,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1246,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-fromentries.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1271,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":677,"endOffset":1267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-getownpropertydescriptor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1320,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":713,"endOffset":1316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"806","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-getownpropertydescriptors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":721,"endOffset":1325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-getownpropertynames.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1289,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":687,"endOffset":1285,"count":0}],"isBlockCoverage":false}]},{"scriptId":"808","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-getownpropertysymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":697,"endOffset":1297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"809","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-getprototypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":677,"endOffset":1270,"count":0}],"isBlockCoverage":false}]},{"scriptId":"810","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-isextensible.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1268,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":673,"endOffset":1264,"count":0}],"isBlockCoverage":false}]},{"scriptId":"812","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-isfrozen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1256,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":665,"endOffset":1252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"813","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-issealed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1256,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":665,"endOffset":1252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"814","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":657,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"815","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-preventextensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1283,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":683,"endOffset":1279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"816","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-seal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":657,"endOffset":1240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"817","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-setprototypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1280,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":683,"endOffset":1276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"818","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-super-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1375,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":695,"endOffset":1371,"count":0}],"isBlockCoverage":false}]},{"scriptId":"819","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-object-values.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1256,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":667,"endOffset":1252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"820","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-octal-numeric-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":645,"endOffset":905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"821","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-optional-catch-binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":801,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":621,"endOffset":797,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-optional-chaining.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1941,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":597,"endOffset":1937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"823","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1186,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":653,"endOffset":1182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"824","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-promise-all-settled.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1105,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":687,"endOffset":1101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"825","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-promise-any.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":660,"endOffset":1297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"826","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-property-shorthands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2685,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":693,"endOffset":2681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"827","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-proxy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1180,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":649,"endOffset":1176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"828","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-reflect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1186,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":653,"endOffset":1182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"829","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-regexp-lookbehind-assertions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2166,"count":1}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":512,"endOffset":1174,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1676,"endOffset":2162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"830","url":"file:///home/runner/work/deluge/deluge/node_modules/regexpp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75656,"count":1}],"isBlockCoverage":true},{"functionName":"isIdStart","ranges":[{"startOffset":263,"endOffset":482,"count":0}],"isBlockCoverage":false},{"functionName":"isIdContinue","ranges":[{"startOffset":483,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"isLargeIdStart","ranges":[{"startOffset":854,"endOffset":982,"count":0}],"isBlockCoverage":false},{"functionName":"isLargeIdContinue","ranges":[{"startOffset":983,"endOffset":1131,"count":0}],"isBlockCoverage":false},{"functionName":"initLargeIdStartRanges","ranges":[{"startOffset":1132,"endOffset":3929,"count":0}],"isBlockCoverage":false},{"functionName":"initLargeIdContinueRanges","ranges":[{"startOffset":3930,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"isInRange","ranges":[{"startOffset":5545,"endOffset":5950,"count":0}],"isBlockCoverage":false},{"functionName":"restoreRanges","ranges":[{"startOffset":5951,"endOffset":6069,"count":0}],"isBlockCoverage":false},{"functionName":"DataSet","ranges":[{"startOffset":6091,"endOffset":6278,"count":3}],"isBlockCoverage":true},{"functionName":"get es2018","ranges":[{"startOffset":6283,"endOffset":6390,"count":0}],"isBlockCoverage":false},{"functionName":"get es2019","ranges":[{"startOffset":6395,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"get es2020","ranges":[{"startOffset":6507,"endOffset":6614,"count":0}],"isBlockCoverage":false},{"functionName":"get es2021","ranges":[{"startOffset":6619,"endOffset":6726,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUnicodeProperty","ranges":[{"startOffset":10946,"endOffset":11427,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLoneUnicodeProperty","ranges":[{"startOffset":11428,"endOffset":11684,"count":0}],"isBlockCoverage":false},{"functionName":"isLatinLetter","ranges":[{"startOffset":13665,"endOffset":13840,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalDigit","ranges":[{"startOffset":13841,"endOffset":13925,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":13926,"endOffset":14009,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":14010,"endOffset":14234,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":14235,"endOffset":14410,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUnicode","ranges":[{"startOffset":14411,"endOffset":14501,"count":0}],"isBlockCoverage":false},{"functionName":"digitToInt","ranges":[{"startOffset":14502,"endOffset":14802,"count":0}],"isBlockCoverage":false},{"functionName":"isLeadSurrogate","ranges":[{"startOffset":14803,"endOffset":14882,"count":0}],"isBlockCoverage":false},{"functionName":"isTrailSurrogate","ranges":[{"startOffset":14883,"endOffset":14963,"count":0}],"isBlockCoverage":false},{"functionName":"combineSurrogatePair","ranges":[{"startOffset":14964,"endOffset":15075,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":15102,"endOffset":15170,"count":282},{"startOffset":15141,"endOffset":15158,"count":186},{"startOffset":15159,"endOffset":15163,"count":96}],"isBlockCoverage":true},{"functionName":"width","ranges":[{"startOffset":15176,"endOffset":15210,"count":444}],"isBlockCoverage":true},{"functionName":"at","ranges":[{"startOffset":15241,"endOffset":15310,"count":0}],"isBlockCoverage":false},{"functionName":"width","ranges":[{"startOffset":15316,"endOffset":15367,"count":0}],"isBlockCoverage":false},{"functionName":"Reader","ranges":[{"startOffset":15391,"endOffset":15673,"count":12}],"isBlockCoverage":true},{"functionName":"get source","ranges":[{"startOffset":15678,"endOffset":15722,"count":0}],"isBlockCoverage":false},{"functionName":"get index","ranges":[{"startOffset":15727,"endOffset":15770,"count":1131}],"isBlockCoverage":true},{"functionName":"get currentCodePoint","ranges":[{"startOffset":15775,"endOffset":15831,"count":420}],"isBlockCoverage":true},{"functionName":"get nextCodePoint","ranges":[{"startOffset":15836,"endOffset":15889,"count":0}],"isBlockCoverage":false},{"functionName":"get nextCodePoint2","ranges":[{"startOffset":15894,"endOffset":15948,"count":0}],"isBlockCoverage":false},{"functionName":"get nextCodePoint3","ranges":[{"startOffset":15953,"endOffset":16007,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":16012,"endOffset":16186,"count":12},{"startOffset":16074,"endOffset":16087,"count":0}],"isBlockCoverage":true},{"functionName":"rewind","ranges":[{"startOffset":16191,"endOffset":16686,"count":24}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":16691,"endOffset":17145,"count":186}],"isBlockCoverage":true},{"functionName":"eat","ranges":[{"startOffset":17150,"endOffset":17282,"count":1095},{"startOffset":17190,"endOffset":17254,"count":0}],"isBlockCoverage":true},{"functionName":"eat2","ranges":[{"startOffset":17287,"endOffset":17476,"count":279},{"startOffset":17334,"endOffset":17354,"count":0},{"startOffset":17356,"endOffset":17448,"count":0}],"isBlockCoverage":true},{"functionName":"eat3","ranges":[{"startOffset":17481,"endOffset":17724,"count":93},{"startOffset":17533,"endOffset":17553,"count":0},{"startOffset":17554,"endOffset":17574,"count":0},{"startOffset":17576,"endOffset":17696,"count":0}],"isBlockCoverage":true},{"functionName":"RegExpSyntaxError","ranges":[{"startOffset":17778,"endOffset":18106,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxCharacter","ranges":[{"startOffset":18110,"endOffset":18600,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierStart","ranges":[{"startOffset":18601,"endOffset":18706,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierPart","ranges":[{"startOffset":18707,"endOffset":18903,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyNameCharacter","ranges":[{"startOffset":18904,"endOffset":18999,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyValueCharacter","ranges":[{"startOffset":19000,"endOffset":19117,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpValidator","ranges":[{"startOffset":19146,"endOffset":19676,"count":12},{"startOffset":19664,"endOffset":19669,"count":1}],"isBlockCoverage":true},{"functionName":"validateLiteral","ranges":[{"startOffset":19681,"endOffset":20447,"count":0}],"isBlockCoverage":false},{"functionName":"validateFlags","ranges":[{"startOffset":20452,"endOffset":22004,"count":0}],"isBlockCoverage":false},{"functionName":"validatePattern","ranges":[{"startOffset":22009,"endOffset":22490,"count":12},{"startOffset":22110,"endOffset":22137,"count":0},{"startOffset":22167,"endOffset":22194,"count":0},{"startOffset":22374,"endOffset":22484,"count":0}],"isBlockCoverage":true},{"functionName":"get strict","ranges":[{"startOffset":22495,"endOffset":22576,"count":93}],"isBlockCoverage":true},{"functionName":"get ecmaVersion","ranges":[{"startOffset":22581,"endOffset":22656,"count":12},{"startOffset":22642,"endOffset":22649,"count":4}],"isBlockCoverage":true},{"functionName":"onLiteralEnter","ranges":[{"startOffset":22661,"endOffset":22793,"count":0}],"isBlockCoverage":false},{"functionName":"onLiteralLeave","ranges":[{"startOffset":22798,"endOffset":22940,"count":0}],"isBlockCoverage":false},{"functionName":"onFlags","ranges":[{"startOffset":22945,"endOffset":23202,"count":0}],"isBlockCoverage":false},{"functionName":"onPatternEnter","ranges":[{"startOffset":23207,"endOffset":23339,"count":12}],"isBlockCoverage":true},{"functionName":"onPatternLeave","ranges":[{"startOffset":23344,"endOffset":23486,"count":12},{"startOffset":23415,"endOffset":23480,"count":8}],"isBlockCoverage":true},{"functionName":"onDisjunctionEnter","ranges":[{"startOffset":23491,"endOffset":23635,"count":12},{"startOffset":23565,"endOffset":23629,"count":0}],"isBlockCoverage":true},{"functionName":"onDisjunctionLeave","ranges":[{"startOffset":23640,"endOffset":23794,"count":12},{"startOffset":23719,"endOffset":23788,"count":0}],"isBlockCoverage":true},{"functionName":"onAlternativeEnter","ranges":[{"startOffset":23799,"endOffset":23957,"count":12},{"startOffset":23880,"endOffset":23951,"count":8}],"isBlockCoverage":true},{"functionName":"onAlternativeLeave","ranges":[{"startOffset":23962,"endOffset":24130,"count":12},{"startOffset":24048,"endOffset":24124,"count":8}],"isBlockCoverage":true},{"functionName":"onGroupEnter","ranges":[{"startOffset":24135,"endOffset":24261,"count":0}],"isBlockCoverage":false},{"functionName":"onGroupLeave","ranges":[{"startOffset":24266,"endOffset":24402,"count":0}],"isBlockCoverage":false},{"functionName":"onCapturingGroupEnter","ranges":[{"startOffset":24407,"endOffset":24572,"count":0}],"isBlockCoverage":false},{"functionName":"onCapturingGroupLeave","ranges":[{"startOffset":24577,"endOffset":24752,"count":0}],"isBlockCoverage":false},{"functionName":"onQuantifier","ranges":[{"startOffset":24757,"endOffset":24929,"count":0}],"isBlockCoverage":false},{"functionName":"onLookaroundAssertionEnter","ranges":[{"startOffset":24934,"endOffset":25130,"count":0}],"isBlockCoverage":false},{"functionName":"onLookaroundAssertionLeave","ranges":[{"startOffset":25135,"endOffset":25341,"count":0}],"isBlockCoverage":false},{"functionName":"onEdgeAssertion","ranges":[{"startOffset":25346,"endOffset":25503,"count":0}],"isBlockCoverage":false},{"functionName":"onWordBoundaryAssertion","ranges":[{"startOffset":25508,"endOffset":25705,"count":0}],"isBlockCoverage":false},{"functionName":"onAnyCharacterSet","ranges":[{"startOffset":25710,"endOffset":25873,"count":0}],"isBlockCoverage":false},{"functionName":"onEscapeCharacterSet","ranges":[{"startOffset":25878,"endOffset":26066,"count":0}],"isBlockCoverage":false},{"functionName":"onUnicodePropertyCharacterSet","ranges":[{"startOffset":26071,"endOffset":26310,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacter","ranges":[{"startOffset":26315,"endOffset":26462,"count":93}],"isBlockCoverage":true},{"functionName":"onBackreference","ranges":[{"startOffset":26467,"endOffset":26622,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacterClassEnter","ranges":[{"startOffset":26627,"endOffset":26796,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacterClassLeave","ranges":[{"startOffset":26801,"endOffset":26980,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacterClassRange","ranges":[{"startOffset":26985,"endOffset":27168,"count":0}],"isBlockCoverage":false},{"functionName":"get source","ranges":[{"startOffset":27173,"endOffset":27229,"count":0}],"isBlockCoverage":false},{"functionName":"get index","ranges":[{"startOffset":27234,"endOffset":27288,"count":1131}],"isBlockCoverage":true},{"functionName":"get currentCodePoint","ranges":[{"startOffset":27293,"endOffset":27369,"count":420}],"isBlockCoverage":true},{"functionName":"get nextCodePoint","ranges":[{"startOffset":27374,"endOffset":27444,"count":0}],"isBlockCoverage":false},{"functionName":"get nextCodePoint2","ranges":[{"startOffset":27449,"endOffset":27521,"count":0}],"isBlockCoverage":false},{"functionName":"get nextCodePoint3","ranges":[{"startOffset":27526,"endOffset":27598,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":27603,"endOffset":27697,"count":12}],"isBlockCoverage":true},{"functionName":"rewind","ranges":[{"startOffset":27702,"endOffset":27759,"count":12}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":27764,"endOffset":27813,"count":186}],"isBlockCoverage":true},{"functionName":"eat","ranges":[{"startOffset":27818,"endOffset":27870,"count":1095}],"isBlockCoverage":true},{"functionName":"eat2","ranges":[{"startOffset":27875,"endOffset":27941,"count":279}],"isBlockCoverage":true},{"functionName":"eat3","ranges":[{"startOffset":27946,"endOffset":28022,"count":93}],"isBlockCoverage":true},{"functionName":"raise","ranges":[{"startOffset":28027,"endOffset":28133,"count":0}],"isBlockCoverage":false},{"functionName":"eatRegExpBody","ranges":[{"startOffset":28138,"endOffset":29102,"count":0}],"isBlockCoverage":false},{"functionName":"consumePattern","ranges":[{"startOffset":29107,"endOffset":30165,"count":12},{"startOffset":29455,"endOffset":29921,"count":0},{"startOffset":29975,"endOffset":30111,"count":0}],"isBlockCoverage":true},{"functionName":"countCapturingParens","ranges":[{"startOffset":30170,"endOffset":31200,"count":12},{"startOffset":30382,"endOffset":31144,"count":93},{"startOffset":30409,"endOffset":30457,"count":0},{"startOffset":30502,"endOffset":30549,"count":0},{"startOffset":30597,"endOffset":30644,"count":0},{"startOffset":30693,"endOffset":30741,"count":0},{"startOffset":30786,"endOffset":30813,"count":0},{"startOffset":30814,"endOffset":31061,"count":0},{"startOffset":31063,"endOffset":31106,"count":0}],"isBlockCoverage":true},{"functionName":"consumeDisjunction","ranges":[{"startOffset":31205,"endOffset":31678,"count":12},{"startOffset":31460,"endOffset":31516,"count":0},{"startOffset":31557,"endOffset":31620,"count":0}],"isBlockCoverage":true},{"functionName":"consumeAlternative","ranges":[{"startOffset":31683,"endOffset":31923,"count":12},{"startOffset":31828,"endOffset":31849,"count":93},{"startOffset":31851,"endOffset":31862,"count":93}],"isBlockCoverage":true},{"functionName":"consumeTerm","ranges":[{"startOffset":31928,"endOffset":32351,"count":93},{"startOffset":31984,"endOffset":32117,"count":0},{"startOffset":32159,"endOffset":32262,"count":0}],"isBlockCoverage":true},{"functionName":"consumeOptionalQuantifier","ranges":[{"startOffset":32356,"endOffset":32446,"count":93}],"isBlockCoverage":true},{"functionName":"consumeAssertion","ranges":[{"startOffset":32451,"endOffset":34002,"count":93},{"startOffset":32597,"endOffset":32695,"count":0},{"startOffset":32730,"endOffset":32826,"count":0},{"startOffset":32887,"endOffset":32998,"count":0},{"startOffset":33057,"endOffset":33169,"count":0},{"startOffset":33224,"endOffset":33974,"count":0}],"isBlockCoverage":true},{"functionName":"consumeQuantifier","ranges":[{"startOffset":34007,"endOffset":34833,"count":105},{"startOffset":34182,"endOffset":34258,"count":0},{"startOffset":34296,"endOffset":34372,"count":0},{"startOffset":34414,"endOffset":34467,"count":0},{"startOffset":34522,"endOffset":34609,"count":0},{"startOffset":34660,"endOffset":34832,"count":0}],"isBlockCoverage":true},{"functionName":"eatBracedQuantifier","ranges":[{"startOffset":34838,"endOffset":35870,"count":198},{"startOffset":34943,"endOffset":35842,"count":0}],"isBlockCoverage":true},{"functionName":"consumeAtom","ranges":[{"startOffset":35875,"endOffset":36166,"count":0}],"isBlockCoverage":false},{"functionName":"consumeDot","ranges":[{"startOffset":36171,"endOffset":36353,"count":93},{"startOffset":36218,"endOffset":36325,"count":0}],"isBlockCoverage":true},{"functionName":"consumeReverseSolidusAtomEscape","ranges":[{"startOffset":36358,"endOffset":36624,"count":93},{"startOffset":36466,"endOffset":36596,"count":0}],"isBlockCoverage":true},{"functionName":"consumeUncapturingGroup","ranges":[{"startOffset":36629,"endOffset":37054,"count":93},{"startOffset":36752,"endOffset":37026,"count":0}],"isBlockCoverage":true},{"functionName":"consumeCapturingGroup","ranges":[{"startOffset":37059,"endOffset":37816,"count":93},{"startOffset":37158,"endOffset":37788,"count":0}],"isBlockCoverage":true},{"functionName":"consumeExtendedAtom","ranges":[{"startOffset":37821,"endOffset":38236,"count":93}],"isBlockCoverage":true},{"functionName":"consumeReverseSolidusFollowedByC","ranges":[{"startOffset":38241,"endOffset":38635,"count":93},{"startOffset":38365,"endOffset":38420,"count":0},{"startOffset":38422,"endOffset":38607,"count":0}],"isBlockCoverage":true},{"functionName":"consumeInvalidBracedQuantifier","ranges":[{"startOffset":38640,"endOffset":38803,"count":93},{"startOffset":38719,"endOffset":38775,"count":0}],"isBlockCoverage":true},{"functionName":"consumePatternCharacter","ranges":[{"startOffset":38808,"endOffset":39106,"count":0}],"isBlockCoverage":false},{"functionName":"consumeExtendedPatternCharacter","ranges":[{"startOffset":39111,"endOffset":39780,"count":93},{"startOffset":39752,"endOffset":39779,"count":0}],"isBlockCoverage":true},{"functionName":"consumeGroupSpecifier","ranges":[{"startOffset":39785,"endOffset":40218,"count":0}],"isBlockCoverage":false},{"functionName":"consumeAtomEscape","ranges":[{"startOffset":40223,"endOffset":40596,"count":0}],"isBlockCoverage":false},{"functionName":"consumeBackreference","ranges":[{"startOffset":40601,"endOffset":41072,"count":0}],"isBlockCoverage":false},{"functionName":"consumeCharacterClassEscape","ranges":[{"startOffset":41077,"endOffset":42964,"count":0}],"isBlockCoverage":false},{"functionName":"consumeCharacterEscape","ranges":[{"startOffset":42969,"endOffset":43527,"count":0}],"isBlockCoverage":false},{"functionName":"consumeKGroupName","ranges":[{"startOffset":43532,"endOffset":43984,"count":0}],"isBlockCoverage":false},{"functionName":"consumeCharacterClass","ranges":[{"startOffset":43989,"endOffset":44493,"count":93},{"startOffset":44090,"endOffset":44465,"count":0}],"isBlockCoverage":true},{"functionName":"consumeClassRanges","ranges":[{"startOffset":44498,"endOffset":45429,"count":0}],"isBlockCoverage":false},{"functionName":"consumeClassAtom","ranges":[{"startOffset":45434,"endOffset":46330,"count":0}],"isBlockCoverage":false},{"functionName":"consumeClassEscape","ranges":[{"startOffset":46335,"endOffset":47304,"count":0}],"isBlockCoverage":false},{"functionName":"eatGroupName","ranges":[{"startOffset":47309,"endOffset":47577,"count":0}],"isBlockCoverage":false},{"functionName":"eatRegExpIdentifierName","ranges":[{"startOffset":47582,"endOffset":47941,"count":0}],"isBlockCoverage":false},{"functionName":"eatRegExpIdentifierStart","ranges":[{"startOffset":47946,"endOffset":48734,"count":0}],"isBlockCoverage":false},{"functionName":"eatRegExpIdentifierPart","ranges":[{"startOffset":48739,"endOffset":49525,"count":0}],"isBlockCoverage":false},{"functionName":"eatCControlLetter","ranges":[{"startOffset":49530,"endOffset":49784,"count":0}],"isBlockCoverage":false},{"functionName":"eatZero","ranges":[{"startOffset":49789,"endOffset":50029,"count":0}],"isBlockCoverage":false},{"functionName":"eatControlEscape","ranges":[{"startOffset":50034,"endOffset":50710,"count":0}],"isBlockCoverage":false},{"functionName":"eatControlLetter","ranges":[{"startOffset":50715,"endOffset":50945,"count":0}],"isBlockCoverage":false},{"functionName":"eatRegExpUnicodeEscapeSequence","ranges":[{"startOffset":50950,"endOffset":51536,"count":0}],"isBlockCoverage":false},{"functionName":"eatRegExpUnicodeSurrogatePairEscape","ranges":[{"startOffset":51541,"endOffset":52185,"count":0}],"isBlockCoverage":false},{"functionName":"eatRegExpUnicodeCodePointEscape","ranges":[{"startOffset":52190,"endOffset":52520,"count":0}],"isBlockCoverage":false},{"functionName":"eatIdentityEscape","ranges":[{"startOffset":52525,"endOffset":52762,"count":0}],"isBlockCoverage":false},{"functionName":"isValidIdentityEscape","ranges":[{"startOffset":52767,"endOffset":53187,"count":0}],"isBlockCoverage":false},{"functionName":"eatDecimalEscape","ranges":[{"startOffset":53192,"endOffset":53626,"count":0}],"isBlockCoverage":false},{"functionName":"eatUnicodePropertyValueExpression","ranges":[{"startOffset":53631,"endOffset":54840,"count":0}],"isBlockCoverage":false},{"functionName":"eatUnicodePropertyName","ranges":[{"startOffset":54845,"endOffset":55141,"count":0}],"isBlockCoverage":false},{"functionName":"eatUnicodePropertyValue","ranges":[{"startOffset":55146,"endOffset":55444,"count":0}],"isBlockCoverage":false},{"functionName":"eatLoneUnicodePropertyNameOrValue","ranges":[{"startOffset":55449,"endOffset":55539,"count":0}],"isBlockCoverage":false},{"functionName":"eatHexEscapeSequence","ranges":[{"startOffset":55544,"endOffset":55909,"count":0}],"isBlockCoverage":false},{"functionName":"eatDecimalDigits","ranges":[{"startOffset":55914,"endOffset":56247,"count":0}],"isBlockCoverage":false},{"functionName":"eatHexDigits","ranges":[{"startOffset":56252,"endOffset":56577,"count":0}],"isBlockCoverage":false},{"functionName":"eatLegacyOctalEscapeSequence","ranges":[{"startOffset":56582,"endOffset":57179,"count":0}],"isBlockCoverage":false},{"functionName":"eatOctalDigit","ranges":[{"startOffset":57184,"endOffset":57447,"count":0}],"isBlockCoverage":false},{"functionName":"eatFixedHexDigits","ranges":[{"startOffset":57452,"endOffset":57889,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpParserState","ranges":[{"startOffset":58003,"endOffset":58324,"count":10},{"startOffset":58230,"endOffset":58247,"count":0},{"startOffset":58286,"endOffset":58308,"count":0}],"isBlockCoverage":true},{"functionName":"get pattern","ranges":[{"startOffset":58329,"endOffset":58477,"count":8},{"startOffset":58388,"endOffset":58444,"count":0}],"isBlockCoverage":true},{"functionName":"get flags","ranges":[{"startOffset":58482,"endOffset":58628,"count":0}],"isBlockCoverage":false},{"functionName":"onFlags","ranges":[{"startOffset":58633,"endOffset":59052,"count":0}],"isBlockCoverage":false},{"functionName":"onPatternEnter","ranges":[{"startOffset":59057,"endOffset":59352,"count":8}],"isBlockCoverage":true},{"functionName":"onPatternLeave","ranges":[{"startOffset":59357,"endOffset":59834,"count":8},{"startOffset":59526,"endOffset":59828,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59711,"endOffset":59730,"count":0}],"isBlockCoverage":false},{"functionName":"onAlternativeEnter","ranges":[{"startOffset":59839,"endOffset":60356,"count":8},{"startOffset":60071,"endOffset":60127,"count":0}],"isBlockCoverage":true},{"functionName":"onAlternativeLeave","ranges":[{"startOffset":60361,"endOffset":60638,"count":8},{"startOffset":60468,"endOffset":60524,"count":0}],"isBlockCoverage":true},{"functionName":"onGroupEnter","ranges":[{"startOffset":60643,"endOffset":61022,"count":0}],"isBlockCoverage":false},{"functionName":"onGroupLeave","ranges":[{"startOffset":61027,"endOffset":61330,"count":0}],"isBlockCoverage":false},{"functionName":"onCapturingGroupEnter","ranges":[{"startOffset":61335,"endOffset":61832,"count":0}],"isBlockCoverage":false},{"functionName":"onCapturingGroupLeave","ranges":[{"startOffset":61837,"endOffset":62170,"count":0}],"isBlockCoverage":false},{"functionName":"onQuantifier","ranges":[{"startOffset":62175,"endOffset":62951,"count":0}],"isBlockCoverage":false},{"functionName":"onLookaroundAssertionEnter","ranges":[{"startOffset":62956,"endOffset":63414,"count":0}],"isBlockCoverage":false},{"functionName":"onLookaroundAssertionLeave","ranges":[{"startOffset":63419,"endOffset":63740,"count":0}],"isBlockCoverage":false},{"functionName":"onEdgeAssertion","ranges":[{"startOffset":63745,"endOffset":64117,"count":0}],"isBlockCoverage":false},{"functionName":"onWordBoundaryAssertion","ranges":[{"startOffset":64122,"endOffset":64530,"count":0}],"isBlockCoverage":false},{"functionName":"onAnyCharacterSet","ranges":[{"startOffset":64535,"endOffset":64912,"count":0}],"isBlockCoverage":false},{"functionName":"onEscapeCharacterSet","ranges":[{"startOffset":64917,"endOffset":65361,"count":0}],"isBlockCoverage":false},{"functionName":"onUnicodePropertyCharacterSet","ranges":[{"startOffset":65366,"endOffset":65867,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacter","ranges":[{"startOffset":65872,"endOffset":66278,"count":62},{"startOffset":65982,"endOffset":66017,"count":0},{"startOffset":66019,"endOffset":66075,"count":0}],"isBlockCoverage":true},{"functionName":"onBackreference","ranges":[{"startOffset":66283,"endOffset":66768,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacterClassEnter","ranges":[{"startOffset":66773,"endOffset":67194,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacterClassLeave","ranges":[{"startOffset":67199,"endOffset":67532,"count":0}],"isBlockCoverage":false},{"functionName":"onCharacterClassRange","ranges":[{"startOffset":67537,"endOffset":68450,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpParser","ranges":[{"startOffset":68478,"endOffset":68620,"count":10}],"isBlockCoverage":true},{"functionName":"parseLiteral","ranges":[{"startOffset":68625,"endOffset":69158,"count":0}],"isBlockCoverage":false},{"functionName":"parseFlags","ranges":[{"startOffset":69163,"endOffset":69351,"count":0}],"isBlockCoverage":false},{"functionName":"parsePattern","ranges":[{"startOffset":69356,"endOffset":69572,"count":8}],"isBlockCoverage":true},{"functionName":"RegExpVisitor","ranges":[{"startOffset":69602,"endOffset":69666,"count":8}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":69671,"endOffset":71109,"count":78},{"startOffset":69726,"endOffset":69813,"count":8},{"startOffset":69826,"endOffset":69909,"count":0},{"startOffset":69922,"endOffset":70013,"count":0},{"startOffset":70026,"endOffset":70119,"count":0},{"startOffset":70132,"endOffset":70215,"count":62},{"startOffset":70228,"endOffset":70321,"count":0},{"startOffset":70334,"endOffset":70437,"count":0},{"startOffset":70450,"endOffset":70539,"count":0},{"startOffset":70552,"endOffset":70627,"count":0},{"startOffset":70640,"endOffset":70715,"count":0},{"startOffset":70728,"endOffset":70807,"count":8},{"startOffset":70820,"endOffset":70905,"count":0},{"startOffset":70918,"endOffset":71009,"count":0},{"startOffset":71022,"endOffset":71093,"count":0}],"isBlockCoverage":true},{"functionName":"visitAlternative","ranges":[{"startOffset":71114,"endOffset":71417,"count":8},{"startOffset":71186,"endOffset":71250,"count":0},{"startOffset":71347,"endOffset":71411,"count":0}],"isBlockCoverage":true},{"functionName":"visitAssertion","ranges":[{"startOffset":71422,"endOffset":71804,"count":0}],"isBlockCoverage":false},{"functionName":"visitBackreference","ranges":[{"startOffset":71809,"endOffset":72073,"count":0}],"isBlockCoverage":false},{"functionName":"visitCapturingGroup","ranges":[{"startOffset":72078,"endOffset":72400,"count":0}],"isBlockCoverage":false},{"functionName":"visitCharacter","ranges":[{"startOffset":72405,"endOffset":72649,"count":62},{"startOffset":72473,"endOffset":72535,"count":0},{"startOffset":72581,"endOffset":72643,"count":0}],"isBlockCoverage":true},{"functionName":"visitCharacterClass","ranges":[{"startOffset":72654,"endOffset":72972,"count":0}],"isBlockCoverage":false},{"functionName":"visitCharacterClassRange","ranges":[{"startOffset":72977,"endOffset":73349,"count":0}],"isBlockCoverage":false},{"functionName":"visitCharacterSet","ranges":[{"startOffset":73354,"endOffset":73613,"count":0}],"isBlockCoverage":false},{"functionName":"visitFlags","ranges":[{"startOffset":73618,"endOffset":73842,"count":0}],"isBlockCoverage":false},{"functionName":"visitGroup","ranges":[{"startOffset":73847,"endOffset":74124,"count":0}],"isBlockCoverage":false},{"functionName":"visitPattern","ranges":[{"startOffset":74129,"endOffset":74416,"count":8},{"startOffset":74193,"endOffset":74253,"count":0},{"startOffset":74350,"endOffset":74410,"count":0}],"isBlockCoverage":true},{"functionName":"visitQuantifier","ranges":[{"startOffset":74421,"endOffset":74704,"count":0}],"isBlockCoverage":false},{"functionName":"visitRegExpLiteral","ranges":[{"startOffset":74709,"endOffset":75051,"count":0}],"isBlockCoverage":false},{"functionName":"parseRegExpLiteral","ranges":[{"startOffset":75055,"endOffset":75170,"count":0}],"isBlockCoverage":false},{"functionName":"validateRegExpLiteral","ranges":[{"startOffset":75171,"endOffset":75287,"count":0}],"isBlockCoverage":false},{"functionName":"visitRegExpAST","ranges":[{"startOffset":75288,"endOffset":75376,"count":8}],"isBlockCoverage":true}]},{"scriptId":"831","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-regexp-named-capture-groups.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2303,"count":1}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":512,"endOffset":1314,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1813,"endOffset":2299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"832","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-regexp-s-flag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1226,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":642,"endOffset":1222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"833","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-regexp-u-flag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1226,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":642,"endOffset":1222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"834","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-regexp-unicode-property-escapes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2133,"count":1}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":512,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1643,"endOffset":2129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"835","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-regexp-unicode-property-escapes-2019.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3000,"count":1}],"isBlockCoverage":true},{"functionName":"isNewUnicodePropertyKeyValuePair","ranges":[{"startOffset":434,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"isNewBinaryUnicodeProperty","ranges":[{"startOffset":558,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":928,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2510,"endOffset":2996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"836","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-regexp-y-flag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1226,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":642,"endOffset":1222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"837","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-rest-parameters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":777,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":597,"endOffset":773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"838","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-rest-spread-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":937,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":618,"endOffset":933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"839","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1174,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":645,"endOffset":1170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"840","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-shared-array-buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1218,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":675,"endOffset":1214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"841","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-spread-elements.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":856,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":597,"endOffset":852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"842","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-string-fromcodepoint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1277,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":681,"endOffset":1273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"843","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-string-raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1247,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"844","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-subclassing-builtins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1848,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":695,"endOffset":1844,"count":0}],"isBlockCoverage":false}]},{"scriptId":"845","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1183,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":651,"endOffset":1179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"846","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-template-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2524,"count":1}],"isBlockCoverage":true},{"functionName":"isStringLiteralCode","ranges":[{"startOffset":282,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"templateLiteralToStringConcat","ranges":[{"startOffset":671,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1651,"endOffset":2520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"847","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-trailing-commas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1131,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":703,"endOffset":1127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"848","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-trailing-function-commas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":742,"endOffset":1962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"849","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-typed-arrays.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1648,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":652,"endOffset":1644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"850","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-unicode-codepoint-escapes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3527,"count":1}],"isBlockCoverage":true},{"functionName":"toHex","ranges":[{"startOffset":384,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1000,"endOffset":3523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"851","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-weak-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1187,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":654,"endOffset":1183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"852","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-weak-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1187,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":654,"endOffset":1183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"853","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/lib/rules/no-weakrefs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1254,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":661,"endOffset":1250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"854","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/merge-visitors-in-place.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1302,"count":1}],"isBlockCoverage":true},{"functionName":"mergeVisitorsInPlace","ranges":[{"startOffset":395,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1210,"endOffset":1301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"855","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-unsupported-features/node-builtins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16041,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":15881,"endOffset":16037,"count":0}],"isBlockCoverage":false}]},{"scriptId":"856","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-global/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1297,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1141,"endOffset":1293,"count":0}],"isBlockCoverage":false}]},{"scriptId":"857","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/util/check-prefer-global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1734,"count":1}],"isBlockCoverage":true},{"functionName":"Verifier","ranges":[{"startOffset":413,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"verifyToPreferGlobals","ranges":[{"startOffset":769,"endOffset":1196,"count":0}],"isBlockCoverage":false},{"functionName":"verifyToPreferModules","ranges":[{"startOffset":1295,"endOffset":1615,"count":0}],"isBlockCoverage":false},{"functionName":"checkForPreferGlobal","ranges":[{"startOffset":1636,"endOffset":1733,"count":0}],"isBlockCoverage":false}]},{"scriptId":"858","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-global/console.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1236,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1080,"endOffset":1232,"count":0}],"isBlockCoverage":false}]},{"scriptId":"859","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-global/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1236,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1080,"endOffset":1232,"count":0}],"isBlockCoverage":false}]},{"scriptId":"860","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-global/text-decoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1335,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1179,"endOffset":1331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"861","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-global/text-encoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1335,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1179,"endOffset":1331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"862","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-global/url-search-params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1368,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1212,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"863","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-global/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1242,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1086,"endOffset":1238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"864","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-promises/dns.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2345,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1461,"endOffset":2341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"865","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/prefer-promises/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2242,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1516,"endOffset":2238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"866","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/process-exit-as-throw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4767,"count":1},{"startOffset":651,"endOffset":690,"count":0},{"startOffset":3915,"endOffset":4245,"count":0}],"isBlockCoverage":true},{"functionName":"safeRequire","ranges":[{"startOffset":846,"endOffset":1063,"count":3},{"startOffset":927,"endOffset":1045,"count":6}],"isBlockCoverage":true},{"functionName":"forwardCurrentToHead","ranges":[{"startOffset":1369,"endOffset":2735,"count":0}],"isBlockCoverage":false},{"functionName":"isProcessExit","ranges":[{"startOffset":2913,"endOffset":3299,"count":0}],"isBlockCoverage":false},{"functionName":"overrideLeaveNode","ranges":[{"startOffset":3520,"endOffset":3847,"count":0}],"isBlockCoverage":false},{"functionName":"installProcessExitAsThrow","ranges":[{"startOffset":3942,"endOffset":4071,"count":0}],"isBlockCoverage":false},{"functionName":"restoreProcessExitAsThrow","ranges":[{"startOffset":4103,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4724,"endOffset":4763,"count":8}],"isBlockCoverage":true}]},{"scriptId":"867","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/shebang.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5734,"count":1}],"isBlockCoverage":true},{"functionName":"simulateNodeResolutionAlgorithm","ranges":[{"startOffset":414,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"isBinFile","ranges":[{"startOffset":1087,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"getShebangInfo","ranges":[{"startOffset":1852,"endOffset":2119,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3047,"endOffset":5730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"868","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-hide-core-modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5482,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2260,"endOffset":5478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"869","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-n/lib/rules/no-unsupported-features.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44363,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultVersion","ranges":[{"startOffset":22195,"endOffset":22405,"count":0}],"isBlockCoverage":false},{"functionName":"getIgnoresEnum","ranges":[{"startOffset":22513,"endOffset":22801,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22588,"endOffset":22771,"count":121},{"startOffset":22658,"endOffset":22708,"count":278}],"isBlockCoverage":true},{"functionName":"isIgnored","ranges":[{"startOffset":23045,"endOffset":23212,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptions","ranges":[{"startOffset":23461,"endOffset":26119,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeScope","ranges":[{"startOffset":26327,"endOffset":26525,"count":0}],"isBlockCoverage":false},{"functionName":"hasUnicodeCodePointEscape","ranges":[{"startOffset":26727,"endOffset":26975,"count":0}],"isBlockCoverage":false},{"functionName":"hasPattern","ranges":[{"startOffset":27183,"endOffset":27302,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":28716,"endOffset":44359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"870","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1703,"count":1}],"isBlockCoverage":true}]},{"scriptId":"871","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/param-names.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1875,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":498,"endOffset":1871,"count":8}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":764,"endOffset":1860,"count":38},{"startOffset":844,"endOffset":1852,"count":8},{"startOffset":938,"endOffset":970,"count":0},{"startOffset":1109,"endOffset":1410,"count":0},{"startOffset":1455,"endOffset":1472,"count":1},{"startOffset":1503,"endOffset":1542,"count":1},{"startOffset":1544,"endOffset":1842,"count":0}],"isBlockCoverage":true}]},{"scriptId":"872","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/get-docs-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"getDocsUrl","ranges":[{"startOffset":384,"endOffset":476,"count":15}],"isBlockCoverage":true}]},{"scriptId":"873","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/is-promise-constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1406,"count":1}],"isBlockCoverage":true},{"functionName":"isPromiseConstructor","ranges":[{"startOffset":751,"endOffset":918,"count":38}],"isBlockCoverage":true},{"functionName":"isPromiseConstructorWithInlineExecutor","ranges":[{"startOffset":1060,"endOffset":1317,"count":38},{"startOffset":1158,"endOffset":1192,"count":8},{"startOffset":1193,"endOffset":1311,"count":8}],"isBlockCoverage":true}]},{"scriptId":"874","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-return-wrap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2578,"count":1}],"isBlockCoverage":true},{"functionName":"isInPromise","ranges":[{"startOffset":271,"endOffset":1083,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1551,"endOffset":2574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"875","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/is-promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1235,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":158,"endOffset":1206,"count":0}],"isBlockCoverage":false}]},{"scriptId":"876","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/promise-statics.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":128,"count":1}],"isBlockCoverage":true}]},{"scriptId":"877","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/always-return.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6811,"count":1}],"isBlockCoverage":true},{"functionName":"isFunctionWithBlockStatement","ranges":[{"startOffset":606,"endOffset":832,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberCall","ranges":[{"startOffset":931,"endOffset":1198,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstArgument","ranges":[{"startOffset":1226,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"isInlineThenFunctionExpression","ranges":[{"startOffset":1443,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"isLastCallback","ranges":[{"startOffset":1755,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":3177,"endOffset":3228,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3552,"endOffset":6807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"878","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/catch-or-return.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2985,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":981,"endOffset":2981,"count":0}],"isBlockCoverage":false}]},{"scriptId":"879","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/prefer-await-to-callbacks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2967,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":287,"endOffset":2963,"count":0}],"isBlockCoverage":false}]},{"scriptId":"880","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/prefer-await-to-then.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":319,"endOffset":1497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"881","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-native.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1834,"count":1}],"isBlockCoverage":true},{"functionName":"isDeclared","ranges":[{"startOffset":152,"endOffset":584,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":782,"endOffset":1830,"count":0}],"isBlockCoverage":false}]},{"scriptId":"882","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-callback-in-promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1804,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":791,"endOffset":1800,"count":0}],"isBlockCoverage":false}]},{"scriptId":"883","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/has-promise-callback.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1169,"count":1}],"isBlockCoverage":true},{"functionName":"hasPromiseCallback","ranges":[{"startOffset":816,"endOffset":1131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"884","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/is-inside-promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"isInsidePromise","ranges":[{"startOffset":14,"endOffset":435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"885","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/is-callback.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"isCallback","ranges":[{"startOffset":70,"endOffset":398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"886","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/is-named-callback.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":394,"count":1}],"isBlockCoverage":true},{"functionName":"isNamedCallback","ranges":[{"startOffset":83,"endOffset":393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"887","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-promise-in-callback.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1032,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":406,"endOffset":1028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"888","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/lib/is-inside-callback.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":631,"count":1}],"isBlockCoverage":true},{"functionName":"isInsideCallback","ranges":[{"startOffset":70,"endOffset":595,"count":0}],"isBlockCoverage":false}]},{"scriptId":"889","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-nesting.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3104,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":381,"endOffset":3100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"890","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/avoid-new.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":284,"endOffset":493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"891","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-new-statics.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":915,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":275,"endOffset":911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"892","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-return-in-finally.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":249,"endOffset":1153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"893","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/valid-params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1901,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":342,"endOffset":1897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"894","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-promise/rules/no-multiple-resolved.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14650,"count":1}],"isBlockCoverage":true},{"functionName":"iterateAllPrevPathSegments","ranges":[{"startOffset":1460,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"iterateAllNextPathSegments","ranges":[{"startOffset":2159,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"findSameRoutePathSegment","ranges":[{"startOffset":2902,"endOffset":3731,"count":0}],"isBlockCoverage":false},{"functionName":"CodePathInfo","ranges":[{"startOffset":3796,"endOffset":4025,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentSegmentInfos","ranges":[{"startOffset":4029,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"iterateReports","ranges":[{"startOffset":4692,"endOffset":5157,"count":0}],"isBlockCoverage":false},{"functionName":"_getAlreadyResolvedData","ranges":[{"startOffset":5356,"endOffset":7956,"count":0}],"isBlockCoverage":false},{"functionName":"_getProcessedSegmentInfo","ranges":[{"startOffset":8069,"endOffset":8711,"count":0}],"isBlockCoverage":false},{"functionName":"CodePathSegmentInfo","ranges":[{"startOffset":8831,"endOffset":9059,"count":0}],"isBlockCoverage":false},{"functionName":"get resolved","ranges":[{"startOffset":9063,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"set resolved","ranges":[{"startOffset":9140,"endOffset":9236,"count":0}],"isBlockCoverage":false},{"functionName":"PromiseCodePathContext","ranges":[{"startOffset":9273,"endOffset":9363,"count":0}],"isBlockCoverage":false},{"functionName":"addResolvedTryBlockCodePathSegment","ranges":[{"startOffset":9400,"endOffset":9493,"count":0}],"isBlockCoverage":false},{"functionName":"isResolvedTryBlockCodePathSegment","ranges":[{"startOffset":9530,"endOffset":9629,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":10124,"endOffset":14646,"count":0}],"isBlockCoverage":false}]},{"scriptId":"895","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-config-standard-jsx/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":144,"count":1}],"isBlockCoverage":true}]},{"scriptId":"896","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9009,"count":1}],"isBlockCoverage":true},{"functionName":"filterRules","ranges":[{"startOffset":6981,"endOffset":7100,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7065,"endOffset":7095,"count":196}],"isBlockCoverage":true},{"functionName":"configureAsError","ranges":[{"startOffset":7102,"endOffset":7214,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7181,"endOffset":7209,"count":97}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7258,"endOffset":7289,"count":98}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7396,"endOffset":7426,"count":98}],"isBlockCoverage":true}]},{"scriptId":"897","url":"file:///home/runner/work/deluge/deluge/node_modules/object.fromentries/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true}]},{"scriptId":"898","url":"file:///home/runner/work/deluge/deluge/node_modules/object.fromentries/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":669,"count":1}],"isBlockCoverage":true},{"functionName":"addDataProperty","ranges":[{"startOffset":340,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"fromEntries","ranges":[{"startOffset":544,"endOffset":667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"899","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/AddEntriesFromIterable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1519,"count":1}],"isBlockCoverage":true},{"functionName":"AddEntriesFromIterable","ranges":[{"startOffset":560,"endOffset":1517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"900","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/GetIterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1720,"count":1}],"isBlockCoverage":true},{"functionName":"GetIterator","ranges":[{"startOffset":596,"endOffset":1718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"901","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/getIteratorMethod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1170,"count":1}],"isBlockCoverage":true},{"functionName":"getIteratorMethod","ranges":[{"startOffset":366,"endOffset":1168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"902","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/AdvanceStringIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1010,"count":1}],"isBlockCoverage":true},{"functionName":"AdvanceStringIndex","ranges":[{"startOffset":389,"endOffset":1008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"903","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/CodePointAt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1740,"count":1}],"isBlockCoverage":true},{"functionName":"CodePointAt","ranges":[{"startOffset":599,"endOffset":1738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"904","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/isLeadingSurrogate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true},{"functionName":"isLeadingSurrogate","ranges":[{"startOffset":32,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"905","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/helpers/isTrailingSurrogate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"isTrailingSurrogate","ranges":[{"startOffset":32,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"906","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/UTF16SurrogatePairToCodePoint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":770,"count":1}],"isBlockCoverage":true},{"functionName":"UTF16SurrogatePairToCodePoint","ranges":[{"startOffset":384,"endOffset":768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"907","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/GetMethod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":663,"count":1}],"isBlockCoverage":true},{"functionName":"GetMethod","ranges":[{"startOffset":309,"endOffset":661,"count":0}],"isBlockCoverage":false}]},{"scriptId":"908","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/GetV.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"GetV","ranges":[{"startOffset":270,"endOffset":472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"909","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IteratorClose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1481,"count":1}],"isBlockCoverage":true},{"functionName":"IteratorClose","ranges":[{"startOffset":335,"endOffset":1479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"910","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IteratorStep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":353,"count":1}],"isBlockCoverage":true},{"functionName":"IteratorStep","ranges":[{"startOffset":199,"endOffset":350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"911","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IteratorComplete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"IteratorComplete","ranges":[{"startOffset":294,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"912","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IteratorNext.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":493,"count":1}],"isBlockCoverage":true},{"functionName":"IteratorNext","ranges":[{"startOffset":256,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"913","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/Invoke.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":715,"count":1}],"isBlockCoverage":true},{"functionName":"Invoke","ranges":[{"startOffset":330,"endOffset":713,"count":0}],"isBlockCoverage":false}]},{"scriptId":"914","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/IteratorValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":443,"count":1}],"isBlockCoverage":true},{"functionName":"IteratorValue","ranges":[{"startOffset":251,"endOffset":440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"915","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/ToPropertyKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"ToPropertyKey","ranges":[{"startOffset":269,"endOffset":403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"916","url":"file:///home/runner/work/deluge/deluge/node_modules/object.fromentries/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":199,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":197,"count":2},{"startOffset":178,"endOffset":194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"917","url":"file:///home/runner/work/deluge/deluge/node_modules/object.fromentries/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1}],"isBlockCoverage":true},{"functionName":"shimEntries","ranges":[{"startOffset":117,"endOffset":329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"918","url":"file:///home/runner/work/deluge/deluge/node_modules/object.entries/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true}]},{"scriptId":"919","url":"file:///home/runner/work/deluge/deluge/node_modules/object.entries/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":281,"endOffset":502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"920","url":"file:///home/runner/work/deluge/deluge/node_modules/object.entries/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":189,"count":1},{"startOffset":170,"endOffset":186,"count":0}],"isBlockCoverage":true}]},{"scriptId":"921","url":"file:///home/runner/work/deluge/deluge/node_modules/object.entries/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"shimEntries","ranges":[{"startOffset":117,"endOffset":317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"922","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/boolean-prop-naming.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12587,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1481,"endOffset":12581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"923","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/Components.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29798,"count":1}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":782,"endOffset":864,"count":8128},{"startOffset":819,"endOffset":856,"count":8064},{"startOffset":857,"endOffset":861,"count":64}],"isBlockCoverage":true},{"functionName":"usedPropTypesAreEquivalent","ranges":[{"startOffset":866,"endOffset":1217,"count":0}],"isBlockCoverage":false},{"functionName":"mergeUsedPropTypes","ranges":[{"startOffset":1219,"endOffset":1523,"count":624}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1315,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"Components","ranges":[{"startOffset":1678,"endOffset":1754,"count":16}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":2052,"endOffset":2453,"count":284},{"startOffset":2156,"endOffset":2374,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2690,"endOffset":2853,"count":4492},{"startOffset":2781,"endOffset":2804,"count":374},{"startOffset":2806,"endOffset":2832,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3039,"endOffset":3475,"count":660},{"startOffset":3154,"endOffset":3267,"count":2728},{"startOffset":3199,"endOffset":3224,"count":36},{"startOffset":3224,"endOffset":3267,"count":2692},{"startOffset":3267,"endOffset":3403,"count":624},{"startOffset":3403,"endOffset":3408,"count":104},{"startOffset":3440,"endOffset":3445,"count":624}],"isBlockCoverage":true},{"functionName":"list","ranges":[{"startOffset":3631,"endOffset":4930,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3864,"count":568}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3874,"endOffset":4525,"count":568},{"startOffset":3989,"endOffset":4003,"count":4992},{"startOffset":4005,"endOffset":4196,"count":4424},{"startOffset":4124,"endOffset":4152,"count":0},{"startOffset":4218,"endOffset":4519,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4290,"endOffset":4351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4639,"endOffset":4673,"count":568}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4683,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":5106,"endOffset":5230,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultReactImports","ranges":[{"startOffset":5462,"endOffset":5547,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedReactImports","ranges":[{"startOffset":5672,"endOffset":5753,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultReactImport","ranges":[{"startOffset":5925,"endOffset":6145,"count":0}],"isBlockCoverage":false},{"functionName":"addNamedReactImport","ranges":[{"startOffset":6309,"endOffset":6523,"count":0}],"isBlockCoverage":false},{"functionName":"getWrapperFunctions","ranges":[{"startOffset":6527,"endOffset":7111,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6748,"endOffset":7003,"count":0}],"isBlockCoverage":false},{"functionName":"mergeRules","ranges":[{"startOffset":7343,"endOffset":7924,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7464,"endOffset":7685,"count":96}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7506,"endOffset":7679,"count":720},{"startOffset":7575,"endOffset":7629,"count":440},{"startOffset":7629,"endOffset":7673,"count":280}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7775,"endOffset":7904,"count":440}],"isBlockCoverage":true},{"functionName":"mergedHandler","ranges":[{"startOffset":7807,"endOffset":7899,"count":5267}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7856,"endOffset":7891,"count":7639}],"isBlockCoverage":true},{"functionName":"componentRule","ranges":[{"startOffset":7926,"endOffset":29682,"count":16}],"isBlockCoverage":true},{"functionName":"isDestructuredFromPragmaImport","ranges":[{"startOffset":8453,"endOffset":8565,"count":0}],"isBlockCoverage":false},{"functionName":"isReturningJSX","ranges":[{"startOffset":8572,"endOffset":8680,"count":6}],"isBlockCoverage":true},{"functionName":"isReturningJSXOrNull","ranges":[{"startOffset":8687,"endOffset":8795,"count":134}],"isBlockCoverage":true},{"functionName":"isReturningOnlyNull","ranges":[{"startOffset":8802,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"getPragmaComponentWrapper","ranges":[{"startOffset":8905,"endOffset":9312,"count":895},{"startOffset":9195,"endOffset":9240,"count":0}],"isBlockCoverage":true},{"functionName":"getComponentNameFromJSXElement","ranges":[{"startOffset":9319,"endOffset":9599,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfWrappedComponent","ranges":[{"startOffset":9727,"endOffset":10298,"count":0}],"isBlockCoverage":false},{"functionName":"getDetectedComponents","ranges":[{"startOffset":10416,"endOffset":11039,"count":0}],"isBlockCoverage":false},{"functionName":"nodeWrapsComponent","ranges":[{"startOffset":11222,"endOffset":11468,"count":0}],"isBlockCoverage":false},{"functionName":"isPragmaComponentWrapper","ranges":[{"startOffset":11475,"endOffset":12251,"count":1545},{"startOffset":11559,"endOffset":11590,"count":713},{"startOffset":11590,"endOffset":12250,"count":832}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11627,"endOffset":12243,"count":1664},{"startOffset":11703,"endOffset":11937,"count":1256},{"startOffset":11823,"endOffset":11880,"count":0},{"startOffset":11893,"endOffset":11926,"count":0},{"startOffset":11937,"endOffset":12009,"count":408},{"startOffset":12009,"endOffset":12234,"count":0}],"isBlockCoverage":true},{"functionName":"getParentComponent","ranges":[{"startOffset":12602,"endOffset":12810,"count":306}],"isBlockCoverage":true},{"functionName":"isInAllowedPositionForComponent","ranges":[{"startOffset":12888,"endOffset":13461,"count":895},{"startOffset":12970,"endOffset":12996,"count":32},{"startOffset":13005,"endOffset":13033,"count":40},{"startOffset":13042,"endOffset":13058,"count":100},{"startOffset":13067,"endOffset":13090,"count":100},{"startOffset":13099,"endOffset":13131,"count":100},{"startOffset":13140,"endOffset":13206,"count":100},{"startOffset":13215,"endOffset":13406,"count":0},{"startOffset":13415,"endOffset":13447,"count":795}],"isBlockCoverage":true},{"functionName":"getStatelessComponent","ranges":[{"startOffset":13704,"endOffset":18750,"count":2951},{"startOffset":13831,"endOffset":13886,"count":37},{"startOffset":13895,"endOffset":13930,"count":0},{"startOffset":13939,"endOffset":13969,"count":0},{"startOffset":14016,"endOffset":14058,"count":2324},{"startOffset":14060,"endOffset":18719,"count":901},{"startOffset":14114,"endOffset":14130,"count":60},{"startOffset":14218,"endOffset":14260,"count":8},{"startOffset":14335,"endOffset":14374,"count":6},{"startOffset":14385,"endOffset":14427,"count":0},{"startOffset":14491,"endOffset":14611,"count":0},{"startOffset":14667,"endOffset":14702,"count":32},{"startOffset":14704,"endOffset":14843,"count":0},{"startOffset":15021,"endOffset":15098,"count":895},{"startOffset":15072,"endOffset":15097,"count":0},{"startOffset":15110,"endOffset":15140,"count":6},{"startOffset":15151,"endOffset":15190,"count":6},{"startOffset":15190,"endOffset":15330,"count":895},{"startOffset":15330,"endOffset":15354,"count":8},{"startOffset":15355,"endOffset":15390,"count":2},{"startOffset":15392,"endOffset":15533,"count":0},{"startOffset":15533,"endOffset":15634,"count":895},{"startOffset":15634,"endOffset":15687,"count":0},{"startOffset":15688,"endOffset":15712,"count":0},{"startOffset":15713,"endOffset":15748,"count":0},{"startOffset":15750,"endOffset":15898,"count":0},{"startOffset":15898,"endOffset":16002,"count":895},{"startOffset":16002,"endOffset":16043,"count":0},{"startOffset":16044,"endOffset":16068,"count":0},{"startOffset":16069,"endOffset":16104,"count":0},{"startOffset":16106,"endOffset":16253,"count":0},{"startOffset":16253,"endOffset":16377,"count":895},{"startOffset":16377,"endOffset":16838,"count":0},{"startOffset":16838,"endOffset":16965,"count":895},{"startOffset":16965,"endOffset":17309,"count":0},{"startOffset":17309,"endOffset":17437,"count":895},{"startOffset":17438,"endOffset":17484,"count":639},{"startOffset":17485,"endOffset":17515,"count":0},{"startOffset":17516,"endOffset":17551,"count":0},{"startOffset":17553,"endOffset":17592,"count":0},{"startOffset":17592,"endOffset":17781,"count":895},{"startOffset":17781,"endOffset":17816,"count":0},{"startOffset":17818,"endOffset":17870,"count":0},{"startOffset":17870,"endOffset":17930,"count":895},{"startOffset":17930,"endOffset":17965,"count":100},{"startOffset":17968,"endOffset":18007,"count":895},{"startOffset":18007,"endOffset":18185,"count":0},{"startOffset":18187,"endOffset":18457,"count":0},{"startOffset":18468,"endOffset":18523,"count":0},{"startOffset":18534,"endOffset":18648,"count":0},{"startOffset":18650,"endOffset":18719,"count":0},{"startOffset":18719,"endOffset":18749,"count":2050}],"isBlockCoverage":true},{"functionName":"getParentStatelessComponent","ranges":[{"startOffset":18926,"endOffset":19264,"count":680},{"startOffset":19016,"endOffset":19239,"count":2951},{"startOffset":19154,"endOffset":19202,"count":0}],"isBlockCoverage":true},{"functionName":"getRelatedComponent","ranges":[{"startOffset":19504,"endOffset":22596,"count":0}],"isBlockCoverage":false},{"functionName":"isParentComponentNotStatelessComponent","ranges":[{"startOffset":22603,"endOffset":23057,"count":0}],"isBlockCoverage":false},{"functionName":"isReactHookCall","ranges":[{"startOffset":23536,"endOffset":26368,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":26452,"endOffset":26690,"count":650},{"startOffset":26549,"endOffset":26640,"count":0},{"startOffset":26642,"endOffset":26684,"count":0}],"isBlockCoverage":true},{"functionName":"ClassExpression","ranges":[{"startOffset":26697,"endOffset":26839,"count":0}],"isBlockCoverage":false},{"functionName":"ClassDeclaration","ranges":[{"startOffset":26846,"endOffset":26989,"count":10},{"startOffset":26952,"endOffset":26988,"count":0}],"isBlockCoverage":true},{"functionName":"ObjectExpression","ranges":[{"startOffset":26996,"endOffset":27139,"count":42},{"startOffset":27102,"endOffset":27138,"count":0}],"isBlockCoverage":true},{"functionName":"FunctionExpression","ranges":[{"startOffset":27146,"endOffset":27590,"count":134},{"startOffset":27195,"endOffset":27253,"count":18},{"startOffset":27253,"endOffset":27345,"count":116},{"startOffset":27345,"endOffset":27420,"count":0},{"startOffset":27429,"endOffset":27548,"count":116},{"startOffset":27548,"endOffset":27589,"count":0}],"isBlockCoverage":true},{"functionName":"FunctionDeclaration","ranges":[{"startOffset":27597,"endOffset":27827,"count":8},{"startOffset":27647,"endOffset":27705,"count":0},{"startOffset":27790,"endOffset":27826,"count":0}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":27834,"endOffset":28283,"count":150},{"startOffset":27888,"endOffset":27946,"count":32},{"startOffset":27946,"endOffset":28038,"count":118},{"startOffset":28038,"endOffset":28113,"count":0},{"startOffset":28122,"endOffset":28241,"count":118},{"startOffset":28241,"endOffset":28282,"count":0}],"isBlockCoverage":true},{"functionName":"ThisExpression","ranges":[{"startOffset":28290,"endOffset":28583,"count":374},{"startOffset":28395,"endOffset":28430,"count":0},{"startOffset":28431,"endOffset":28455,"count":0},{"startOffset":28482,"endOffset":28582,"count":0}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":28667,"endOffset":29144,"count":48},{"startOffset":28841,"endOffset":29143,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28873,"endOffset":29136,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":29731,"endOffset":29792,"count":24}],"isBlockCoverage":true}]},{"scriptId":"924","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/variable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2627,"count":1}],"isBlockCoverage":true},{"functionName":"findVariable","ranges":[{"startOffset":345,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"getVariable","ranges":[{"startOffset":689,"endOffset":793,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":753,"endOffset":789,"count":56}],"isBlockCoverage":true},{"functionName":"variablesInScope","ranges":[{"startOffset":1032,"endOffset":1544,"count":32},{"startOffset":1173,"endOffset":1254,"count":106}],"isBlockCoverage":true},{"functionName":"findVariableByName","ranges":[{"startOffset":1809,"endOffset":2233,"count":32},{"startOffset":1984,"endOffset":2006,"count":0},{"startOffset":2058,"endOffset":2103,"count":0},{"startOffset":2154,"endOffset":2193,"count":0}],"isBlockCoverage":true},{"functionName":"getLatestVariableDefinition","ranges":[{"startOffset":2399,"endOffset":2499,"count":0}],"isBlockCoverage":false}]},{"scriptId":"925","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/pragma.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2144,"count":1}],"isBlockCoverage":true},{"functionName":"getCreateClassFromContext","ranges":[{"startOffset":345,"endOffset":799,"count":28},{"startOffset":597,"endOffset":651,"count":0},{"startOffset":693,"endOffset":780,"count":0}],"isBlockCoverage":true},{"functionName":"getFragmentFromContext","ranges":[{"startOffset":858,"endOffset":1289,"count":24},{"startOffset":1096,"endOffset":1147,"count":0},{"startOffset":1189,"endOffset":1270,"count":0}],"isBlockCoverage":true},{"functionName":"getFromContext","ranges":[{"startOffset":1348,"endOffset":2047,"count":76},{"startOffset":1577,"endOffset":1791,"count":0},{"startOffset":1858,"endOffset":1907,"count":0},{"startOffset":1950,"endOffset":2028,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1508,"endOffset":1555,"count":530}],"isBlockCoverage":true}]},{"scriptId":"926","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11950,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":311,"endOffset":673,"count":128}],"isBlockCoverage":true},{"functionName":"fallback","ranges":[{"startOffset":388,"endOffset":500,"count":0}],"isBlockCoverage":false},{"functionName":"loopNodes","ranges":[{"startOffset":675,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"findReturnStatement","ranges":[{"startOffset":1170,"endOffset":1450,"count":0}],"isBlockCoverage":false},{"functionName":"traverseReturns","ranges":[{"startOffset":1956,"endOffset":3530,"count":140},{"startOffset":2083,"endOffset":2142,"count":0},{"startOffset":2189,"endOffset":2210,"count":92},{"startOffset":2212,"endOffset":2267,"count":12},{"startOffset":2267,"endOffset":2864,"count":128},{"startOffset":2864,"endOffset":2901,"count":80},{"startOffset":2906,"endOffset":2947,"count":80},{"startOffset":2952,"endOffset":2986,"count":0},{"startOffset":2991,"endOffset":3008,"count":0},{"startOffset":3008,"endOffset":3529,"count":128}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2116,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2241,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":3041,"endOffset":3521,"count":516},{"startOffset":3157,"endOffset":3271,"count":86},{"startOffset":3280,"endOffset":3302,"count":148},{"startOffset":3311,"endOffset":3330,"count":184},{"startOffset":3339,"endOffset":3359,"count":184},{"startOffset":3368,"endOffset":3390,"count":184},{"startOffset":3399,"endOffset":3422,"count":184},{"startOffset":3431,"endOffset":3467,"count":184},{"startOffset":3476,"endOffset":3507,"count":246}],"isBlockCoverage":true},{"functionName":"breakTraverse","ranges":[{"startOffset":3083,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameNode","ranges":[{"startOffset":3650,"endOffset":3880,"count":2270},{"startOffset":3702,"endOffset":3763,"count":2131},{"startOffset":3765,"endOffset":3791,"count":139},{"startOffset":3791,"endOffset":3832,"count":2131},{"startOffset":3832,"endOffset":3863,"count":2104},{"startOffset":3863,"endOffset":3879,"count":27}],"isBlockCoverage":true},{"functionName":"getPropertyName","ranges":[{"startOffset":3985,"endOffset":4105,"count":2270},{"startOffset":4082,"endOffset":4097,"count":2243},{"startOffset":4098,"endOffset":4102,"count":27}],"isBlockCoverage":true},{"functionName":"getComponentProperties","ranges":[{"startOffset":4245,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstNodeInLine","ranges":[{"startOffset":4712,"endOffset":5084,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeFirstInLine","ranges":[{"startOffset":5313,"endOffset":5533,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeExpression","ranges":[{"startOffset":5713,"endOffset":5844,"count":20}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":5979,"endOffset":6092,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLike","ranges":[{"startOffset":6272,"endOffset":6385,"count":0}],"isBlockCoverage":false},{"functionName":"isClass","ranges":[{"startOffset":6514,"endOffset":6618,"count":0}],"isBlockCoverage":false},{"functionName":"inConstructor","ranges":[{"startOffset":6719,"endOffset":6984,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":7110,"endOffset":7181,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyValue","ranges":[{"startOffset":7381,"endOffset":7935,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesized","ranges":[{"startOffset":8117,"endOffset":8505,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentLHS","ranges":[{"startOffset":8655,"endOffset":8805,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapTSAsExpression","ranges":[{"startOffset":8988,"endOffset":9112,"count":2386},{"startOffset":9037,"endOffset":9070,"count":2382},{"startOffset":9072,"endOffset":9095,"count":0}],"isBlockCoverage":true},{"functionName":"isTSTypeReference","ranges":[{"startOffset":9114,"endOffset":9248,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAnnotation","ranges":[{"startOffset":9250,"endOffset":9386,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeLiteral","ranges":[{"startOffset":9388,"endOffset":9518,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntersectionType","ranges":[{"startOffset":9520,"endOffset":9660,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceHeritage","ranges":[{"startOffset":9662,"endOffset":9804,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceDeclaration","ranges":[{"startOffset":9806,"endOffset":10062,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeDeclaration","ranges":[{"startOffset":10064,"endOffset":10401,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAliasDeclaration","ranges":[{"startOffset":10403,"endOffset":10739,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParenthesizedType","ranges":[{"startOffset":10741,"endOffset":10886,"count":0}],"isBlockCoverage":false},{"functionName":"isTSFunctionType","ranges":[{"startOffset":10888,"endOffset":11020,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeQuery","ranges":[{"startOffset":11022,"endOffset":11148,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterInstantiation","ranges":[{"startOffset":11150,"endOffset":11310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"927","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/componentUtil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4642,"count":1}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":211,"endOffset":492,"count":2}],"isBlockCoverage":true},{"functionName":"memoizedFn","ranges":[{"startOffset":290,"endOffset":489,"count":9377},{"startOffset":392,"endOffset":425,"count":9321},{"startOffset":425,"endOffset":488,"count":56}],"isBlockCoverage":true},{"functionName":"isES5Component","ranges":[{"startOffset":702,"endOffset":1209,"count":4076},{"startOffset":847,"endOffset":869,"count":2993},{"startOffset":871,"endOffset":894,"count":3671},{"startOffset":894,"endOffset":1001,"count":405},{"startOffset":1001,"endOffset":1088,"count":100},{"startOffset":1044,"endOffset":1083,"count":0},{"startOffset":1088,"endOffset":1191,"count":305},{"startOffset":1191,"endOffset":1208,"count":0}],"isBlockCoverage":true},{"functionName":"isExplicitComponent","ranges":[{"startOffset":1371,"endOffset":2419,"count":1225},{"startOffset":1934,"endOffset":1969,"count":0},{"startOffset":2018,"endOffset":2418,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2303,"endOffset":2380,"count":0}],"isBlockCoverage":false},{"functionName":"isES6Component","ranges":[{"startOffset":2504,"endOffset":3002,"count":1225},{"startOffset":2624,"endOffset":2646,"count":0},{"startOffset":2672,"endOffset":2695,"count":416},{"startOffset":2695,"endOffset":2747,"count":809},{"startOffset":2747,"endOffset":2873,"count":0},{"startOffset":2873,"endOffset":2984,"count":809},{"startOffset":2984,"endOffset":3001,"count":0}],"isBlockCoverage":true},{"functionName":"getParentES5Component","ranges":[{"startOffset":3127,"endOffset":3439,"count":1884},{"startOffset":3219,"endOffset":3422,"count":7908},{"startOffset":3290,"endOffset":3318,"count":4140},{"startOffset":3333,"endOffset":3365,"count":3966},{"startOffset":3367,"endOffset":3393,"count":0}],"isBlockCoverage":true},{"functionName":"getParentES6Component","ranges":[{"startOffset":3566,"endOffset":3838,"count":1884},{"startOffset":3657,"endOffset":3682,"count":5530},{"startOffset":3684,"endOffset":3714,"count":4341},{"startOffset":3736,"endOffset":3750,"count":1189},{"startOffset":3764,"endOffset":3797,"count":1189},{"startOffset":3821,"endOffset":3837,"count":0}],"isBlockCoverage":true},{"functionName":"isPureComponent","ranges":[{"startOffset":3976,"endOffset":4246,"count":0}],"isBlockCoverage":false},{"functionName":"isStateMemberExpression","ranges":[{"startOffset":4303,"endOffset":4463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"928","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/doctrine/lib/doctrine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32445,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188,"endOffset":32404,"count":1}],"isBlockCoverage":true},{"functionName":"sliceSource","ranges":[{"startOffset":417,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":532,"endOffset":707,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwnProperty","ranges":[{"startOffset":613,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"shallowCopy","ranges":[{"startOffset":717,"endOffset":928,"count":1},{"startOffset":797,"endOffset":902,"count":20}],"isBlockCoverage":true},{"functionName":"isASCIIAlphanumeric","ranges":[{"startOffset":934,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"isParamTitle","ranges":[{"startOffset":1173,"endOffset":1286,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnTitle","ranges":[{"startOffset":1292,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":1393,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"isNameParameterRequired","ranges":[{"startOffset":1490,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedName","ranges":[{"startOffset":1698,"endOffset":1827,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedNested","ranges":[{"startOffset":1833,"endOffset":1929,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedOptional","ranges":[{"startOffset":1935,"endOffset":2033,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterRequired","ranges":[{"startOffset":2039,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedType","ranges":[{"startOffset":2522,"endOffset":2962,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapComment","ranges":[{"startOffset":3282,"endOffset":3749,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnwrappedCommentIndex","ranges":[{"startOffset":4140,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4823,"endOffset":31912,"count":1}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":5048,"endOffset":5372,"count":0}],"isBlockCoverage":false},{"functionName":"scanTitle","ranges":[{"startOffset":5382,"endOffset":5654,"count":0}],"isBlockCoverage":false},{"functionName":"seekContent","ranges":[{"startOffset":5664,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"parseType","ranges":[{"startOffset":6552,"endOffset":8436,"count":0}],"isBlockCoverage":false},{"functionName":"scanIdentifier","ranges":[{"startOffset":8446,"endOffset":8890,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhiteSpace","ranges":[{"startOffset":8900,"endOffset":9133,"count":0}],"isBlockCoverage":false},{"functionName":"parseName","ranges":[{"startOffset":9143,"endOffset":13092,"count":0}],"isBlockCoverage":false},{"functionName":"skipToTag","ranges":[{"startOffset":13102,"endOffset":13438,"count":0}],"isBlockCoverage":false},{"functionName":"convertIndex","ranges":[{"startOffset":13448,"endOffset":13664,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser","ranges":[{"startOffset":13674,"endOffset":14198,"count":0}],"isBlockCoverage":false},{"functionName":"addError","ranges":[{"startOffset":14269,"endOffset":14919,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseType","ranges":[{"startOffset":14962,"endOffset":16133,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser._parseNamePath","ranges":[{"startOffset":16181,"endOffset":16607,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseNamePath","ranges":[{"startOffset":16654,"endOffset":16724,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseNamePathOptional","ranges":[{"startOffset":16779,"endOffset":16848,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseName","ranges":[{"startOffset":16892,"endOffset":19058,"count":0}],"isBlockCoverage":false},{"functionName":"parseDescription","ranges":[{"startOffset":19108,"endOffset":19476,"count":0}],"isBlockCoverage":false},{"functionName":"parseDescription","ranges":[{"startOffset":19522,"endOffset":20277,"count":0}],"isBlockCoverage":false},{"functionName":"parseKind","ranges":[{"startOffset":20320,"endOffset":21086,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccess","ranges":[{"startOffset":21131,"endOffset":21552,"count":0}],"isBlockCoverage":false},{"functionName":"parseThis","ranges":[{"startOffset":21595,"endOffset":22340,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariation","ranges":[{"startOffset":22388,"endOffset":22814,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.ensureEnd","ranges":[{"startOffset":22857,"endOffset":23162,"count":0}],"isBlockCoverage":false},{"functionName":"epilogue","ranges":[{"startOffset":23204,"endOffset":23863,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":27745,"endOffset":28779,"count":0}],"isBlockCoverage":false},{"functionName":"parseTag","ranges":[{"startOffset":28790,"endOffset":29313,"count":0}],"isBlockCoverage":false},{"functionName":"scanJSDocDescription","ranges":[{"startOffset":29369,"endOffset":30058,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":30068,"endOffset":31875,"count":0}],"isBlockCoverage":false}]},{"scriptId":"929","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/doctrine/lib/typed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245,"endOffset":38464,"count":1}],"isBlockCoverage":true},{"functionName":"isTypeName","ranges":[{"startOffset":2016,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"Context","ranges":[{"startOffset":2199,"endOffset":2376,"count":0}],"isBlockCoverage":false},{"functionName":"Context.restore","ranges":[{"startOffset":2410,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"Context.save","ranges":[{"startOffset":2573,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAddRange","ranges":[{"startOffset":2658,"endOffset":2831,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":2837,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"scanHexEscape","ranges":[{"startOffset":2947,"endOffset":3410,"count":0}],"isBlockCoverage":false},{"functionName":"scanString","ranges":[{"startOffset":3416,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"scanNumber","ranges":[{"startOffset":6823,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"scanTypeName","ranges":[{"startOffset":10613,"endOffset":11183,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":11189,"endOffset":14768,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":14774,"endOffset":14908,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":14914,"endOffset":15075,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnionType","ranges":[{"startOffset":15325,"endOffset":15957,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayType","ranges":[{"startOffset":16162,"endOffset":17077,"count":0}],"isBlockCoverage":false},{"functionName":"parseFieldName","ranges":[{"startOffset":17083,"endOffset":17416,"count":0}],"isBlockCoverage":false},{"functionName":"parseFieldType","ranges":[{"startOffset":17636,"endOffset":18158,"count":0}],"isBlockCoverage":false},{"functionName":"parseRecordType","ranges":[{"startOffset":18319,"endOffset":18990,"count":0}],"isBlockCoverage":false},{"functionName":"parseNameExpression","ranges":[{"startOffset":19264,"endOffset":19784,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeExpressionList","ranges":[{"startOffset":19910,"endOffset":20163,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeName","ranges":[{"startOffset":20401,"endOffset":20932,"count":0}],"isBlockCoverage":false},{"functionName":"parseResultType","ranges":[{"startOffset":21134,"endOffset":21446,"count":0}],"isBlockCoverage":false},{"functionName":"parseParametersType","ranges":[{"startOffset":22129,"endOffset":23843,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionType","ranges":[{"startOffset":24198,"endOffset":25939,"count":0}],"isBlockCoverage":false},{"functionName":"parseBasicTypeExpression","ranges":[{"startOffset":26139,"endOffset":28221,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeExpression","ranges":[{"startOffset":28474,"endOffset":30747,"count":0}],"isBlockCoverage":false},{"functionName":"parseTop","ranges":[{"startOffset":31027,"endOffset":31565,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopParamType","ranges":[{"startOffset":31571,"endOffset":32116,"count":0}],"isBlockCoverage":false},{"functionName":"parseType","ranges":[{"startOffset":32122,"endOffset":32672,"count":0}],"isBlockCoverage":false},{"functionName":"parseParamType","ranges":[{"startOffset":32678,"endOffset":33242,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyImpl","ranges":[{"startOffset":33248,"endOffset":38132,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":38138,"endOffset":38317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"930","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/doctrine/lib/utility.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":99,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"DoctrineError","ranges":[{"startOffset":236,"endOffset":344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":376,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"Middle","ranges":[{"startOffset":411,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"throwError","ranges":[{"startOffset":616,"endOffset":694,"count":0}],"isBlockCoverage":false}]},{"scriptId":"931","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/propTypes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44723,"count":1}],"isBlockCoverage":true},{"functionName":"isFunctionType","ranges":[{"startOffset":573,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperTypeParameterPropsDeclaration","ranges":[{"startOffset":1034,"endOffset":1303,"count":10},{"startOffset":1136,"endOffset":1170,"count":0},{"startOffset":1208,"endOffset":1253,"count":0},{"startOffset":1255,"endOffset":1281,"count":0}],"isBlockCoverage":true},{"functionName":"iterateProperties","ranges":[{"startOffset":1744,"endOffset":2242,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideClassBody","ranges":[{"startOffset":2432,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"startWithCapitalizedLetter","ranges":[{"startOffset":2629,"endOffset":2790,"count":0}],"isBlockCoverage":false},{"functionName":"propTypesInstructions","ranges":[{"startOffset":2809,"endOffset":44721,"count":16}],"isBlockCoverage":true},{"functionName":"typeScope","ranges":[{"startOffset":3904,"endOffset":3966,"count":300}],"isBlockCoverage":true},{"functionName":"getInTypeScope","ranges":[{"startOffset":4152,"endOffset":4227,"count":0}],"isBlockCoverage":false},{"functionName":"setInTypeScope","ranges":[{"startOffset":4479,"endOffset":4580,"count":0}],"isBlockCoverage":false},{"functionName":"hasCustomValidator","ranges":[{"startOffset":4802,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"GenericTypeAnnotation","ranges":[{"startOffset":5028,"endOffset":5266,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":5273,"endOffset":7130,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":7137,"endOffset":7589,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":7596,"endOffset":8009,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeAnnotation","ranges":[{"startOffset":8506,"endOffset":8979,"count":0}],"isBlockCoverage":false},{"functionName":"buildTypeAnnotationDeclarationTypes","ranges":[{"startOffset":9444,"endOffset":10017,"count":0}],"isBlockCoverage":false},{"functionName":"declarePropTypesForObjectTypeAnnotation","ranges":[{"startOffset":10339,"endOffset":11395,"count":0}],"isBlockCoverage":false},{"functionName":"declarePropTypesForIntersectionTypeAnnotation","ranges":[{"startOffset":11802,"endOffset":12632,"count":0}],"isBlockCoverage":false},{"functionName":"resolveValueForIdentifierNode","ranges":[{"startOffset":12826,"endOffset":13272,"count":0}],"isBlockCoverage":false},{"functionName":"buildReactDeclarationTypes","ranges":[{"startOffset":13687,"endOffset":17459,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReactGenericTypeAnnotation","ranges":[{"startOffset":17463,"endOffset":18077,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftMostTypeName","ranges":[{"startOffset":18299,"endOffset":18434,"count":0}],"isBlockCoverage":false},{"functionName":"getRightMostTypeName","ranges":[{"startOffset":18438,"endOffset":18577,"count":0}],"isBlockCoverage":false},{"functionName":"filterInterfaceOrTypeAlias","ranges":[{"startOffset":18721,"endOffset":18875,"count":0}],"isBlockCoverage":false},{"functionName":"filterInterfaceOrAliasByName","ranges":[{"startOffset":19068,"endOffset":19284,"count":0}],"isBlockCoverage":false},{"functionName":"DeclarePropTypesForTSTypeAnnotation","ranges":[{"startOffset":19336,"endOffset":19730,"count":0}],"isBlockCoverage":false},{"functionName":"visitTSNode","ranges":[{"startOffset":19839,"endOffset":20969,"count":0}],"isBlockCoverage":false},{"functionName":"searchDeclarationByName","ranges":[{"startOffset":21146,"endOffset":24143,"count":0}],"isBlockCoverage":false},{"functionName":"traverseDeclaredInterfaceOrTypeAlias","ranges":[{"startOffset":24321,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"convertIntersectionTypeToPropTypes","ranges":[{"startOffset":25222,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"convertReturnTypeToPropTypes","ranges":[{"startOffset":25458,"endOffset":29571,"count":0}],"isBlockCoverage":false},{"functionName":"endAndStructDeclaredPropTypes","ranges":[{"startOffset":29577,"endOffset":30578,"count":0}],"isBlockCoverage":false},{"functionName":"markPropTypesAsDeclared","ranges":[{"startOffset":30757,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"markAnnotatedFunctionArgumentsAsDeclared","ranges":[{"startOffset":36294,"endOffset":38974,"count":184},{"startOffset":36397,"endOffset":36418,"count":68},{"startOffset":36418,"endOffset":36474,"count":116},{"startOffset":36481,"endOffset":36510,"count":72},{"startOffset":36517,"endOffset":36553,"count":0},{"startOffset":36560,"endOffset":36832,"count":0},{"startOffset":36839,"endOffset":37194,"count":0},{"startOffset":37194,"endOffset":37255,"count":116},{"startOffset":37312,"endOffset":37347,"count":10},{"startOffset":37467,"endOffset":37495,"count":116},{"startOffset":37497,"endOffset":37518,"count":116},{"startOffset":37518,"endOffset":37649,"count":0},{"startOffset":37651,"endOffset":37808,"count":0},{"startOffset":37810,"endOffset":38970,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38097,"endOffset":38349,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSuperParameterPropsType","ranges":[{"startOffset":39240,"endOffset":40266,"count":0}],"isBlockCoverage":false},{"functionName":"isAnnotatedClassPropsDeclaration","ranges":[{"startOffset":40517,"endOffset":40924,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":40941,"endOffset":41275,"count":0}],"isBlockCoverage":false},{"functionName":"ClassDeclaration","ranges":[{"startOffset":41282,"endOffset":41453,"count":10},{"startOffset":41361,"endOffset":41447,"count":0}],"isBlockCoverage":true},{"functionName":"ClassProperty, PropertyDefinition","ranges":[{"startOffset":41460,"endOffset":41747,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":41754,"endOffset":42028,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41855,"endOffset":42020,"count":70},{"startOffset":41957,"endOffset":42019,"count":0}],"isBlockCoverage":true},{"functionName":"FunctionExpression","ranges":[{"startOffset":42035,"endOffset":42184,"count":134},{"startOffset":42113,"endOffset":42178,"count":26}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":42191,"endOffset":43039,"count":48},{"startOffset":42298,"endOffset":43033,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42332,"endOffset":43023,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":43186,"endOffset":43577,"count":1052},{"startOffset":43261,"endOffset":43571,"count":0}],"isBlockCoverage":true},{"functionName":"MethodDefinition","ranges":[{"startOffset":43584,"endOffset":44009,"count":108},{"startOffset":43632,"endOffset":43654,"count":4},{"startOffset":43655,"endOffset":43697,"count":0},{"startOffset":43724,"endOffset":44003,"count":0}],"isBlockCoverage":true},{"functionName":"TypeAlias","ranges":[{"startOffset":44016,"endOffset":44087,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterDeclaration","ranges":[{"startOffset":44094,"endOffset":44304,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":44311,"endOffset":44348,"count":16}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":44355,"endOffset":44425,"count":300}],"isBlockCoverage":true},{"functionName":"BlockStatement:exit","ranges":[{"startOffset":44432,"endOffset":44482,"count":300}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":44489,"endOffset":44713,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44539,"endOffset":44705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"932","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flatmap/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":419,"count":1}],"isBlockCoverage":true}]},{"scriptId":"933","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flatmap/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"flatMap","ranges":[{"startOffset":381,"endOffset":756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"934","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flatmap/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":160,"count":1},{"startOffset":140,"endOffset":157,"count":0}],"isBlockCoverage":true}]},{"scriptId":"935","url":"file:///home/runner/work/deluge/deluge/node_modules/array.prototype.flatmap/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"shimFlatMap","ranges":[{"startOffset":172,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"936","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/annotations.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1029,"count":1}],"isBlockCoverage":true},{"functionName":"isAnnotatedFunctionPropsDeclaration","ranges":[{"startOffset":402,"endOffset":966,"count":116},{"startOffset":516,"endOffset":539,"count":0},{"startOffset":604,"endOffset":625,"count":6},{"startOffset":626,"endOffset":642,"count":110},{"startOffset":871,"endOffset":901,"count":2},{"startOffset":927,"endOffset":962,"count":0}],"isBlockCoverage":true}]},{"scriptId":"937","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3398,"count":1}],"isBlockCoverage":true},{"functionName":"isPropTypesDeclaration","ranges":[{"startOffset":347,"endOffset":640,"count":1122},{"startOffset":472,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"isContextTypesDeclaration","ranges":[{"startOffset":852,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"isContextTypeDeclaration","ranges":[{"startOffset":1363,"endOffset":1464,"count":0}],"isBlockCoverage":false},{"functionName":"isChildContextTypesDeclaration","ranges":[{"startOffset":1686,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultPropsDeclaration","ranges":[{"startOffset":2050,"endOffset":2218,"count":1052}],"isBlockCoverage":true},{"functionName":"isDisplayNameDeclaration","ranges":[{"startOffset":2403,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"isRequiredPropType","ranges":[{"startOffset":3017,"endOffset":3178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"938","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5570,"count":1}],"isBlockCoverage":true},{"functionName":"resetWarningFlag","ranges":[{"startOffset":328,"endOffset":394,"count":0}],"isBlockCoverage":false},{"functionName":"resetDetectedVersion","ranges":[{"startOffset":429,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBasedir","ranges":[{"startOffset":508,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"detectReactVersion","ranges":[{"startOffset":1150,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"getReactVersionFromContext","ranges":[{"startOffset":2060,"endOffset":3344,"count":24},{"startOffset":2424,"endOffset":2484,"count":0},{"startOffset":2530,"endOffset":2681,"count":0},{"startOffset":2724,"endOffset":2966,"count":0},{"startOffset":3012,"endOffset":3028,"count":0},{"startOffset":3145,"endOffset":3291,"count":0},{"startOffset":3325,"endOffset":3341,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3094,"endOffset":3116,"count":24}],"isBlockCoverage":true},{"functionName":"detectFlowVersion","ranges":[{"startOffset":3393,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"getFlowVersionFromContext","ranges":[{"startOffset":4028,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5141,"endOffset":5229,"count":24}],"isBlockCoverage":true},{"functionName":"testReactVersion","ranges":[{"startOffset":5231,"endOffset":5347,"count":24}],"isBlockCoverage":true},{"functionName":"testFlowVersion","ranges":[{"startOffset":5349,"endOffset":5463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"939","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/resolve/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":97,"count":1}],"isBlockCoverage":true}]},{"scriptId":"940","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/resolve/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12566,"count":1},{"startOffset":403,"endOffset":416,"count":0}],"isBlockCoverage":true},{"functionName":"defaultPaths","ranges":[{"startOffset":466,"endOffset":592,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":615,"endOffset":893,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":915,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":1209,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"maybeRealpath","ranges":[{"startOffset":1447,"endOffset":1604,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReadPackage","ranges":[{"startOffset":1632,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageCandidates","ranges":[{"startOffset":2012,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2238,"endOffset":12564,"count":0}],"isBlockCoverage":false}]},{"scriptId":"941","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/resolve/lib/homedir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":805,"count":1},{"startOffset":183,"endOffset":803,"count":0}],"isBlockCoverage":true},{"functionName":"homedir","ranges":[{"startOffset":186,"endOffset":803,"count":0}],"isBlockCoverage":false}]},{"scriptId":"942","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/resolve/lib/caller.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"943","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/resolve/lib/node-modules-paths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1294,"count":1},{"startOffset":51,"endOffset":75,"count":0}],"isBlockCoverage":true},{"functionName":"getNodeModulesDirs","ranges":[{"startOffset":141,"endOffset":762,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModulesPaths","ranges":[{"startOffset":782,"endOffset":1292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"944","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/resolve/lib/normalize-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":348,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"945","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/node_modules/resolve/lib/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7706,"count":1},{"startOffset":415,"endOffset":432,"count":0}],"isBlockCoverage":true},{"functionName":"defaultPaths","ranges":[{"startOffset":482,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":631,"endOffset":905,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":927,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":1219,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"maybeRealpathSync","ranges":[{"startOffset":1448,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReadPackageSync","ranges":[{"startOffset":1628,"endOffset":1732,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageCandidates","ranges":[{"startOffset":1762,"endOffset":1968,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":1988,"endOffset":7704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"946","url":"file:///home/runner/work/deluge/deluge/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42130,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":8258,"endOffset":8331,"count":38},{"startOffset":8293,"endOffset":8329,"count":34}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":494}],"isBlockCoverage":true},{"functionName":"tok","ranges":[{"startOffset":879,"endOffset":912,"count":38}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8355,"endOffset":8881,"count":24},{"startOffset":8438,"endOffset":8520,"count":0},{"startOffset":8555,"endOffset":8579,"count":0},{"startOffset":8616,"endOffset":8637,"count":0},{"startOffset":8674,"endOffset":8695,"count":0},{"startOffset":8721,"endOffset":8734,"count":0},{"startOffset":8772,"endOffset":8793,"count":0},{"startOffset":8847,"endOffset":8879,"count":0}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":8905,"endOffset":9006,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":9030,"endOffset":9160,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":9187,"endOffset":10883,"count":120},{"startOffset":9239,"endOffset":9269,"count":96},{"startOffset":9271,"endOffset":9353,"count":24},{"startOffset":9387,"endOffset":9507,"count":48},{"startOffset":9458,"endOffset":9503,"count":0},{"startOffset":9507,"endOffset":9606,"count":72},{"startOffset":9546,"endOffset":9606,"count":0},{"startOffset":9606,"endOffset":9643,"count":72},{"startOffset":9643,"endOffset":9728,"count":0},{"startOffset":9728,"endOffset":9763,"count":72},{"startOffset":9763,"endOffset":9808,"count":0},{"startOffset":9808,"endOffset":9948,"count":72},{"startOffset":9948,"endOffset":9961,"count":0},{"startOffset":9962,"endOffset":9974,"count":72},{"startOffset":9987,"endOffset":10047,"count":0},{"startOffset":10047,"endOffset":10220,"count":72},{"startOffset":10222,"endOffset":10276,"count":0},{"startOffset":10276,"endOffset":10331,"count":72},{"startOffset":10333,"endOffset":10387,"count":0},{"startOffset":10387,"endOffset":10442,"count":72},{"startOffset":10444,"endOffset":10498,"count":0},{"startOffset":10498,"endOffset":10585,"count":72},{"startOffset":10585,"endOffset":10821,"count":0},{"startOffset":10821,"endOffset":10843,"count":72},{"startOffset":10843,"endOffset":10860,"count":0},{"startOffset":10861,"endOffset":10865,"count":72}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10635,"endOffset":10816,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":10911,"endOffset":11102,"count":72},{"startOffset":11021,"endOffset":11078,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.toString","ranges":[{"startOffset":11132,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":11198,"endOffset":11423,"count":24},{"startOffset":11312,"endOffset":11361,"count":0},{"startOffset":11396,"endOffset":11421,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11456,"endOffset":11726,"count":24},{"startOffset":11509,"endOffset":11558,"count":0},{"startOffset":11613,"endOffset":11668,"count":0},{"startOffset":11669,"endOffset":11724,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11758,"endOffset":12545,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareBuild","ranges":[{"startOffset":12579,"endOffset":13071,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":13241,"endOffset":16302,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":16322,"endOffset":16579,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":16601,"endOffset":17129,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":17205,"endOffset":17450,"count":24},{"startOffset":17367,"endOffset":17370,"count":0},{"startOffset":17393,"endOffset":17397,"count":0},{"startOffset":17420,"endOffset":17423,"count":0},{"startOffset":17436,"endOffset":17440,"count":0}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":17502,"endOffset":17575,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":17599,"endOffset":17664,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":17688,"endOffset":17753,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":17777,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17870,"endOffset":17964,"count":24}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":18002,"endOffset":18063,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":18101,"endOffset":18287,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":18317,"endOffset":18382,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":18404,"endOffset":18522,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":18546,"endOffset":18665,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":18683,"endOffset":18746,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":18764,"endOffset":18827,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":18845,"endOffset":18910,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":18930,"endOffset":18996,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":19016,"endOffset":19081,"count":24}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":19101,"endOffset":19166,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":19186,"endOffset":19900,"count":24},{"startOffset":19239,"endOffset":19381,"count":0},{"startOffset":19387,"endOffset":19529,"count":0},{"startOffset":19535,"endOffset":19543,"count":0},{"startOffset":19548,"endOffset":19557,"count":0},{"startOffset":19562,"endOffset":19601,"count":0},{"startOffset":19607,"endOffset":19647,"count":0},{"startOffset":19653,"endOffset":19691,"count":0},{"startOffset":19743,"endOffset":19781,"count":0},{"startOffset":19787,"endOffset":19827,"count":0},{"startOffset":19833,"endOffset":19894,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":19934,"endOffset":20586,"count":24},{"startOffset":20019,"endOffset":20101,"count":0},{"startOffset":20137,"endOffset":20245,"count":0},{"startOffset":20284,"endOffset":20330,"count":0},{"startOffset":20472,"endOffset":20497,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.parse","ranges":[{"startOffset":20630,"endOffset":21093,"count":24},{"startOffset":20677,"endOffset":20700,"count":0},{"startOffset":20755,"endOffset":20815,"count":0},{"startOffset":20861,"endOffset":20865,"count":0},{"startOffset":20895,"endOffset":20923,"count":0},{"startOffset":20998,"endOffset":21025,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.toString","ranges":[{"startOffset":21127,"endOffset":21162,"count":24}],"isBlockCoverage":true},{"functionName":"Comparator.test","ranges":[{"startOffset":21192,"endOffset":21550,"count":24},{"startOffset":21316,"endOffset":21337,"count":0},{"startOffset":21374,"endOffset":21483,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.intersects","ranges":[{"startOffset":21586,"endOffset":23312,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":23336,"endOffset":24393,"count":24},{"startOffset":23385,"endOffset":23415,"count":0},{"startOffset":23531,"endOffset":23727,"count":0},{"startOffset":23764,"endOffset":23812,"count":0},{"startOffset":23846,"endOffset":23888,"count":0},{"startOffset":24311,"endOffset":24374,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24105,"endOffset":24168,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24183,"endOffset":24284,"count":24}],"isBlockCoverage":true},{"functionName":"Range.format","ranges":[{"startOffset":24420,"endOffset":24559,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24462,"endOffset":24518,"count":24}],"isBlockCoverage":true},{"functionName":"Range.toString","ranges":[{"startOffset":24588,"endOffset":24623,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":24654,"endOffset":25892,"count":24},{"startOffset":24788,"endOffset":24812,"count":0},{"startOffset":25432,"endOffset":25455,"count":0},{"startOffset":25633,"endOffset":25785,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25508,"endOffset":25576,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25723,"endOffset":25780,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25802,"endOffset":25869,"count":24}],"isBlockCoverage":true},{"functionName":"Range.intersects","ranges":[{"startOffset":25923,"endOffset":26537,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":26637,"endOffset":27067,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":27157,"endOffset":27357,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":27503,"endOffset":27838,"count":24}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":27840,"endOffset":27916,"count":72}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":28189,"endOffset":28341,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28268,"endOffset":28328,"count":24}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":28343,"endOffset":29131,"count":24},{"startOffset":28407,"endOffset":28425,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28465,"endOffset":29128,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":29330,"endOffset":29482,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29409,"endOffset":29469,"count":24}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":29484,"endOffset":30969,"count":24},{"startOffset":29580,"endOffset":29598,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29638,"endOffset":30966,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":30971,"endOffset":31159,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31085,"endOffset":31146,"count":24}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":31161,"endOffset":32910,"count":24},{"startOffset":31247,"endOffset":31266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31307,"endOffset":32907,"count":24},{"startOffset":31505,"endOffset":31512,"count":0},{"startOffset":31514,"endOffset":31537,"count":0},{"startOffset":31702,"endOffset":31708,"count":0},{"startOffset":31727,"endOffset":31904,"count":0},{"startOffset":31928,"endOffset":32654,"count":0},{"startOffset":32668,"endOffset":32742,"count":0},{"startOffset":32756,"endOffset":32854,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":33035,"endOffset":33229,"count":24}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":33445,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":34102,"endOffset":34454,"count":24},{"startOffset":34139,"endOffset":34161,"count":0},{"startOffset":34266,"endOffset":34303,"count":0},{"startOffset":34437,"endOffset":34453,"count":0}],"isBlockCoverage":true},{"functionName":"testSet","ranges":[{"startOffset":34456,"endOffset":35477,"count":24},{"startOffset":34571,"endOffset":34597,"count":0},{"startOffset":34635,"endOffset":34664,"count":0},{"startOffset":34666,"endOffset":35460,"count":0}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":35509,"endOffset":35670,"count":24},{"startOffset":35606,"endOffset":35639,"count":0}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":35710,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":36196,"endOffset":36641,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":36675,"endOffset":37918,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":37952,"endOffset":38191,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":38287,"endOffset":38376,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":38476,"endOffset":38565,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":38593,"endOffset":40384,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":40418,"endOffset":40572,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":40606,"endOffset":40734,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":40760,"endOffset":42129,"count":24},{"startOffset":40830,"endOffset":40854,"count":0},{"startOffset":40891,"endOffset":40926,"count":0},{"startOffset":40963,"endOffset":40984,"count":0},{"startOffset":41097,"endOffset":41987,"count":0},{"startOffset":42011,"endOffset":42032,"count":0}],"isBlockCoverage":true}]},{"scriptId":"947","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":124,"endOffset":282,"count":0}],"isBlockCoverage":false}]},{"scriptId":"948","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/propWrapper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1712,"count":1}],"isBlockCoverage":true},{"functionName":"searchPropWrapperFunctions","ranges":[{"startOffset":92,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"getPropWrapperFunctions","ranges":[{"startOffset":440,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"isPropWrapperFunction","ranges":[{"startOffset":550,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"getExactPropWrapperFunctions","ranges":[{"startOffset":787,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"isExactPropWrapperFunction","ranges":[{"startOffset":1041,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"formatPropWrapperFunctions","ranges":[{"startOffset":1226,"endOffset":1544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"949","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/isFirstLetterCapitalized.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"isFirstLetterCapitalized","ranges":[{"startOffset":179,"endOffset":375,"count":37},{"startOffset":260,"endOffset":283,"count":0}],"isBlockCoverage":true}]},{"scriptId":"950","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5367,"count":1}],"isBlockCoverage":true},{"functionName":"isDOMComponent","ranges":[{"startOffset":687,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":960,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"isJSX","ranges":[{"startOffset":1642,"endOffset":1738,"count":983},{"startOffset":1679,"endOffset":1735,"count":978}],"isBlockCoverage":true},{"functionName":"isJSXAttributeKey","ranges":[{"startOffset":1858,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaces","ranges":[{"startOffset":2120,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"isReturningJSX","ranges":[{"startOffset":2642,"endOffset":3988,"count":140}],"isBlockCoverage":true},{"functionName":"isJSXValue","ranges":[{"startOffset":2727,"endOffset":3792,"count":98},{"startOffset":2754,"endOffset":2781,"count":0},{"startOffset":2813,"endOffset":3024,"count":0},{"startOffset":3031,"endOffset":3218,"count":0},{"startOffset":3225,"endOffset":3325,"count":0},{"startOffset":3332,"endOffset":3350,"count":0},{"startOffset":3357,"endOffset":3397,"count":0},{"startOffset":3404,"endOffset":3473,"count":24},{"startOffset":3480,"endOffset":3600,"count":12},{"startOffset":3544,"endOffset":3578,"count":0},{"startOffset":3607,"endOffset":3745,"count":32},{"startOffset":3752,"endOffset":3782,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3860,"endOffset":3967,"count":98},{"startOffset":3913,"endOffset":3963,"count":0}],"isBlockCoverage":true},{"functionName":"isReturningOnlyNull","ranges":[{"startOffset":4230,"endOffset":5223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"951","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/elementType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":91,"count":1}],"isBlockCoverage":true}]},{"scriptId":"952","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":613,"endOffset":708,"count":6},{"startOffset":687,"endOffset":705,"count":0}],"isBlockCoverage":true}]},{"scriptId":"953","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/hasProp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2529,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":271,"endOffset":366,"count":1},{"startOffset":345,"endOffset":363,"count":0}],"isBlockCoverage":true},{"functionName":"hasProp","ranges":[{"startOffset":546,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyProp","ranges":[{"startOffset":1435,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"hasEveryProp","ranges":[{"startOffset":2050,"endOffset":2529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"954","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/propName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"propName","ranges":[{"startOffset":179,"endOffset":573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"955","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/elementType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1318,"count":1}],"isBlockCoverage":true},{"functionName":"resolveMemberExpressions","ranges":[{"startOffset":111,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"elementType","ranges":[{"startOffset":577,"endOffset":1318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"956","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/eventHandlers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1575,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1396,"endOffset":1484,"count":14}],"isBlockCoverage":true}]},{"scriptId":"957","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/getProp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4525,"count":1},{"startOffset":776,"endOffset":1003,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":102,"endOffset":742,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":116,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":517,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"_extends","ranges":[{"startOffset":779,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1127,"endOffset":1222,"count":1},{"startOffset":1201,"endOffset":1219,"count":0}],"isBlockCoverage":true},{"functionName":"_objectWithoutProperties","ranges":[{"startOffset":1224,"endOffset":1444,"count":0}],"isBlockCoverage":false},{"functionName":"getProp","ranges":[{"startOffset":1617,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"propertyToJSXAttribute","ranges":[{"startOffset":2878,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"adjustRangeOfNode","ranges":[{"startOffset":3297,"endOffset":3572,"count":0}],"isBlockCoverage":false},{"functionName":"adjustExpressionRange","ranges":[{"startOffset":3574,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseProps","ranges":[{"startOffset":3948,"endOffset":4216,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseLocation","ranges":[{"startOffset":4218,"endOffset":4525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"958","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/getPropValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1711,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":249,"endOffset":344,"count":1},{"startOffset":323,"endOffset":341,"count":0}],"isBlockCoverage":true},{"functionName":"extractValue","ranges":[{"startOffset":365,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"getPropValue","ranges":[{"startOffset":1104,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteralPropValue","ranges":[{"startOffset":1609,"endOffset":1711,"count":0}],"isBlockCoverage":false}]},{"scriptId":"959","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1960,"count":1},{"startOffset":110,"endOffset":337,"count":0}],"isBlockCoverage":true},{"functionName":"_extends","ranges":[{"startOffset":113,"endOffset":337,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":796,"endOffset":891,"count":4},{"startOffset":870,"endOffset":888,"count":0}],"isBlockCoverage":true},{"functionName":"JSXElement","ranges":[{"startOffset":1246,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":1573,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteralValue","ranges":[{"startOffset":1882,"endOffset":1960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"960","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/Literal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":658,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromLiteral","ranges":[{"startOffset":324,"endOffset":658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"961","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/JSXElement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromJSXElement","ranges":[{"startOffset":244,"endOffset":625,"count":0}],"isBlockCoverage":false}]},{"scriptId":"962","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/JSXText.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":301,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromJSXText","ranges":[{"startOffset":238,"endOffset":301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"963","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9503,"count":1},{"startOffset":110,"endOffset":337,"count":0}],"isBlockCoverage":true},{"functionName":"_extends","ranges":[{"startOffset":113,"endOffset":337,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":3873,"endOffset":3968,"count":28},{"startOffset":3947,"endOffset":3965,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":5437,"endOffset":5471,"count":0}],"isBlockCoverage":false},{"functionName":"errorMessage","ranges":[{"startOffset":5493,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"extract","ranges":[{"startOffset":6023,"endOffset":7070,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":7202,"endOffset":7506,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":7522,"endOffset":7674,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":7957,"endOffset":8124,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":8146,"endOffset":8315,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":8466,"endOffset":8655,"count":0}],"isBlockCoverage":false},{"functionName":"extractLiteral","ranges":[{"startOffset":9136,"endOffset":9503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"964","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/JSXFragment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromJSXFragment","ranges":[{"startOffset":246,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"965","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/Identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":771,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromIdentifier","ranges":[{"startOffset":593,"endOffset":771,"count":0}],"isBlockCoverage":false}]},{"scriptId":"966","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/TaggedTemplateExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":602,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":262,"endOffset":357,"count":1},{"startOffset":336,"endOffset":354,"count":0}],"isBlockCoverage":true},{"functionName":"extractValueFromTaggedTemplateExpression","ranges":[{"startOffset":488,"endOffset":602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"967","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/TemplateLiteral.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1135,"count":1}],"isBlockCoverage":true},{"functionName":"sortStarts","ranges":[{"startOffset":131,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"extractValueFromTemplateLiteral","ranges":[{"startOffset":547,"endOffset":1135,"count":0}],"isBlockCoverage":false}]},{"scriptId":"968","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/FunctionExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":558,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromFunctionExpression","ranges":[{"startOffset":458,"endOffset":558,"count":0}],"isBlockCoverage":false}]},{"scriptId":"969","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1023,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromLogicalExpression","ranges":[{"startOffset":463,"endOffset":1023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"970","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/MemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":685,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromMemberExpression","ranges":[{"startOffset":452,"endOffset":685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"971","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/ChainExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":631,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromChainExpression","ranges":[{"startOffset":450,"endOffset":631,"count":0}],"isBlockCoverage":false}]},{"scriptId":"972","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/OptionalCallExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromOptionalCallExpression","ranges":[{"startOffset":490,"endOffset":756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"973","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/OptionalMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":688,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromOptionalMemberExpression","ranges":[{"startOffset":477,"endOffset":688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"974","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/CallExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":851,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromCallExpression","ranges":[{"startOffset":502,"endOffset":851,"count":0}],"isBlockCoverage":false}]},{"scriptId":"975","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/UnaryExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromUnaryExpression","ranges":[{"startOffset":468,"endOffset":1133,"count":0}],"isBlockCoverage":false}]},{"scriptId":"976","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/ThisExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":352,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromThisExpression","ranges":[{"startOffset":290,"endOffset":352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"977","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/ConditionalExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":657,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromConditionalExpression","ranges":[{"startOffset":347,"endOffset":657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"978","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/BinaryExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2199,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromBinaryExpression","ranges":[{"startOffset":426,"endOffset":2199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"979","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/ObjectExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1394,"count":1},{"startOffset":110,"endOffset":337,"count":0}],"isBlockCoverage":true},{"functionName":"_extends","ranges":[{"startOffset":113,"endOffset":337,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":483,"endOffset":578,"count":1},{"startOffset":551,"endOffset":556,"count":0}],"isBlockCoverage":true},{"functionName":"extractValueFromObjectExpression","ranges":[{"startOffset":736,"endOffset":1394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"980","url":"file:///home/runner/work/deluge/deluge/node_modules/object.assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":329,"endOffset":402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"981","url":"file:///home/runner/work/deluge/deluge/node_modules/object.assign/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1414,"count":1},{"startOffset":420,"endOffset":426,"count":0}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":489,"endOffset":1412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"982","url":"file:///home/runner/work/deluge/deluge/node_modules/object.assign/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1299,"count":1}],"isBlockCoverage":true},{"functionName":"lacksProperEnumerationOrder","ranges":[{"startOffset":100,"endOffset":596,"count":1},{"startOffset":135,"endOffset":155,"count":0},{"startOffset":441,"endOffset":477,"count":20},{"startOffset":551,"endOffset":570,"count":20}],"isBlockCoverage":true},{"functionName":"assignHasPendingExceptions","ranges":[{"startOffset":632,"endOffset":1046,"count":1},{"startOffset":696,"endOffset":716,"count":0},{"startOffset":1029,"endOffset":1045,"count":0}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":1066,"endOffset":1297,"count":1},{"startOffset":1112,"endOffset":1141,"count":0},{"startOffset":1178,"endOffset":1207,"count":0},{"startOffset":1243,"endOffset":1272,"count":0}],"isBlockCoverage":true}]},{"scriptId":"983","url":"file:///home/runner/work/deluge/deluge/node_modules/object.assign/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":305,"count":1}],"isBlockCoverage":true},{"functionName":"shimAssign","ranges":[{"startOffset":117,"endOffset":303,"count":0}],"isBlockCoverage":false}]},{"scriptId":"984","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/NewExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":383,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromNewExpression","ranges":[{"startOffset":293,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"985","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/UpdateExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":950,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromUpdateExpression","ranges":[{"startOffset":447,"endOffset":950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"986","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/ArrayExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":574,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromArrayExpression","ranges":[{"startOffset":310,"endOffset":574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"987","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/BindExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1111,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromBindExpression","ranges":[{"startOffset":539,"endOffset":1111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"988","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/SpreadElement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":443,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromSpreadElement","ranges":[{"startOffset":379,"endOffset":443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"989","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/TypeCastExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":656,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromTypeCastExpression","ranges":[{"startOffset":481,"endOffset":656,"count":0}],"isBlockCoverage":false}]},{"scriptId":"990","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/SequenceExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromSequenceExpression","ranges":[{"startOffset":406,"endOffset":632,"count":0}],"isBlockCoverage":false}]},{"scriptId":"991","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/TSNonNullExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3221,"count":1}],"isBlockCoverage":true},{"functionName":"navigate","ranges":[{"startOffset":210,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"extractValueFromTSNonNullExpression","ranges":[{"startOffset":756,"endOffset":3221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"992","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/lib/values/expressions/AssignmentExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"extractValueFromAssignmentExpression","ranges":[{"startOffset":476,"endOffset":700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"993","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/isCreateElement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":893,"count":1}],"isBlockCoverage":true},{"functionName":"isCreateElement","ranges":[{"startOffset":414,"endOffset":891,"count":349},{"startOffset":530,"endOffset":578,"count":268},{"startOffset":583,"endOffset":604,"count":0},{"startOffset":609,"endOffset":674,"count":0},{"startOffset":679,"endOffset":701,"count":0},{"startOffset":786,"endOffset":845,"count":0},{"startOffset":850,"endOffset":872,"count":0}],"isBlockCoverage":true}]},{"scriptId":"994","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/isDestructuredFromPragmaImport.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2710,"count":1}],"isBlockCoverage":true},{"functionName":"isDestructuredFromPragmaImport","ranges":[{"startOffset":358,"endOffset":2708,"count":0}],"isBlockCoverage":false}]},{"scriptId":"995","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/usedPropTypes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18179,"count":1}],"isBlockCoverage":true},{"functionName":"createPropVariables","ranges":[{"startOffset":735,"endOffset":2105,"count":16}],"isBlockCoverage":true},{"functionName":"pushScope","ranges":[{"startOffset":1013,"endOffset":1147,"count":292}],"isBlockCoverage":true},{"functionName":"popScope","ranges":[{"startOffset":1153,"endOffset":1314,"count":292}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1543,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2042,"endOffset":2097,"count":1062}],"isBlockCoverage":true},{"functionName":"isCommonVariableNameForProps","ranges":[{"startOffset":2290,"endOffset":2412,"count":10}],"isBlockCoverage":true},{"functionName":"mustBeValidated","ranges":[{"startOffset":2598,"endOffset":2697,"count":0}],"isBlockCoverage":false},{"functionName":"inLifeCycleMethod","ranges":[{"startOffset":2893,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeALifeCycleMethod","ranges":[{"startOffset":3620,"endOffset":4022,"count":12},{"startOffset":3792,"endOffset":3814,"count":0},{"startOffset":3867,"endOffset":3889,"count":0},{"startOffset":3981,"endOffset":4003,"count":0}],"isBlockCoverage":true},{"functionName":"isInLifeCycleMethod","ranges":[{"startOffset":4280,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"isSetStateUpdater","ranges":[{"startOffset":4731,"endOffset":5147,"count":336},{"startOffset":4859,"endOffset":4906,"count":100},{"startOffset":4948,"endOffset":4985,"count":100},{"startOffset":4990,"endOffset":5047,"count":68},{"startOffset":5108,"endOffset":5144,"count":0}],"isBlockCoverage":true},{"functionName":"isPropArgumentInSetStateUpdater","ranges":[{"startOffset":5149,"endOffset":6022,"count":0}],"isBlockCoverage":false},{"functionName":"isInClassComponent","ranges":[{"startOffset":6082,"endOffset":6229,"count":1052}],"isBlockCoverage":true},{"functionName":"isThisDotProps","ranges":[{"startOffset":6334,"endOffset":6533,"count":192},{"startOffset":6386,"endOffset":6421,"count":188},{"startOffset":6426,"endOffset":6492,"count":0},{"startOffset":6497,"endOffset":6530,"count":0}],"isBlockCoverage":true},{"functionName":"hasSpreadOperator","ranges":[{"startOffset":6739,"endOffset":6895,"count":0}],"isBlockCoverage":false},{"functionName":"isPropTypesUsageByMemberExpression","ranges":[{"startOffset":7165,"endOffset":7987,"count":1052},{"startOffset":7364,"endOffset":7873,"count":0},{"startOffset":7955,"endOffset":7984,"count":0}],"isBlockCoverage":true},{"functionName":"getPropertyName","ranges":[{"startOffset":8273,"endOffset":9194,"count":0}],"isBlockCoverage":false},{"functionName":"usedPropTypesInstructions","ranges":[{"startOffset":9213,"endOffset":18177,"count":16}],"isBlockCoverage":true},{"functionName":"markPropTypesAsUsed","ranges":[{"startOffset":9625,"endOffset":13449,"count":0}],"isBlockCoverage":false},{"functionName":"markDestructuredFunctionArgumentsAsUsed","ranges":[{"startOffset":13587,"endOffset":14032,"count":292},{"startOffset":13701,"endOffset":13717,"count":0},{"startOffset":13769,"endOffset":13905,"count":172},{"startOffset":13817,"endOffset":13899,"count":170},{"startOffset":13858,"endOffset":13898,"count":12},{"startOffset":13930,"endOffset":13986,"count":2},{"startOffset":13988,"endOffset":14028,"count":0}],"isBlockCoverage":true},{"functionName":"handleSetStateUpdater","ranges":[{"startOffset":14036,"endOffset":14207,"count":292},{"startOffset":14122,"endOffset":14149,"count":44},{"startOffset":14172,"endOffset":14206,"count":0}],"isBlockCoverage":true},{"functionName":"handleFunctionLikeExpressions","ranges":[{"startOffset":14414,"endOffset":14565,"count":292}],"isBlockCoverage":true},{"functionName":"handleCustomValidators","ranges":[{"startOffset":14569,"endOffset":14935,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":14952,"endOffset":16697,"count":182},{"startOffset":15125,"endOffset":15155,"count":0},{"startOffset":15156,"endOffset":15188,"count":0},{"startOffset":15190,"endOffset":15244,"count":0},{"startOffset":15325,"endOffset":15346,"count":10},{"startOffset":15348,"endOffset":15373,"count":172},{"startOffset":15373,"endOffset":15647,"count":10},{"startOffset":15647,"endOffset":15663,"count":0},{"startOffset":15664,"endOffset":15711,"count":0},{"startOffset":15713,"endOffset":15788,"count":0},{"startOffset":15788,"endOffset":15872,"count":10},{"startOffset":15872,"endOffset":15888,"count":0},{"startOffset":15889,"endOffset":15928,"count":0},{"startOffset":15930,"endOffset":15995,"count":0},{"startOffset":15995,"endOffset":16110,"count":10},{"startOffset":16110,"endOffset":16205,"count":0},{"startOffset":16214,"endOffset":16277,"count":0},{"startOffset":16277,"endOffset":16361,"count":10},{"startOffset":16361,"endOffset":16391,"count":0},{"startOffset":16393,"endOffset":16456,"count":0},{"startOffset":16456,"endOffset":16601,"count":10},{"startOffset":16601,"endOffset":16691,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15468,"endOffset":15589,"count":36},{"startOffset":15513,"endOffset":15581,"count":32}],"isBlockCoverage":true},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":17010,"endOffset":17225,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression, OptionalMemberExpression","ranges":[{"startOffset":17232,"endOffset":17619,"count":1052},{"startOffset":17379,"endOffset":17439,"count":0},{"startOffset":17555,"endOffset":17613,"count":0}],"isBlockCoverage":true},{"functionName":"ObjectPattern","ranges":[{"startOffset":17626,"endOffset":17935,"count":12},{"startOffset":17847,"endOffset":17876,"count":0},{"startOffset":17878,"endOffset":17929,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":17942,"endOffset":18169,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18031,"endOffset":18078,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18088,"endOffset":18161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"996","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/defaultProps.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8487,"count":1}],"isBlockCoverage":true},{"functionName":"defaultPropsInstructions","ranges":[{"startOffset":409,"endOffset":8485,"count":16}],"isBlockCoverage":true},{"functionName":"resolveNodeValue","ranges":[{"startOffset":838,"endOffset":1231,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultPropsFromObjectExpression","ranges":[{"startOffset":1671,"endOffset":2122,"count":0}],"isBlockCoverage":false},{"functionName":"markDefaultPropsAsUnresolved","ranges":[{"startOffset":2448,"endOffset":2581,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultPropsToComponent","ranges":[{"startOffset":2975,"endOffset":3585,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":3602,"endOffset":5210,"count":1052},{"startOffset":3750,"endOffset":4990,"count":0},{"startOffset":4999,"endOffset":5052,"count":0},{"startOffset":5054,"endOffset":5204,"count":0}],"isBlockCoverage":true},{"functionName":"MethodDefinition","ranges":[{"startOffset":5477,"endOffset":6233,"count":108},{"startOffset":5525,"endOffset":5547,"count":4},{"startOffset":5574,"endOffset":6105,"count":0},{"startOffset":6107,"endOffset":6232,"count":0}],"isBlockCoverage":true},{"functionName":"ClassProperty, PropertyDefinition","ranges":[{"startOffset":6528,"endOffset":7282,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":7541,"endOffset":8477,"count":42},{"startOffset":7697,"endOffset":7720,"count":0},{"startOffset":7769,"endOffset":8476,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7847,"endOffset":8469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"997","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/docsUrl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"docsUrl","ranges":[{"startOffset":15,"endOffset":145,"count":98}],"isBlockCoverage":true}]},{"scriptId":"998","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":329,"count":1}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":117,"endOffset":327,"count":0}],"isBlockCoverage":false}]},{"scriptId":"999","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/button-has-type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4355,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1684,"endOffset":4350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1000","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/getProp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1001","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/getLiteralPropValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1002","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/default-props-match-prop-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3397,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1135,"endOffset":3391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1003","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/destructuring-assignment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8866,"count":1}],"isBlockCoverage":true},{"functionName":"createSFCParams","ranges":[{"startOffset":359,"endOffset":975,"count":0}],"isBlockCoverage":false},{"functionName":"evalParams","ranges":[{"startOffset":977,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2335,"endOffset":8860,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1004","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/display-name.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8001,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1246,"endOffset":7995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1005","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/forbid-component-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3345,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1600,"endOffset":3340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1006","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/forbid-dom-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3141,"count":1}],"isBlockCoverage":true},{"functionName":"isForbidden","ranges":[{"startOffset":755,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2083,"endOffset":3136,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1007","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/forbid-elements.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3036,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1390,"endOffset":3031,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1008","url":"file:///home/runner/work/deluge/deluge/node_modules/object.hasown/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":152,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":150,"count":11},{"startOffset":130,"endOffset":147,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1009","url":"file:///home/runner/work/deluge/deluge/node_modules/object.hasown/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":328,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwn","ranges":[{"startOffset":214,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1010","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/HasOwnProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"HasOwnProperty","ranges":[{"startOffset":299,"endOffset":551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1011","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/forbid-foreign-prop-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3462,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":838,"endOffset":3457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1012","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/forbid-prop-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8534,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1417,"endOffset":8529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1013","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/function-component-definition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8212,"count":1}],"isBlockCoverage":true},{"functionName":"buildFunction","ranges":[{"startOffset":489,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"hasOneUnconstrainedTypeParam","ranges":[{"startOffset":1183,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"hasName","ranges":[{"startOffset":1399,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeText","ranges":[{"startOffset":1532,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1651,"endOffset":1904,"count":0}],"isBlockCoverage":false},{"functionName":"getParams","ranges":[{"startOffset":1906,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"getBody","ranges":[{"startOffset":2095,"endOffset":2338,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotation","ranges":[{"startOffset":2340,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"isUnfixableBecauseOfExport","ranges":[{"startOffset":2622,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpressionWithName","ranges":[{"startOffset":2799,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4515,"endOffset":8206,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1014","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/hook-use-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5580,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":933,"endOffset":5574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1015","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/iframe-missing-sandbox.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3974,"count":1}],"isBlockCoverage":true},{"functionName":"validateSandboxAttribute","ranges":[{"startOffset":1031,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"checkAttributes","ranges":[{"startOffset":1942,"endOffset":2614,"count":0}],"isBlockCoverage":false},{"functionName":"checkProps","ranges":[{"startOffset":2616,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3525,"endOffset":3969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1016","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-boolean-value.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4372,"count":1}],"isBlockCoverage":true},{"functionName":"getErrorData","ranges":[{"startOffset":637,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"isAlways","ranges":[{"startOffset":1130,"endOffset":1321,"count":0}],"isBlockCoverage":false},{"functionName":"isNever","ranges":[{"startOffset":1457,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2934,"endOffset":4367,"count":8},{"startOffset":3115,"endOffset":3136,"count":0}],"isBlockCoverage":true},{"functionName":"JSXAttribute","ranges":[{"startOffset":3189,"endOffset":4355,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1017","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-child-element-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1132,"endOffset":2862,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1018","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-closing-bracket-location.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10834,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1573,"endOffset":10829,"count":8},{"startOffset":2251,"endOffset":2750,"count":0}],"isBlockCoverage":true},{"functionName":"getExpectedLocation","ranges":[{"startOffset":2985,"endOffset":3584,"count":0}],"isBlockCoverage":false},{"functionName":"getCorrectColumn","ranges":[{"startOffset":3960,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"hasCorrectLocation","ranges":[{"startOffset":4663,"endOffset":5218,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentation","ranges":[{"startOffset":5642,"endOffset":6452,"count":0}],"isBlockCoverage":false},{"functionName":"getTokensLocations","ranges":[{"startOffset":6751,"endOffset":7970,"count":0}],"isBlockCoverage":false},{"functionName":"getOpeningElementId","ranges":[{"startOffset":8166,"endOffset":8243,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute","ranges":[{"startOffset":8299,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":8404,"endOffset":8506,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement:exit","ranges":[{"startOffset":8515,"endOffset":10817,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1019","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-closing-tag-location.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1964,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":867,"endOffset":1959,"count":8}],"isBlockCoverage":true},{"functionName":"handleClosingElement","ranges":[{"startOffset":889,"endOffset":1839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1020","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-curly-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14708,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2981,"endOffset":14703,"count":8},{"startOffset":3917,"endOffset":3922,"count":0},{"startOffset":3979,"endOffset":4074,"count":0},{"startOffset":4301,"endOffset":4321,"count":0},{"startOffset":4414,"endOffset":4420,"count":0},{"startOffset":4501,"endOffset":4519,"count":0},{"startOffset":4606,"endOffset":4612,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeConfig","ranges":[{"startOffset":3003,"endOffset":3715,"count":24},{"startOffset":3107,"endOffset":3111,"count":0},{"startOffset":3159,"endOffset":3175,"count":8},{"startOffset":3236,"endOffset":3259,"count":16},{"startOffset":3260,"endOffset":3285,"count":8},{"startOffset":3439,"endOffset":3617,"count":16}],"isBlockCoverage":true},{"functionName":"isMultiline","ranges":[{"startOffset":5078,"endOffset":5176,"count":0}],"isBlockCoverage":false},{"functionName":"fixByTrimmingWhitespace","ranges":[{"startOffset":5601,"endOffset":6206,"count":0}],"isBlockCoverage":false},{"functionName":"reportNoBeginningNewline","ranges":[{"startOffset":6486,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"reportNoEndingNewline","ranges":[{"startOffset":7216,"endOffset":7672,"count":0}],"isBlockCoverage":false},{"functionName":"reportNoBeginningSpace","ranges":[{"startOffset":7920,"endOffset":9081,"count":0}],"isBlockCoverage":false},{"functionName":"reportNoEndingSpace","ranges":[{"startOffset":9329,"endOffset":10525,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredBeginningSpace","ranges":[{"startOffset":10770,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredEndingSpace","ranges":[{"startOffset":11339,"endOffset":11663,"count":0}],"isBlockCoverage":false},{"functionName":"validateBraceSpacing","ranges":[{"startOffset":11815,"endOffset":14399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1021","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-curly-newline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5988,"count":1}],"isBlockCoverage":true},{"functionName":"getNormalizedOption","ranges":[{"startOffset":360,"endOffset":815,"count":8},{"startOffset":439,"endOffset":454,"count":0},{"startOffset":491,"endOffset":579,"count":0},{"startOffset":610,"endOffset":690,"count":0},{"startOffset":738,"endOffset":753,"count":0},{"startOffset":792,"endOffset":807,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1792,"endOffset":5983,"count":8}],"isBlockCoverage":true},{"functionName":"isTokenOnSameLine","ranges":[{"startOffset":2350,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"shouldHaveNewlines","ranges":[{"startOffset":2802,"endOffset":3164,"count":0}],"isBlockCoverage":false},{"functionName":"validateCurlys","ranges":[{"startOffset":3431,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":5732,"endOffset":5971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1022","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-equals-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3511,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":977,"endOffset":3506,"count":8},{"startOffset":1033,"endOffset":1043,"count":0}],"isBlockCoverage":true},{"functionName":"hasEqual","ranges":[{"startOffset":1259,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":1574,"endOffset":3494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1023","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-filename-extension.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2846,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1386,"endOffset":2841,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1024","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-first-prop-new-line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2331,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":936,"endOffset":2326,"count":8},{"startOffset":999,"endOffset":1023,"count":0}],"isBlockCoverage":true},{"functionName":"isMultilineJSX","ranges":[{"startOffset":1030,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":1151,"endOffset":2314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1025","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-handler-names.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5199,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2366,"endOffset":5194,"count":8},{"startOffset":2718,"endOffset":2724,"count":0},{"startOffset":2875,"endOffset":2881,"count":0},{"startOffset":2995,"endOffset":3001,"count":0},{"startOffset":3058,"endOffset":3063,"count":0},{"startOffset":3183,"endOffset":3189,"count":0}],"isBlockCoverage":true},{"functionName":"isPrefixDisabled","ranges":[{"startOffset":2388,"endOffset":2460,"count":16}],"isBlockCoverage":true},{"functionName":"isInlineHandler","ranges":[{"startOffset":2466,"endOffset":2575,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute","ranges":[{"startOffset":3405,"endOffset":5182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1026","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-indent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14492,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2513,"endOffset":14487,"count":8},{"startOffset":2692,"endOffset":2753,"count":0},{"startOffset":2943,"endOffset":2949,"count":0},{"startOffset":2990,"endOffset":2995,"count":0},{"startOffset":3129,"endOffset":3137,"count":0}],"isBlockCoverage":true},{"functionName":"getFixerFunction","ranges":[{"startOffset":3423,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":4938,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeIndent","ranges":[{"startOffset":5591,"endOffset":6197,"count":0}],"isBlockCoverage":false},{"functionName":"isRightInLogicalExp","ranges":[{"startOffset":6395,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"isAlternateInConditionalExp","ranges":[{"startOffset":6865,"endOffset":7178,"count":0}],"isBlockCoverage":false},{"functionName":"isSecondOrSubsequentExpWithinDoExp","ranges":[{"startOffset":7420,"endOffset":9094,"count":0}],"isBlockCoverage":false},{"functionName":"checkNodesIndent","ranges":[{"startOffset":9310,"endOffset":9888,"count":0}],"isBlockCoverage":false},{"functionName":"checkLiteralNodeIndent","ranges":[{"startOffset":10054,"endOffset":10681,"count":0}],"isBlockCoverage":false},{"functionName":"handleOpeningElement","ranges":[{"startOffset":10687,"endOffset":12200,"count":0}],"isBlockCoverage":false},{"functionName":"handleClosingElement","ranges":[{"startOffset":12206,"endOffset":12454,"count":0}],"isBlockCoverage":false},{"functionName":"handleAttribute","ranges":[{"startOffset":12460,"endOffset":12956,"count":0}],"isBlockCoverage":false},{"functionName":"handleLiteral","ranges":[{"startOffset":12962,"endOffset":13283,"count":217},{"startOffset":13017,"endOffset":13042,"count":0},{"startOffset":13151,"endOffset":13282,"count":0}],"isBlockCoverage":true},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":13531,"endOffset":13749,"count":0}],"isBlockCoverage":false},{"functionName":"ReturnStatement","ranges":[{"startOffset":13818,"endOffset":14475,"count":78},{"startOffset":13960,"endOffset":14046,"count":0},{"startOffset":14047,"endOffset":14082,"count":0},{"startOffset":14084,"endOffset":14206,"count":0},{"startOffset":14217,"endOffset":14467,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1027","url":"file:///home/runner/work/deluge/deluge/node_modules/string.prototype.matchall/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":398,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1028","url":"file:///home/runner/work/deluge/deluge/node_modules/string.prototype.matchall/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1873,"count":1}],"isBlockCoverage":true},{"functionName":"getMatcher","ranges":[{"startOffset":631,"endOffset":1104,"count":0}],"isBlockCoverage":false},{"functionName":"matchAll","ranges":[{"startOffset":1124,"endOffset":1871,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1029","url":"file:///home/runner/work/deluge/deluge/node_modules/regexp.prototype.flags/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":388,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1030","url":"file:///home/runner/work/deluge/deluge/node_modules/regexp.prototype.flags/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":801,"count":1}],"isBlockCoverage":true},{"functionName":"flags","ranges":[{"startOffset":187,"endOffset":661,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1031","url":"file:///home/runner/work/deluge/deluge/node_modules/functions-have-names/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":774,"count":1},{"startOffset":214,"endOffset":271,"count":0}],"isBlockCoverage":true},{"functionName":"functionsHaveNames","ranges":[{"startOffset":40,"endOffset":123,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":87,"endOffset":102,"count":0}],"isBlockCoverage":false},{"functionName":"functionsHaveConfigurableNames","ranges":[{"startOffset":327,"endOffset":511,"count":1},{"startOffset":408,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":446,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"boundFunctionsHaveNames","ranges":[{"startOffset":597,"endOffset":734,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1032","url":"file:///home/runner/work/deluge/deluge/node_modules/regexp.prototype.flags/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":867,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":205,"endOffset":865,"count":1},{"startOffset":457,"endOffset":508,"count":0},{"startOffset":513,"endOffset":836,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":635,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":730,"endOffset":768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1033","url":"file:///home/runner/work/deluge/deluge/node_modules/regexp.prototype.flags/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":779,"count":1}],"isBlockCoverage":true},{"functionName":"shimFlags","ranges":[{"startOffset":318,"endOffset":777,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1034","url":"file:///home/runner/work/deluge/deluge/node_modules/string.prototype.matchall/polyfill-regexp-matchall.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":358,"count":1}],"isBlockCoverage":true},{"functionName":"getRegExpMatchAllPolyfill","ranges":[{"startOffset":127,"endOffset":356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1035","url":"file:///home/runner/work/deluge/deluge/node_modules/string.prototype.matchall/regexp-matchall.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":true},{"functionName":"constructRegex","ranges":[{"startOffset":751,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolMatchAll","ranges":[{"startOffset":1286,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1036","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/CreateRegExpStringIterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3708,"count":1},{"startOffset":3072,"endOffset":3165,"count":0},{"startOffset":3265,"endOffset":3422,"count":0}],"isBlockCoverage":true},{"functionName":"RegExpStringIterator","ranges":[{"startOffset":805,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":1481,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolIterator","ranges":[{"startOffset":3286,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"CreateRegExpStringIterator","ranges":[{"startOffset":3518,"endOffset":3706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1037","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/CreateIterResultObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":432,"count":1}],"isBlockCoverage":true},{"functionName":"CreateIterResultObject","ranges":[{"startOffset":232,"endOffset":430,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1038","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/CreateMethodProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":979,"count":1}],"isBlockCoverage":true},{"functionName":"CreateMethodProperty","ranges":[{"startOffset":504,"endOffset":977,"count":1},{"startOffset":572,"endOffset":643,"count":0},{"startOffset":669,"endOffset":747,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1039","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/OrdinaryObjectCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1445,"count":1}],"isBlockCoverage":true},{"functionName":"OrdinaryObjectCreate","ranges":[{"startOffset":420,"endOffset":1443,"count":1},{"startOffset":508,"endOffset":591,"count":0},{"startOffset":653,"endOffset":667,"count":0},{"startOffset":713,"endOffset":809,"count":0},{"startOffset":920,"endOffset":1062,"count":0},{"startOffset":1205,"endOffset":1442,"count":0}],"isBlockCoverage":true},{"functionName":"T","ranges":[{"startOffset":1386,"endOffset":1401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1040","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/RegExpExec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":887,"count":1}],"isBlockCoverage":true},{"functionName":"RegExpExec","ranges":[{"startOffset":394,"endOffset":885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1041","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/Set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1255,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":356,"endOffset":447,"count":1}],"isBlockCoverage":true},{"functionName":"Set","ranges":[{"startOffset":539,"endOffset":1253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1042","url":"file:///home/runner/work/deluge/deluge/node_modules/internal-slot/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1504,"count":1}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":197,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":458,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":765,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1079,"endOffset":1430,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1043","url":"file:///home/runner/work/deluge/deluge/node_modules/side-channel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3391,"count":1}],"isBlockCoverage":true},{"functionName":"listGetNode","ranges":[{"startOffset":948,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"listGet","ranges":[{"startOffset":1266,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"listSet","ranges":[{"startOffset":1376,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"listHas","ranges":[{"startOffset":1685,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"getSideChannel","ranges":[{"startOffset":1769,"endOffset":3389,"count":1}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":1852,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1989,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2374,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2735,"endOffset":3366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1044","url":"file:///home/runner/work/deluge/deluge/node_modules/es-abstract/2021/SpeciesConstructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":844,"count":1}],"isBlockCoverage":true},{"functionName":"SpeciesConstructor","ranges":[{"startOffset":331,"endOffset":842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1045","url":"file:///home/runner/work/deluge/deluge/node_modules/string.prototype.matchall/polyfill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":271,"count":1}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":83,"endOffset":269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1046","url":"file:///home/runner/work/deluge/deluge/node_modules/string.prototype.matchall/shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1336,"count":1}],"isBlockCoverage":true},{"functionName":"shimMatchAll","ranges":[{"startOffset":310,"endOffset":1334,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1047","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-indent-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6440,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2516,"endOffset":6435,"count":8},{"startOffset":2931,"endOffset":2962,"count":0},{"startOffset":3028,"endOffset":3097,"count":0},{"startOffset":3129,"endOffset":3190,"count":0},{"startOffset":3331,"endOffset":3374,"count":0},{"startOffset":3376,"endOffset":3423,"count":0}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":3736,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeIndent","ranges":[{"startOffset":4374,"endOffset":5123,"count":0}],"isBlockCoverage":false},{"functionName":"checkNodesIndent","ranges":[{"startOffset":5277,"endOffset":5947,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":5968,"endOffset":6423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1048","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-key.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9262,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2221,"endOffset":9257,"count":8}],"isBlockCoverage":true},{"functionName":"checkIteratorElement","ranges":[{"startOffset":2643,"endOffset":3172,"count":2},{"startOffset":2718,"endOffset":2768,"count":0},{"startOffset":2770,"endOffset":2876,"count":0},{"startOffset":2941,"endOffset":3166,"count":0}],"isBlockCoverage":true},{"functionName":"getReturnStatements","ranges":[{"startOffset":3178,"endOffset":3876,"count":4},{"startOffset":3259,"endOffset":3264,"count":2},{"startOffset":3305,"endOffset":3526,"count":1},{"startOffset":3442,"endOffset":3518,"count":0},{"startOffset":3526,"endOffset":3838,"count":3},{"startOffset":3562,"endOffset":3838,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3590,"endOffset":3828,"count":5},{"startOffset":3645,"endOffset":3715,"count":1},{"startOffset":3764,"endOffset":3818,"count":2}],"isBlockCoverage":true},{"functionName":"isKeyAfterSpread","ranges":[{"startOffset":3882,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"checkFunctionsBlockStatement","ranges":[{"startOffset":4494,"endOffset":4915,"count":4},{"startOffset":4641,"endOffset":4901,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4704,"endOffset":4768,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4791,"endOffset":4889,"count":2}],"isBlockCoverage":true},{"functionName":"checkArrowFunctionWithJSX","ranges":[{"startOffset":5113,"endOffset":5376,"count":4},{"startOffset":5320,"endOffset":5370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5803,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5889,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression, JSXElement > JSXElement","ranges":[{"startOffset":5986,"endOffset":7630,"count":9},{"startOffset":6074,"endOffset":6103,"count":0},{"startOffset":6174,"endOffset":6196,"count":0},{"startOffset":6302,"endOffset":7622,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6205,"endOffset":6240,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6348,"endOffset":7248,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7313,"endOffset":7332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7342,"endOffset":7610,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":7639,"endOffset":8057,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression[callee.type=\"MemberExpression\"][callee.property.name=\"map\"],       CallExpression[callee.type=\"OptionalMemberExpression\"][callee.property.name=\"map\"],       OptionalCallExpression[callee.type=\"MemberExpression\"][callee.property.name=\"map\"],       OptionalCallExpression[callee.type=\"OptionalMemberExpression\"][callee.property.name=\"map\"]","ranges":[{"startOffset":8142,"endOffset":8824,"count":4},{"startOffset":8548,"endOffset":8577,"count":0},{"startOffset":8704,"endOffset":8733,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression[callee.type=\"MemberExpression\"][callee.property.name=\"from\"]","ranges":[{"startOffset":8853,"endOffset":9245,"count":12},{"startOffset":8976,"endOffset":9005,"count":0},{"startOffset":9052,"endOffset":9072,"count":1},{"startOffset":9154,"endOffset":9244,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1049","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/hasProp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1050","url":"file:///home/runner/work/deluge/deluge/node_modules/jsx-ast-utils/propName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1051","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-max-depth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4166,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1115,"endOffset":4161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1052","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-max-props-per-line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4132,"count":1}],"isBlockCoverage":true},{"functionName":"getPropName","ranges":[{"startOffset":204,"endOffset":391,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1673,"endOffset":4127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1053","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-newline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4497,"count":1}],"isBlockCoverage":true},{"functionName":"isMultilined","ranges":[{"startOffset":633,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1638,"endOffset":4492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1054","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-bind.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6003,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1586,"endOffset":5998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1055","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-comment-textnodes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1683,"count":1}],"isBlockCoverage":true},{"functionName":"checkText","ranges":[{"startOffset":526,"endOffset":1056,"count":217},{"startOffset":733,"endOffset":1054,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1328,"endOffset":1678,"count":8}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":1544,"endOffset":1601,"count":217}],"isBlockCoverage":true},{"functionName":"JSXText","ranges":[{"startOffset":1609,"endOffset":1666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1056","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-constructed-context-values.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7423,"count":1}],"isBlockCoverage":true},{"functionName":"isConstruction","ranges":[{"startOffset":610,"endOffset":3649,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5052,"endOffset":7417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1057","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-duplicate-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1665,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":893,"endOffset":1660,"count":8}],"isBlockCoverage":true},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":1041,"endOffset":1648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1058","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-leaked-render.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5202,"count":1}],"isBlockCoverage":true},{"functionName":"trimLeftNode","ranges":[{"startOffset":909,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"getIsCoerceValidNestedLogicalExpression","ranges":[{"startOffset":1189,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"extractExpressionBetweenLogicalAnds","ranges":[{"startOffset":1517,"endOffset":1801,"count":0}],"isBlockCoverage":false},{"functionName":"ruleFixer","ranges":[{"startOffset":1803,"endOffset":2845,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3595,"endOffset":5197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1059","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5736,"count":1}],"isBlockCoverage":true},{"functionName":"trimIfString","ranges":[{"startOffset":428,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1513,"endOffset":5731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1060","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-script-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2715,"count":1}],"isBlockCoverage":true},{"functionName":"hasJavaScriptProtocol","ranges":[{"startOffset":718,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"shouldVerifyElement","ranges":[{"startOffset":865,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"shouldVerifyProp","ranges":[{"startOffset":1019,"endOffset":1414,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2329,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1061","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-target-blank.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9844,"count":1}],"isBlockCoverage":true},{"functionName":"findLastIndex","ranges":[{"startOffset":431,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"attributeValuePossiblyBlank","ranges":[{"startOffset":593,"endOffset":1454,"count":0}],"isBlockCoverage":false},{"functionName":"hasExternalLink","ranges":[{"startOffset":1456,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicLink","ranges":[{"startOffset":1935,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"getStringFromValue","ranges":[{"startOffset":2229,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"hasSecureRel","ranges":[{"startOffset":2745,"endOffset":3517,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4782,"endOffset":9839,"count":8},{"startOffset":5196,"endOffset":5207,"count":0}],"isBlockCoverage":true},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":5377,"endOffset":9827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1062","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/linkComponents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1341,"count":1}],"isBlockCoverage":true},{"functionName":"getFormComponents","ranges":[{"startOffset":439,"endOffset":856,"count":8},{"startOffset":513,"endOffset":518,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":700,"endOffset":851,"count":8},{"startOffset":801,"endOffset":850,"count":0}],"isBlockCoverage":true},{"functionName":"getLinkComponents","ranges":[{"startOffset":858,"endOffset":1275,"count":8},{"startOffset":932,"endOffset":937,"count":0},{"startOffset":1071,"endOffset":1076,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1119,"endOffset":1270,"count":16},{"startOffset":1220,"endOffset":1269,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1063","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-useless-fragment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6777,"count":1}],"isBlockCoverage":true},{"functionName":"isJSXText","ranges":[{"startOffset":291,"endOffset":392,"count":0}],"isBlockCoverage":false},{"functionName":"isOnlyWhitespace","ranges":[{"startOffset":448,"endOffset":518,"count":0}],"isBlockCoverage":false},{"functionName":"isNonspaceJSXTextOrJSXCurly","ranges":[{"startOffset":575,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"isFragmentWithOnlyTextAndIsNotChild","ranges":[{"startOffset":860,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"trimLikeReact","ranges":[{"startOffset":1123,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyedElement","ranges":[{"startOffset":1582,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"containsCallExpression","ranges":[{"startOffset":1817,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2488,"endOffset":6772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1064","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-one-expression-per-line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7542,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1085,"endOffset":7537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1065","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-no-undef.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3037,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":890,"endOffset":3032,"count":8},{"startOffset":946,"endOffset":951,"count":0},{"startOffset":998,"endOffset":1006,"count":0}],"isBlockCoverage":true},{"functionName":"checkIdentifierInJSX","ranges":[{"startOffset":1186,"endOffset":2428,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":2449,"endOffset":3020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1066","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-curly-brace-presence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13986,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1892,"endOffset":13981,"count":8},{"startOffset":2070,"endOffset":2151,"count":0}],"isBlockCoverage":true},{"functionName":"HTML_ENTITY_REGEX","ranges":[{"startOffset":1940,"endOffset":1963,"count":217}],"isBlockCoverage":true},{"functionName":"containsLineTerminators","ranges":[{"startOffset":2213,"endOffset":2325,"count":217}],"isBlockCoverage":true},{"functionName":"containsBackslash","ranges":[{"startOffset":2331,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"containsHTMLEntity","ranges":[{"startOffset":2437,"endOffset":2543,"count":0}],"isBlockCoverage":false},{"functionName":"containsOnlyHtmlEntities","ranges":[{"startOffset":2549,"endOffset":2682,"count":217}],"isBlockCoverage":true},{"functionName":"containsDisallowedJSXTextChars","ranges":[{"startOffset":2688,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"containsQuoteCharacters","ranges":[{"startOffset":2801,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"containsMultilineComment","ranges":[{"startOffset":2887,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"escapeDoubleQuotes","ranges":[{"startOffset":2974,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBackslashes","ranges":[{"startOffset":3102,"endOffset":3204,"count":0}],"isBlockCoverage":false},{"functionName":"needToEscapeCharacterForJSX","ranges":[{"startOffset":3210,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"containsWhitespaceExpression","ranges":[{"startOffset":3449,"endOffset":3689,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":3695,"endOffset":3795,"count":217},{"startOffset":3767,"endOffset":3788,"count":0}],"isBlockCoverage":true},{"functionName":"wrapNonHTMLEntities","ranges":[{"startOffset":3801,"endOffset":4236,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWithCurlyBraces","ranges":[{"startOffset":4242,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"reportUnnecessaryCurly","ranges":[{"startOffset":5052,"endOffset":6343,"count":0}],"isBlockCoverage":false},{"functionName":"reportMissingCurly","ranges":[{"startOffset":6349,"endOffset":7522,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceLiteral","ranges":[{"startOffset":7528,"endOffset":7672,"count":0}],"isBlockCoverage":false},{"functionName":"isStringWithTrailingWhiteSpaces","ranges":[{"startOffset":7678,"endOffset":7769,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralWithTrailingWhiteSpaces","ranges":[{"startOffset":7775,"endOffset":7942,"count":0}],"isBlockCoverage":false},{"functionName":"lintUnnecessaryCurly","ranges":[{"startOffset":8167,"endOffset":9772,"count":0}],"isBlockCoverage":false},{"functionName":"areRuleConditionsSatisfied","ranges":[{"startOffset":9778,"endOffset":10144,"count":217},{"startOffset":9911,"endOffset":9946,"count":0},{"startOffset":9957,"endOffset":9990,"count":0},{"startOffset":10044,"endOffset":10082,"count":0},{"startOffset":10093,"endOffset":10129,"count":0}],"isBlockCoverage":true},{"functionName":"getAdjacentSiblings","ranges":[{"startOffset":10150,"endOffset":10637,"count":0}],"isBlockCoverage":false},{"functionName":"hasAdjacentJsxExpressionContainers","ranges":[{"startOffset":10643,"endOffset":11044,"count":0}],"isBlockCoverage":false},{"functionName":"hasAdjacentJsx","ranges":[{"startOffset":11049,"endOffset":11458,"count":0}],"isBlockCoverage":false},{"functionName":"shouldCheckForUnnecessaryCurly","ranges":[{"startOffset":11463,"endOffset":12676,"count":0}],"isBlockCoverage":false},{"functionName":"shouldCheckForMissingCurly","ranges":[{"startOffset":12682,"endOffset":13248,"count":217},{"startOffset":12765,"endOffset":12833,"count":0},{"startOffset":12929,"endOffset":12960,"count":0},{"startOffset":13038,"endOffset":13069,"count":0},{"startOffset":13078,"endOffset":13129,"count":0},{"startOffset":13138,"endOffset":13169,"count":0}],"isBlockCoverage":true},{"functionName":"JSXAttribute > JSXExpressionContainer > JSXElement","ranges":[{"startOffset":13448,"endOffset":13634,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":13643,"endOffset":13793,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute > JSXElement, Literal, JSXText","ranges":[{"startOffset":13802,"endOffset":13969,"count":217},{"startOffset":13914,"endOffset":13961,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1067","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-pascal-case.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4546,"count":1}],"isBlockCoverage":true},{"functionName":"testDigit","ranges":[{"startOffset":339,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"testUpperCase","ranges":[{"startOffset":451,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"testLowerCase","ranges":[{"startOffset":590,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"testPascalCase","ranges":[{"startOffset":729,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"testAllCaps","ranges":[{"startOffset":1145,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreCheck","ranges":[{"startOffset":1622,"endOffset":1765,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2903,"endOffset":4541,"count":8},{"startOffset":2966,"endOffset":2971,"count":0}],"isBlockCoverage":true},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":3250,"endOffset":4529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1068","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-fragments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6934,"count":1}],"isBlockCoverage":true},{"functionName":"replaceNode","ranges":[{"startOffset":616,"endOffset":743,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1437,"endOffset":6929,"count":8},{"startOffset":1500,"endOffset":1511,"count":0}],"isBlockCoverage":true},{"functionName":"reportOnReactVersion","ranges":[{"startOffset":1843,"endOffset":2100,"count":0}],"isBlockCoverage":false},{"functionName":"getFixerToLong","ranges":[{"startOffset":2106,"endOffset":2983,"count":0}],"isBlockCoverage":false},{"functionName":"getFixerToShort","ranges":[{"startOffset":2989,"endOffset":3992,"count":0}],"isBlockCoverage":false},{"functionName":"refersToReactFragment","ranges":[{"startOffset":3998,"endOffset":5009,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":5311,"endOffset":5369,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":5378,"endOffset":5776,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":5785,"endOffset":6136,"count":24},{"startOffset":5869,"endOffset":6128,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5905,"endOffset":6116,"count":0}],"isBlockCoverage":false},{"functionName":"Program:exit","ranges":[{"startOffset":6145,"endOffset":6917,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6192,"endOffset":6907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1069","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-props-no-multi-spaces.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3604,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":856,"endOffset":3599,"count":8}],"isBlockCoverage":true},{"functionName":"getPropName","ranges":[{"startOffset":927,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"hasEmptyLines","ranges":[{"startOffset":1552,"endOffset":1989,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacing","ranges":[{"startOffset":1995,"endOffset":2798,"count":0}],"isBlockCoverage":false},{"functionName":"containsGenericType","ranges":[{"startOffset":2804,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"getGenericNode","ranges":[{"startOffset":3025,"endOffset":3391,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":3412,"endOffset":3587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1070","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-props-no-spreading.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4032,"count":1}],"isBlockCoverage":true},{"functionName":"isException","ranges":[{"startOffset":565,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":643,"endOffset":685,"count":0}],"isBlockCoverage":false},{"functionName":"getTagNameFromMemberExpression","ranges":[{"startOffset":726,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2252,"endOffset":4027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1071","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-sort-default-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4998,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":991,"endOffset":4993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1072","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-sort-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18022,"count":1}],"isBlockCoverage":true},{"functionName":"isCallbackPropName","ranges":[{"startOffset":526,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"isMultilineProp","ranges":[{"startOffset":597,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedPropName","ranges":[{"startOffset":1535,"endOffset":1612,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSortToEnd","ranges":[{"startOffset":1759,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"contextCompare","ranges":[{"startOffset":1872,"endOffset":3785,"count":0}],"isBlockCoverage":false},{"functionName":"getGroupsOfSortableAttributes","ranges":[{"startOffset":4056,"endOffset":6989,"count":0}],"isBlockCoverage":false},{"functionName":"generateFixerFunction","ranges":[{"startOffset":6991,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"validateReservedFirstConfig","ranges":[{"startOffset":9698,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"reportNodeAttribute","ranges":[{"startOffset":11088,"endOffset":11526,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":12904,"endOffset":18017,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1073","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-space-before-closing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2858,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1061,"endOffset":2853,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1074","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/getTokenBeforeClosingBracket.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"getTokenBeforeClosingBracket","ranges":[{"startOffset":176,"endOffset":379,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1075","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":124,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1076","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-tag-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10490,"count":1}],"isBlockCoverage":true},{"functionName":"validateClosingSlash","ranges":[{"startOffset":1429,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"validateBeforeSelfClosing","ranges":[{"startOffset":3413,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"validateAfterOpening","ranges":[{"startOffset":4892,"endOffset":5987,"count":0}],"isBlockCoverage":false},{"functionName":"validateBeforeClosing","ranges":[{"startOffset":5989,"endOffset":8139,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":9336,"endOffset":10485,"count":8}],"isBlockCoverage":true},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":9449,"endOffset":10048,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":10056,"endOffset":10473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1077","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-uses-react.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1361,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":757,"endOffset":1356,"count":8}],"isBlockCoverage":true},{"functionName":"handleOpeningElement","ranges":[{"startOffset":900,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":1275,"endOffset":1344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1078","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-uses-vars.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"isTagName","ranges":[{"startOffset":400,"endOffset":432,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":831,"endOffset":1522,"count":8}],"isBlockCoverage":true},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":868,"endOffset":1509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1079","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/jsx-wrap-multilines.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7799,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2189,"endOffset":7794,"count":8}],"isBlockCoverage":true},{"functionName":"getOption","ranges":[{"startOffset":2211,"endOffset":2402,"count":477},{"startOffset":2283,"endOffset":2288,"count":0},{"startOffset":2367,"endOffset":2401,"count":0}],"isBlockCoverage":true},{"functionName":"isEnabled","ranges":[{"startOffset":2408,"endOffset":2522,"count":477}],"isBlockCoverage":true},{"functionName":"needsOpeningNewLine","ranges":[{"startOffset":2528,"endOffset":2835,"count":0}],"isBlockCoverage":false},{"functionName":"needsClosingNewLine","ranges":[{"startOffset":2841,"endOffset":3137,"count":0}],"isBlockCoverage":false},{"functionName":"isMultilines","ranges":[{"startOffset":3143,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":3240,"endOffset":3379,"count":0}],"isBlockCoverage":false},{"functionName":"trimTokenBeforeNewline","ranges":[{"startOffset":3385,"endOffset":3740,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3746,"endOffset":5869,"count":229},{"startOffset":3791,"endOffset":3814,"count":222},{"startOffset":3841,"endOffset":3981,"count":0},{"startOffset":3983,"endOffset":4017,"count":0},{"startOffset":4018,"endOffset":4039,"count":0},{"startOffset":4041,"endOffset":4220,"count":0},{"startOffset":4222,"endOffset":5863,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4081,"endOffset":4148,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4704,"endOffset":5104,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5181,"endOffset":5252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5491,"endOffset":5831,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":6070,"endOffset":6447,"count":91},{"startOffset":6163,"endOffset":6192,"count":0},{"startOffset":6242,"endOffset":6287,"count":89},{"startOffset":6289,"endOffset":6407,"count":0}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6456,"endOffset":6825,"count":60},{"startOffset":6550,"endOffset":6579,"count":0},{"startOffset":6664,"endOffset":6784,"count":0}],"isBlockCoverage":true},{"functionName":"ReturnStatement","ranges":[{"startOffset":6834,"endOffset":6975,"count":78}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression:exit","ranges":[{"startOffset":7016,"endOffset":7217,"count":75},{"startOffset":7124,"endOffset":7162,"count":0},{"startOffset":7164,"endOffset":7209,"count":0}],"isBlockCoverage":true},{"functionName":"ConditionalExpression","ranges":[{"startOffset":7226,"endOffset":7417,"count":2},{"startOffset":7319,"endOffset":7409,"count":0}],"isBlockCoverage":true},{"functionName":"LogicalExpression","ranges":[{"startOffset":7426,"endOffset":7567,"count":20},{"startOffset":7513,"endOffset":7559,"count":0}],"isBlockCoverage":true},{"functionName":"JSXAttribute","ranges":[{"startOffset":7576,"endOffset":7782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1080","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-invalid-html-attribute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14562,"count":1}],"isBlockCoverage":true},{"functionName":"splitIntoRangedParts","ranges":[{"startOffset":5011,"endOffset":5410,"count":0}],"isBlockCoverage":false},{"functionName":"checkLiteralValueNode","ranges":[{"startOffset":5412,"endOffset":8723,"count":0}],"isBlockCoverage":false},{"functionName":"checkAttribute","ranges":[{"startOffset":8762,"endOffset":10381,"count":0}],"isBlockCoverage":false},{"functionName":"isValidCreateElement","ranges":[{"startOffset":10383,"endOffset":10620,"count":0}],"isBlockCoverage":false},{"functionName":"checkPropValidValue","ranges":[{"startOffset":10622,"endOffset":11363,"count":0}],"isBlockCoverage":false},{"functionName":"checkCreateProps","ranges":[{"startOffset":11446,"endOffset":13162,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":13514,"endOffset":14557,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1081","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-access-state-in-setstate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5862,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":816,"endOffset":5857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1082","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-adjacent-inline-elements.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3005,"count":1}],"isBlockCoverage":true},{"functionName":"isInline","ranges":[{"startOffset":948,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2100,"endOffset":3000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1083","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-array-index-key.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7376,"count":1}],"isBlockCoverage":true},{"functionName":"isCreateCloneElement","ranges":[{"startOffset":554,"endOffset":1145,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1470,"endOffset":7371,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1084","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-arrow-function-lifecycle.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4981,"count":1}],"isBlockCoverage":true},{"functionName":"getText","ranges":[{"startOffset":471,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1288,"endOffset":4975,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1085","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/lifecycleMethods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1086","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-children-prop.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3754,"count":1}],"isBlockCoverage":true},{"functionName":"isCreateElementWithProps","ranges":[{"startOffset":722,"endOffset":901,"count":325},{"startOffset":817,"endOffset":845,"count":0},{"startOffset":850,"endOffset":898,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2007,"endOffset":3749,"count":8}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":2082,"endOffset":2241,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute","ranges":[{"startOffset":2262,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":2624,"endOffset":3386,"count":325},{"startOffset":2730,"endOffset":3378,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2824,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":3394,"endOffset":3737,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1087","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-danger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":658,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"isDangerous","ranges":[{"startOffset":1035,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1620,"endOffset":1961,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1088","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-danger-with-children.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5111,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":923,"endOffset":5106,"count":8}],"isBlockCoverage":true},{"functionName":"findSpreadVariable","ranges":[{"startOffset":945,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"findObjectProp","ranges":[{"startOffset":1359,"endOffset":2178,"count":0}],"isBlockCoverage":false},{"functionName":"findJsxProp","ranges":[{"startOffset":2417,"endOffset":2947,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":3141,"endOffset":3440,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":3461,"endOffset":3984,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":3992,"endOffset":5094,"count":325},{"startOffset":4113,"endOffset":4161,"count":260},{"startOffset":4172,"endOffset":4200,"count":0},{"startOffset":4211,"endOffset":5086,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4409,"endOffset":4443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1089","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-deprecated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8393,"count":1}],"isBlockCoverage":true},{"functionName":"getDeprecated","ranges":[{"startOffset":947,"endOffset":4219,"count":8}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4577,"endOffset":8388,"count":8}],"isBlockCoverage":true},{"functionName":"isDeprecated","ranges":[{"startOffset":4701,"endOffset":4912,"count":526},{"startOffset":4805,"endOffset":4829,"count":0},{"startOffset":4838,"endOffset":4897,"count":0}],"isBlockCoverage":true},{"functionName":"checkDeprecation","ranges":[{"startOffset":4918,"endOffset":5485,"count":526},{"startOffset":5038,"endOffset":5276,"count":0},{"startOffset":5377,"endOffset":5407,"count":0},{"startOffset":5408,"endOffset":5412,"count":0},{"startOffset":5435,"endOffset":5452,"count":0},{"startOffset":5453,"endOffset":5457,"count":0}],"isBlockCoverage":true},{"functionName":"getReactModuleName","ranges":[{"startOffset":5491,"endOffset":5805,"count":91},{"startOffset":5579,"endOffset":5615,"count":2},{"startOffset":5615,"endOffset":5804,"count":89}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5644,"endOffset":5771,"count":178}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5701,"endOffset":5734,"count":267}],"isBlockCoverage":true},{"functionName":"getLifeCycleMethods","ranges":[{"startOffset":5977,"endOffset":6240,"count":0}],"isBlockCoverage":false},{"functionName":"checkLifeCycleMethods","ranges":[{"startOffset":6352,"endOffset":6667,"count":26},{"startOffset":6514,"endOffset":6661,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6591,"endOffset":6651,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":6867,"endOffset":6970,"count":526}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":6979,"endOffset":7378,"count":24},{"startOffset":7143,"endOffset":7377,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7176,"endOffset":7368,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":7387,"endOffset":8235,"count":91},{"startOffset":7508,"endOffset":7527,"count":89},{"startOffset":7528,"endOffset":7566,"count":53},{"startOffset":7619,"endOffset":7641,"count":89},{"startOffset":7652,"endOffset":7681,"count":53},{"startOffset":7692,"endOffset":7755,"count":36},{"startOffset":7876,"endOffset":7894,"count":5},{"startOffset":7927,"endOffset":7939,"count":5},{"startOffset":7940,"endOffset":7957,"count":0},{"startOffset":7998,"endOffset":8234,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8034,"endOffset":8225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1090","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-did-mount-set-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":260,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1091","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/util/makeNoMethodSetStateRule.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3340,"count":1}],"isBlockCoverage":true},{"functionName":"mapTitle","ranges":[{"startOffset":440,"endOffset":746,"count":3},{"startOffset":654,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBeNoop","ranges":[{"startOffset":919,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"makeNoMethodSetStateRule","ranges":[{"startOffset":1176,"endOffset":3338,"count":3}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1560,"endOffset":3330,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1092","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-did-update-set-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":262,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1093","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-direct-mutation-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4509,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":881,"endOffset":4503,"count":8}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":1105,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"reportMutations","ranges":[{"startOffset":1340,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterMemberExpression","ranges":[{"startOffset":1828,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnoreComponent","ranges":[{"startOffset":2209,"endOffset":2343,"count":64},{"startOffset":2277,"endOffset":2336,"count":0}],"isBlockCoverage":true},{"functionName":"MethodDefinition","ranges":[{"startOffset":2542,"endOffset":2707,"count":54},{"startOffset":2608,"endOffset":2699,"count":5}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":2716,"endOffset":2823,"count":325}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":2832,"endOffset":3394,"count":60},{"startOffset":2976,"endOffset":2989,"count":0},{"startOffset":2990,"endOffset":3010,"count":0},{"startOffset":3041,"endOffset":3386,"count":0}],"isBlockCoverage":true},{"functionName":"UpdateExpression","ranges":[{"startOffset":3403,"endOffset":3963,"count":4},{"startOffset":3543,"endOffset":3587,"count":0},{"startOffset":3618,"endOffset":3955,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression:exit","ranges":[{"startOffset":3972,"endOffset":4087,"count":325}],"isBlockCoverage":true},{"functionName":"MethodDefinition:exit","ranges":[{"startOffset":4096,"endOffset":4269,"count":54},{"startOffset":4169,"endOffset":4261,"count":5}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":4278,"endOffset":4491,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4372,"endOffset":4481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1094","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-find-dom-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1225,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":806,"endOffset":1220,"count":8}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":843,"endOffset":1208,"count":325},{"startOffset":995,"endOffset":1036,"count":260},{"startOffset":1096,"endOffset":1207,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1095","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-is-mounted.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1342,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":659,"endOffset":1337,"count":8}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":696,"endOffset":1325,"count":325},{"startOffset":803,"endOffset":832,"count":65},{"startOffset":832,"endOffset":885,"count":260},{"startOffset":885,"endOffset":924,"count":36},{"startOffset":926,"endOffset":955,"count":260},{"startOffset":955,"endOffset":1324,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1096","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-multi-comp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2016,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":993,"endOffset":2010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1097","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-namespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1696,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":896,"endOffset":1691,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1098","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-set-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2324,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":735,"endOffset":2318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1099","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-string-refs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3506,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1035,"endOffset":3501,"count":8},{"startOffset":1147,"endOffset":1154,"count":0}],"isBlockCoverage":true},{"functionName":"isRefsUsage","ranges":[{"startOffset":1335,"endOffset":1588,"count":526},{"startOffset":1492,"endOffset":1532,"count":0},{"startOffset":1541,"endOffset":1573,"count":0}],"isBlockCoverage":true},{"functionName":"isRefAttribute","ranges":[{"startOffset":1791,"endOffset":1948,"count":0}],"isBlockCoverage":false},{"functionName":"containsStringLiteral","ranges":[{"startOffset":2157,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"containsStringExpressionContainer","ranges":[{"startOffset":2592,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":2998,"endOffset":3184,"count":526},{"startOffset":3054,"endOffset":3176,"count":0}],"isBlockCoverage":true},{"functionName":"JSXAttribute","ranges":[{"startOffset":3192,"endOffset":3489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1100","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-redundant-should-component-update.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":904,"endOffset":2384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1101","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-render-return-value.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2226,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":824,"endOffset":2221,"count":8},{"startOffset":1156,"endOffset":1344,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":1365,"endOffset":2209,"count":325},{"startOffset":1508,"endOffset":1537,"count":65},{"startOffset":1537,"endOffset":1608,"count":260},{"startOffset":1608,"endOffset":1653,"count":142},{"startOffset":1664,"endOffset":1700,"count":0},{"startOffset":1711,"endOffset":1740,"count":260},{"startOffset":1740,"endOffset":1841,"count":0},{"startOffset":1852,"endOffset":1888,"count":0},{"startOffset":1899,"endOffset":1943,"count":0},{"startOffset":1954,"endOffset":1995,"count":0},{"startOffset":2006,"endOffset":2201,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1102","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-this-in-sfc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":820,"endOffset":1268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1103","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-typos.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8839,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1531,"endOffset":8833,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1104","url":"file:///home/runner/work/deluge/deluge/node_modules/prop-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":520,"endOffset":709,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1105","url":"file:///home/runner/work/deluge/deluge/node_modules/react-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1},{"startOffset":58,"endOffset":125,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1106","url":"file:///home/runner/work/deluge/deluge/node_modules/react-is/cjs/react-is.development.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6980,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":309,"endOffset":6973,"count":1},{"startOffset":608,"endOffset":616,"count":0},{"startOffset":681,"endOffset":689,"count":0},{"startOffset":758,"endOffset":766,"count":0},{"startOffset":841,"endOffset":849,"count":0},{"startOffset":918,"endOffset":926,"count":0},{"startOffset":995,"endOffset":1003,"count":0},{"startOffset":1070,"endOffset":1078,"count":0},{"startOffset":1301,"endOffset":1309,"count":0},{"startOffset":1392,"endOffset":1400,"count":0},{"startOffset":1475,"endOffset":1483,"count":0},{"startOffset":1552,"endOffset":1560,"count":0},{"startOffset":1639,"endOffset":1647,"count":0},{"startOffset":1708,"endOffset":1716,"count":0},{"startOffset":1777,"endOffset":1785,"count":0},{"startOffset":1848,"endOffset":1856,"count":0},{"startOffset":1931,"endOffset":1939,"count":0},{"startOffset":2010,"endOffset":2018,"count":0},{"startOffset":2081,"endOffset":2089,"count":0}],"isBlockCoverage":true},{"functionName":"isValidElementType","ranges":[{"startOffset":2092,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"typeOf","ranges":[{"startOffset":2894,"endOffset":3889,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncMode","ranges":[{"startOffset":4510,"endOffset":4996,"count":0}],"isBlockCoverage":false},{"functionName":"isConcurrentMode","ranges":[{"startOffset":4997,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"isContextConsumer","ranges":[{"startOffset":5091,"endOffset":5177,"count":0}],"isBlockCoverage":false},{"functionName":"isContextProvider","ranges":[{"startOffset":5178,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":5266,"endOffset":5394,"count":0}],"isBlockCoverage":false},{"functionName":"isForwardRef","ranges":[{"startOffset":5395,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":5481,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"isLazy","ranges":[{"startOffset":5562,"endOffset":5634,"count":0}],"isBlockCoverage":false},{"functionName":"isMemo","ranges":[{"startOffset":5635,"endOffset":5707,"count":0}],"isBlockCoverage":false},{"functionName":"isPortal","ranges":[{"startOffset":5708,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"isProfiler","ranges":[{"startOffset":5785,"endOffset":5865,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictMode","ranges":[{"startOffset":5866,"endOffset":5951,"count":0}],"isBlockCoverage":false},{"functionName":"isSuspense","ranges":[{"startOffset":5952,"endOffset":6032,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1107","url":"file:///home/runner/work/deluge/deluge/node_modules/prop-types/factoryWithTypeCheckers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22716,"count":1}],"isBlockCoverage":true},{"functionName":"printWarning","ranges":[{"startOffset":442,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"printWarning","ranges":[{"startOffset":520,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"emptyFunctionThatReturnsNull","ranges":[{"startOffset":909,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":986,"endOffset":22714,"count":1}],"isBlockCoverage":true},{"functionName":"getIteratorFn","ranges":[{"startOffset":1589,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":4689,"endOffset":4939,"count":0}],"isBlockCoverage":false},{"functionName":"PropTypeError","ranges":[{"startOffset":5369,"endOffset":5522,"count":0}],"isBlockCoverage":false},{"functionName":"createChainableTypeChecker","ranges":[{"startOffset":5632,"endOffset":8279,"count":12}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":5821,"endOffset":8126,"count":0}],"isBlockCoverage":false},{"functionName":"createPrimitiveTypeChecker","ranges":[{"startOffset":8283,"endOffset":9134,"count":8}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":8339,"endOffset":9081,"count":0}],"isBlockCoverage":false},{"functionName":"createAnyTypeChecker","ranges":[{"startOffset":9138,"endOffset":9244,"count":1}],"isBlockCoverage":true},{"functionName":"createArrayOfTypeChecker","ranges":[{"startOffset":9248,"endOffset":10224,"count":0}],"isBlockCoverage":false},{"functionName":"createElementTypeChecker","ranges":[{"startOffset":10228,"endOffset":10745,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":10270,"endOffset":10692,"count":0}],"isBlockCoverage":false},{"functionName":"createElementTypeTypeChecker","ranges":[{"startOffset":10749,"endOffset":11287,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":10795,"endOffset":11234,"count":0}],"isBlockCoverage":false},{"functionName":"createInstanceTypeChecker","ranges":[{"startOffset":11291,"endOffset":11911,"count":0}],"isBlockCoverage":false},{"functionName":"createEnumTypeChecker","ranges":[{"startOffset":11915,"endOffset":13259,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectOfTypeChecker","ranges":[{"startOffset":13263,"endOffset":14271,"count":0}],"isBlockCoverage":false},{"functionName":"createUnionTypeChecker","ranges":[{"startOffset":14275,"endOffset":15889,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeChecker","ranges":[{"startOffset":15893,"endOffset":16278,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":15928,"endOffset":16225,"count":0}],"isBlockCoverage":false},{"functionName":"invalidValidatorError","ranges":[{"startOffset":16282,"endOffset":16621,"count":0}],"isBlockCoverage":false},{"functionName":"createShapeTypeChecker","ranges":[{"startOffset":16625,"endOffset":17550,"count":0}],"isBlockCoverage":false},{"functionName":"createStrictShapeTypeChecker","ranges":[{"startOffset":17554,"endOffset":19015,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":19019,"endOffset":20245,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":20249,"endOffset":20782,"count":0}],"isBlockCoverage":false},{"functionName":"getPropType","ranges":[{"startOffset":20862,"endOffset":21352,"count":0}],"isBlockCoverage":false},{"functionName":"getPreciseType","ranges":[{"startOffset":21474,"endOffset":21861,"count":0}],"isBlockCoverage":false},{"functionName":"getPostfixForTypeWarning","ranges":[{"startOffset":21990,"endOffset":22296,"count":0}],"isBlockCoverage":false},{"functionName":"getClassName","ranges":[{"startOffset":22347,"endOffset":22519,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1108","url":"file:///home/runner/work/deluge/deluge/node_modules/object-assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2108,"count":1},{"startOffset":1600,"endOffset":2106,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":277,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":452,"endOffset":1547,"count":1},{"startOffset":510,"endOffset":532,"count":0},{"startOffset":804,"endOffset":826,"count":0},{"startOffset":935,"endOffset":984,"count":10},{"startOffset":1119,"endOffset":1141,"count":0},{"startOffset":1400,"endOffset":1422,"count":0},{"startOffset":1442,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1076,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1312,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1602,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1109","url":"file:///home/runner/work/deluge/deluge/node_modules/prop-types/lib/ReactPropTypesSecret.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1110","url":"file:///home/runner/work/deluge/deluge/node_modules/prop-types/lib/has.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":70,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1111","url":"file:///home/runner/work/deluge/deluge/node_modules/prop-types/checkPropTypes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3868,"count":1}],"isBlockCoverage":true},{"functionName":"printWarning","ranges":[{"startOffset":218,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"printWarning","ranges":[{"startOffset":430,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"checkPropTypes","ranges":[{"startOffset":1295,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"checkPropTypes.resetWarningCache","ranges":[{"startOffset":3739,"endOffset":3833,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1112","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-unescaped-entities.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3789,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1917,"endOffset":3784,"count":8}],"isBlockCoverage":true},{"functionName":"reportInvalidEntity","ranges":[{"startOffset":1939,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"Literal, JSXText","ranges":[{"startOffset":3649,"endOffset":3772,"count":217},{"startOffset":3716,"endOffset":3764,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1113","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-unknown-property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26167,"count":1}],"isBlockCoverage":true},{"functionName":"getDOMPropertyNames","ranges":[{"startOffset":17615,"endOffset":18249,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHTMLTagInJSX","ranges":[{"startOffset":19051,"endOffset":19599,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAttributeCase","ranges":[{"startOffset":19977,"endOffset":20127,"count":0}],"isBlockCoverage":false},{"functionName":"isValidDataAttribute","ranges":[{"startOffset":20579,"endOffset":20685,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAriaAttribute","ranges":[{"startOffset":20903,"endOffset":21004,"count":0}],"isBlockCoverage":false},{"functionName":"getTagName","ranges":[{"startOffset":21154,"endOffset":21305,"count":0}],"isBlockCoverage":false},{"functionName":"tagNameHasDot","ranges":[{"startOffset":21485,"endOffset":21630,"count":0}],"isBlockCoverage":false},{"functionName":"getStandardName","ranges":[{"startOffset":21889,"endOffset":22303,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":23276,"endOffset":26162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1114","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-unsafe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4213,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1159,"endOffset":4208,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1115","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-unstable-nested-components.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15130,"count":1}],"isBlockCoverage":true},{"functionName":"generateErrorMessageWithParentName","ranges":[{"startOffset":1027,"endOffset":1451,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithRender","ranges":[{"startOffset":1604,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"getClosestMatchingParent","ranges":[{"startOffset":1935,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"isCreateElementMatcher","ranges":[{"startOffset":2448,"endOffset":2599,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectExpressionMatcher","ranges":[{"startOffset":2788,"endOffset":2883,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXExpressionContainerMatcher","ranges":[{"startOffset":3084,"endOffset":3191,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXAttributeOfExpressionContainerMatcher","ranges":[{"startOffset":3428,"endOffset":3620,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyOfObjectExpressionMatcher","ranges":[{"startOffset":3801,"endOffset":3938,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpressionMatcher","ranges":[{"startOffset":4123,"endOffset":4214,"count":0}],"isBlockCoverage":false},{"functionName":"isMapCall","ranges":[{"startOffset":4461,"endOffset":4604,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatementOfHook","ranges":[{"startOffset":4848,"endOffset":5218,"count":0}],"isBlockCoverage":false},{"functionName":"isComponentInRenderProp","ranges":[{"startOffset":5562,"endOffset":6866,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectValueOfRenderProperty","ranges":[{"startOffset":7193,"endOffset":7438,"count":0}],"isBlockCoverage":false},{"functionName":"resolveComponentName","ranges":[{"startOffset":7598,"endOffset":7849,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8604,"endOffset":15124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1116","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-unused-class-component-methods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6705,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyLiteralLike","ranges":[{"startOffset":1033,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"uncast","ranges":[{"startOffset":1365,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1694,"endOffset":2015,"count":0}],"isBlockCoverage":false},{"functionName":"isThisExpression","ranges":[{"startOffset":2017,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"getInitialClassInfo","ranges":[{"startOffset":2103,"endOffset":2388,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2834,"endOffset":6699,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1117","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-unused-prop-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4971,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1380,"endOffset":4965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1118","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-unused-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15823,"count":1}],"isBlockCoverage":true},{"functionName":"uncast","ranges":[{"startOffset":606,"endOffset":725,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":935,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"isThisExpression","ranges":[{"startOffset":1258,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"getInitialClassInfo","ranges":[{"startOffset":1370,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"isSetStateCall","ranges":[{"startOffset":1930,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2540,"endOffset":15818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1119","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/no-will-update-set-state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1120","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/prefer-es6-class.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1524,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":918,"endOffset":1519,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1121","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/prefer-exact-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4966,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":988,"endOffset":4960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1122","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/prefer-read-only-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2276,"count":1}],"isBlockCoverage":true},{"functionName":"isFlowPropertyType","ranges":[{"startOffset":251,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"isCovariant","ranges":[{"startOffset":335,"endOffset":617,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1182,"endOffset":2270,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1123","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/prefer-stateless-function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12818,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1303,"endOffset":12812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1124","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/prop-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1377,"endOffset":6205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1125","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/react-in-jsx-scope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1330,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":801,"endOffset":1325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1126","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/require-default-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6635,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1962,"endOffset":6629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1127","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/require-optimization.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6914,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":972,"endOffset":6908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1128","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/require-render-return.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3143,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":943,"endOffset":3137,"count":8}],"isBlockCoverage":true},{"functionName":"markReturnStatementPresent","ranges":[{"startOffset":1089,"endOffset":1211,"count":0}],"isBlockCoverage":false},{"functionName":"findRenderMethod","ranges":[{"startOffset":1411,"endOffset":1712,"count":0}],"isBlockCoverage":false},{"functionName":"ReturnStatement","ranges":[{"startOffset":1733,"endOffset":2285,"count":78}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1870,"endOffset":2275,"count":676},{"startOffset":1957,"endOffset":1994,"count":104},{"startOffset":2118,"endOffset":2167,"count":73},{"startOffset":2180,"endOffset":2193,"count":0},{"startOffset":2206,"endOffset":2265,"count":0}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":2294,"endOffset":2497,"count":75},{"startOffset":2364,"endOffset":2416,"count":23},{"startOffset":2447,"endOffset":2496,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":2506,"endOffset":3125,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2599,"endOffset":3115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1129","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/self-closing-comp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2958,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1160,"endOffset":2953,"count":8}],"isBlockCoverage":true},{"functionName":"isComponent","ranges":[{"startOffset":1182,"endOffset":1391,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIsEmpty","ranges":[{"startOffset":1397,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIsMultilineSpaces","ranges":[{"startOffset":1489,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"isShouldBeSelfClosed","ranges":[{"startOffset":1840,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":2213,"endOffset":2941,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1130","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/sort-comp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13540,"count":1}],"isBlockCoverage":true},{"functionName":"getMethodsOrder","ranges":[{"startOffset":1417,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2857,"endOffset":13516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1131","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/sort-prop-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7968,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1609,"endOffset":7963,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1132","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/state-in-constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1855,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1013,"endOffset":1850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1133","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/static-property-placement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6538,"count":1}],"isBlockCoverage":true},{"functionName":"displayName","ranges":[{"startOffset":1720,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1918,"endOffset":1971,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2964,"endOffset":6532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1134","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/style-prop-object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3918,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1090,"endOffset":3913,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1135","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-react/lib/rules/void-dom-elements-no-children.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4025,"count":1}],"isBlockCoverage":true},{"functionName":"isVoidDOMElement","ranges":[{"startOffset":874,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1581,"endOffset":4020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1136","url":"file:///home/runner/work/deluge/deluge/node_modules/flat-cache/src/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5590,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":642,"endOffset":956,"count":1},{"startOffset":767,"endOffset":798,"count":0},{"startOffset":887,"endOffset":952,"count":0}],"isBlockCoverage":true},{"functionName":"loadFile","ranges":[{"startOffset":1136,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"all","ranges":[{"startOffset":1389,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":1445,"endOffset":1503,"count":2}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":1732,"endOffset":1824,"count":8}],"isBlockCoverage":true},{"functionName":"removeKey","ranges":[{"startOffset":1972,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getKey","ranges":[{"startOffset":2282,"endOffset":2366,"count":16}],"isBlockCoverage":true},{"functionName":"_prune","ranges":[{"startOffset":2525,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3070,"endOffset":3189,"count":1},{"startOffset":3124,"endOffset":3138,"count":0}],"isBlockCoverage":true},{"functionName":"removeCacheFile","ranges":[{"startOffset":3376,"endOffset":3427,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3520,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":3982,"endOffset":4055,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4424,"endOffset":4539,"count":1}],"isBlockCoverage":true},{"functionName":"createFromFile","ranges":[{"startOffset":4560,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"clearCacheById","ranges":[{"startOffset":5096,"endOffset":5262,"count":0}],"isBlockCoverage":false},{"functionName":"clearAll","ranges":[{"startOffset":5440,"endOffset":5585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1137","url":"file:///home/runner/work/deluge/deluge/node_modules/flat-cache/src/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":966,"count":1}],"isBlockCoverage":true},{"functionName":"tryParse","ranges":[{"startOffset":118,"endOffset":296,"count":0}],"isBlockCoverage":false},{"functionName":"readJSON","ranges":[{"startOffset":474,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"writeJSON","ranges":[{"startOffset":799,"endOffset":961,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1138","url":"file:///home/runner/work/deluge/deluge/node_modules/flatted/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2740,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":287,"endOffset":306,"count":105}],"isBlockCoverage":true},{"functionName":"primitives","ranges":[{"startOffset":328,"endOffset":396,"count":0}],"isBlockCoverage":false},{"functionName":"Primitives","ranges":[{"startOffset":418,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"revive","ranges":[{"startOffset":513,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1244,"endOffset":1365,"count":42}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1382,"endOffset":1673,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1717,"endOffset":2558,"count":1},{"startOffset":1768,"endOffset":1797,"count":0},{"startOffset":1798,"endOffset":1873,"count":0},{"startOffset":2084,"endOffset":2166,"count":42}],"isBlockCoverage":true},{"functionName":"$","ranges":[{"startOffset":1812,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":2208,"endOffset":2556,"count":146},{"startOffset":2257,"endOffset":2312,"count":42},{"startOffset":2312,"endOffset":2391,"count":104},{"startOffset":2391,"endOffset":2445,"count":32},{"startOffset":2432,"endOffset":2445,"count":0},{"startOffset":2452,"endOffset":2528,"count":48},{"startOffset":2500,"endOffset":2527,"count":41},{"startOffset":2534,"endOffset":2555,"count":56}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":2607,"endOffset":2636,"count":0}],"isBlockCoverage":false},{"functionName":"fromJSON","ranges":[{"startOffset":2680,"endOffset":2709,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1139","url":"file:///home/runner/work/deluge/deluge/node_modules/flat-cache/src/del.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":292,"count":1}],"isBlockCoverage":true},{"functionName":"del","ranges":[{"startOffset":79,"endOffset":290,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1140","url":"file:///home/runner/work/deluge/deluge/node_modules/rimraf/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8866,"count":1},{"startOffset":141,"endOffset":186,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":355,"endOffset":1024,"count":0}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1041,"endOffset":2757,"count":0}],"isBlockCoverage":false},{"functionName":"rimraf_","ranges":[{"startOffset":3329,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":4245,"endOffset":4677,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":4703,"endOffset":5121,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":5137,"endOffset":5633,"count":0}],"isBlockCoverage":false},{"functionName":"rmkids","ranges":[{"startOffset":5650,"endOffset":6139,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":6299,"endOffset":7661,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":7681,"endOffset":8003,"count":0}],"isBlockCoverage":false},{"functionName":"rmkidsSync","ranges":[{"startOffset":8024,"endOffset":8815,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1141","url":"file:///home/runner/work/deluge/deluge/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19445,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2096,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2517,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2763,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"Glob","ranges":[{"startOffset":3158,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4615,"endOffset":4818,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4847,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5194,"endOffset":6010,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6035,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6109,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6183,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6266,"endOffset":6353,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6379,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":6989,"endOffset":8838,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8873,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9145,"endOffset":11189,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11219,"endOffset":11787,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11825,"endOffset":12627,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12655,"endOffset":13172,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13174,"endOffset":13354,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13389,"endOffset":13886,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13919,"endOffset":15004,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":15040,"endOffset":15270,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15308,"endOffset":16455,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16489,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16779,"endOffset":17461,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17528,"endOffset":18919,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18945,"endOffset":19444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1142","url":"file:///home/runner/work/deluge/deluge/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1143","url":"file:///home/runner/work/deluge/deluge/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2489,"endOffset":2534,"count":0},{"startOffset":2673,"endOffset":2754,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1144","url":"file:///home/runner/work/deluge/deluge/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1145","url":"file:///home/runner/work/deluge/deluge/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":534,"endOffset":541,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":0}],"isBlockCoverage":false},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1146","url":"file:///home/runner/work/deluge/deluge/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12020,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":501,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync","ranges":[{"startOffset":792,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1450,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2043,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3670,"endOffset":5628,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5663,"endOffset":6051,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6094,"endOffset":6806,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6838,"endOffset":7269,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7308,"endOffset":7789,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7826,"endOffset":8690,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8730,"endOffset":9828,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9866,"endOffset":10612,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10683,"endOffset":11863,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11892,"endOffset":11938,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11970,"endOffset":12019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1147","url":"file:///home/runner/work/deluge/deluge/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6149,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":195,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"alphasort","ranges":[{"startOffset":457,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":522,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreMap","ranges":[{"startOffset":796,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1091,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":3398,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4717,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5189,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":5740,"endOffset":5954,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5956,"endOffset":6148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1148","url":"file:///home/runner/work/deluge/deluge/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1149","url":"file:///home/runner/work/deluge/deluge/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1150","url":"file:///home/runner/work/deluge/deluge/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1151","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-var.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12392,"count":1}],"isBlockCoverage":true},{"functionName":"isGlobal","ranges":[{"startOffset":709,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingFunctionScope","ranges":[{"startOffset":1071,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"isReferencedInClosure","ranges":[{"startOffset":1563,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"isLoopAssignee","ranges":[{"startOffset":2041,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationInitialized","ranges":[{"startOffset":2421,"endOffset":2540,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeNode","ranges":[{"startOffset":2999,"endOffset":3257,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclared","ranges":[{"startOffset":3448,"endOffset":3521,"count":0}],"isBlockCoverage":false},{"functionName":"isUsedFromOutsideOf","ranges":[{"startOffset":3801,"endOffset":4397,"count":0}],"isBlockCoverage":false},{"functionName":"hasReferenceInTDZ","ranges":[{"startOffset":4949,"endOffset":5814,"count":0}],"isBlockCoverage":false},{"functionName":"hasNameDisallowedForLetDeclarations","ranges":[{"startOffset":6084,"endOffset":6178,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":6813,"endOffset":12388,"count":8}],"isBlockCoverage":true},{"functionName":"hasSelfReferenceInTDZ","ranges":[{"startOffset":7248,"endOffset":7526,"count":0}],"isBlockCoverage":false},{"functionName":"canFix","ranges":[{"startOffset":10307,"endOffset":11579,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":11766,"endOffset":12197,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration:exit","ranges":[{"startOffset":12228,"endOffset":12371,"count":91},{"startOffset":12304,"endOffset":12357,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1152","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/ast-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":74774,"count":1}],"isBlockCoverage":true},{"functionName":"isModifyingReference","ranges":[{"startOffset":2192,"endOffset":2724,"count":309},{"startOffset":2525,"endOffset":2583,"count":209},{"startOffset":2645,"endOffset":2675,"count":0},{"startOffset":2676,"endOffset":2715,"count":0}],"isBlockCoverage":true},{"functionName":"startsWithUpperCase","ranges":[{"startOffset":2907,"endOffset":2988,"count":0}],"isBlockCoverage":false},{"functionName":"isES5Constructor","ranges":[{"startOffset":3161,"endOffset":3255,"count":0}],"isBlockCoverage":false},{"functionName":"getUpperFunction","ranges":[{"startOffset":3410,"endOffset":3649,"count":1},{"startOffset":3524,"endOffset":3630,"count":3},{"startOffset":3581,"endOffset":3624,"count":1},{"startOffset":3630,"endOffset":3648,"count":0}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":3949,"endOffset":4042,"count":1245}],"isBlockCoverage":true},{"functionName":"isLoop","ranges":[{"startOffset":4352,"endOffset":4437,"count":947}],"isBlockCoverage":true},{"functionName":"isInLoop","ranges":[{"startOffset":4600,"endOffset":4832,"count":196},{"startOffset":4671,"endOffset":4698,"count":1118},{"startOffset":4734,"endOffset":4811,"count":947},{"startOffset":4769,"endOffset":4805,"count":12},{"startOffset":4811,"endOffset":4831,"count":184}],"isBlockCoverage":true},{"functionName":"isNullLiteral","ranges":[{"startOffset":5004,"endOffset":5597,"count":62},{"startOffset":5541,"endOffset":5563,"count":26},{"startOffset":5564,"endOffset":5578,"count":0},{"startOffset":5579,"endOffset":5594,"count":0}],"isBlockCoverage":true},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":5792,"endOffset":6018,"count":3},{"startOffset":5981,"endOffset":6008,"count":0}],"isBlockCoverage":true},{"functionName":"isCallee","ranges":[{"startOffset":6170,"endOffset":6278,"count":6},{"startOffset":6245,"endOffset":6275,"count":3}],"isBlockCoverage":true},{"functionName":"getStaticStringValue","ranges":[{"startOffset":6723,"endOffset":7619,"count":30},{"startOffset":6847,"endOffset":7289,"count":0},{"startOffset":7353,"endOffset":7372,"count":0},{"startOffset":7381,"endOffset":7566,"count":0},{"startOffset":7599,"endOffset":7618,"count":0}],"isBlockCoverage":true},{"functionName":"getStaticPropertyName","ranges":[{"startOffset":8615,"endOffset":9241,"count":2009},{"startOffset":8710,"endOffset":8792,"count":0},{"startOffset":8802,"endOffset":8818,"count":116},{"startOffset":8827,"endOffset":8853,"count":116},{"startOffset":8862,"endOffset":8934,"count":187},{"startOffset":8944,"endOffset":9021,"count":1822},{"startOffset":9111,"endOffset":9128,"count":1979},{"startOffset":9130,"endOffset":9171,"count":1979},{"startOffset":9171,"endOffset":9221,"count":30},{"startOffset":9221,"endOffset":9240,"count":0}],"isBlockCoverage":true},{"functionName":"skipChainExpression","ranges":[{"startOffset":9539,"endOffset":9654,"count":4684},{"startOffset":9627,"endOffset":9644,"count":0}],"isBlockCoverage":true},{"functionName":"checkText","ranges":[{"startOffset":9906,"endOffset":10049,"count":511},{"startOffset":9993,"endOffset":10014,"count":407},{"startOffset":10023,"endOffset":10046,"count":104}],"isBlockCoverage":true},{"functionName":"isSpecificId","ranges":[{"startOffset":10342,"endOffset":10448,"count":981},{"startOffset":10416,"endOffset":10445,"count":285}],"isBlockCoverage":true},{"functionName":"isSpecificMemberAccess","ranges":[{"startOffset":11126,"endOffset":11675,"count":788},{"startOffset":11289,"endOffset":11318,"count":265},{"startOffset":11318,"endOffset":11339,"count":523},{"startOffset":11339,"endOffset":11385,"count":307},{"startOffset":11387,"endOffset":11416,"count":297},{"startOffset":11416,"endOffset":11655,"count":226},{"startOffset":11612,"endOffset":11649,"count":219},{"startOffset":11655,"endOffset":11674,"count":7}],"isBlockCoverage":true},{"functionName":"equalLiteralValue","ranges":[{"startOffset":11924,"endOffset":12385,"count":0}],"isBlockCoverage":false},{"functionName":"isSameReference","ranges":[{"startOffset":12863,"endOffset":14644,"count":4},{"startOffset":12971,"endOffset":13336,"count":1},{"startOffset":13066,"endOffset":13163,"count":0},{"startOffset":13210,"endOffset":13307,"count":0},{"startOffset":13336,"endOffset":13371,"count":3},{"startOffset":13371,"endOffset":13384,"count":0},{"startOffset":13393,"endOffset":13440,"count":0},{"startOffset":13450,"endOffset":13468,"count":1},{"startOffset":13477,"endOffset":13547,"count":1},{"startOffset":13556,"endOffset":13622,"count":0},{"startOffset":13632,"endOffset":13752,"count":0},{"startOffset":13762,"endOffset":14592,"count":2},{"startOffset":14086,"endOffset":14151,"count":0},{"startOffset":14206,"endOffset":14475,"count":0},{"startOffset":14476,"endOffset":14567,"count":0},{"startOffset":14602,"endOffset":14636,"count":0}],"isBlockCoverage":true},{"functionName":"isReflectApply","ranges":[{"startOffset":14816,"endOffset":14910,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayFromMethod","ranges":[{"startOffset":15076,"endOffset":15187,"count":49}],"isBlockCoverage":true},{"functionName":"isMethodWhichHasThisArg","ranges":[{"startOffset":15383,"endOffset":15492,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":15644,"endOffset":15697,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15676,"endOffset":15694,"count":1871}],"isBlockCoverage":true},{"functionName":"hasJSDocThisTag","ranges":[{"startOffset":15970,"endOffset":16474,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesised","ranges":[{"startOffset":16720,"endOffset":17082,"count":62},{"startOffset":16963,"endOffset":17005,"count":0},{"startOffset":17006,"endOffset":17040,"count":0},{"startOffset":17041,"endOffset":17079,"count":0}],"isBlockCoverage":true},{"functionName":"isEqToken","ranges":[{"startOffset":17246,"endOffset":17338,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowToken","ranges":[{"startOffset":17508,"endOffset":17604,"count":230},{"startOffset":17571,"endOffset":17601,"count":127}],"isBlockCoverage":true},{"functionName":"isCommaToken","ranges":[{"startOffset":17772,"endOffset":17867,"count":5876},{"startOffset":17834,"endOffset":17864,"count":236}],"isBlockCoverage":true},{"functionName":"isDotToken","ranges":[{"startOffset":18031,"endOffset":18124,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionDotToken","ranges":[{"startOffset":18290,"endOffset":18392,"count":363},{"startOffset":18359,"endOffset":18389,"count":0}],"isBlockCoverage":true},{"functionName":"isSemicolonToken","ranges":[{"startOffset":18568,"endOffset":18667,"count":1129},{"startOffset":18634,"endOffset":18664,"count":9}],"isBlockCoverage":true},{"functionName":"isColonToken","ranges":[{"startOffset":18835,"endOffset":18930,"count":112},{"startOffset":18897,"endOffset":18927,"count":10}],"isBlockCoverage":true},{"functionName":"isOpeningParenToken","ranges":[{"startOffset":19128,"endOffset":19230,"count":12307},{"startOffset":19197,"endOffset":19227,"count":2197}],"isBlockCoverage":true},{"functionName":"isClosingParenToken","ranges":[{"startOffset":19426,"endOffset":19528,"count":11094},{"startOffset":19495,"endOffset":19525,"count":1267}],"isBlockCoverage":true},{"functionName":"isOpeningBracketToken","ranges":[{"startOffset":19732,"endOffset":19836,"count":30}],"isBlockCoverage":true},{"functionName":"isClosingBracketToken","ranges":[{"startOffset":20038,"endOffset":20142,"count":230},{"startOffset":20109,"endOffset":20139,"count":24}],"isBlockCoverage":true},{"functionName":"isOpeningBraceToken","ranges":[{"startOffset":20328,"endOffset":20430,"count":29},{"startOffset":20397,"endOffset":20427,"count":14}],"isBlockCoverage":true},{"functionName":"isClosingBraceToken","ranges":[{"startOffset":20614,"endOffset":20716,"count":303},{"startOffset":20683,"endOffset":20713,"count":62}],"isBlockCoverage":true},{"functionName":"isCommentToken","ranges":[{"startOffset":20888,"endOffset":21010,"count":877},{"startOffset":20954,"endOffset":20979,"count":868},{"startOffset":20980,"endOffset":21007,"count":824}],"isBlockCoverage":true},{"functionName":"isKeywordToken","ranges":[{"startOffset":21182,"endOffset":21253,"count":106}],"isBlockCoverage":true},{"functionName":"getOpeningParenOfParams","ranges":[{"startOffset":21467,"endOffset":22120,"count":0}],"isBlockCoverage":false},{"functionName":"equalTokens","ranges":[{"startOffset":22411,"endOffset":22851,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":23362,"endOffset":23528,"count":0}],"isBlockCoverage":false},{"functionName":"isCoalesceExpression","ranges":[{"startOffset":23979,"endOffset":24090,"count":0}],"isBlockCoverage":false},{"functionName":"isMixedLogicalAndCoalesceExpressions","ranges":[{"startOffset":24393,"endOffset":24616,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalAssignmentOperator","ranges":[{"startOffset":24822,"endOffset":24927,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchCaseColonToken","ranges":[{"startOffset":25164,"endOffset":25357,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleExportName","ranges":[{"startOffset":25773,"endOffset":25927,"count":1},{"startOffset":25879,"endOffset":25926,"count":0}],"isBlockCoverage":true},{"functionName":"getBooleanValue","ranges":[{"startOffset":26164,"endOffset":26812,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalIdentity","ranges":[{"startOffset":27130,"endOffset":28134,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceToGlobalVariable","ranges":[{"startOffset":28419,"endOffset":28739,"count":0}],"isBlockCoverage":false},{"functionName":"isConstant","ranges":[{"startOffset":29212,"endOffset":32971,"count":85},{"startOffset":29363,"endOffset":29391,"count":0},{"startOffset":29425,"endOffset":29440,"count":0},{"startOffset":29449,"endOffset":29480,"count":0},{"startOffset":29489,"endOffset":29540,"count":0},{"startOffset":29549,"endOffset":29572,"count":0},{"startOffset":29581,"endOffset":30126,"count":0},{"startOffset":30135,"endOffset":30342,"count":0},{"startOffset":30352,"endOffset":30554,"count":0},{"startOffset":30564,"endOffset":30959,"count":13},{"startOffset":30700,"endOffset":30720,"count":1},{"startOffset":30735,"endOffset":30779,"count":0},{"startOffset":30820,"endOffset":30898,"count":12},{"startOffset":30898,"endOffset":30959,"count":1},{"startOffset":30969,"endOffset":31171,"count":8},{"startOffset":31049,"endOffset":31116,"count":0},{"startOffset":31117,"endOffset":31170,"count":0},{"startOffset":31181,"endOffset":31770,"count":12},{"startOffset":31434,"endOffset":31480,"count":0},{"startOffset":31561,"endOffset":31608,"count":0},{"startOffset":31647,"endOffset":31665,"count":0},{"startOffset":31779,"endOffset":31838,"count":0},{"startOffset":31847,"endOffset":32206,"count":0},{"startOffset":32216,"endOffset":32346,"count":0},{"startOffset":32355,"endOffset":32448,"count":0},{"startOffset":32457,"endOffset":32797,"count":9},{"startOffset":32530,"endOffset":32563,"count":0},{"startOffset":32565,"endOffset":32771,"count":0},{"startOffset":32806,"endOffset":32914,"count":11},{"startOffset":32870,"endOffset":32913,"count":0},{"startOffset":32951,"endOffset":32970,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30217,"endOffset":30251,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30304,"endOffset":30340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30459,"endOffset":30503,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenOnSameLine","ranges":[{"startOffset":33608,"endOffset":33705,"count":4634}],"isBlockCoverage":true},{"functionName":"isStringLiteral","ranges":[{"startOffset":35029,"endOffset":35205,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakableStatement","ranges":[{"startOffset":35624,"endOffset":35711,"count":0}],"isBlockCoverage":false},{"functionName":"getModifyingReferences","ranges":[{"startOffset":35973,"endOffset":36071,"count":109}],"isBlockCoverage":true},{"functionName":"isSurroundedBy","ranges":[{"startOffset":36403,"endOffset":36515,"count":108}],"isBlockCoverage":true},{"functionName":"isDirectiveComment","ranges":[{"startOffset":36757,"endOffset":37006,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableByName","ranges":[{"startOffset":37665,"endOffset":37955,"count":556},{"startOffset":37756,"endOffset":37927,"count":2008},{"startOffset":37835,"endOffset":37883,"count":556},{"startOffset":37883,"endOffset":37927,"count":1452},{"startOffset":37927,"endOffset":37954,"count":0}],"isBlockCoverage":true},{"functionName":"isDefaultThisBinding","ranges":[{"startOffset":39756,"endOffset":46618,"count":0}],"isBlockCoverage":false},{"functionName":"getPrecedence","ranges":[{"startOffset":46797,"endOffset":49052,"count":639},{"startOffset":46860,"endOffset":46912,"count":0},{"startOffset":46926,"endOffset":46954,"count":68},{"startOffset":46967,"endOffset":46998,"count":69},{"startOffset":47011,"endOffset":47060,"count":69},{"startOffset":47074,"endOffset":47129,"count":0},{"startOffset":47143,"endOffset":47423,"count":27},{"startOffset":47230,"endOffset":47240,"count":17},{"startOffset":47261,"endOffset":47305,"count":17},{"startOffset":47326,"endOffset":47370,"count":10},{"startOffset":47474,"endOffset":48587,"count":26},{"startOffset":47561,"endOffset":47604,"count":0},{"startOffset":47625,"endOffset":47668,"count":0},{"startOffset":47689,"endOffset":47732,"count":0},{"startOffset":47753,"endOffset":47763,"count":0},{"startOffset":47784,"endOffset":47794,"count":0},{"startOffset":47815,"endOffset":47826,"count":6},{"startOffset":47847,"endOffset":47892,"count":6},{"startOffset":47913,"endOffset":47922,"count":4},{"startOffset":47943,"endOffset":47953,"count":4},{"startOffset":47974,"endOffset":47983,"count":7},{"startOffset":48004,"endOffset":48014,"count":7},{"startOffset":48035,"endOffset":48045,"count":7},{"startOffset":48066,"endOffset":48119,"count":7},{"startOffset":48140,"endOffset":48150,"count":0},{"startOffset":48171,"endOffset":48181,"count":0},{"startOffset":48202,"endOffset":48248,"count":0},{"startOffset":48269,"endOffset":48278,"count":13},{"startOffset":48299,"endOffset":48343,"count":13},{"startOffset":48364,"endOffset":48373,"count":0},{"startOffset":48394,"endOffset":48403,"count":0},{"startOffset":48424,"endOffset":48468,"count":0},{"startOffset":48489,"endOffset":48534,"count":0},{"startOffset":48638,"endOffset":48661,"count":20},{"startOffset":48674,"endOffset":48724,"count":67},{"startOffset":48738,"endOffset":48789,"count":12},{"startOffset":48803,"endOffset":48825,"count":335},{"startOffset":48838,"endOffset":48861,"count":335},{"startOffset":48874,"endOffset":48925,"count":335},{"startOffset":48939,"endOffset":48987,"count":38},{"startOffset":49001,"endOffset":49036,"count":65}],"isBlockCoverage":true},{"functionName":"isEmptyBlock","ranges":[{"startOffset":49260,"endOffset":49376,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyFunction","ranges":[{"startOffset":49590,"endOffset":49694,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectivePrologue","ranges":[{"startOffset":49918,"endOffset":50959,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalInteger","ranges":[{"startOffset":51878,"endOffset":52036,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalIntegerNumericToken","ranges":[{"startOffset":52311,"endOffset":52440,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionNameWithKind","ranges":[{"startOffset":56313,"endOffset":58375,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionHeadLoc","ranges":[{"startOffset":61596,"endOffset":62430,"count":0}],"isBlockCoverage":false},{"functionName":"getNextLocation","ranges":[{"startOffset":64123,"endOffset":64510,"count":0}],"isBlockCoverage":false},{"functionName":"getParenthesisedText","ranges":[{"startOffset":64898,"endOffset":65686,"count":0}],"isBlockCoverage":false},{"functionName":"couldBeError","ranges":[{"startOffset":65899,"endOffset":68212,"count":7},{"startOffset":65961,"endOffset":65979,"count":3},{"startOffset":65992,"endOffset":66014,"count":3},{"startOffset":66310,"endOffset":67077,"count":0},{"startOffset":67091,"endOffset":67281,"count":0},{"startOffset":67295,"endOffset":67985,"count":0},{"startOffset":67999,"endOffset":68144,"count":0},{"startOffset":68158,"endOffset":68196,"count":0}],"isBlockCoverage":true},{"functionName":"isNumericLiteral","ranges":[{"startOffset":68417,"endOffset":68583,"count":0}],"isBlockCoverage":false},{"functionName":"canTokensBeAdjacent","ranges":[{"startOffset":69210,"endOffset":72566,"count":0}],"isBlockCoverage":false},{"functionName":"getNameLocationInGlobalDirectiveComment","ranges":[{"startOffset":72935,"endOffset":73666,"count":0}],"isBlockCoverage":false},{"functionName":"hasOctalOrNonOctalDecimalEscapeSequence","ranges":[{"startOffset":74221,"endOffset":74353,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1153","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1297,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1296,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":1276,"count":79},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":931,"endOffset":1193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1154","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/object-shorthand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22221,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3873,"endOffset":22217,"count":8},{"startOffset":3932,"endOffset":3949,"count":0},{"startOffset":4099,"endOffset":4126,"count":0},{"startOffset":4517,"endOffset":4563,"count":0}],"isBlockCoverage":true},{"functionName":"isConstructor","ranges":[{"startOffset":5315,"endOffset":5709,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveShorthand","ranges":[{"startOffset":5960,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":6404,"endOffset":6524,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthand","ranges":[{"startOffset":6784,"endOffset":6942,"count":0}],"isBlockCoverage":false},{"functionName":"isRedundant","ranges":[{"startOffset":7223,"endOffset":7625,"count":0}],"isBlockCoverage":false},{"functionName":"checkConsistency","ranges":[{"startOffset":7918,"endOffset":9455,"count":0}],"isBlockCoverage":false},{"functionName":"makeFunctionShorthand","ranges":[{"startOffset":9805,"endOffset":12811,"count":0}],"isBlockCoverage":false},{"functionName":"makeFunctionLongform","ranges":[{"startOffset":13131,"endOffset":13986,"count":0}],"isBlockCoverage":false},{"functionName":"enterFunction","ranges":[{"startOffset":15434,"endOffset":15773,"count":79}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15559,"endOffset":15600,"count":6572}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15610,"endOffset":15761,"count":71}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15664,"endOffset":15685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15695,"endOffset":15745,"count":0}],"isBlockCoverage":false},{"functionName":"exitFunction","ranges":[{"startOffset":15937,"endOffset":16011,"count":79}],"isBlockCoverage":true},{"functionName":"reportLexicalIdentifier","ranges":[{"startOffset":16262,"endOffset":16416,"count":192}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16340,"endOffset":16404,"count":23}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":16917,"endOffset":17010,"count":75}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression:exit","ranges":[{"startOffset":17024,"endOffset":17127,"count":75}],"isBlockCoverage":true},{"functionName":"MetaProperty","ranges":[{"startOffset":17239,"endOffset":17421,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":17435,"endOffset":17586,"count":1469},{"startOffset":17506,"endOffset":17572,"count":0}],"isBlockCoverage":true},{"functionName":"ObjectExpression","ranges":[{"startOffset":17601,"endOffset":17855,"count":21},{"startOffset":17664,"endOffset":17734,"count":0},{"startOffset":17772,"endOffset":17841,"count":0}],"isBlockCoverage":true},{"functionName":"Property:exit","ranges":[{"startOffset":17870,"endOffset":22200,"count":50},{"startOffset":17948,"endOffset":17965,"count":38},{"startOffset":18077,"endOffset":18124,"count":17},{"startOffset":18124,"endOffset":18239,"count":33},{"startOffset":18241,"endOffset":18288,"count":0},{"startOffset":18288,"endOffset":18395,"count":33},{"startOffset":18395,"endOffset":18438,"count":0},{"startOffset":18439,"endOffset":18487,"count":0},{"startOffset":18489,"endOffset":18536,"count":0},{"startOffset":18536,"endOffset":18715,"count":33},{"startOffset":18715,"endOffset":19648,"count":23},{"startOffset":18753,"endOffset":18814,"count":12},{"startOffset":18785,"endOffset":18813,"count":0},{"startOffset":18816,"endOffset":19254,"count":0},{"startOffset":19277,"endOffset":19630,"count":0},{"startOffset":19648,"endOffset":22186,"count":10},{"startOffset":19675,"endOffset":19692,"count":0},{"startOffset":19693,"endOffset":19787,"count":0},{"startOffset":19789,"endOffset":21120,"count":0},{"startOffset":21163,"endOffset":21199,"count":1},{"startOffset":21200,"endOffset":21217,"count":0},{"startOffset":21219,"endOffset":21589,"count":0},{"startOffset":21632,"endOffset":21662,"count":1},{"startOffset":21663,"endOffset":21700,"count":0},{"startOffset":21701,"endOffset":21718,"count":0},{"startOffset":21720,"endOffset":22186,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":19162,"endOffset":19204,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":19518,"endOffset":19580,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":21009,"endOffset":21052,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":21432,"endOffset":21547,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":22029,"endOffset":22144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1155","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13157,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":13156,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":13136,"count":1},{"startOffset":418,"endOffset":750,"count":0},{"startOffset":785,"endOffset":1118,"count":0},{"startOffset":1366,"endOffset":1422,"count":3},{"startOffset":1397,"endOffset":1422,"count":1},{"startOffset":1436,"endOffset":1845,"count":0},{"startOffset":1973,"endOffset":2311,"count":0},{"startOffset":2415,"endOffset":12567,"count":0},{"startOffset":12581,"endOffset":12937,"count":0},{"startOffset":12986,"endOffset":13049,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1156","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/accessor-pairs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12194,"count":1}],"isBlockCoverage":true},{"functionName":"areEqualTokenLists","ranges":[{"startOffset":1390,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"areEqualKeys","ranges":[{"startOffset":1947,"endOffset":2279,"count":44},{"startOffset":2124,"endOffset":2176,"count":0},{"startOffset":2178,"endOffset":2278,"count":0}],"isBlockCoverage":true},{"functionName":"isAccessorKind","ranges":[{"startOffset":2475,"endOffset":2563,"count":87},{"startOffset":2538,"endOffset":2560,"count":70}],"isBlockCoverage":true},{"functionName":"isArgumentOfMethodCall","ranges":[{"startOffset":2983,"endOffset":3263,"count":42},{"startOffset":3135,"endOffset":3210,"count":8},{"startOffset":3211,"endOffset":3254,"count":0}],"isBlockCoverage":true},{"functionName":"isPropertyDescriptor","ranges":[{"startOffset":3446,"endOffset":4087,"count":21},{"startOffset":3684,"endOffset":3712,"count":0},{"startOffset":3927,"endOffset":4084,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":5663,"endOffset":12190,"count":8},{"startOffset":5723,"endOffset":5728,"count":0},{"startOffset":11949,"endOffset":11970,"count":0}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":6238,"endOffset":7165,"count":0}],"isBlockCoverage":false},{"functionName":"reportList","ranges":[{"startOffset":7455,"endOffset":7603,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorData","ranges":[{"startOffset":7890,"endOffset":8256,"count":17},{"startOffset":8036,"endOffset":8068,"count":0},{"startOffset":8167,"endOffset":8171,"count":0},{"startOffset":8218,"endOffset":8226,"count":0}],"isBlockCoverage":true},{"functionName":"mergeAccessorData","ranges":[{"startOffset":8606,"endOffset":9055,"count":17},{"startOffset":8790,"endOffset":8947,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8711,"endOffset":8753,"count":44}],"isBlockCoverage":true},{"functionName":"checkList","ranges":[{"startOffset":9252,"endOffset":9839,"count":31},{"startOffset":9504,"endOffset":9829,"count":17},{"startOffset":9563,"endOffset":9581,"count":0},{"startOffset":9583,"endOffset":9660,"count":0},{"startOffset":9700,"endOffset":9717,"count":0},{"startOffset":9718,"endOffset":9736,"count":0},{"startOffset":9738,"endOffset":9815,"count":0}],"isBlockCoverage":true},{"functionName":"checkObjectLiteral","ranges":[{"startOffset":10042,"endOffset":10162,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10123,"endOffset":10149,"count":35}],"isBlockCoverage":true},{"functionName":"checkPropertyDescriptor","ranges":[{"startOffset":10389,"endOffset":10994,"count":0}],"isBlockCoverage":false},{"functionName":"checkObjectExpression","ranges":[{"startOffset":11248,"endOffset":11441,"count":21},{"startOffset":11369,"endOffset":11431,"count":0}],"isBlockCoverage":true},{"functionName":"checkClassBody","ranges":[{"startOffset":11622,"endOffset":11885,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11709,"endOffset":11743,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11794,"endOffset":11807,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11858,"endOffset":11872,"count":54}],"isBlockCoverage":true}]},{"scriptId":"1157","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4392,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4391,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4371,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1226,"endOffset":1255,"count":0},{"startOffset":1307,"endOffset":1345,"count":0},{"startOffset":1412,"endOffset":1931,"count":3},{"startOffset":1472,"endOffset":1498,"count":2},{"startOffset":1500,"endOffset":1535,"count":1},{"startOffset":1559,"endOffset":1928,"count":0},{"startOffset":2037,"endOffset":2423,"count":0},{"startOffset":2563,"endOffset":2949,"count":0},{"startOffset":3098,"endOffset":3520,"count":0},{"startOffset":3607,"endOffset":3909,"count":0},{"startOffset":4026,"endOffset":4288,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1158","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/array-bracket-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9085,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1620,"endOffset":9081,"count":8}],"isBlockCoverage":true},{"functionName":"isOptionSet","ranges":[{"startOffset":2137,"endOffset":2265,"count":24},{"startOffset":2206,"endOffset":2246,"count":0}],"isBlockCoverage":true},{"functionName":"reportNoBeginningSpace","ranges":[{"startOffset":2991,"endOffset":3520,"count":0}],"isBlockCoverage":false},{"functionName":"reportNoEndingSpace","ranges":[{"startOffset":3797,"endOffset":4337,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredBeginningSpace","ranges":[{"startOffset":4611,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredEndingSpace","ranges":[{"startOffset":5290,"endOffset":5694,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectType","ranges":[{"startOffset":5903,"endOffset":6038,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayType","ranges":[{"startOffset":6245,"endOffset":6377,"count":0}],"isBlockCoverage":false},{"functionName":"validateArraySpacing","ranges":[{"startOffset":6562,"endOffset":8759,"count":9},{"startOffset":6631,"endOffset":6660,"count":0},{"startOffset":6662,"endOffset":6701,"count":0},{"startOffset":6884,"endOffset":6932,"count":0},{"startOffset":7266,"endOffset":7295,"count":0},{"startOffset":7347,"endOffset":7375,"count":0},{"startOffset":7426,"endOffset":7455,"count":0},{"startOffset":7476,"endOffset":7493,"count":0},{"startOffset":7609,"endOffset":7637,"count":0},{"startOffset":7689,"endOffset":7716,"count":0},{"startOffset":7767,"endOffset":7796,"count":0},{"startOffset":7817,"endOffset":7834,"count":0},{"startOffset":7913,"endOffset":8286,"count":3},{"startOffset":7962,"endOffset":8012,"count":0},{"startOffset":8014,"endOffset":8096,"count":0},{"startOffset":8196,"endOffset":8272,"count":0},{"startOffset":8326,"endOffset":8374,"count":8},{"startOffset":8376,"endOffset":8749,"count":2},{"startOffset":8425,"endOffset":8479,"count":0},{"startOffset":8481,"endOffset":8559,"count":0},{"startOffset":8663,"endOffset":8735,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1159","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4969,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4968,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4948,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1210,"count":2},{"startOffset":1185,"endOffset":1210,"count":1},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1687,"endOffset":4550,"count":0},{"startOffset":4603,"endOffset":4865,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1160","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/array-callback-return.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9807,"count":1}],"isBlockCoverage":true},{"functionName":"isReachable","ranges":[{"startOffset":884,"endOffset":947,"count":3}],"isBlockCoverage":true},{"functionName":"isTargetMethod","ranges":[{"startOffset":1245,"endOffset":1350,"count":49}],"isBlockCoverage":true},{"functionName":"fullMethodName","ranges":[{"startOffset":1633,"endOffset":1850,"count":0}],"isBlockCoverage":false},{"functionName":"getArrayMethodName","ranges":[{"startOffset":2202,"endOffset":4293,"count":142},{"startOffset":2522,"endOffset":2547,"count":0},{"startOffset":2560,"endOffset":2589,"count":0},{"startOffset":2602,"endOffset":2686,"count":0},{"startOffset":2992,"endOffset":3278,"count":1},{"startOffset":3198,"endOffset":3278,"count":0},{"startOffset":3435,"endOffset":4131,"count":49},{"startOffset":3521,"endOffset":3766,"count":0},{"startOffset":3818,"endOffset":4102,"count":7},{"startOffset":4102,"endOffset":4131,"count":42},{"startOffset":4195,"endOffset":4232,"count":92},{"startOffset":4248,"endOffset":4292,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":5700,"endOffset":9803,"count":8},{"startOffset":5762,"endOffset":5810,"count":0}],"isBlockCoverage":true},{"functionName":"checkLastSegment","ranges":[{"startOffset":6452,"endOffset":7496,"count":142},{"startOffset":6526,"endOffset":6565,"count":135},{"startOffset":6565,"endOffset":6658,"count":7},{"startOffset":6658,"endOffset":6854,"count":2},{"startOffset":6701,"endOffset":6743,"count":0},{"startOffset":6744,"endOffset":6762,"count":0},{"startOffset":6764,"endOffset":6840,"count":0},{"startOffset":6854,"endOffset":7096,"count":5},{"startOffset":6918,"endOffset":6972,"count":3},{"startOffset":6974,"endOffset":7082,"count":0},{"startOffset":7096,"endOffset":7125,"count":7},{"startOffset":7125,"endOffset":7486,"count":0}],"isBlockCoverage":true},{"functionName":"onCodePathStart","ranges":[{"startOffset":7579,"endOffset":8179,"count":154},{"startOffset":7708,"endOffset":7786,"count":142},{"startOffset":8039,"endOffset":8077,"count":7},{"startOffset":8078,"endOffset":8120,"count":7}],"isBlockCoverage":true},{"functionName":"onCodePathEnd","ranges":[{"startOffset":8243,"endOffset":8317,"count":154}],"isBlockCoverage":true},{"functionName":"ReturnStatement","ranges":[{"startOffset":8385,"endOffset":9595,"count":78},{"startOffset":8453,"endOffset":8500,"count":71},{"startOffset":8500,"endOffset":8645,"count":7},{"startOffset":8645,"endOffset":8921,"count":1},{"startOffset":8801,"endOffset":8817,"count":0},{"startOffset":8819,"endOffset":8903,"count":0},{"startOffset":8921,"endOffset":9176,"count":6},{"startOffset":9076,"endOffset":9158,"count":0},{"startOffset":9176,"endOffset":9209,"count":7},{"startOffset":9209,"endOffset":9581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1161","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3686,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3685,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3665,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1153,"endOffset":1183,"count":0},{"startOffset":1225,"endOffset":1254,"count":0},{"startOffset":1321,"endOffset":1802,"count":2},{"startOffset":1381,"endOffset":1406,"count":1},{"startOffset":1430,"endOffset":1799,"count":0},{"startOffset":1908,"endOffset":2294,"count":0},{"startOffset":2433,"endOffset":2815,"count":0},{"startOffset":2901,"endOffset":3203,"count":0},{"startOffset":3320,"endOffset":3582,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1162","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/arrow-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5210,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1600,"endOffset":5206,"count":8}],"isBlockCoverage":true},{"functionName":"getTokens","ranges":[{"startOffset":2078,"endOffset":2374,"count":75}],"isBlockCoverage":true},{"functionName":"countSpaces","ranges":[{"startOffset":2589,"endOffset":2816,"count":75}],"isBlockCoverage":true},{"functionName":"spaces","ranges":[{"startOffset":3157,"endOffset":5127,"count":75},{"startOffset":3406,"endOffset":3725,"count":0},{"startOffset":3739,"endOffset":4202,"count":0},{"startOffset":4329,"endOffset":4645,"count":0},{"startOffset":4659,"endOffset":5117,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":3567,"endOffset":3683,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":4005,"endOffset":4146,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":4488,"endOffset":4603,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":4921,"endOffset":5061,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1163","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3572,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3571,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3551,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1146,"endOffset":1168,"count":0},{"startOffset":1203,"endOffset":1224,"count":0},{"startOffset":1291,"endOffset":1758,"count":2},{"startOffset":1344,"endOffset":1362,"count":1},{"startOffset":1386,"endOffset":1755,"count":0},{"startOffset":1857,"endOffset":2215,"count":0},{"startOffset":2347,"endOffset":2701,"count":0},{"startOffset":2787,"endOffset":3089,"count":0},{"startOffset":3206,"endOffset":3468,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1164","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/block-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5858,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":982,"endOffset":5854,"count":8},{"startOffset":1100,"endOffset":1109,"count":0}],"isBlockCoverage":true},{"functionName":"getOpenBrace","ranges":[{"startOffset":1398,"endOffset":1932,"count":150},{"startOffset":1477,"endOffset":1681,"count":0},{"startOffset":1728,"endOffset":1838,"count":0}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":2531,"endOffset":2736,"count":294},{"startOffset":2637,"endOffset":2711,"count":0}],"isBlockCoverage":true},{"functionName":"checkSpacingInsideBraces","ranges":[{"startOffset":2957,"endOffset":5660,"count":150},{"startOffset":3667,"endOffset":3706,"count":3},{"startOffset":3706,"endOffset":3783,"count":147},{"startOffset":3783,"endOffset":3812,"count":0},{"startOffset":3814,"endOffset":3853,"count":0},{"startOffset":3853,"endOffset":3926,"count":147},{"startOffset":3926,"endOffset":4763,"count":0},{"startOffset":4763,"endOffset":4813,"count":147},{"startOffset":4813,"endOffset":5650,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4461,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":5350,"endOffset":5616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1165","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2051,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2050,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":2030,"count":6},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1210,"count":11},{"startOffset":1185,"endOffset":1210,"count":6},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1685,"endOffset":1947,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1166","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/brace-style.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8144,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1793,"endOffset":8140,"count":8},{"startOffset":1852,"endOffset":1861,"count":0},{"startOffset":1903,"endOffset":1908,"count":0}],"isBlockCoverage":true},{"functionName":"removeNewlineBetween","ranges":[{"startOffset":2489,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"validateCurlyPair","ranges":[{"startOffset":3198,"endOffset":5121,"count":153},{"startOffset":3737,"endOffset":3977,"count":0},{"startOffset":4014,"endOffset":4082,"count":0},{"startOffset":4083,"endOffset":4106,"count":0},{"startOffset":4108,"endOffset":4340,"count":0},{"startOffset":4423,"endOffset":4465,"count":3},{"startOffset":4466,"endOffset":4489,"count":0},{"startOffset":4491,"endOffset":4723,"count":0},{"startOffset":4782,"endOffset":4805,"count":150},{"startOffset":4806,"endOffset":4874,"count":150},{"startOffset":4876,"endOffset":5111,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4255,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":4639,"endOffset":4689,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":5026,"endOffset":5077,"count":0}],"isBlockCoverage":false},{"functionName":"validateCurlyBeforeKeyword","ranges":[{"startOffset":5424,"endOffset":6193,"count":1},{"startOffset":5637,"endOffset":5863,"count":0},{"startOffset":5898,"endOffset":5953,"count":0},{"startOffset":5955,"endOffset":6183,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":6101,"endOffset":6149,"count":0}],"isBlockCoverage":false},{"functionName":"BlockStatement","ranges":[{"startOffset":6417,"endOffset":6651,"count":150},{"startOffset":6516,"endOffset":6637,"count":148}],"isBlockCoverage":true},{"functionName":"StaticBlock","ranges":[{"startOffset":6665,"endOffset":6894,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":6908,"endOffset":7037,"count":5}],"isBlockCoverage":true},{"functionName":"SwitchStatement","ranges":[{"startOffset":7051,"endOffset":7334,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":7348,"endOffset":7652,"count":38},{"startOffset":7430,"endOffset":7447,"count":20},{"startOffset":7449,"endOffset":7638,"count":0}],"isBlockCoverage":true},{"functionName":"TryStatement","ranges":[{"startOffset":7666,"endOffset":8123,"count":1},{"startOffset":7912,"endOffset":8109,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1167","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3773,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3753,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1846,"endOffset":1878,"count":0},{"startOffset":2029,"endOffset":2398,"count":0},{"startOffset":2509,"endOffset":2903,"count":0},{"startOffset":2988,"endOffset":3290,"count":0},{"startOffset":3408,"endOffset":3670,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1168","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/camelcase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13910,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2042,"endOffset":13906,"count":8},{"startOffset":2103,"endOffset":2108,"count":0},{"startOffset":2178,"endOffset":2188,"count":0},{"startOffset":2397,"endOffset":2402,"count":0}],"isBlockCoverage":true},{"functionName":"isUnderscored","ranges":[{"startOffset":2975,"endOffset":3237,"count":260},{"startOffset":3188,"endOffset":3226,"count":1}],"isBlockCoverage":true},{"functionName":"isAllowed","ranges":[{"startOffset":3451,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"isGoodName","ranges":[{"startOffset":3824,"endOffset":3921,"count":260},{"startOffset":3892,"endOffset":3910,"count":0}],"isBlockCoverage":true},{"functionName":"isAssignmentTarget","ranges":[{"startOffset":4188,"endOffset":4823,"count":0}],"isBlockCoverage":false},{"functionName":"equalsToOriginalName","ranges":[{"startOffset":5276,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":6466,"endOffset":6904,"count":0}],"isBlockCoverage":false},{"functionName":"reportReferenceId","ranges":[{"startOffset":7099,"endOffset":8121,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":8234,"endOffset":9619,"count":8},{"startOffset":8333,"endOffset":9121,"count":0},{"startOffset":9216,"endOffset":9605,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9715,"endOffset":10969,"count":243},{"startOffset":10076,"endOffset":10955,"count":232},{"startOffset":10186,"endOffset":10360,"count":0},{"startOffset":10363,"endOffset":10955,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11065,"endOffset":11592,"count":87},{"startOffset":11475,"endOffset":11499,"count":0},{"startOffset":11548,"endOffset":11591,"count":0}],"isBlockCoverage":true},{"functionName":"MemberExpression[computed!=true] > Identifier.property","ranges":[{"startOffset":11606,"endOffset":11979,"count":511},{"startOffset":11735,"endOffset":11790,"count":0},{"startOffset":11791,"endOffset":11869,"count":0},{"startOffset":11935,"endOffset":11978,"count":0}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":12075,"endOffset":12907,"count":24},{"startOffset":12176,"endOffset":12893,"count":28},{"startOffset":12286,"endOffset":12454,"count":0},{"startOffset":12457,"endOffset":12893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13003,"endOffset":13281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13377,"endOffset":13889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1169","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7388,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7387,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":7367,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1311,"endOffset":1341,"count":0},{"startOffset":1408,"endOffset":1969,"count":5},{"startOffset":1474,"endOffset":1500,"count":4},{"startOffset":1502,"endOffset":1528,"count":3},{"startOffset":1530,"endOffset":1553,"count":2},{"startOffset":1555,"endOffset":1573,"count":1},{"startOffset":1597,"endOffset":1966,"count":0},{"startOffset":2081,"endOffset":2491,"count":0},{"startOffset":2631,"endOffset":3017,"count":0},{"startOffset":3157,"endOffset":3543,"count":0},{"startOffset":3653,"endOffset":3671,"count":0},{"startOffset":3836,"endOffset":3892,"count":2},{"startOffset":3867,"endOffset":3892,"count":1},{"startOffset":3906,"endOffset":4316,"count":0},{"startOffset":4461,"endOffset":4479,"count":0},{"startOffset":4564,"endOffset":4899,"count":0},{"startOffset":5059,"endOffset":5448,"count":0},{"startOffset":5587,"endOffset":5701,"count":0},{"startOffset":5716,"endOffset":6111,"count":0},{"startOffset":6128,"endOffset":6485,"count":0},{"startOffset":6603,"endOffset":6905,"count":0},{"startOffset":7022,"endOffset":7284,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1170","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/comma-dangle.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13783,"count":1}],"isBlockCoverage":true},{"functionName":"isTrailingCommaAllowed","ranges":[{"startOffset":974,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":1416,"endOffset":2242,"count":8},{"startOffset":1511,"endOffset":1763,"count":0},{"startOffset":1887,"endOffset":1912,"count":0},{"startOffset":1955,"endOffset":1981,"count":0},{"startOffset":2024,"endOffset":2050,"count":0},{"startOffset":2093,"endOffset":2119,"count":0},{"startOffset":2166,"endOffset":2194,"count":0},{"startOffset":2211,"endOffset":2241,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4429,"endOffset":13779,"count":8}],"isBlockCoverage":true},{"functionName":"getLastItem","ranges":[{"startOffset":4787,"endOffset":5912,"count":575},{"startOffset":5147,"endOffset":5171,"count":21},{"startOffset":5188,"endOffset":5259,"count":27},{"startOffset":5276,"endOffset":5299,"count":9},{"startOffset":5316,"endOffset":5384,"count":9},{"startOffset":5401,"endOffset":5426,"count":24},{"startOffset":5443,"endOffset":5523,"count":30},{"startOffset":5540,"endOffset":5567,"count":4},{"startOffset":5584,"endOffset":5610,"count":71},{"startOffset":5627,"endOffset":5704,"count":146},{"startOffset":5721,"endOffset":5743,"count":325},{"startOffset":5760,"endOffset":5830,"count":363},{"startOffset":5847,"endOffset":5888,"count":0}],"isBlockCoverage":true},{"functionName":"last","ranges":[{"startOffset":5012,"endOffset":5096,"count":575}],"isBlockCoverage":true},{"functionName":"getTrailingToken","ranges":[{"startOffset":6338,"endOffset":6963,"count":421},{"startOffset":6431,"endOffset":6455,"count":15},{"startOffset":6472,"endOffset":6495,"count":23},{"startOffset":6512,"endOffset":6534,"count":290},{"startOffset":6551,"endOffset":6633,"count":315},{"startOffset":6650,"endOffset":6939,"count":106},{"startOffset":6794,"endOffset":6859,"count":0}],"isBlockCoverage":true},{"functionName":"isMultiline","ranges":[{"startOffset":7312,"endOffset":7696,"count":0}],"isBlockCoverage":false},{"functionName":"forbidTrailingComma","ranges":[{"startOffset":8013,"endOffset":9379,"count":575},{"startOffset":8125,"endOffset":8202,"count":431},{"startOffset":8163,"endOffset":8201,"count":24},{"startOffset":8204,"endOffset":8243,"count":154},{"startOffset":8243,"endOffset":8368,"count":421},{"startOffset":8368,"endOffset":9369,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":8548,"endOffset":9335,"count":0}],"isBlockCoverage":false},{"functionName":"forceTrailingComma","ranges":[{"startOffset":9897,"endOffset":11521,"count":0}],"isBlockCoverage":false},{"functionName":"forceTrailingCommaIfMultiline","ranges":[{"startOffset":11982,"endOffset":12195,"count":0}],"isBlockCoverage":false},{"functionName":"allowTrailingCommaIfMultiline","ranges":[{"startOffset":12665,"endOffset":12816,"count":0}],"isBlockCoverage":false},{"functionName":"ignore","ranges":[{"startOffset":13070,"endOffset":13078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1171","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8393,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8392,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":173,"endOffset":8372,"count":1},{"startOffset":449,"endOffset":726,"count":0},{"startOffset":1047,"endOffset":1103,"count":4},{"startOffset":1078,"endOffset":1103,"count":0},{"startOffset":1439,"endOffset":1463,"count":0},{"startOffset":1476,"endOffset":1487,"count":0},{"startOffset":1512,"endOffset":1516,"count":0},{"startOffset":1563,"endOffset":1568,"count":0},{"startOffset":1592,"endOffset":1596,"count":0},{"startOffset":1643,"endOffset":1695,"count":0},{"startOffset":1854,"endOffset":2458,"count":5},{"startOffset":1907,"endOffset":1927,"count":4},{"startOffset":1929,"endOffset":1949,"count":3},{"startOffset":1951,"endOffset":1971,"count":2},{"startOffset":1973,"endOffset":1995,"count":1},{"startOffset":2019,"endOffset":2455,"count":0},{"startOffset":2530,"endOffset":2548,"count":0},{"startOffset":2698,"endOffset":2754,"count":4},{"startOffset":2729,"endOffset":2754,"count":1},{"startOffset":2768,"endOffset":3144,"count":0},{"startOffset":3371,"endOffset":3389,"count":0},{"startOffset":3541,"endOffset":3597,"count":4},{"startOffset":3572,"endOffset":3597,"count":1},{"startOffset":3611,"endOffset":3992,"count":0},{"startOffset":4219,"endOffset":4237,"count":0},{"startOffset":4389,"endOffset":4445,"count":4},{"startOffset":4420,"endOffset":4445,"count":1},{"startOffset":4459,"endOffset":4840,"count":0},{"startOffset":5067,"endOffset":5085,"count":0},{"startOffset":5237,"endOffset":5293,"count":4},{"startOffset":5268,"endOffset":5293,"count":1},{"startOffset":5307,"endOffset":5688,"count":0},{"startOffset":5917,"endOffset":5935,"count":0},{"startOffset":6087,"endOffset":6143,"count":4},{"startOffset":6118,"endOffset":6143,"count":1},{"startOffset":6157,"endOffset":6540,"count":0},{"startOffset":6749,"endOffset":7127,"count":0},{"startOffset":7217,"endOffset":7276,"count":0},{"startOffset":7363,"endOffset":7796,"count":0},{"startOffset":7860,"endOffset":7885,"count":0},{"startOffset":8027,"endOffset":8289,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1172","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/comma-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6951,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1315,"endOffset":6947,"count":8},{"startOffset":1544,"endOffset":1551,"count":0},{"startOffset":1618,"endOffset":1624,"count":0}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":2313,"endOffset":3325,"count":0}],"isBlockCoverage":false},{"functionName":"addNullElementsToIgnoreList","ranges":[{"startOffset":3560,"endOffset":4161,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3704,"endOffset":4149,"count":18},{"startOffset":3783,"endOffset":4007,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":4381,"endOffset":6815,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4442,"endOffset":6799,"count":4868},{"startOffset":4514,"endOffset":4569,"count":4662},{"startOffset":4569,"endOffset":4831,"count":206},{"startOffset":4832,"endOffset":5625,"count":206},{"startOffset":5626,"endOffset":5702,"count":206},{"startOffset":5703,"endOffset":5802,"count":206},{"startOffset":5825,"endOffset":5912,"count":0},{"startOffset":5912,"endOffset":6033,"count":206},{"startOffset":6034,"endOffset":6138,"count":206},{"startOffset":6139,"endOffset":6241,"count":206},{"startOffset":6242,"endOffset":6348,"count":206},{"startOffset":6349,"endOffset":6460,"count":206},{"startOffset":6431,"endOffset":6459,"count":0},{"startOffset":6461,"endOffset":6581,"count":206},{"startOffset":6582,"endOffset":6676,"count":180},{"startOffset":6699,"endOffset":6781,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1173","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3573,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3572,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3552,"count":2},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1146,"endOffset":1169,"count":0},{"startOffset":1204,"endOffset":1225,"count":0},{"startOffset":1292,"endOffset":1759,"count":4},{"startOffset":1345,"endOffset":1363,"count":2},{"startOffset":1387,"endOffset":1756,"count":0},{"startOffset":1858,"endOffset":2216,"count":0},{"startOffset":2348,"endOffset":2702,"count":0},{"startOffset":2788,"endOffset":3090,"count":0},{"startOffset":3207,"endOffset":3469,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1174","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/comma-style.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11921,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1407,"endOffset":11917,"count":8},{"startOffset":1466,"endOffset":1475,"count":0},{"startOffset":1897,"endOffset":1970,"count":0},{"startOffset":1972,"endOffset":2197,"count":0},{"startOffset":10380,"endOffset":10508,"count":0},{"startOffset":10717,"endOffset":10842,"count":0},{"startOffset":10888,"endOffset":11018,"count":0},{"startOffset":11063,"endOffset":11192,"count":0},{"startOffset":11242,"endOffset":11376,"count":0},{"startOffset":11417,"endOffset":11545,"count":0},{"startOffset":11589,"endOffset":11721,"count":0},{"startOffset":11761,"endOffset":11888,"count":0}],"isBlockCoverage":true},{"functionName":"getReplacedText","ranges":[{"startOffset":2625,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"getFixerFunction","ranges":[{"startOffset":3431,"endOffset":3953,"count":0}],"isBlockCoverage":false},{"functionName":"validateCommaItemSpacing","ranges":[{"startOffset":4409,"endOffset":6285,"count":30},{"startOffset":4610,"endOffset":4690,"count":4},{"startOffset":4692,"endOffset":4740,"count":4},{"startOffset":4740,"endOffset":6275,"count":26},{"startOffset":4891,"endOffset":5499,"count":0},{"startOffset":5527,"endOffset":5587,"count":0},{"startOffset":5589,"endOffset":5889,"count":0},{"startOffset":5977,"endOffset":6275,"count":0}],"isBlockCoverage":true},{"functionName":"validateComma","ranges":[{"startOffset":6605,"endOffset":9767,"count":121},{"startOffset":6752,"endOffset":6783,"count":112},{"startOffset":6820,"endOffset":6835,"count":105},{"startOffset":6837,"endOffset":9757,"count":17},{"startOffset":9214,"endOffset":9743,"count":9},{"startOffset":9431,"endOffset":9725,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6980,"endOffset":8855,"count":46},{"startOffset":7068,"endOffset":7087,"count":0},{"startOffset":7170,"endOffset":7208,"count":0},{"startOffset":7252,"endOffset":7271,"count":0},{"startOffset":8226,"endOffset":8360,"count":30},{"startOffset":8666,"endOffset":8723,"count":0},{"startOffset":8746,"endOffset":8837,"count":0}],"isBlockCoverage":true},{"functionName":"nodes.VariableDeclaration","ranges":[{"startOffset":10072,"endOffset":10155,"count":91}],"isBlockCoverage":true},{"functionName":"nodes.ObjectExpression","ranges":[{"startOffset":10248,"endOffset":10329,"count":21}],"isBlockCoverage":true},{"functionName":"nodes.ObjectPattern","ranges":[{"startOffset":10416,"endOffset":10497,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ArrayExpression","ranges":[{"startOffset":10588,"endOffset":10667,"count":9}],"isBlockCoverage":true},{"functionName":"nodes.ArrayPattern","ranges":[{"startOffset":10752,"endOffset":10831,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.FunctionDeclaration","ranges":[{"startOffset":10930,"endOffset":11007,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.FunctionExpression","ranges":[{"startOffset":11104,"endOffset":11181,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ArrowFunctionExpression","ranges":[{"startOffset":11288,"endOffset":11365,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.CallExpression","ranges":[{"startOffset":11454,"endOffset":11534,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ImportDeclaration","ranges":[{"startOffset":11629,"endOffset":11710,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.NewExpression","ranges":[{"startOffset":11797,"endOffset":11877,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1175","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4504,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4503,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4483,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1210,"count":2},{"startOffset":1185,"endOffset":1210,"count":1},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1687,"endOffset":4085,"count":0},{"startOffset":4138,"endOffset":4400,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1176","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/computed-property-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7543,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1487,"endOffset":7539,"count":8}],"isBlockCoverage":true},{"functionName":"reportNoBeginningSpace","ranges":[{"startOffset":2286,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"reportNoEndingSpace","ranges":[{"startOffset":3106,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredBeginningSpace","ranges":[{"startOffset":3860,"endOffset":4265,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredEndingSpace","ranges":[{"startOffset":4539,"endOffset":4943,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacing","ranges":[{"startOffset":5255,"endOffset":7020,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5312,"endOffset":7009,"count":630},{"startOffset":5365,"endOffset":5412,"count":615},{"startOffset":5412,"endOffset":6426,"count":15},{"startOffset":5957,"endOffset":6202,"count":0},{"startOffset":6286,"endOffset":6386,"count":0},{"startOffset":6426,"endOffset":6995,"count":15},{"startOffset":6541,"endOffset":6778,"count":0},{"startOffset":6860,"endOffset":6955,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1177","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3829,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3828,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3808,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1210,"count":2},{"startOffset":1185,"endOffset":1210,"count":1},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1853,"endOffset":1891,"count":0},{"startOffset":2049,"endOffset":2418,"count":0},{"startOffset":2536,"endOffset":2958,"count":0},{"startOffset":3043,"endOffset":3345,"count":0},{"startOffset":3463,"endOffset":3725,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1178","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/constructor-super.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15026,"count":1}],"isBlockCoverage":true},{"functionName":"isReachable","ranges":[{"startOffset":490,"endOffset":553,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorFunction","ranges":[{"startOffset":842,"endOffset":1042,"count":154},{"startOffset":937,"endOffset":987,"count":67},{"startOffset":988,"endOffset":1033,"count":54}],"isBlockCoverage":true},{"functionName":"isPossibleConstructor","ranges":[{"startOffset":1217,"endOffset":3655,"count":5},{"startOffset":1271,"endOffset":1300,"count":2},{"startOffset":1300,"endOffset":1335,"count":3},{"startOffset":1335,"endOffset":1358,"count":0},{"startOffset":1367,"endOffset":1393,"count":0},{"startOffset":1402,"endOffset":1424,"count":0},{"startOffset":1433,"endOffset":1457,"count":0},{"startOffset":1466,"endOffset":1488,"count":0},{"startOffset":1497,"endOffset":1518,"count":0},{"startOffset":1527,"endOffset":1550,"count":0},{"startOffset":1559,"endOffset":1582,"count":0},{"startOffset":1591,"endOffset":1623,"count":0},{"startOffset":1632,"endOffset":1677,"count":0},{"startOffset":1687,"endOffset":1751,"count":3},{"startOffset":1761,"endOffset":2527,"count":0},{"startOffset":2537,"endOffset":3227,"count":0},{"startOffset":3237,"endOffset":3414,"count":0},{"startOffset":3424,"endOffset":3603,"count":0},{"startOffset":3613,"endOffset":3647,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4520,"endOffset":15022,"count":8}],"isBlockCoverage":true},{"functionName":"isCalledInSomePath","ranges":[{"startOffset":5657,"endOffset":5787,"count":29}],"isBlockCoverage":true},{"functionName":"isCalledInEveryPath","ranges":[{"startOffset":6049,"endOffset":6577,"count":24},{"startOffset":6354,"endOffset":6425,"count":12},{"startOffset":6440,"endOffset":6484,"count":0}],"isBlockCoverage":true},{"functionName":"onCodePathStart","ranges":[{"startOffset":6849,"endOffset":7780,"count":154},{"startOffset":6932,"endOffset":7471,"count":5},{"startOffset":7471,"endOffset":7766,"count":149}],"isBlockCoverage":true},{"functionName":"onCodePathEnd","ranges":[{"startOffset":8079,"endOffset":8902,"count":154},{"startOffset":8269,"endOffset":8316,"count":151},{"startOffset":8316,"endOffset":8625,"count":3},{"startOffset":8625,"endOffset":8888,"count":0}],"isBlockCoverage":true},{"functionName":"onCodePathSegmentStart","ranges":[{"startOffset":9131,"endOffset":9916,"count":316},{"startOffset":9222,"endOffset":9244,"count":28},{"startOffset":9247,"endOffset":9294,"count":294},{"startOffset":9294,"endOffset":9712,"count":22},{"startOffset":9712,"endOffset":9902,"count":19}],"isBlockCoverage":true},{"functionName":"onCodePathSegmentLoop","ranges":[{"startOffset":10326,"endOffset":11811,"count":6},{"startOffset":10431,"endOffset":10453,"count":0},{"startOffset":10503,"endOffset":11810,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10768,"endOffset":11778,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression:exit","ranges":[{"startOffset":12005,"endOffset":13825,"count":325},{"startOffset":12094,"endOffset":12141,"count":309},{"startOffset":12141,"endOffset":12236,"count":16},{"startOffset":12236,"endOffset":12283,"count":13},{"startOffset":12283,"endOffset":13590,"count":3},{"startOffset":13028,"endOffset":13225,"count":0},{"startOffset":13265,"endOffset":13461,"count":0},{"startOffset":13590,"endOffset":13811,"count":0}],"isBlockCoverage":true},{"functionName":"ReturnStatement","ranges":[{"startOffset":14047,"endOffset":14816,"count":78},{"startOffset":14128,"endOffset":14150,"count":0},{"startOffset":14200,"endOffset":14815,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":14923,"endOffset":15005,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1179","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/curly.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19385,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1964,"endOffset":19381,"count":8}],"isBlockCoverage":true},{"functionName":"isCollapsedOneLiner","ranges":[{"startOffset":2803,"endOffset":3165,"count":35},{"startOffset":3031,"endOffset":3064,"count":0}],"isBlockCoverage":true},{"functionName":"isOneLiner","ranges":[{"startOffset":3388,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"isLexicalDeclaration","ranges":[{"startOffset":4107,"endOffset":4385,"count":17},{"startOffset":4198,"endOffset":4282,"count":0}],"isBlockCoverage":true},{"functionName":"isElseKeywordToken","ranges":[{"startOffset":4605,"endOffset":4722,"count":0}],"isBlockCoverage":false},{"functionName":"isFollowedByElseKeyword","ranges":[{"startOffset":4996,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"needsSemicolon","ranges":[{"startOffset":5511,"endOffset":7504,"count":0}],"isBlockCoverage":false},{"functionName":"hasUnsafeIf","ranges":[{"startOffset":8964,"endOffset":9586,"count":17},{"startOffset":9042,"endOffset":9219,"count":0},{"startOffset":9236,"endOffset":9256,"count":0},{"startOffset":9273,"endOffset":9295,"count":0},{"startOffset":9312,"endOffset":9334,"count":0},{"startOffset":9351,"endOffset":9375,"count":0},{"startOffset":9392,"endOffset":9413,"count":0},{"startOffset":9430,"endOffset":9503,"count":0}],"isBlockCoverage":true},{"functionName":"areBracesNecessary","ranges":[{"startOffset":10929,"endOffset":11146,"count":17},{"startOffset":11103,"endOffset":11135,"count":0}],"isBlockCoverage":true},{"functionName":"prepareCheck","ranges":[{"startOffset":12127,"endOffset":16416,"count":41},{"startOffset":12297,"endOffset":12352,"count":23},{"startOffset":12324,"endOffset":12351,"count":17},{"startOffset":12354,"endOffset":12402,"count":6},{"startOffset":12402,"endOffset":13190,"count":35},{"startOffset":12423,"endOffset":12472,"count":0},{"startOffset":12543,"endOffset":12599,"count":17},{"startOffset":12702,"endOffset":13190,"count":0}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":13289,"endOffset":16391,"count":41},{"startOffset":13346,"endOffset":13378,"count":23},{"startOffset":13380,"endOffset":16373,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":13830,"endOffset":13895,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":14365,"endOffset":16293,"count":0}],"isBlockCoverage":false},{"functionName":"prepareIfChecks","ranges":[{"startOffset":16732,"endOffset":18000,"count":38},{"startOffset":17055,"endOffset":17102,"count":0},{"startOffset":17104,"endOffset":17249,"count":0},{"startOffset":17293,"endOffset":17954,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17583,"endOffset":17804,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17847,"endOffset":17938,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":18220,"endOffset":18750,"count":38},{"startOffset":18347,"endOffset":18375,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18540,"endOffset":18627,"count":38}],"isBlockCoverage":true},{"functionName":"WhileStatement","ranges":[{"startOffset":18765,"endOffset":18886,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":18901,"endOffset":19000,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":19015,"endOffset":19132,"count":3}],"isBlockCoverage":true},{"functionName":"ForInStatement","ranges":[{"startOffset":19147,"endOffset":19248,"count":0}],"isBlockCoverage":false},{"functionName":"ForOfStatement","ranges":[{"startOffset":19263,"endOffset":19364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1180","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5862,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5861,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":5841,"count":1},{"startOffset":418,"endOffset":750,"count":0},{"startOffset":785,"endOffset":1118,"count":0},{"startOffset":1397,"endOffset":1422,"count":0},{"startOffset":1808,"endOffset":1832,"count":0},{"startOffset":1845,"endOffset":1856,"count":0},{"startOffset":1881,"endOffset":1885,"count":0},{"startOffset":1936,"endOffset":1940,"count":0},{"startOffset":1964,"endOffset":1968,"count":0},{"startOffset":1973,"endOffset":2311,"count":0},{"startOffset":2336,"endOffset":2340,"count":0},{"startOffset":2493,"endOffset":2825,"count":0},{"startOffset":2860,"endOffset":3193,"count":0},{"startOffset":3441,"endOffset":3497,"count":2},{"startOffset":3472,"endOffset":3497,"count":1},{"startOffset":3511,"endOffset":3920,"count":0},{"startOffset":4050,"endOffset":4772,"count":0},{"startOffset":4825,"endOffset":5163,"count":0},{"startOffset":5267,"endOffset":5271,"count":0},{"startOffset":5286,"endOffset":5642,"count":0},{"startOffset":5706,"endOffset":5731,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1181","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/default-case-last.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1236,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":761,"endOffset":1232,"count":8}],"isBlockCoverage":true},{"functionName":"SwitchStatement","ranges":[{"startOffset":808,"endOffset":1215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1182","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/dot-location.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3426,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":977,"endOffset":3422,"count":8}],"isBlockCoverage":true},{"functionName":"checkDotLocation","ranges":[{"startOffset":1416,"endOffset":3041,"count":511},{"startOffset":1587,"endOffset":2589,"count":0},{"startOffset":2648,"endOffset":3031,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":2054,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":2828,"endOffset":2997,"count":0}],"isBlockCoverage":false},{"functionName":"checkNode","ranges":[{"startOffset":3223,"endOffset":3347,"count":526},{"startOffset":3282,"endOffset":3337,"count":511}],"isBlockCoverage":true}]},{"scriptId":"1183","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2051,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2050,"count":8}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":2030,"count":9},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":1633,"count":6},{"startOffset":1154,"endOffset":1210,"count":11},{"startOffset":1185,"endOffset":1210,"count":6},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1685,"endOffset":1947,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1184","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/dot-notation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6816,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1710,"endOffset":6812,"count":8},{"startOffset":1771,"endOffset":1776,"count":0},{"startOffset":1981,"endOffset":2058,"count":0}],"isBlockCoverage":true},{"functionName":"checkComputedProperty","ranges":[{"startOffset":2291,"endOffset":4489,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":4520,"endOffset":6795,"count":526},{"startOffset":4600,"endOffset":4655,"count":15},{"startOffset":4656,"endOffset":4773,"count":15},{"startOffset":4792,"endOffset":4881,"count":0},{"startOffset":4937,"endOffset":5000,"count":15},{"startOffset":5001,"endOffset":5062,"count":0},{"startOffset":5081,"endOffset":5187,"count":0},{"startOffset":5244,"endOffset":5281,"count":0},{"startOffset":5282,"endOffset":5340,"count":0},{"startOffset":5341,"endOffset":5409,"count":0},{"startOffset":5428,"endOffset":6781,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":5697,"endOffset":6739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1185","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/keywords.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1186","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3679,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3678,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3658,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1153,"endOffset":1182,"count":0},{"startOffset":1317,"endOffset":1798,"count":2},{"startOffset":1377,"endOffset":1402,"count":1},{"startOffset":1426,"endOffset":1795,"count":0},{"startOffset":1904,"endOffset":2290,"count":0},{"startOffset":2428,"endOffset":2808,"count":0},{"startOffset":2894,"endOffset":3196,"count":0},{"startOffset":3313,"endOffset":3575,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1187","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/eol-last.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4017,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":942,"endOffset":4013,"count":8}],"isBlockCoverage":true},{"functionName":"checkBadEOF","ranges":[{"startOffset":1188,"endOffset":3996,"count":8},{"startOffset":1915,"endOffset":1962,"count":0},{"startOffset":2101,"endOffset":2226,"count":0},{"startOffset":2267,"endOffset":2492,"count":0},{"startOffset":2552,"endOffset":2984,"count":0},{"startOffset":3011,"endOffset":3029,"count":0},{"startOffset":3031,"endOffset":3982,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":2800,"endOffset":2942,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":3574,"endOffset":3940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1188","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/eqeqeq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5781,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1971,"endOffset":5777,"count":8},{"startOffset":2031,"endOffset":2042,"count":0},{"startOffset":2087,"endOffset":2092,"count":0},{"startOffset":2223,"endOffset":2234,"count":0},{"startOffset":2247,"endOffset":2257,"count":0}],"isBlockCoverage":true},{"functionName":"isTypeOf","ranges":[{"startOffset":2596,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOfBinary","ranges":[{"startOffset":2962,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"areLiteralsAndSameType","ranges":[{"startOffset":3304,"endOffset":3509,"count":0}],"isBlockCoverage":false},{"functionName":"isNullCheck","ranges":[{"startOffset":3724,"endOffset":3854,"count":22}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":4168,"endOffset":5037,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":5068,"endOffset":5759,"count":22},{"startOffset":5266,"endOffset":5275,"count":0},{"startOffset":5277,"endOffset":5366,"count":0},{"startOffset":5412,"endOffset":5544,"count":0},{"startOffset":5546,"endOffset":5644,"count":0},{"startOffset":5646,"endOffset":5758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1189","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6509,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6508,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6488,"count":1},{"startOffset":470,"endOffset":814,"count":0},{"startOffset":1097,"endOffset":1506,"count":0},{"startOffset":1890,"endOffset":2326,"count":0},{"startOffset":2399,"endOffset":2417,"count":0},{"startOffset":2585,"endOffset":2641,"count":3},{"startOffset":2616,"endOffset":2641,"count":1},{"startOffset":2655,"endOffset":3117,"count":0},{"startOffset":3242,"endOffset":3620,"count":0},{"startOffset":3737,"endOffset":4075,"count":0},{"startOffset":4179,"endOffset":5919,"count":0},{"startOffset":5933,"endOffset":6289,"count":0},{"startOffset":6338,"endOffset":6401,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1190","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/func-call-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9922,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2201,"endOffset":9918,"count":8},{"startOffset":2312,"endOffset":2333,"count":0},{"startOffset":2334,"endOffset":2369,"count":0}],"isBlockCoverage":true},{"functionName":"checkSpacing","ranges":[{"startOffset":2917,"endOffset":8938,"count":363},{"startOffset":3200,"endOffset":3253,"count":0},{"startOffset":5235,"endOffset":6592,"count":0},{"startOffset":6609,"endOffset":6626,"count":0},{"startOffset":6628,"endOffset":7354,"count":0},{"startOffset":7371,"endOffset":7388,"count":0},{"startOffset":7389,"endOffset":7402,"count":0},{"startOffset":7404,"endOffset":8928,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":5657,"endOffset":6558,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":7034,"endOffset":7320,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":7687,"endOffset":8894,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression, NewExpression","ranges":[{"startOffset":8969,"endOffset":9649,"count":363},{"startOffset":9528,"endOffset":9575,"count":0}],"isBlockCoverage":true},{"functionName":"ImportExpression","ranges":[{"startOffset":9664,"endOffset":9900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1191","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6994,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6993,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6973,"count":1},{"startOffset":418,"endOffset":750,"count":0},{"startOffset":785,"endOffset":1118,"count":0},{"startOffset":1436,"endOffset":1845,"count":0},{"startOffset":1973,"endOffset":2311,"count":0},{"startOffset":2415,"endOffset":6404,"count":0},{"startOffset":6418,"endOffset":6774,"count":0},{"startOffset":6823,"endOffset":6886,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1192","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/generator-star-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7091,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1976,"endOffset":7087,"count":8},{"startOffset":3247,"endOffset":3252,"count":0}],"isBlockCoverage":true},{"functionName":"optionToDefinition","ranges":[{"startOffset":2567,"endOffset":2844,"count":32},{"startOffset":2640,"endOffset":2688,"count":24},{"startOffset":2688,"endOffset":2752,"count":8},{"startOffset":2752,"endOffset":2779,"count":0},{"startOffset":2796,"endOffset":2833,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2869,"endOffset":3227,"count":8}],"isBlockCoverage":true},{"functionName":"isStarToken","ranges":[{"startOffset":3522,"endOffset":3632,"count":0}],"isBlockCoverage":false},{"functionName":"getStarToken","ranges":[{"startOffset":3840,"endOffset":4069,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":4243,"endOffset":4335,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacing","ranges":[{"startOffset":4865,"endOffset":5850,"count":0}],"isBlockCoverage":false},{"functionName":"checkFunction","ranges":[{"startOffset":6068,"endOffset":6957,"count":71},{"startOffset":6171,"endOffset":6506,"count":0},{"startOffset":6508,"endOffset":6797,"count":0},{"startOffset":6800,"endOffset":6956,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1193","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19622,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":19602,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":4},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":2050,"endOffset":2649,"count":2},{"startOffset":2103,"endOffset":2121,"count":1},{"startOffset":2123,"endOffset":2141,"count":0},{"startOffset":2143,"endOffset":2165,"count":0},{"startOffset":2167,"endOffset":2186,"count":0},{"startOffset":2210,"endOffset":2646,"count":0},{"startOffset":2721,"endOffset":2739,"count":0},{"startOffset":2802,"endOffset":3236,"count":0},{"startOffset":3343,"endOffset":3361,"count":0},{"startOffset":3424,"endOffset":3854,"count":0},{"startOffset":3979,"endOffset":8527,"count":0},{"startOffset":8619,"endOffset":13263,"count":0},{"startOffset":13352,"endOffset":17924,"count":0},{"startOffset":17978,"endOffset":18356,"count":0},{"startOffset":18446,"endOffset":18505,"count":0},{"startOffset":18592,"endOffset":19025,"count":0},{"startOffset":19089,"endOffset":19114,"count":0},{"startOffset":19257,"endOffset":19519,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1194","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/indent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":78344,"count":1}],"isBlockCoverage":true},{"functionName":"BinarySearchTree","ranges":[{"startOffset":3835,"endOffset":3955,"count":8}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":4126,"endOffset":4201,"count":24950}],"isBlockCoverage":true},{"functionName":"findLe","ranges":[{"startOffset":4447,"endOffset":4692,"count":14350},{"startOffset":4578,"endOffset":4612,"count":0}],"isBlockCoverage":true},{"functionName":"deleteRange","ranges":[{"startOffset":4897,"endOffset":5550,"count":8388},{"startOffset":5023,"endOffset":5054,"count":2540},{"startOffset":5054,"endOffset":5167,"count":5848},{"startOffset":5167,"endOffset":5198,"count":8},{"startOffset":5198,"endOffset":5246,"count":5840},{"startOffset":5246,"endOffset":5398,"count":0},{"startOffset":5398,"endOffset":5544,"count":5840},{"startOffset":5452,"endOffset":5534,"count":812}],"isBlockCoverage":true},{"functionName":"TokenInfo","ranges":[{"startOffset":5724,"endOffset":6252,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5863,"endOffset":6233,"count":4868},{"startOffset":5929,"endOffset":5998,"count":795},{"startOffset":6044,"endOffset":6130,"count":34},{"startOffset":6132,"endOffset":6199,"count":34}],"isBlockCoverage":true},{"functionName":"getFirstTokenOfLine","ranges":[{"startOffset":6436,"endOffset":6541,"count":450}],"isBlockCoverage":true},{"functionName":"isFirstTokenOfLine","ranges":[{"startOffset":6737,"endOffset":6828,"count":393}],"isBlockCoverage":true},{"functionName":"getTokenIndent","ranges":[{"startOffset":7055,"endOffset":7184,"count":800}],"isBlockCoverage":true},{"functionName":"OffsetStorage","ranges":[{"startOffset":7510,"endOffset":7941,"count":8}],"isBlockCoverage":true},{"functionName":"_getOffsetDescriptor","ranges":[{"startOffset":7947,"endOffset":8038,"count":5962}],"isBlockCoverage":true},{"functionName":"matchOffsetOf","ranges":[{"startOffset":8479,"endOffset":9129,"count":0}],"isBlockCoverage":false},{"functionName":"setDesiredOffset","ranges":[{"startOffset":11695,"endOffset":11816,"count":3040}],"isBlockCoverage":true},{"functionName":"setDesiredOffsets","ranges":[{"startOffset":13771,"endOffset":15853,"count":8388},{"startOffset":14838,"endOffset":14871,"count":4083},{"startOffset":14928,"endOffset":14967,"count":4083},{"startOffset":15441,"endOffset":15595,"count":4083}],"isBlockCoverage":true},{"functionName":"getDesiredIndent","ranges":[{"startOffset":16012,"endOffset":17828,"count":2015},{"startOffset":16088,"endOffset":17770,"count":1239},{"startOffset":16139,"endOffset":16522,"count":1},{"startOffset":16522,"endOffset":17760,"count":1238},{"startOffset":16568,"endOffset":17155,"count":0},{"startOffset":17301,"endOffset":17379,"count":1216},{"startOffset":17380,"endOffset":17432,"count":472},{"startOffset":17433,"endOffset":17473,"count":472},{"startOffset":17492,"endOffset":17495,"count":472},{"startOffset":17496,"endOffset":17534,"count":766},{"startOffset":17647,"endOffset":17687,"count":1216},{"startOffset":17688,"endOffset":17692,"count":22}],"isBlockCoverage":true},{"functionName":"ignoreToken","ranges":[{"startOffset":17970,"endOffset":18107,"count":393},{"startOffset":18046,"endOffset":18101,"count":1}],"isBlockCoverage":true},{"functionName":"getFirstDependency","ranges":[{"startOffset":18362,"endOffset":18449,"count":641}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":23536,"endOffset":78340,"count":8},{"startOffset":24857,"endOffset":24940,"count":0},{"startOffset":25216,"endOffset":25257,"count":0},{"startOffset":25749,"endOffset":25755,"count":0},{"startOffset":71171,"endOffset":72401,"count":296}],"isBlockCoverage":true},{"functionName":"createErrorMessageData","ranges":[{"startOffset":26292,"endOffset":27430,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":27667,"endOffset":28619,"count":0}],"isBlockCoverage":false},{"functionName":"validateTokenIndent","ranges":[{"startOffset":28906,"endOffset":29265,"count":799},{"startOffset":29074,"endOffset":29254,"count":4}],"isBlockCoverage":true},{"functionName":"isOuterIIFE","ranges":[{"startOffset":29482,"endOffset":30737,"count":155},{"startOffset":29660,"endOffset":29690,"count":35},{"startOffset":29692,"endOffset":29737,"count":154},{"startOffset":29737,"endOffset":30139,"count":1},{"startOffset":30215,"endOffset":30267,"count":0},{"startOffset":30268,"endOffset":30328,"count":1},{"startOffset":30329,"endOffset":30386,"count":1},{"startOffset":30387,"endOffset":30445,"count":1},{"startOffset":30446,"endOffset":30504,"count":1},{"startOffset":30519,"endOffset":30580,"count":0},{"startOffset":30580,"endOffset":30643,"count":1},{"startOffset":30643,"endOffset":30686,"count":0},{"startOffset":30688,"endOffset":30726,"count":1}],"isBlockCoverage":true},{"functionName":"countTrailingLinebreaks","ranges":[{"startOffset":31116,"endOffset":31414,"count":512},{"startOffset":31378,"endOffset":31403,"count":0}],"isBlockCoverage":true},{"functionName":"addElementListIndent","ranges":[{"startOffset":31911,"endOffset":34855,"count":687},{"startOffset":32916,"endOffset":32919,"count":0},{"startOffset":33172,"endOffset":33190,"count":0},{"startOffset":33191,"endOffset":33206,"count":0},{"startOffset":33208,"endOffset":33247,"count":0}],"isBlockCoverage":true},{"functionName":"getFirstToken","ranges":[{"startOffset":32253,"endOffset":32587,"count":512},{"startOffset":32411,"endOffset":32434,"count":145},{"startOffset":32436,"endOffset":32517,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33277,"endOffset":34843,"count":1059},{"startOffset":33329,"endOffset":33421,"count":0},{"startOffset":33460,"endOffset":33636,"count":0},{"startOffset":33760,"endOffset":33807,"count":547},{"startOffset":33807,"endOffset":33847,"count":512},{"startOffset":33847,"endOffset":33902,"count":0},{"startOffset":33904,"endOffset":34018,"count":0},{"startOffset":34018,"endOffset":34829,"count":512},{"startOffset":34549,"endOffset":34811,"count":332}],"isBlockCoverage":true},{"functionName":"addBlocklessNodeIndent","ranges":[{"startOffset":35122,"endOffset":35998,"count":116},{"startOffset":35210,"endOffset":35988,"count":41},{"startOffset":35572,"endOffset":35664,"count":0},{"startOffset":35683,"endOffset":35859,"count":0}],"isBlockCoverage":true},{"functionName":"addFunctionCallIndent","ranges":[{"startOffset":36243,"endOffset":38147,"count":361},{"startOffset":36352,"endOffset":36493,"count":291},{"startOffset":36493,"endOffset":36579,"count":70},{"startOffset":36931,"endOffset":37730,"count":0},{"startOffset":37817,"endOffset":37862,"count":0}],"isBlockCoverage":true},{"functionName":"addParensIndent","ranges":[{"startOffset":38355,"endOffset":39739,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38488,"endOffset":38860,"count":4815},{"startOffset":38623,"endOffset":38690,"count":527},{"startOffset":38690,"endOffset":38846,"count":4288},{"startOffset":38741,"endOffset":38846,"count":527}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38895,"endOffset":39727,"count":527},{"startOffset":39203,"endOffset":39238,"count":45},{"startOffset":39240,"endOffset":39644,"count":45}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39400,"endOffset":39624,"count":584},{"startOffset":39500,"endOffset":39602,"count":56}],"isBlockCoverage":true},{"functionName":"ignoreNode","ranges":[{"startOffset":39986,"endOffset":40609,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40155,"endOffset":40597,"count":57},{"startOffset":40383,"endOffset":40458,"count":0}],"isBlockCoverage":true},{"functionName":"isOnFirstLineOfStatement","ranges":[{"startOffset":40950,"endOffset":41325,"count":0}],"isBlockCoverage":false},{"functionName":"hasBlankLinesBetween","ranges":[{"startOffset":41736,"endOffset":42310,"count":92},{"startOffset":42012,"endOffset":42057,"count":45},{"startOffset":42057,"endOffset":42139,"count":47},{"startOffset":42139,"endOffset":42273,"count":53},{"startOffset":42207,"endOffset":42259,"count":47},{"startOffset":42273,"endOffset":42309,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayExpression, ArrayPattern","ranges":[{"startOffset":42413,"endOffset":42806,"count":9},{"startOffset":42630,"endOffset":42647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42622,"endOffset":42628,"count":8}],"isBlockCoverage":true},{"functionName":"ObjectExpression, ObjectPattern","ranges":[{"startOffset":42821,"endOffset":43291,"count":27},{"startOffset":43038,"endOffset":43083,"count":21},{"startOffset":43084,"endOffset":43098,"count":6}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":43306,"endOffset":43999,"count":75},{"startOffset":43430,"endOffset":43433,"count":16},{"startOffset":43434,"endOffset":43437,"count":59},{"startOffset":43512,"endOffset":43933,"count":50}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":44014,"endOffset":44424,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44131,"endOffset":44169,"count":60}],"isBlockCoverage":true},{"functionName":"BinaryExpression, LogicalExpression","ranges":[{"startOffset":44439,"endOffset":45096,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44573,"endOffset":44611,"count":42}],"isBlockCoverage":true},{"functionName":"BlockStatement, ClassBody","ranges":[{"startOffset":45111,"endOffset":46310,"count":155},{"startOffset":45247,"endOffset":45328,"count":1},{"startOffset":45328,"endOffset":45767,"count":154},{"startOffset":45396,"endOffset":45445,"count":87},{"startOffset":45448,"endOffset":45539,"count":118},{"startOffset":45539,"endOffset":45767,"count":36},{"startOffset":45608,"endOffset":45700,"count":4},{"startOffset":45700,"endOffset":45767,"count":32},{"startOffset":46026,"endOffset":46165,"count":153}],"isBlockCoverage":true},{"functionName":"ClassDeclaration[superClass], ClassExpression[superClass]","ranges":[{"startOffset":46377,"endOffset":46743,"count":3}],"isBlockCoverage":true},{"functionName":"ConditionalExpression","ranges":[{"startOffset":46758,"endOffset":49893,"count":2},{"startOffset":47130,"endOffset":47208,"count":0},{"startOffset":47209,"endOffset":47274,"count":0},{"startOffset":48174,"endOffset":48233,"count":0},{"startOffset":48234,"endOffset":48237,"count":0},{"startOffset":49097,"endOffset":49861,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47401,"endOffset":47460,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47567,"endOffset":47626,"count":2}],"isBlockCoverage":true},{"functionName":"DoWhileStatement, WhileStatement, ForInStatement, ForOfStatement, WithStatement","ranges":[{"startOffset":49991,"endOffset":50032,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":50047,"endOffset":50765,"count":6},{"startOffset":50125,"endOffset":50751,"count":0}],"isBlockCoverage":true},{"functionName":"ForStatement","ranges":[{"startOffset":50780,"endOffset":51350,"count":3}],"isBlockCoverage":true},{"functionName":"FunctionDeclaration, FunctionExpression","ranges":[{"startOffset":51365,"endOffset":51832,"count":71},{"startOffset":51572,"endOffset":51588,"count":40},{"startOffset":51589,"endOffset":51603,"count":31}],"isBlockCoverage":true},{"functionName":"IfStatement","ranges":[{"startOffset":51847,"endOffset":52094,"count":38},{"startOffset":51959,"endOffset":51999,"count":0},{"startOffset":52001,"endOffset":52080,"count":0}],"isBlockCoverage":true},{"functionName":":matches(DoWhileStatement, ForStatement, ForInStatement, ForOfStatement, IfStatement, WhileStatement, WithStatement):exit","ranges":[{"startOffset":52460,"endOffset":54006,"count":41},{"startOffset":52676,"endOffset":52872,"count":38},{"startOffset":52772,"endOffset":52854,"count":0},{"startOffset":52872,"endOffset":52945,"count":3},{"startOffset":53144,"endOffset":53974,"count":0}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":54021,"endOffset":55199,"count":24},{"startOffset":54140,"endOffset":54537,"count":14},{"startOffset":54971,"endOffset":55017,"count":0},{"startOffset":55018,"endOffset":55033,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54088,"endOffset":54137,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54412,"endOffset":54461,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54603,"endOffset":54665,"count":48},{"startOffset":54640,"endOffset":54665,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54734,"endOffset":54766,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54833,"endOffset":54892,"count":136},{"startOffset":54870,"endOffset":54892,"count":33}],"isBlockCoverage":true},{"functionName":"ImportExpression","ranges":[{"startOffset":55214,"endOffset":55711,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression, JSXMemberExpression, MetaProperty","ranges":[{"startOffset":55726,"endOffset":58923,"count":520},{"startOffset":55848,"endOffset":55859,"count":0},{"startOffset":56321,"endOffset":56388,"count":0},{"startOffset":56590,"endOffset":56611,"count":15},{"startOffset":56612,"endOffset":56634,"count":505},{"startOffset":56672,"endOffset":56992,"count":15},{"startOffset":57556,"endOffset":57573,"count":509},{"startOffset":57594,"endOffset":57612,"count":11},{"startOffset":58268,"endOffset":58289,"count":15},{"startOffset":58290,"endOffset":58302,"count":505},{"startOffset":58348,"endOffset":58909,"count":0}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":58938,"endOffset":59399,"count":38},{"startOffset":59139,"endOffset":59315,"count":13}],"isBlockCoverage":true},{"functionName":"Property","ranges":[{"startOffset":59414,"endOffset":59728,"count":50},{"startOffset":59467,"endOffset":59482,"count":22},{"startOffset":59483,"endOffset":59506,"count":10},{"startOffset":59508,"endOffset":59714,"count":10}],"isBlockCoverage":true},{"functionName":"PropertyDefinition","ranges":[{"startOffset":59743,"endOffset":61692,"count":0}],"isBlockCoverage":false},{"functionName":"StaticBlock","ranges":[{"startOffset":61707,"endOffset":62021,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":62036,"endOffset":62736,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":62751,"endOffset":63178,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":63193,"endOffset":63862,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63258,"endOffset":63846,"count":5},{"startOffset":63602,"endOffset":63608,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclaration","ranges":[{"startOffset":63877,"endOffset":66265,"count":91},{"startOffset":64098,"endOffset":64123,"count":0},{"startOffset":64328,"endOffset":64755,"count":0},{"startOffset":64863,"endOffset":66008,"count":0},{"startOffset":66180,"endOffset":66251,"count":1}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":66280,"endOffset":66899,"count":91},{"startOffset":66338,"endOffset":66885,"count":89}],"isBlockCoverage":true},{"functionName":"JSXAttribute[value]","ranges":[{"startOffset":66914,"endOffset":67239,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":67254,"endOffset":67501,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":67516,"endOffset":68155,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":68170,"endOffset":68352,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":68367,"endOffset":68675,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":68690,"endOffset":69001,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":69016,"endOffset":69525,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":69540,"endOffset":69908,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":69923,"endOffset":70287,"count":0}],"isBlockCoverage":false},{"functionName":"*","ranges":[{"startOffset":70302,"endOffset":70672,"count":3995},{"startOffset":70565,"endOffset":70658,"count":3992}],"isBlockCoverage":true},{"functionName":"offsetListeners.<computed>","ranges":[{"startOffset":72340,"endOffset":72390,"count":5703}],"isBlockCoverage":true},{"functionName":"addToIgnoredNodes","ranges":[{"startOffset":72685,"endOffset":72837,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72917,"endOffset":73015,"count":136}],"isBlockCoverage":true},{"functionName":"*:exit","ranges":[{"startOffset":73621,"endOffset":73901,"count":4023},{"startOffset":73811,"endOffset":73883,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":73919,"endOffset":78309,"count":8},{"startOffset":74074,"endOffset":74228,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74165,"endOffset":74204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74393,"endOffset":74437,"count":5703}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74472,"endOffset":74516,"count":5667}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":75075,"endOffset":75396,"count":53},{"startOffset":75311,"endOffset":75349,"count":11},{"startOffset":75350,"endOffset":75372,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":75460,"endOffset":78289,"count":1117},{"startOffset":75622,"endOffset":75756,"count":288},{"startOffset":75756,"endOffset":75935,"count":829},{"startOffset":75935,"endOffset":76129,"count":34},{"startOffset":76129,"endOffset":76202,"count":795},{"startOffset":76202,"endOffset":77841,"count":53},{"startOffset":76350,"endOffset":76389,"count":39},{"startOffset":76390,"endOffset":76416,"count":14},{"startOffset":76485,"endOffset":76540,"count":39},{"startOffset":77096,"endOffset":77156,"count":0},{"startOffset":77158,"endOffset":77280,"count":0},{"startOffset":77502,"endOffset":77581,"count":7},{"startOffset":77582,"endOffset":77713,"count":50},{"startOffset":77635,"endOffset":77713,"count":35},{"startOffset":77744,"endOffset":77815,"count":38},{"startOffset":77841,"endOffset":78108,"count":757},{"startOffset":78108,"endOffset":78288,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1195","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2391,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":147,"endOffset":196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":277,"endOffset":328,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":409,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":542,"endOffset":594,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":678,"endOffset":732,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":816,"endOffset":870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":957,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1093,"endOffset":1142,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1221,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1350,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2299,"endOffset":2391,"count":10},{"startOffset":2360,"endOffset":2388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1196","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/OtherContainer/Stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":619,"count":1}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":198,"endOffset":303,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":308,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":375,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":440,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"top","ranges":[{"startOffset":517,"endOffset":565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1197","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/ContainerBase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"ContainerIterator","ranges":[{"startOffset":176,"endOffset":233,"count":20206}],"isBlockCoverage":true},{"functionName":"Base","ranges":[{"startOffset":302,"endOffset":343,"count":8}],"isBlockCoverage":true},{"functionName":"size","ranges":[{"startOffset":348,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"empty","ranges":[{"startOffset":390,"endOffset":434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1198","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/OtherContainer/Queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":803,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":231,"endOffset":323,"count":1},{"startOffset":292,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"Queue","ranges":[{"startOffset":371,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":492,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":556,"endOffset":620,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":625,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"front","ranges":[{"startOffset":703,"endOffset":749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1199","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/SequentialContainer/Deque.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9106,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":238,"endOffset":330,"count":1},{"startOffset":299,"endOffset":327,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":397,"endOffset":496,"count":0}],"isBlockCoverage":false},{"functionName":"Deque","ranges":[{"startOffset":580,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":1627,"endOffset":2211,"count":0}],"isBlockCoverage":false},{"functionName":"F","ranges":[{"startOffset":2216,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":2543,"endOffset":2680,"count":0}],"isBlockCoverage":false},{"functionName":"front","ranges":[{"startOffset":2685,"endOffset":2739,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":2744,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":2802,"endOffset":2909,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2914,"endOffset":3024,"count":0}],"isBlockCoverage":false},{"functionName":"rBegin","ranges":[{"startOffset":3029,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"rEnd","ranges":[{"startOffset":3154,"endOffset":3264,"count":0}],"isBlockCoverage":false},{"functionName":"pushBack","ranges":[{"startOffset":3269,"endOffset":3705,"count":0}],"isBlockCoverage":false},{"functionName":"popBack","ranges":[{"startOffset":3710,"endOffset":4130,"count":0}],"isBlockCoverage":false},{"functionName":"pushFront","ranges":[{"startOffset":4135,"endOffset":4581,"count":0}],"isBlockCoverage":false},{"functionName":"popFront","ranges":[{"startOffset":4586,"endOffset":4998,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5003,"endOffset":5117,"count":0}],"isBlockCoverage":false},{"functionName":"getElementByPos","ranges":[{"startOffset":5122,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"setElementByPos","ranges":[{"startOffset":5340,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":5558,"endOffset":6125,"count":0}],"isBlockCoverage":false},{"functionName":"cut","ranges":[{"startOffset":6130,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByPos","ranges":[{"startOffset":6365,"endOffset":6815,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByValue","ranges":[{"startOffset":6820,"endOffset":7157,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByIterator","ranges":[{"startOffset":7162,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":7298,"endOffset":7556,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":7561,"endOffset":7848,"count":0}],"isBlockCoverage":false},{"functionName":"unique","ranges":[{"startOffset":7853,"endOffset":8215,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":8220,"endOffset":8446,"count":0}],"isBlockCoverage":false},{"functionName":"shrinkToFit","ranges":[{"startOffset":8451,"endOffset":8859,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8864,"endOffset":9052,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1200","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/SequentialContainer/Base/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":282,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1201","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/SequentialContainer/Base/RandomIterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1803,"count":1}],"isBlockCoverage":true},{"functionName":"RandomIterator","ranges":[{"startOffset":230,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"get pointer","ranges":[{"startOffset":1410,"endOffset":1557,"count":0}],"isBlockCoverage":false},{"functionName":"set pointer","ranges":[{"startOffset":1562,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":1711,"endOffset":1759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1202","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/OtherContainer/PriorityQueue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2517,"count":1}],"isBlockCoverage":true},{"functionName":"PriorityQueue","ranges":[{"startOffset":206,"endOffset":703,"count":0}],"isBlockCoverage":false},{"functionName":"B","ranges":[{"startOffset":708,"endOffset":961,"count":0}],"isBlockCoverage":false},{"functionName":"v","ranges":[{"startOffset":966,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1378,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":1445,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":1534,"endOffset":1724,"count":0}],"isBlockCoverage":false},{"functionName":"top","ranges":[{"startOffset":1729,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":1773,"endOffset":1827,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1832,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"updateItem","ranges":[{"startOffset":2240,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":2408,"endOffset":2455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1203","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/SequentialContainer/Vector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3666,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":239,"endOffset":331,"count":1},{"startOffset":300,"endOffset":328,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":399,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"Vector","ranges":[{"startOffset":586,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1017,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":1084,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1197,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"rBegin","ranges":[{"startOffset":1313,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"rEnd","ranges":[{"startOffset":1439,"endOffset":1550,"count":0}],"isBlockCoverage":false},{"functionName":"front","ranges":[{"startOffset":1555,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":1601,"endOffset":1650,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":1655,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"getElementByPos","ranges":[{"startOffset":1760,"endOffset":1895,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByPos","ranges":[{"startOffset":1900,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByValue","ranges":[{"startOffset":2066,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByIterator","ranges":[{"startOffset":2299,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"pushBack","ranges":[{"startOffset":2435,"endOffset":2499,"count":0}],"isBlockCoverage":false},{"functionName":"popBack","ranges":[{"startOffset":2504,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"setElementByPos","ranges":[{"startOffset":2598,"endOffset":2733,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":2738,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":2924,"endOffset":3169,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":3174,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"unique","ranges":[{"startOffset":3222,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":3453,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3497,"endOffset":3611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1204","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/SequentialContainer/LinkList.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9046,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":254,"endOffset":346,"count":1},{"startOffset":315,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"LinkNode","ranges":[{"startOffset":369,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"LinkListIterator","ranges":[{"startOffset":599,"endOffset":1765,"count":0}],"isBlockCoverage":false},{"functionName":"get pointer","ranges":[{"startOffset":1770,"endOffset":1929,"count":0}],"isBlockCoverage":false},{"functionName":"set pointer","ranges":[{"startOffset":1934,"endOffset":2091,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":2096,"endOffset":2144,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":2149,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"LinkList","ranges":[{"startOffset":2328,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":2508,"endOffset":2621,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":2626,"endOffset":2704,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2709,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"rBegin","ranges":[{"startOffset":2780,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"rEnd","ranges":[{"startOffset":2867,"endOffset":2937,"count":0}],"isBlockCoverage":false},{"functionName":"front","ranges":[{"startOffset":2942,"endOffset":3003,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":3008,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":3073,"endOffset":3250,"count":0}],"isBlockCoverage":false},{"functionName":"getElementByPos","ranges":[{"startOffset":3255,"endOffset":3461,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByPos","ranges":[{"startOffset":3466,"endOffset":3908,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByValue","ranges":[{"startOffset":3913,"endOffset":4357,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByIterator","ranges":[{"startOffset":4362,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"pushBack","ranges":[{"startOffset":4775,"endOffset":5125,"count":0}],"isBlockCoverage":false},{"functionName":"popBack","ranges":[{"startOffset":5130,"endOffset":5421,"count":0}],"isBlockCoverage":false},{"functionName":"setElementByPos","ranges":[{"startOffset":5426,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":5637,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":6280,"endOffset":6547,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":6552,"endOffset":6846,"count":0}],"isBlockCoverage":false},{"functionName":"unique","ranges":[{"startOffset":6851,"endOffset":7166,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":7171,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"pushFront","ranges":[{"startOffset":7410,"endOffset":7761,"count":0}],"isBlockCoverage":false},{"functionName":"popFront","ranges":[{"startOffset":7766,"endOffset":8055,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":8060,"endOffset":8742,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8747,"endOffset":8989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1205","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/TreeContainer/OrderedSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2793,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":263,"endOffset":355,"count":2},{"startOffset":324,"endOffset":352,"count":0}],"isBlockCoverage":true},{"functionName":"get pointer","ranges":[{"startOffset":418,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":584,"endOffset":672,"count":0}],"isBlockCoverage":false},{"functionName":"OrderedSet","ranges":[{"startOffset":771,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":1043,"endOffset":1125,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1130,"endOffset":1198,"count":0}],"isBlockCoverage":false},{"functionName":"rBegin","ranges":[{"startOffset":1203,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"rEnd","ranges":[{"startOffset":1294,"endOffset":1366,"count":0}],"isBlockCoverage":false},{"functionName":"front","ranges":[{"startOffset":1371,"endOffset":1436,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":1441,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":1510,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"getElementByPos","ranges":[{"startOffset":1593,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":1908,"endOffset":1962,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":1967,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":2147,"endOffset":2255,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":2260,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"reverseLowerBound","ranges":[{"startOffset":2373,"endOffset":2488,"count":0}],"isBlockCoverage":false},{"functionName":"reverseUpperBound","ranges":[{"startOffset":2493,"endOffset":2608,"count":0}],"isBlockCoverage":false},{"functionName":"union","ranges":[{"startOffset":2613,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2676,"endOffset":2734,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1206","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/TreeContainer/Base/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14031,"count":1}],"isBlockCoverage":true},{"functionName":"TreeContainer","ranges":[{"startOffset":254,"endOffset":1817,"count":8},{"startOffset":691,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":271,"endOffset":365,"count":610802},{"startOffset":302,"endOffset":312,"count":449869},{"startOffset":312,"endOffset":332,"count":160933},{"startOffset":332,"endOffset":341,"count":132781},{"startOffset":341,"endOffset":364,"count":28152}],"isBlockCoverage":true},{"functionName":"TreeContainer.ie","ranges":[{"startOffset":444,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"TreeContainer.ee","ranges":[{"startOffset":768,"endOffset":1339,"count":0}],"isBlockCoverage":false},{"functionName":"TreeContainer.ue","ranges":[{"startOffset":1363,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"TreeContainer.ee","ranges":[{"startOffset":1627,"endOffset":1739,"count":24950},{"startOffset":1714,"endOffset":1725,"count":7149}],"isBlockCoverage":true},{"functionName":"W","ranges":[{"startOffset":1822,"endOffset":2124,"count":5848},{"startOffset":1865,"endOffset":2073,"count":76409},{"startOffset":1928,"endOffset":1968,"count":60159},{"startOffset":1968,"endOffset":2063,"count":16250},{"startOffset":1985,"endOffset":2048,"count":16142},{"startOffset":2048,"endOffset":2063,"count":108},{"startOffset":2073,"endOffset":2105,"count":5740},{"startOffset":2105,"endOffset":2113,"count":8},{"startOffset":2114,"endOffset":2117,"count":5732}],"isBlockCoverage":true},{"functionName":"Y","ranges":[{"startOffset":2129,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":2411,"endOffset":2713,"count":14350},{"startOffset":2454,"endOffset":2662,"count":172168},{"startOffset":2517,"endOffset":2580,"count":127517},{"startOffset":2580,"endOffset":2652,"count":44651},{"startOffset":2597,"endOffset":2637,"count":34400},{"startOffset":2637,"endOffset":2652,"count":10251},{"startOffset":2662,"endOffset":2694,"count":4099},{"startOffset":2694,"endOffset":2702,"count":0},{"startOffset":2703,"endOffset":2706,"count":4099}],"isBlockCoverage":true},{"functionName":"$","ranges":[{"startOffset":2718,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"oe","ranges":[{"startOffset":2999,"endOffset":5094,"count":812},{"startOffset":3028,"endOffset":5088,"count":954},{"startOffset":3088,"endOffset":3095,"count":0},{"startOffset":3124,"endOffset":3189,"count":644},{"startOffset":3189,"endOffset":3217,"count":310},{"startOffset":3217,"endOffset":4143,"count":240},{"startOffset":3282,"endOffset":3493,"count":0},{"startOffset":3529,"endOffset":3544,"count":156},{"startOffset":3546,"endOffset":3852,"count":155},{"startOffset":3697,"endOffset":3777,"count":0},{"startOffset":3852,"endOffset":4111,"count":85},{"startOffset":3866,"endOffset":3881,"count":81},{"startOffset":3883,"endOffset":4017,"count":80},{"startOffset":4017,"endOffset":4111,"count":5},{"startOffset":4143,"endOffset":5078,"count":70},{"startOffset":4214,"endOffset":4427,"count":1},{"startOffset":4314,"endOffset":4387,"count":0},{"startOffset":4427,"endOffset":5064,"count":69},{"startOffset":4463,"endOffset":4478,"count":13},{"startOffset":4480,"endOffset":4788,"count":13},{"startOffset":4631,"endOffset":4712,"count":0},{"startOffset":4788,"endOffset":5046,"count":56},{"startOffset":4802,"endOffset":4817,"count":7},{"startOffset":4819,"endOffset":4952,"count":7},{"startOffset":4952,"endOffset":5046,"count":49}],"isBlockCoverage":true},{"functionName":"le","ranges":[{"startOffset":5099,"endOffset":5830,"count":812},{"startOffset":5133,"endOffset":5197,"count":0},{"startOffset":5236,"endOffset":5242,"count":906},{"startOffset":5244,"endOffset":5497,"count":512},{"startOffset":5322,"endOffset":5330,"count":267},{"startOffset":5344,"endOffset":5390,"count":0},{"startOffset":5526,"endOffset":5566,"count":0},{"startOffset":5592,"endOffset":5632,"count":9},{"startOffset":5700,"endOffset":5740,"count":354},{"startOffset":5740,"endOffset":5762,"count":458}],"isBlockCoverage":true},{"functionName":"fe","ranges":[{"startOffset":5835,"endOffset":8779,"count":7149},{"startOffset":5864,"endOffset":8773,"count":11765},{"startOffset":5922,"endOffset":5929,"count":1957},{"startOffset":5929,"endOffset":5985,"count":9808},{"startOffset":5985,"endOffset":7362,"count":3332},{"startOffset":6040,"endOffset":6053,"count":1791},{"startOffset":6055,"endOffset":6244,"count":846},{"startOffset":6132,"endOffset":6139,"count":0},{"startOffset":6244,"endOffset":7348,"count":2486},{"startOffset":6265,"endOffset":7129,"count":2055},{"startOffset":6326,"endOffset":6337,"count":740},{"startOffset":6367,"endOffset":6378,"count":740},{"startOffset":6537,"endOffset":6635,"count":4},{"startOffset":6635,"endOffset":6822,"count":2051},{"startOffset":6722,"endOffset":6786,"count":681},{"startOffset":6786,"endOffset":6800,"count":1370},{"startOffset":7129,"endOffset":7348,"count":431},{"startOffset":7205,"endOffset":7278,"count":0},{"startOffset":7362,"endOffset":8743,"count":6476},{"startOffset":7423,"endOffset":7436,"count":4898},{"startOffset":7438,"endOffset":7627,"count":3820},{"startOffset":7515,"endOffset":7522,"count":50},{"startOffset":7522,"endOffset":7627,"count":3770},{"startOffset":7627,"endOffset":8729,"count":2656},{"startOffset":7648,"endOffset":8512,"count":411},{"startOffset":7709,"endOffset":7720,"count":202},{"startOffset":7750,"endOffset":7761,"count":202},{"startOffset":7920,"endOffset":8018,"count":8},{"startOffset":8018,"endOffset":8205,"count":403},{"startOffset":8105,"endOffset":8169,"count":158},{"startOffset":8169,"endOffset":8183,"count":245},{"startOffset":8512,"endOffset":8729,"count":2245},{"startOffset":8588,"endOffset":8660,"count":43},{"startOffset":8660,"endOffset":8681,"count":2202},{"startOffset":8743,"endOffset":8773,"count":2676}],"isBlockCoverage":true},{"functionName":"he","ranges":[{"startOffset":8784,"endOffset":11836,"count":24950},{"startOffset":8832,"endOffset":9081,"count":8},{"startOffset":9081,"endOffset":9180,"count":24942},{"startOffset":9180,"endOffset":9232,"count":16},{"startOffset":9232,"endOffset":11791,"count":24926},{"startOffset":9249,"endOffset":9368,"count":0},{"startOffset":9471,"endOffset":9535,"count":35},{"startOffset":9535,"endOffset":11781,"count":24891},{"startOffset":9552,"endOffset":9691,"count":20},{"startOffset":9691,"endOffset":11781,"count":24871},{"startOffset":9736,"endOffset":10756,"count":0},{"startOffset":10861,"endOffset":11749,"count":312357},{"startOffset":10948,"endOffset":11276,"count":57368},{"startOffset":11001,"endOffset":11213,"count":2265},{"startOffset":11213,"endOffset":11276,"count":55103},{"startOffset":11276,"endOffset":11727,"count":254989},{"startOffset":11293,"endOffset":11621,"count":237247},{"startOffset":11346,"endOffset":11558,"count":4864},{"startOffset":11558,"endOffset":11621,"count":232383},{"startOffset":11621,"endOffset":11727,"count":17742},{"startOffset":11791,"endOffset":11835,"count":7149}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":11841,"endOffset":11976,"count":0}],"isBlockCoverage":false},{"functionName":"updateKeyByIterator","ranges":[{"startOffset":11981,"endOffset":12757,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByPos","ranges":[{"startOffset":12762,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"re","ranges":[{"startOffset":13086,"endOffset":13324,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByKey","ranges":[{"startOffset":13329,"endOffset":13481,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByIterator","ranges":[{"startOffset":13486,"endOffset":13741,"count":812},{"startOffset":13563,"endOffset":13628,"count":0},{"startOffset":13660,"endOffset":13697,"count":359}],"isBlockCoverage":true},{"functionName":"getHeight","ranges":[{"startOffset":13746,"endOffset":13969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1207","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/TreeContainer/Base/TreeNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2474,"count":1}],"isBlockCoverage":true},{"functionName":"TreeNode","ranges":[{"startOffset":153,"endOffset":380,"count":7165}],"isBlockCoverage":true},{"functionName":"pre","ranges":[{"startOffset":385,"endOffset":781,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":786,"endOffset":1181,"count":359},{"startOffset":834,"endOffset":953,"count":0},{"startOffset":1017,"endOffset":1081,"count":387},{"startOffset":1150,"endOffset":1165,"count":0}],"isBlockCoverage":true},{"functionName":"rotateLeft","ranges":[{"startOffset":1186,"endOffset":1490,"count":2407},{"startOffset":1304,"endOffset":1313,"count":43},{"startOffset":1313,"endOffset":1359,"count":2364},{"startOffset":1337,"endOffset":1345,"count":966},{"startOffset":1345,"endOffset":1359,"count":1398},{"startOffset":1454,"endOffset":1466,"count":900}],"isBlockCoverage":true},{"functionName":"rotateRight","ranges":[{"startOffset":1495,"endOffset":1800,"count":525},{"startOffset":1614,"endOffset":1623,"count":0},{"startOffset":1647,"endOffset":1655,"count":148},{"startOffset":1655,"endOffset":1669,"count":377},{"startOffset":1764,"endOffset":1776,"count":210}],"isBlockCoverage":true},{"functionName":"TreeNodeEnableIndex","ranges":[{"startOffset":1883,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"rotateLeft","ranges":[{"startOffset":2044,"endOffset":2165,"count":0}],"isBlockCoverage":false},{"functionName":"rotateRight","ranges":[{"startOffset":2170,"endOffset":2293,"count":0}],"isBlockCoverage":false},{"functionName":"recount","ranges":[{"startOffset":2298,"endOffset":2420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1208","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/TreeContainer/Base/TreeIterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2027,"count":1}],"isBlockCoverage":true},{"functionName":"TreeIterator","ranges":[{"startOffset":221,"endOffset":1389,"count":20206},{"startOffset":858,"endOffset":1383,"count":0}],"isBlockCoverage":true},{"functionName":"TreeIterator.pre","ranges":[{"startOffset":364,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"TreeIterator.next","ranges":[{"startOffset":619,"endOffset":847,"count":359},{"startOffset":671,"endOffset":764,"count":0}],"isBlockCoverage":true},{"functionName":"TreeIterator.pre","ranges":[{"startOffset":889,"endOffset":1119,"count":0}],"isBlockCoverage":false},{"functionName":"TreeIterator.next","ranges":[{"startOffset":1145,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"get index","ranges":[{"startOffset":1394,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":1918,"endOffset":1966,"count":20198}],"isBlockCoverage":true}]},{"scriptId":"1209","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/TreeContainer/OrderedMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3388,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":263,"endOffset":355,"count":2},{"startOffset":324,"endOffset":352,"count":0}],"isBlockCoverage":true},{"functionName":"get pointer","ranges":[{"startOffset":418,"endOffset":941,"count":35352},{"startOffset":465,"endOffset":547,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":596,"endOffset":706,"count":35352},{"startOffset":639,"endOffset":655,"count":21002},{"startOffset":655,"endOffset":692,"count":14350}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":725,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":946,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"OrderedMap","ranges":[{"startOffset":1133,"endOffset":1423,"count":8}],"isBlockCoverage":true},{"functionName":"OrderedMap.K","ranges":[{"startOffset":1199,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1381,"endOffset":1414,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":1428,"endOffset":1510,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1515,"endOffset":1583,"count":8}],"isBlockCoverage":true},{"functionName":"rBegin","ranges":[{"startOffset":1588,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"rEnd","ranges":[{"startOffset":1679,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"front","ranges":[{"startOffset":1756,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":1872,"endOffset":1982,"count":5840},{"startOffset":1902,"endOffset":1919,"count":0}],"isBlockCoverage":true},{"functionName":"forEach","ranges":[{"startOffset":1987,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":2070,"endOffset":2178,"count":5848}],"isBlockCoverage":true},{"functionName":"upperBound","ranges":[{"startOffset":2183,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"reverseLowerBound","ranges":[{"startOffset":2296,"endOffset":2411,"count":14350}],"isBlockCoverage":true},{"functionName":"reverseUpperBound","ranges":[{"startOffset":2416,"endOffset":2531,"count":0}],"isBlockCoverage":false},{"functionName":"setElement","ranges":[{"startOffset":2536,"endOffset":2589,"count":24950}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":2594,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"getElementByKey","ranges":[{"startOffset":2774,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"getElementByPos","ranges":[{"startOffset":2879,"endOffset":3189,"count":0}],"isBlockCoverage":false},{"functionName":"union","ranges":[{"startOffset":3194,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3271,"endOffset":3329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1210","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/HashContainer/HashSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4185,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":321,"endOffset":413,"count":3},{"startOffset":382,"endOffset":410,"count":0}],"isBlockCoverage":true},{"functionName":"HashSet","ranges":[{"startOffset":457,"endOffset":574,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":579,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":1992,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":2195,"endOffset":3087,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByKey","ranges":[{"startOffset":3092,"endOffset":3631,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":3636,"endOffset":3795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3800,"endOffset":4129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1211","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/HashContainer/Base/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"HashContainer","ranges":[{"startOffset":209,"endOffset":760,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":765,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1212","url":"file:///home/runner/work/deluge/deluge/node_modules/js-sdsl/dist/cjs/container/HashContainer/HashMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5030,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":321,"endOffset":413,"count":3},{"startOffset":382,"endOffset":410,"count":0}],"isBlockCoverage":true},{"functionName":"HashMap","ranges":[{"startOffset":457,"endOffset":587,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":592,"endOffset":2006,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":2011,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"setElement","ranges":[{"startOffset":2214,"endOffset":3267,"count":0}],"isBlockCoverage":false},{"functionName":"getElementByKey","ranges":[{"startOffset":3272,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"eraseElementByKey","ranges":[{"startOffset":3646,"endOffset":4312,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":4317,"endOffset":4640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4645,"endOffset":4974,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1213","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":61541,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":61540,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":161,"endOffset":61520,"count":1},{"startOffset":385,"endOffset":650,"count":0},{"startOffset":685,"endOffset":951,"count":0},{"startOffset":1340,"endOffset":1365,"count":0},{"startOffset":1751,"endOffset":1775,"count":0},{"startOffset":1788,"endOffset":1799,"count":0},{"startOffset":1824,"endOffset":1828,"count":0},{"startOffset":1875,"endOffset":1927,"count":0},{"startOffset":2018,"endOffset":2391,"count":0},{"startOffset":2467,"endOffset":2843,"count":0},{"startOffset":2948,"endOffset":3007,"count":0},{"startOffset":3094,"endOffset":3527,"count":0},{"startOffset":3591,"endOffset":3616,"count":0},{"startOffset":3915,"endOffset":3938,"count":0},{"startOffset":3990,"endOffset":4029,"count":0},{"startOffset":4083,"endOffset":4124,"count":0},{"startOffset":4168,"endOffset":4199,"count":0},{"startOffset":4266,"endOffset":4753,"count":14},{"startOffset":4381,"endOffset":4750,"count":0},{"startOffset":4891,"endOffset":5265,"count":0},{"startOffset":5341,"endOffset":5705,"count":0},{"startOffset":5865,"endOffset":5883,"count":0},{"startOffset":6201,"endOffset":6709,"count":0},{"startOffset":6785,"endOffset":7257,"count":0},{"startOffset":7584,"endOffset":7640,"count":2},{"startOffset":7615,"endOffset":7640,"count":0},{"startOffset":8161,"endOffset":8185,"count":0},{"startOffset":8198,"endOffset":8209,"count":0},{"startOffset":8234,"endOffset":8238,"count":0},{"startOffset":8284,"endOffset":8297,"count":0},{"startOffset":8299,"endOffset":8358,"count":0},{"startOffset":8379,"endOffset":8431,"count":0},{"startOffset":8445,"endOffset":8971,"count":0},{"startOffset":9035,"endOffset":9060,"count":0},{"startOffset":9278,"endOffset":9302,"count":0},{"startOffset":9305,"endOffset":20405,"count":0},{"startOffset":20855,"endOffset":20879,"count":0},{"startOffset":20917,"endOffset":20921,"count":0},{"startOffset":20967,"endOffset":20980,"count":0},{"startOffset":20982,"endOffset":21041,"count":0},{"startOffset":21062,"endOffset":21114,"count":0},{"startOffset":21128,"endOffset":21670,"count":0},{"startOffset":21734,"endOffset":21759,"count":0},{"startOffset":21927,"endOffset":21945,"count":0},{"startOffset":22153,"endOffset":22615,"count":0},{"startOffset":22691,"endOffset":23131,"count":0},{"startOffset":23475,"endOffset":23500,"count":0},{"startOffset":23975,"endOffset":23999,"count":0},{"startOffset":24012,"endOffset":24023,"count":0},{"startOffset":24048,"endOffset":24052,"count":0},{"startOffset":24098,"endOffset":24111,"count":0},{"startOffset":24113,"endOffset":24172,"count":0},{"startOffset":24193,"endOffset":24245,"count":0},{"startOffset":24259,"endOffset":24781,"count":0},{"startOffset":24845,"endOffset":24870,"count":0},{"startOffset":25041,"endOffset":25059,"count":0},{"startOffset":25267,"endOffset":25741,"count":0},{"startOffset":25817,"endOffset":26266,"count":0},{"startOffset":26613,"endOffset":26638,"count":0},{"startOffset":27125,"endOffset":27149,"count":0},{"startOffset":27162,"endOffset":27173,"count":0},{"startOffset":27198,"endOffset":27202,"count":0},{"startOffset":27248,"endOffset":27261,"count":0},{"startOffset":27263,"endOffset":27322,"count":0},{"startOffset":27343,"endOffset":27395,"count":0},{"startOffset":27409,"endOffset":27943,"count":0},{"startOffset":28007,"endOffset":28032,"count":0},{"startOffset":28206,"endOffset":28224,"count":0},{"startOffset":28390,"endOffset":28942,"count":2},{"startOffset":28447,"endOffset":28464,"count":1},{"startOffset":28488,"endOffset":28939,"count":0},{"startOffset":29018,"endOffset":29036,"count":0},{"startOffset":29244,"endOffset":29807,"count":0},{"startOffset":29883,"endOffset":30396,"count":0},{"startOffset":30737,"endOffset":30793,"count":2},{"startOffset":30768,"endOffset":30793,"count":0},{"startOffset":31369,"endOffset":31393,"count":0},{"startOffset":31406,"endOffset":31417,"count":0},{"startOffset":31442,"endOffset":31446,"count":0},{"startOffset":31492,"endOffset":31505,"count":0},{"startOffset":31507,"endOffset":31566,"count":0},{"startOffset":31587,"endOffset":31639,"count":0},{"startOffset":31653,"endOffset":32276,"count":0},{"startOffset":32340,"endOffset":32365,"count":0},{"startOffset":32524,"endOffset":32542,"count":0},{"startOffset":32640,"endOffset":33103,"count":0},{"startOffset":33179,"endOffset":33607,"count":0},{"startOffset":33737,"endOffset":34152,"count":0},{"startOffset":34299,"endOffset":34317,"count":0},{"startOffset":34483,"endOffset":35032,"count":2},{"startOffset":34540,"endOffset":34557,"count":1},{"startOffset":34581,"endOffset":35029,"count":0},{"startOffset":35108,"endOffset":35126,"count":0},{"startOffset":35334,"endOffset":35893,"count":0},{"startOffset":35969,"endOffset":36479,"count":0},{"startOffset":36819,"endOffset":36875,"count":2},{"startOffset":36850,"endOffset":36875,"count":0},{"startOffset":37447,"endOffset":37471,"count":0},{"startOffset":37484,"endOffset":37495,"count":0},{"startOffset":37520,"endOffset":37524,"count":0},{"startOffset":37570,"endOffset":37583,"count":0},{"startOffset":37585,"endOffset":37644,"count":0},{"startOffset":37665,"endOffset":37717,"count":0},{"startOffset":37731,"endOffset":38350,"count":0},{"startOffset":38414,"endOffset":38439,"count":0},{"startOffset":38598,"endOffset":38616,"count":0},{"startOffset":38714,"endOffset":39173,"count":0},{"startOffset":39249,"endOffset":39674,"count":0},{"startOffset":39804,"endOffset":40215,"count":0},{"startOffset":40373,"endOffset":42715,"count":0},{"startOffset":42794,"endOffset":42812,"count":0},{"startOffset":43056,"endOffset":43492,"count":0},{"startOffset":43570,"endOffset":43588,"count":0},{"startOffset":43796,"endOffset":44335,"count":0},{"startOffset":44411,"endOffset":44906,"count":0},{"startOffset":45241,"endOffset":45297,"count":2},{"startOffset":45272,"endOffset":45297,"count":0},{"startOffset":45849,"endOffset":45873,"count":0},{"startOffset":45886,"endOffset":45897,"count":0},{"startOffset":45922,"endOffset":45926,"count":0},{"startOffset":45972,"endOffset":45985,"count":0},{"startOffset":45987,"endOffset":46046,"count":0},{"startOffset":46067,"endOffset":46119,"count":0},{"startOffset":46133,"endOffset":46732,"count":0},{"startOffset":46796,"endOffset":46821,"count":0},{"startOffset":46961,"endOffset":47356,"count":0},{"startOffset":47500,"endOffset":47518,"count":0},{"startOffset":47726,"endOffset":48196,"count":0},{"startOffset":48272,"endOffset":48718,"count":0},{"startOffset":49033,"endOffset":49089,"count":2},{"startOffset":49064,"endOffset":49089,"count":0},{"startOffset":49572,"endOffset":49596,"count":0},{"startOffset":49609,"endOffset":49620,"count":0},{"startOffset":49645,"endOffset":49649,"count":0},{"startOffset":49695,"endOffset":49708,"count":0},{"startOffset":49710,"endOffset":49769,"count":0},{"startOffset":49790,"endOffset":49842,"count":0},{"startOffset":49856,"endOffset":50386,"count":0},{"startOffset":50450,"endOffset":50475,"count":0},{"startOffset":50646,"endOffset":50664,"count":0},{"startOffset":50872,"endOffset":51346,"count":0},{"startOffset":51422,"endOffset":51871,"count":0},{"startOffset":52187,"endOffset":52243,"count":2},{"startOffset":52218,"endOffset":52243,"count":0},{"startOffset":52730,"endOffset":52754,"count":0},{"startOffset":52767,"endOffset":52778,"count":0},{"startOffset":52803,"endOffset":52807,"count":0},{"startOffset":52853,"endOffset":52866,"count":0},{"startOffset":52868,"endOffset":52927,"count":0},{"startOffset":52948,"endOffset":53000,"count":0},{"startOffset":53014,"endOffset":53548,"count":0},{"startOffset":53612,"endOffset":53637,"count":0},{"startOffset":53809,"endOffset":53827,"count":0},{"startOffset":54035,"endOffset":54513,"count":0},{"startOffset":54589,"endOffset":55041,"count":0},{"startOffset":55358,"endOffset":55414,"count":2},{"startOffset":55389,"endOffset":55414,"count":0},{"startOffset":55905,"endOffset":55929,"count":0},{"startOffset":55942,"endOffset":55953,"count":0},{"startOffset":55978,"endOffset":55982,"count":0},{"startOffset":56028,"endOffset":56041,"count":0},{"startOffset":56043,"endOffset":56102,"count":0},{"startOffset":56123,"endOffset":56175,"count":0},{"startOffset":56189,"endOffset":56727,"count":0},{"startOffset":56791,"endOffset":56816,"count":0},{"startOffset":57020,"endOffset":57442,"count":0},{"startOffset":57593,"endOffset":58023,"count":0},{"startOffset":58135,"endOffset":58153,"count":0},{"startOffset":58290,"endOffset":59679,"count":17},{"startOffset":58369,"endOffset":58779,"count":0},{"startOffset":58954,"endOffset":58978,"count":0},{"startOffset":58990,"endOffset":59002,"count":0},{"startOffset":59030,"endOffset":59034,"count":0},{"startOffset":59081,"endOffset":59477,"count":0},{"startOffset":59541,"endOffset":59566,"count":0},{"startOffset":59670,"endOffset":59676,"count":0},{"startOffset":59711,"endOffset":60096,"count":0},{"startOffset":60266,"endOffset":60656,"count":0},{"startOffset":60755,"endOffset":61057,"count":0},{"startOffset":61175,"endOffset":61437,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1214","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/key-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26580,"count":1}],"isBlockCoverage":true},{"functionName":"containsLineTerminator","ranges":[{"startOffset":857,"endOffset":946,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":1065,"endOffset":1119,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleLine","ranges":[{"startOffset":1293,"endOffset":1380,"count":50}],"isBlockCoverage":true},{"functionName":"isSingleLineProperties","ranges":[{"startOffset":1568,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"initOptionProperty","ranges":[{"startOffset":2053,"endOffset":3035,"count":16},{"startOffset":2312,"endOffset":2360,"count":0},{"startOffset":2511,"endOffset":2558,"count":0},{"startOffset":2637,"endOffset":3010,"count":0}],"isBlockCoverage":true},{"functionName":"initOptions","ranges":[{"startOffset":3367,"endOffset":4633,"count":8},{"startOffset":3461,"endOffset":3909,"count":0},{"startOffset":4279,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":12337,"endOffset":26576,"count":8},{"startOffset":12609,"endOffset":12614,"count":0},{"startOffset":25932,"endOffset":26319,"count":0}],"isBlockCoverage":true},{"functionName":"continuesPropertyGroup","ranges":[{"startOffset":13255,"endOffset":14423,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyValueProperty","ranges":[{"startOffset":14661,"endOffset":14955,"count":0}],"isBlockCoverage":false},{"functionName":"getLastTokenBeforeColon","ranges":[{"startOffset":15292,"endOffset":15487,"count":0}],"isBlockCoverage":false},{"functionName":"getNextColon","ranges":[{"startOffset":15784,"endOffset":15897,"count":0}],"isBlockCoverage":false},{"functionName":"getKey","ranges":[{"startOffset":16143,"endOffset":16410,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":16937,"endOffset":19798,"count":20},{"startOffset":17094,"endOffset":17114,"count":0},{"startOffset":17143,"endOffset":17164,"count":0},{"startOffset":17193,"endOffset":17205,"count":0},{"startOffset":17206,"endOffset":17227,"count":0},{"startOffset":17229,"endOffset":17297,"count":0},{"startOffset":17312,"endOffset":19788,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":18576,"endOffset":18672,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":18805,"endOffset":18932,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":18993,"endOffset":19120,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyWidth","ranges":[{"startOffset":20084,"endOffset":20374,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyWhitespace","ranges":[{"startOffset":20641,"endOffset":21059,"count":50},{"startOffset":20871,"endOffset":21024,"count":10},{"startOffset":21024,"endOffset":21058,"count":40}],"isBlockCoverage":true},{"functionName":"createGroups","ranges":[{"startOffset":21280,"endOffset":21881,"count":0}],"isBlockCoverage":false},{"functionName":"verifyGroupAlignment","ranges":[{"startOffset":22084,"endOffset":23893,"count":0}],"isBlockCoverage":false},{"functionName":"verifySpacing","ranges":[{"startOffset":24171,"endOffset":24567,"count":50},{"startOffset":24296,"endOffset":24557,"count":10}],"isBlockCoverage":true},{"functionName":"verifyListSpacing","ranges":[{"startOffset":24835,"endOffset":25065,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAlignment","ranges":[{"startOffset":25280,"endOffset":25707,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":26001,"endOffset":26293,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":26424,"endOffset":26557,"count":50},{"startOffset":26503,"endOffset":26522,"count":17},{"startOffset":26523,"endOffset":26541,"count":33}],"isBlockCoverage":true}]},{"scriptId":"1215","url":"file:///home/runner/work/deluge/deluge/node_modules/grapheme-splitter/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116927,"count":1}],"isBlockCoverage":true},{"functionName":"GraphemeSplitter","ranges":[{"startOffset":348,"endOffset":116825,"count":1}],"isBlockCoverage":true},{"functionName":"isSurrogate","ranges":[{"startOffset":797,"endOffset":988,"count":0}],"isBlockCoverage":false},{"functionName":"codePointAt","ranges":[{"startOffset":1120,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBreak","ranges":[{"startOffset":2025,"endOffset":4875,"count":0}],"isBlockCoverage":false},{"functionName":"GraphemeSplitter.nextBreak","ranges":[{"startOffset":4971,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"GraphemeSplitter.splitGraphemes","ranges":[{"startOffset":5677,"endOffset":5939,"count":0}],"isBlockCoverage":false},{"functionName":"GraphemeSplitter.iterateGraphemes","ranges":[{"startOffset":6046,"endOffset":6743,"count":0}],"isBlockCoverage":false},{"functionName":"GraphemeSplitter.countGraphemes","ranges":[{"startOffset":6846,"endOffset":7068,"count":0}],"isBlockCoverage":false},{"functionName":"getGraphemeBreakProperty","ranges":[{"startOffset":7156,"endOffset":116807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1216","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41643,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":41642,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":41622,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1246,"endOffset":1829,"count":2},{"startOffset":1343,"endOffset":1366,"count":1},{"startOffset":1390,"endOffset":1826,"count":0},{"startOffset":1918,"endOffset":8280,"count":0},{"startOffset":8367,"endOffset":9142,"count":0},{"startOffset":9218,"endOffset":9236,"count":0},{"startOffset":9299,"endOffset":9753,"count":0},{"startOffset":9865,"endOffset":9883,"count":0},{"startOffset":9946,"endOffset":10396,"count":0},{"startOffset":10486,"endOffset":10864,"count":0},{"startOffset":10968,"endOffset":40636,"count":0},{"startOffset":40650,"endOffset":41044,"count":0},{"startOffset":41093,"endOffset":41156,"count":0},{"startOffset":41277,"endOffset":41539,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1217","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/keyword-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1006,"endOffset":1222,"count":1},{"startOffset":1078,"endOffset":1220,"count":67},{"startOffset":1117,"endOffset":1214,"count":0}],"isBlockCoverage":true},{"functionName":"isOpenParenOfTemplate","ranges":[{"startOffset":1609,"endOffset":1729,"count":237},{"startOffset":1686,"endOffset":1726,"count":4}],"isBlockCoverage":true},{"functionName":"isCloseParenOfTemplate","ranges":[{"startOffset":1940,"endOffset":2062,"count":101},{"startOffset":2018,"endOffset":2059,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2928,"endOffset":3401,"count":68}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3899,"endOffset":24176,"count":8}],"isBlockCoverage":true},{"functionName":"expectSpaceBefore","ranges":[{"startOffset":4281,"endOffset":5072,"count":617},{"startOffset":4417,"endOffset":4502,"count":609},{"startOffset":4469,"endOffset":4501,"count":578},{"startOffset":4503,"endOffset":4555,"count":237},{"startOffset":4556,"endOffset":4605,"count":233},{"startOffset":4606,"endOffset":4669,"count":233},{"startOffset":4670,"endOffset":4739,"count":37},{"startOffset":4754,"endOffset":5062,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4927,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"unexpectSpaceBefore","ranges":[{"startOffset":5334,"endOffset":6190,"count":0}],"isBlockCoverage":false},{"functionName":"expectSpaceAfter","ranges":[{"startOffset":6451,"endOffset":7239,"count":316},{"startOffset":6637,"endOffset":6669,"count":288},{"startOffset":6671,"endOffset":6724,"count":101},{"startOffset":6725,"endOffset":6774,"count":101},{"startOffset":6775,"endOffset":6838,"count":101},{"startOffset":6839,"endOffset":6908,"count":101},{"startOffset":6923,"endOffset":7229,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":7095,"endOffset":7195,"count":0}],"isBlockCoverage":false},{"functionName":"unexpectSpaceAfter","ranges":[{"startOffset":7496,"endOffset":8351,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptions","ranges":[{"startOffset":8746,"endOffset":9906,"count":8},{"startOffset":8974,"endOffset":8995,"count":0},{"startOffset":9045,"endOffset":9065,"count":0},{"startOffset":9246,"endOffset":9870,"count":544},{"startOffset":9365,"endOffset":9785,"count":0}],"isBlockCoverage":true},{"functionName":"checkSpacingBefore","ranges":[{"startOffset":10287,"endOffset":10420,"count":617},{"startOffset":10395,"endOffset":10408,"count":553}],"isBlockCoverage":true},{"functionName":"checkSpacingAfter","ranges":[{"startOffset":10731,"endOffset":10862,"count":316},{"startOffset":10837,"endOffset":10850,"count":254}],"isBlockCoverage":true},{"functionName":"checkSpacingAround","ranges":[{"startOffset":11056,"endOffset":11179,"count":254}],"isBlockCoverage":true},{"functionName":"checkSpacingAroundFirstToken","ranges":[{"startOffset":11440,"endOffset":11692,"count":225}],"isBlockCoverage":true},{"functionName":"checkSpacingBeforeFirstToken","ranges":[{"startOffset":12136,"endOffset":12388,"count":246},{"startOffset":12315,"endOffset":12378,"count":231}],"isBlockCoverage":true},{"functionName":"checkSpacingAroundTokenBefore","ranges":[{"startOffset":12646,"endOffset":12872,"count":44},{"startOffset":12715,"endOffset":12862,"count":3}],"isBlockCoverage":true},{"functionName":"checkSpacingForFunction","ranges":[{"startOffset":13115,"endOffset":13478,"count":146},{"startOffset":13306,"endOffset":13340,"count":5},{"startOffset":13342,"endOffset":13389,"count":141},{"startOffset":13405,"endOffset":13468,"count":21}],"isBlockCoverage":true},{"functionName":"checkSpacingForClass","ranges":[{"startOffset":13721,"endOffset":13876,"count":5}],"isBlockCoverage":true},{"functionName":"checkSpacingForIfStatement","ranges":[{"startOffset":14113,"endOffset":14273,"count":38}],"isBlockCoverage":true},{"functionName":"checkSpacingForTryStatement","ranges":[{"startOffset":14524,"endOffset":14741,"count":1}],"isBlockCoverage":true},{"functionName":"checkSpacingForDoWhileStatement","ranges":[{"startOffset":14979,"endOffset":15139,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacingForForInStatement","ranges":[{"startOffset":15375,"endOffset":15813,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacingForForOfStatement","ranges":[{"startOffset":16049,"endOffset":16697,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacingForModuleDeclaration","ranges":[{"startOffset":17203,"endOffset":18112,"count":34},{"startOffset":17491,"endOffset":17580,"count":0},{"startOffset":17635,"endOffset":17651,"count":4},{"startOffset":17653,"endOffset":17860,"count":0},{"startOffset":17891,"endOffset":18102,"count":28}],"isBlockCoverage":true},{"functionName":"checkSpacingForImportSpecifier","ranges":[{"startOffset":18353,"endOffset":18621,"count":18},{"startOffset":18465,"endOffset":18611,"count":1}],"isBlockCoverage":true},{"functionName":"checkSpacingForExportSpecifier","ranges":[{"startOffset":18862,"endOffset":19191,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacingForImportNamespaceSpecifier","ranges":[{"startOffset":19414,"endOffset":19599,"count":1}],"isBlockCoverage":true},{"functionName":"checkSpacingForProperty","ranges":[{"startOffset":19937,"endOffset":21009,"count":104},{"startOffset":20007,"endOffset":20074,"count":2},{"startOffset":20111,"endOffset":20149,"count":87},{"startOffset":20150,"endOffset":20298,"count":87},{"startOffset":20204,"endOffset":20239,"count":75},{"startOffset":20241,"endOffset":20280,"count":49},{"startOffset":20313,"endOffset":20999,"count":26},{"startOffset":20822,"endOffset":20940,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20422,"endOffset":20773,"count":26},{"startOffset":20504,"endOffset":20515,"count":17},{"startOffset":20544,"endOffset":20555,"count":17},{"startOffset":20671,"endOffset":20725,"count":0}],"isBlockCoverage":true},{"functionName":"checkSpacingForAwaitExpression","ranges":[{"startOffset":21235,"endOffset":21356,"count":47}],"isBlockCoverage":true},{"functionName":"BinaryExpression[operator='>']","ranges":[{"startOffset":23943,"endOffset":24159,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1218","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189620,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":189619,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":189599,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1146,"endOffset":1168,"count":0},{"startOffset":1203,"endOffset":1224,"count":0},{"startOffset":1291,"endOffset":1782,"count":2},{"startOffset":1344,"endOffset":1362,"count":1},{"startOffset":1364,"endOffset":1386,"count":0},{"startOffset":1410,"endOffset":1779,"count":0},{"startOffset":1881,"endOffset":2239,"count":0},{"startOffset":2371,"endOffset":2725,"count":0},{"startOffset":2852,"endOffset":188783,"count":0},{"startOffset":188835,"endOffset":189137,"count":0},{"startOffset":189254,"endOffset":189516,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1219","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/lines-between-class-members.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7996,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1466,"endOffset":7992,"count":8},{"startOffset":1554,"endOffset":1565,"count":0},{"startOffset":1607,"endOffset":1642,"count":0}],"isBlockCoverage":true},{"functionName":"getBoundaryTokens","ranges":[{"startOffset":3057,"endOffset":3769,"count":49},{"startOffset":3440,"endOffset":3508,"count":0},{"startOffset":3509,"endOffset":3576,"count":0},{"startOffset":3649,"endOffset":3695,"count":0}],"isBlockCoverage":true},{"functionName":"findLastConsecutiveTokenAfter","ranges":[{"startOffset":4308,"endOffset":4735,"count":98},{"startOffset":4525,"endOffset":4588,"count":44},{"startOffset":4590,"endOffset":4691,"count":0}],"isBlockCoverage":true},{"functionName":"findFirstConsecutiveTokenBefore","ranges":[{"startOffset":5278,"endOffset":5715,"count":71},{"startOffset":5500,"endOffset":5565,"count":22},{"startOffset":5567,"endOffset":5670,"count":22},{"startOffset":5670,"endOffset":5714,"count":49}],"isBlockCoverage":true},{"functionName":"hasTokenOrCommentBetween","ranges":[{"startOffset":6004,"endOffset":6167,"count":49}],"isBlockCoverage":true},{"functionName":"ClassBody","ranges":[{"startOffset":6198,"endOffset":7975,"count":5},{"startOffset":6315,"endOffset":7961,"count":49},{"startOffset":6607,"endOffset":6642,"count":0},{"startOffset":7260,"endOffset":7271,"count":0},{"startOffset":7274,"endOffset":7943,"count":0},{"startOffset":7961,"endOffset":7974,"count":49}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":7462,"endOffset":7893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1220","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3822,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3821,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3801,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1852,"endOffset":1890,"count":0},{"startOffset":2047,"endOffset":2416,"count":0},{"startOffset":2533,"endOffset":2951,"count":0},{"startOffset":3036,"endOffset":3338,"count":0},{"startOffset":3456,"endOffset":3718,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1221","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/multiline-ternary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7726,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1278,"endOffset":7722,"count":8}],"isBlockCoverage":true},{"functionName":"ConditionalExpression","ranges":[{"startOffset":1719,"endOffset":7705,"count":2},{"startOffset":2755,"endOffset":5733,"count":0},{"startOffset":5882,"endOffset":7673,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":3190,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":4689,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":6314,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":7219,"endOffset":7622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1222","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/new-cap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9523,"count":1}],"isBlockCoverage":true},{"functionName":"checkArray","ranges":[{"startOffset":1108,"endOffset":1393,"count":16},{"startOffset":1232,"endOffset":1259,"count":0},{"startOffset":1261,"endOffset":1338,"count":0}],"isBlockCoverage":true},{"functionName":"invert","ranges":[{"startOffset":1685,"endOffset":1751,"count":88}],"isBlockCoverage":true},{"functionName":"calculateCapIsNewExceptions","ranges":[{"startOffset":1952,"endOffset":2260,"count":8},{"startOffset":2130,"endOffset":2207,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4210,"endOffset":9519,"count":8},{"startOffset":4632,"endOffset":4682,"count":0},{"startOffset":4837,"endOffset":4887,"count":0},{"startOffset":8965,"endOffset":9486,"count":0}],"isBlockCoverage":true},{"functionName":"extractNameFromExpression","ranges":[{"startOffset":5356,"endOffset":5565,"count":38},{"startOffset":5503,"endOffset":5554,"count":0}],"isBlockCoverage":true},{"functionName":"getCap","ranges":[{"startOffset":5863,"endOffset":6362,"count":38},{"startOffset":6104,"endOffset":6229,"count":0},{"startOffset":6276,"endOffset":6323,"count":0}],"isBlockCoverage":true},{"functionName":"isCapAllowed","ranges":[{"startOffset":6823,"endOffset":7569,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":7884,"endOffset":8174,"count":0}],"isBlockCoverage":false},{"functionName":"listeners.NewExpression","ranges":[{"startOffset":8434,"endOffset":8923,"count":38},{"startOffset":8698,"endOffset":8782,"count":0},{"startOffset":8821,"endOffset":8891,"count":0}],"isBlockCoverage":true},{"functionName":"listeners.CallExpression","ranges":[{"startOffset":9006,"endOffset":9475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1223","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8261,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8260,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":8240,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1148,"endOffset":1172,"count":0},{"startOffset":1210,"endOffset":1234,"count":0},{"startOffset":1274,"endOffset":1300,"count":0},{"startOffset":1367,"endOffset":2008,"count":3},{"startOffset":1422,"endOffset":1443,"count":2},{"startOffset":1445,"endOffset":1476,"count":1},{"startOffset":1478,"endOffset":1515,"count":1},{"startOffset":1517,"endOffset":1548,"count":1},{"startOffset":1550,"endOffset":1587,"count":1},{"startOffset":1589,"endOffset":1612,"count":1},{"startOffset":1636,"endOffset":2005,"count":0},{"startOffset":2109,"endOffset":2475,"count":0},{"startOffset":2610,"endOffset":2976,"count":0},{"startOffset":3112,"endOffset":4326,"count":0},{"startOffset":4433,"endOffset":4960,"count":0},{"startOffset":5061,"endOffset":6275,"count":0},{"startOffset":6382,"endOffset":6909,"count":0},{"startOffset":7011,"endOffset":7385,"count":0},{"startOffset":7476,"endOffset":7778,"count":0},{"startOffset":7895,"endOffset":8157,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1224","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/new-parens.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3445,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1604,"endOffset":3441,"count":8}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":1814,"endOffset":3424,"count":38},{"startOffset":1885,"endOffset":1983,"count":25},{"startOffset":1983,"endOffset":2139,"count":13},{"startOffset":2334,"endOffset":2423,"count":13},{"startOffset":2424,"endOffset":2483,"count":13},{"startOffset":2514,"endOffset":2822,"count":13},{"startOffset":2552,"endOffset":2804,"count":0},{"startOffset":2822,"endOffset":3410,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":2712,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":3029,"endOffset":3342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1225","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3009,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3008,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":2988,"count":1},{"startOffset":418,"endOffset":750,"count":0},{"startOffset":785,"endOffset":1118,"count":0},{"startOffset":1199,"endOffset":1921,"count":0},{"startOffset":1973,"endOffset":2311,"count":0},{"startOffset":2415,"endOffset":2419,"count":0},{"startOffset":2433,"endOffset":2789,"count":0},{"startOffset":2838,"endOffset":2901,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1226","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-array-constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1399,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":772,"endOffset":1395,"count":8}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":997,"endOffset":1291,"count":363},{"startOffset":1081,"endOffset":1133,"count":194},{"startOffset":1134,"endOffset":1181,"count":51},{"startOffset":1196,"endOffset":1281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1227","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-async-promise-executor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1135,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":773,"endOffset":1131,"count":8}],"isBlockCoverage":true},{"functionName":"NewExpression[callee.name='Promise'][arguments.0.async=true]","ranges":[{"startOffset":820,"endOffset":1114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1228","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-caller.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1200,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":740,"endOffset":1196,"count":8}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":789,"endOffset":1178,"count":526},{"startOffset":970,"endOffset":987,"count":0},{"startOffset":988,"endOffset":1003,"count":0},{"startOffset":1004,"endOffset":1041,"count":0},{"startOffset":1043,"endOffset":1163,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1229","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-case-declarations.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1869,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":757,"endOffset":1865,"count":8}],"isBlockCoverage":true},{"functionName":"isLexicalDeclaration","ranges":[{"startOffset":1030,"endOffset":1393,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":1424,"endOffset":1847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1230","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-class-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1709,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":755,"endOffset":1705,"count":8}],"isBlockCoverage":true},{"functionName":"checkVariable","ranges":[{"startOffset":971,"endOffset":1247,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1079,"endOffset":1235,"count":0}],"isBlockCoverage":false},{"functionName":"checkForClass","ranges":[{"startOffset":1470,"endOffset":1581,"count":5}],"isBlockCoverage":true}]},{"scriptId":"1231","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-compare-neg-zero.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1936,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":798,"endOffset":1932,"count":8}],"isBlockCoverage":true},{"functionName":"isNegZero","ranges":[{"startOffset":1182,"endOffset":1360,"count":24},{"startOffset":1260,"endOffset":1284,"count":1},{"startOffset":1285,"endOffset":1320,"count":0},{"startOffset":1321,"endOffset":1349,"count":0}],"isBlockCoverage":true},{"functionName":"BinaryExpression","ranges":[{"startOffset":1485,"endOffset":1915,"count":22},{"startOffset":1569,"endOffset":1901,"count":12},{"startOffset":1642,"endOffset":1883,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1232","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-cond-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5655,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1741,"endOffset":5651,"count":8},{"startOffset":5285,"endOffset":5397,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalTestExpression","ranges":[{"startOffset":2179,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"findConditionalAncestor","ranges":[{"startOffset":2708,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesisedTwice","ranges":[{"startOffset":3381,"endOffset":3846,"count":0}],"isBlockCoverage":false},{"functionName":"testForAssign","ranges":[{"startOffset":4103,"endOffset":4587,"count":43},{"startOffset":4223,"endOffset":4415,"count":0},{"startOffset":4430,"endOffset":4577,"count":0}],"isBlockCoverage":true},{"functionName":"testForConditionalAncestor","ranges":[{"startOffset":4832,"endOffset":5242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1233","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-const-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1497,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":770,"endOffset":1493,"count":8}],"isBlockCoverage":true},{"functionName":"checkVariable","ranges":[{"startOffset":986,"endOffset":1261,"count":93}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1094,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":1292,"endOffset":1475,"count":91},{"startOffset":1363,"endOffset":1461,"count":80}],"isBlockCoverage":true}]},{"scriptId":"1234","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-constant-condition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4818,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1255,"endOffset":4814,"count":8},{"startOffset":1316,"endOffset":1321,"count":0}],"isBlockCoverage":true},{"functionName":"trackConstantConditionLoop","ranges":[{"startOffset":1850,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"checkConstantConditionLoopInSet","ranges":[{"startOffset":2256,"endOffset":2505,"count":3},{"startOffset":2352,"endOffset":2495,"count":0}],"isBlockCoverage":true},{"functionName":"reportIfConstant","ranges":[{"startOffset":2712,"endOffset":2927,"count":40},{"startOffset":2824,"endOffset":2917,"count":0}],"isBlockCoverage":true},{"functionName":"enterFunction","ranges":[{"startOffset":3138,"endOffset":3271,"count":71}],"isBlockCoverage":true},{"functionName":"exitFunction","ranges":[{"startOffset":3426,"endOffset":3515,"count":71}],"isBlockCoverage":true},{"functionName":"checkLoop","ranges":[{"startOffset":3709,"endOffset":3839,"count":6},{"startOffset":3764,"endOffset":3829,"count":0}],"isBlockCoverage":true},{"functionName":"ForStatement > .test","ranges":[{"startOffset":4434,"endOffset":4464,"count":3}],"isBlockCoverage":true},{"functionName":"YieldExpression","ranges":[{"startOffset":4763,"endOffset":4796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1235","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3041,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3040,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3020,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1150,"endOffset":1176,"count":0},{"startOffset":1322,"endOffset":1691,"count":0},{"startOffset":1797,"endOffset":2171,"count":0},{"startOffset":2256,"endOffset":2558,"count":0},{"startOffset":2675,"endOffset":2937,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1236","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-control-regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3957,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":225,"endOffset":359,"count":1}],"isBlockCoverage":true},{"functionName":"onPatternEnter","ranges":[{"startOffset":365,"endOffset":422,"count":4}],"isBlockCoverage":true},{"functionName":"onCharacter","ranges":[{"startOffset":428,"endOffset":834,"count":31},{"startOffset":507,"endOffset":728,"count":0},{"startOffset":739,"endOffset":828,"count":0}],"isBlockCoverage":true},{"functionName":"collectControlChars","ranges":[{"startOffset":840,"endOffset":1225,"count":4},{"startOffset":1119,"endOffset":1184,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1884,"endOffset":3953,"count":8}],"isBlockCoverage":true},{"functionName":"getRegExp","ranges":[{"startOffset":2367,"endOffset":3254,"count":217},{"startOffset":2422,"endOffset":2472,"count":4},{"startOffset":2472,"endOffset":2520,"count":213},{"startOffset":2520,"endOffset":2618,"count":108},{"startOffset":2577,"endOffset":2617,"count":103},{"startOffset":2619,"endOffset":2678,"count":79},{"startOffset":2679,"endOffset":2734,"count":18},{"startOffset":2735,"endOffset":2787,"count":0},{"startOffset":2802,"endOffset":3218,"count":0},{"startOffset":3218,"endOffset":3253,"count":213}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":3285,"endOffset":3935,"count":217},{"startOffset":3378,"endOffset":3921,"count":4},{"startOffset":3583,"endOffset":3903,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1237","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-debugger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":952,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":720,"endOffset":948,"count":8}],"isBlockCoverage":true},{"functionName":"DebuggerStatement","ranges":[{"startOffset":768,"endOffset":930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1238","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-delete-var.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":976,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":690,"endOffset":972,"count":8}],"isBlockCoverage":true},{"functionName":"UnaryExpression","ranges":[{"startOffset":739,"endOffset":954,"count":16},{"startOffset":810,"endOffset":848,"count":0},{"startOffset":850,"endOffset":940,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1239","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-dupe-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2355,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":707,"endOffset":2351,"count":8}],"isBlockCoverage":true},{"functionName":"isParameter","ranges":[{"startOffset":1160,"endOffset":1242,"count":65}],"isBlockCoverage":true},{"functionName":"checkParams","ranges":[{"startOffset":1439,"endOffset":2032,"count":71},{"startOffset":1590,"endOffset":2022,"count":65},{"startOffset":1795,"endOffset":2008,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1240","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-dupe-class-members.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3366,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":759,"endOffset":3362,"count":8}],"isBlockCoverage":true},{"functionName":"getState","ranges":[{"startOffset":1341,"endOffset":1813,"count":49},{"startOffset":1777,"endOffset":1787,"count":2},{"startOffset":1788,"endOffset":1801,"count":47}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":1915,"endOffset":1968,"count":8}],"isBlockCoverage":true},{"functionName":"ClassBody","ranges":[{"startOffset":2054,"endOffset":2130,"count":5}],"isBlockCoverage":true},{"functionName":"ClassBody:exit","ranges":[{"startOffset":2194,"endOffset":2257,"count":5}],"isBlockCoverage":true},{"functionName":"MethodDefinition, PropertyDefinition","ranges":[{"startOffset":2343,"endOffset":3345,"count":54},{"startOffset":2531,"endOffset":2540,"count":0},{"startOffset":2604,"endOffset":2651,"count":5},{"startOffset":2651,"endOffset":2790,"count":49},{"startOffset":2790,"endOffset":2908,"count":17},{"startOffset":2908,"endOffset":3190,"count":32},{"startOffset":2934,"endOffset":3052,"count":0},{"startOffset":3190,"endOffset":3225,"count":49},{"startOffset":3225,"endOffset":3331,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1241","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-dupe-keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3962,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectInfo","ranges":[{"startOffset":858,"endOffset":981,"count":21}],"isBlockCoverage":true},{"functionName":"getPropertyInfo","ranges":[{"startOffset":1194,"endOffset":1444,"count":66},{"startOffset":1318,"endOffset":1396,"count":33}],"isBlockCoverage":true},{"functionName":"isPropertyDefined","ranges":[{"startOffset":1664,"endOffset":1881,"count":33}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":2019,"endOffset":2258,"count":33}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2854,"endOffset":3958,"count":8}],"isBlockCoverage":true},{"functionName":"ObjectExpression","ranges":[{"startOffset":2927,"endOffset":3016,"count":21}],"isBlockCoverage":true},{"functionName":"ObjectExpression:exit","ranges":[{"startOffset":3030,"endOffset":3106,"count":21}],"isBlockCoverage":true},{"functionName":"Property","ranges":[{"startOffset":3121,"endOffset":3941,"count":50},{"startOffset":3306,"endOffset":3353,"count":17},{"startOffset":3353,"endOffset":3441,"count":33},{"startOffset":3441,"endOffset":3488,"count":0},{"startOffset":3488,"endOffset":3599,"count":33},{"startOffset":3599,"endOffset":3851,"count":0},{"startOffset":3851,"endOffset":3940,"count":33}],"isBlockCoverage":true}]},{"scriptId":"1242","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-duplicate-case.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2085,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":947,"endOffset":2081,"count":8}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":1291,"endOffset":1464,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":1494,"endOffset":2064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1243","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-backreference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7592,"count":1}],"isBlockCoverage":true},{"functionName":"getPathToRoot","ranges":[{"startOffset":886,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaround","ranges":[{"startOffset":1252,"endOffset":1390,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativeLookaround","ranges":[{"startOffset":1584,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2936,"endOffset":7588,"count":8}],"isBlockCoverage":true},{"functionName":"checkRegex","ranges":[{"startOffset":3340,"endOffset":6584,"count":4},{"startOffset":3542,"endOffset":3653,"count":0}],"isBlockCoverage":true},{"functionName":"onBackreferenceEnter","ranges":[{"startOffset":3711,"endOffset":6558,"count":0}],"isBlockCoverage":false},{"functionName":"Literal[regex]","ranges":[{"startOffset":6615,"endOffset":6759,"count":4}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":6773,"endOffset":7571,"count":8},{"startOffset":7181,"endOffset":7557,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1244","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-empty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2506,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1224,"endOffset":2502,"count":8},{"startOffset":1285,"endOffset":1290,"count":0},{"startOffset":1346,"endOffset":1354,"count":0}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":1439,"endOffset":2232,"count":150},{"startOffset":1583,"endOffset":1630,"count":147},{"startOffset":1630,"endOffset":1796,"count":3},{"startOffset":1796,"endOffset":1871,"count":0},{"startOffset":1873,"endOffset":2231,"count":0}],"isBlockCoverage":true},{"functionName":"SwitchStatement","ranges":[{"startOffset":2247,"endOffset":2484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1245","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3082,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3061,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1155,"endOffset":1187,"count":0},{"startOffset":1338,"endOffset":1707,"count":0},{"startOffset":1818,"endOffset":2212,"count":0},{"startOffset":2297,"endOffset":2599,"count":0},{"startOffset":2716,"endOffset":2978,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1246","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-empty-character-class.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1689,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1438,"endOffset":1685,"count":8}],"isBlockCoverage":true},{"functionName":"Literal[regex]","ranges":[{"startOffset":1485,"endOffset":1667,"count":4},{"startOffset":1563,"endOffset":1653,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1247","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-empty-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1185,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":703,"endOffset":1181,"count":8}],"isBlockCoverage":true},{"functionName":"ObjectPattern","ranges":[{"startOffset":750,"endOffset":952,"count":6},{"startOffset":822,"endOffset":938,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayPattern","ranges":[{"startOffset":966,"endOffset":1164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1248","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-eval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9533,"count":1}],"isBlockCoverage":true},{"functionName":"isMember","ranges":[{"startOffset":908,"endOffset":1003,"count":187}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1810,"endOffset":9529,"count":8},{"startOffset":1898,"endOffset":1945,"count":0},{"startOffset":6233,"endOffset":6971,"count":0}],"isBlockCoverage":true},{"functionName":"enterThisScope","ranges":[{"startOffset":2712,"endOffset":3044,"count":71}],"isBlockCoverage":true},{"functionName":"exitThisScope","ranges":[{"startOffset":3154,"endOffset":3229,"count":79}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":3742,"endOffset":4236,"count":0}],"isBlockCoverage":false},{"functionName":"reportAccessingEvalViaGlobalObject","ranges":[{"startOffset":4427,"endOffset":5380,"count":8},{"startOffset":4556,"endOffset":5370,"count":24},{"startOffset":4728,"endOffset":4777,"count":0},{"startOffset":4896,"endOffset":5356,"count":0}],"isBlockCoverage":true},{"functionName":"reportAccessingEval","ranges":[{"startOffset":5585,"endOffset":6204,"count":8},{"startOffset":5735,"endOffset":5774,"count":0},{"startOffset":5885,"endOffset":6194,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression:exit","ranges":[{"startOffset":6335,"endOffset":6946,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression:exit","ranges":[{"startOffset":7002,"endOffset":7205,"count":325},{"startOffset":7136,"endOffset":7191,"count":0}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":7220,"endOffset":7931,"count":8},{"startOffset":7352,"endOffset":7357,"count":0},{"startOffset":7483,"endOffset":7566,"count":0},{"startOffset":7638,"endOffset":7663,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":7946,"endOffset":8183,"count":8}],"isBlockCoverage":true},{"functionName":"ThisExpression","ranges":[{"startOffset":8617,"endOffset":9511,"count":187},{"startOffset":8739,"endOffset":9370,"count":0},{"startOffset":9372,"endOffset":9497,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1249","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3066,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3065,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3045,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2648,"count":0},{"startOffset":2700,"endOffset":2962,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1250","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-ex-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1410,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":796,"endOffset":1406,"count":8}],"isBlockCoverage":true},{"functionName":"checkVariable","ranges":[{"startOffset":1012,"endOffset":1249,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1120,"endOffset":1237,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":1280,"endOffset":1388,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1251","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-extend-native.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6593,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1423,"endOffset":6589,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1659,"endOffset":1709,"count":528}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1735,"endOffset":1770,"count":368}],"isBlockCoverage":true},{"functionName":"reportNode","ranges":[{"startOffset":2030,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypePropertyAccessed","ranges":[{"startOffset":2685,"endOffset":3089,"count":34},{"startOffset":2909,"endOffset":2975,"count":15},{"startOffset":2976,"endOffset":3064,"count":15}],"isBlockCoverage":true},{"functionName":"isAssigningToPropertyOf","ranges":[{"startOffset":3393,"endOffset":3711,"count":0}],"isBlockCoverage":false},{"functionName":"isInDefinePropertyCall","ranges":[{"startOffset":4090,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"checkAndReportPrototypeExtension","ranges":[{"startOffset":5016,"endOffset":6047,"count":34},{"startOffset":5214,"endOffset":5576,"count":0},{"startOffset":5597,"endOffset":5620,"count":0},{"startOffset":5679,"endOffset":6037,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":6079,"endOffset":6571,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6196,"endOffset":6555,"count":368}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6421,"endOffset":6442,"count":34}],"isBlockCoverage":true}]},{"scriptId":"1252","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4426,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4425,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4405,"count":2},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":4008,"count":0},{"startOffset":4060,"endOffset":4322,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1253","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-extra-bind.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7569,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1260,"endOffset":7565,"count":8}],"isBlockCoverage":true},{"functionName":"isSideEffectFree","ranges":[{"startOffset":1703,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":2039,"endOffset":4480,"count":0}],"isBlockCoverage":false},{"functionName":"isCalleeOfBindMethod","ranges":[{"startOffset":4881,"endOffset":5527,"count":146},{"startOffset":5041,"endOffset":5205,"count":0},{"startOffset":5222,"endOffset":5235,"count":0},{"startOffset":5317,"endOffset":5371,"count":0},{"startOffset":5372,"endOffset":5429,"count":0},{"startOffset":5430,"endOffset":5502,"count":0}],"isBlockCoverage":true},{"functionName":"enterFunction","ranges":[{"startOffset":5774,"endOffset":5975,"count":71}],"isBlockCoverage":true},{"functionName":"exitFunction","ranges":[{"startOffset":6375,"endOffset":6561,"count":71},{"startOffset":6439,"endOffset":6462,"count":0},{"startOffset":6464,"endOffset":6509,"count":0}],"isBlockCoverage":true},{"functionName":"exitArrowFunction","ranges":[{"startOffset":6830,"endOffset":6964,"count":75},{"startOffset":6909,"endOffset":6954,"count":0}],"isBlockCoverage":true},{"functionName":"markAsThisFound","ranges":[{"startOffset":7096,"endOffset":7221,"count":187}],"isBlockCoverage":true}]},{"scriptId":"1254","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-extra-boolean-cast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11965,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1383,"endOffset":11961,"count":8}],"isBlockCoverage":true},{"functionName":"isBooleanFunctionOrConstructorCall","ranges":[{"startOffset":1959,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalContext","ranges":[{"startOffset":2531,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"isInBooleanContext","ranges":[{"startOffset":3030,"endOffset":3482,"count":0}],"isBlockCoverage":false},{"functionName":"isInFlaggedContext","ranges":[{"startOffset":3768,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommentsInside","ranges":[{"startOffset":4339,"endOffset":4454,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesized","ranges":[{"startOffset":4752,"endOffset":4863,"count":0}],"isBlockCoverage":false},{"functionName":"needsParens","ranges":[{"startOffset":5566,"endOffset":7241,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":7272,"endOffset":8956,"count":16},{"startOffset":7446,"endOffset":7508,"count":13},{"startOffset":7509,"endOffset":7561,"count":0},{"startOffset":7610,"endOffset":8942,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":7819,"endOffset":8900,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":8971,"endOffset":11943,"count":325},{"startOffset":9048,"endOffset":9081,"count":59},{"startOffset":9130,"endOffset":11929,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":9324,"endOffset":11887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1255","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3161,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3141,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2744,"count":0},{"startOffset":2796,"endOffset":3058,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1256","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-extra-parens.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":48571,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2375,"endOffset":48567,"count":8},{"startOffset":2650,"endOffset":2671,"count":0},{"startOffset":2672,"endOffset":2721,"count":0},{"startOffset":2763,"endOffset":2784,"count":0},{"startOffset":2785,"endOffset":2840,"count":0},{"startOffset":2889,"endOffset":2910,"count":0},{"startOffset":2911,"endOffset":2955,"count":0},{"startOffset":2994,"endOffset":3015,"count":0},{"startOffset":3016,"endOffset":3047,"count":0},{"startOffset":3101,"endOffset":3122,"count":0},{"startOffset":3123,"endOffset":3194,"count":0},{"startOffset":3250,"endOffset":3271,"count":0},{"startOffset":3272,"endOffset":3345,"count":0},{"startOffset":3399,"endOffset":3420,"count":0},{"startOffset":3421,"endOffset":3497,"count":0},{"startOffset":3559,"endOffset":3580,"count":0},{"startOffset":3581,"endOffset":3659,"count":0}],"isBlockCoverage":true},{"functionName":"isImmediateFunctionPrototypeMethodCall","ranges":[{"startOffset":4240,"endOffset":4780,"count":2181},{"startOffset":4414,"endOffset":4459,"count":1856},{"startOffset":4459,"endOffset":4607,"count":325},{"startOffset":4607,"endOffset":4669,"count":260},{"startOffset":4670,"endOffset":4755,"count":0}],"isBlockCoverage":true},{"functionName":"ruleApplies","ranges":[{"startOffset":5070,"endOffset":6348,"count":2181},{"startOffset":5174,"endOffset":5950,"count":0},{"startOffset":6003,"endOffset":6033,"count":0},{"startOffset":6035,"endOffset":6080,"count":0},{"startOffset":6143,"endOffset":6179,"count":0},{"startOffset":6181,"endOffset":6226,"count":0},{"startOffset":6295,"endOffset":6337,"count":2168}],"isBlockCoverage":true},{"functionName":"isParenthesised","ranges":[{"startOffset":6586,"endOffset":6688,"count":310}],"isBlockCoverage":true},{"functionName":"isParenthesisedTwice","ranges":[{"startOffset":6939,"endOffset":7046,"count":1}],"isBlockCoverage":true},{"functionName":"hasExcessParens","ranges":[{"startOffset":7318,"endOffset":7423,"count":1074},{"startOffset":7388,"endOffset":7412,"count":1}],"isBlockCoverage":true},{"functionName":"hasDoubleExcessParens","ranges":[{"startOffset":7767,"endOffset":7883,"count":0}],"isBlockCoverage":false},{"functionName":"hasExcessParensWithPrecedence","ranges":[{"startOffset":8535,"endOffset":8918,"count":1107},{"startOffset":8638,"endOffset":8662,"count":87},{"startOffset":8664,"endOffset":8882,"count":1},{"startOffset":8816,"endOffset":8868,"count":0}],"isBlockCoverage":true},{"functionName":"isCondAssignException","ranges":[{"startOffset":9198,"endOffset":9330,"count":2},{"startOffset":9275,"endOffset":9319,"count":0}],"isBlockCoverage":true},{"functionName":"isInReturnStatement","ranges":[{"startOffset":9571,"endOffset":10017,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpressionWithParens","ranges":[{"startOffset":10300,"endOffset":10936,"count":0}],"isBlockCoverage":false},{"functionName":"containsAssignment","ranges":[{"startOffset":11207,"endOffset":11802,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnAssignException","ranges":[{"startOffset":12118,"endOffset":12636,"count":215},{"startOffset":12197,"endOffset":12226,"count":0},{"startOffset":12273,"endOffset":12509,"count":0},{"startOffset":12511,"endOffset":12635,"count":0}],"isBlockCoverage":true},{"functionName":"hasExcessParensNoLineTerminator","ranges":[{"startOffset":13068,"endOffset":13304,"count":79},{"startOffset":13245,"endOffset":13303,"count":0}],"isBlockCoverage":true},{"functionName":"requiresLeadingSpace","ranges":[{"startOffset":13626,"endOffset":14248,"count":0}],"isBlockCoverage":false},{"functionName":"requiresTrailingSpace","ranges":[{"startOffset":14569,"endOffset":15130,"count":0}],"isBlockCoverage":false},{"functionName":"isIIFE","ranges":[{"startOffset":15341,"endOffset":15559,"count":0}],"isBlockCoverage":false},{"functionName":"canBeAssignmentTarget","ranges":[{"startOffset":16070,"endOffset":16211,"count":102},{"startOffset":16133,"endOffset":16200,"count":100},{"startOffset":16164,"endOffset":16199,"count":51}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":16369,"endOffset":17826,"count":0}],"isBlockCoverage":false},{"functionName":"checkArgumentWithPrecedence","ranges":[{"startOffset":18001,"endOffset":18190,"count":67},{"startOffset":18126,"endOffset":18180,"count":0}],"isBlockCoverage":true},{"functionName":"doesMemberExpressionContainCallExpression","ranges":[{"startOffset":18416,"endOffset":18815,"count":0}],"isBlockCoverage":false},{"functionName":"checkCallNew","ranges":[{"startOffset":18977,"endOffset":20499,"count":363},{"startOffset":19121,"endOffset":20330,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20382,"endOffset":20454,"count":425}],"isBlockCoverage":true},{"functionName":"checkBinaryLogical","ranges":[{"startOffset":20666,"endOffset":22150,"count":42},{"startOffset":20973,"endOffset":21057,"count":0},{"startOffset":21109,"endOffset":21195,"count":0},{"startOffset":21261,"endOffset":21720,"count":0},{"startOffset":21787,"endOffset":22140,"count":0}],"isBlockCoverage":true},{"functionName":"checkClass","ranges":[{"startOffset":22372,"endOffset":22943,"count":5},{"startOffset":22434,"endOffset":22473,"count":2},{"startOffset":22473,"endOffset":22785,"count":3},{"startOffset":22802,"endOffset":22842,"count":0},{"startOffset":22877,"endOffset":22933,"count":0}],"isBlockCoverage":true},{"functionName":"checkSpreadOperator","ranges":[{"startOffset":23169,"endOffset":23363,"count":4},{"startOffset":23299,"endOffset":23353,"count":0}],"isBlockCoverage":true},{"functionName":"checkExpressionOrExportStatement","ranges":[{"startOffset":23626,"endOffset":25405,"count":222},{"startOffset":23729,"endOffset":23762,"count":0},{"startOffset":23983,"endOffset":23989,"count":0},{"startOffset":24120,"endOffset":24126,"count":0},{"startOffset":24203,"endOffset":25027,"count":1},{"startOffset":24340,"endOffset":24822,"count":0},{"startOffset":24975,"endOffset":25009,"count":0},{"startOffset":25042,"endOffset":25106,"count":0},{"startOffset":25207,"endOffset":25275,"count":0},{"startOffset":25350,"endOffset":25395,"count":0}],"isBlockCoverage":true},{"functionName":"pathToAncestor","ranges":[{"startOffset":25772,"endOffset":26288,"count":0}],"isBlockCoverage":false},{"functionName":"pathToDescendant","ranges":[{"startOffset":26661,"endOffset":26779,"count":0}],"isBlockCoverage":false},{"functionName":"isSafelyEnclosingInExpression","ranges":[{"startOffset":27338,"endOffset":28268,"count":0}],"isBlockCoverage":false},{"functionName":"startNewReportsBuffering","ranges":[{"startOffset":28571,"endOffset":28768,"count":3}],"isBlockCoverage":true},{"functionName":"endCurrentReportsBuffering","ranges":[{"startOffset":28876,"endOffset":29326,"count":3},{"startOffset":29013,"endOffset":29144,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29228,"endOffset":29264,"count":0}],"isBlockCoverage":false},{"functionName":"isInCurrentReportsBuffer","ranges":[{"startOffset":29573,"endOffset":29693,"count":0}],"isBlockCoverage":false},{"functionName":"removeFromCurrentReportsBuffer","ranges":[{"startOffset":29870,"endOffset":30015,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberExpInNewCallee","ranges":[{"startOffset":30292,"endOffset":30641,"count":648},{"startOffset":30444,"endOffset":30474,"count":0},{"startOffset":30495,"endOffset":30501,"count":0},{"startOffset":30552,"endOffset":30590,"count":122},{"startOffset":30605,"endOffset":30640,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":30672,"endOffset":30880,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30754,"endOffset":30827,"count":18}],"isBlockCoverage":true},{"functionName":"ArrayPattern","ranges":[{"startOffset":30895,"endOffset":31078,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":31093,"endOffset":32064,"count":75},{"startOffset":31176,"endOffset":31223,"count":0},{"startOffset":31288,"endOffset":31336,"count":0},{"startOffset":31355,"endOffset":31402,"count":0},{"startOffset":31461,"endOffset":32050,"count":23},{"startOffset":31736,"endOffset":31783,"count":0},{"startOffset":31785,"endOffset":31868,"count":0},{"startOffset":31966,"endOffset":32032,"count":0}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":32079,"endOffset":32440,"count":60},{"startOffset":32192,"endOffset":32250,"count":0},{"startOffset":32367,"endOffset":32426,"count":0}],"isBlockCoverage":true},{"functionName":"BinaryExpression","ranges":[{"startOffset":32455,"endOffset":32681,"count":22},{"startOffset":32514,"endOffset":32539,"count":0},{"startOffset":32541,"endOffset":32624,"count":0}],"isBlockCoverage":true},{"functionName":"ConditionalExpression","ranges":[{"startOffset":32739,"endOffset":33479,"count":2},{"startOffset":32820,"endOffset":32867,"count":0},{"startOffset":33079,"endOffset":33137,"count":0},{"startOffset":33238,"endOffset":33302,"count":0},{"startOffset":33402,"endOffset":33465,"count":0}],"isBlockCoverage":true},{"functionName":"DoWhileStatement","ranges":[{"startOffset":33494,"endOffset":33671,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":33712,"endOffset":33770,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":33805,"endOffset":33862,"count":222}],"isBlockCoverage":true},{"functionName":"ForInStatement","ranges":[{"startOffset":33877,"endOffset":34785,"count":0}],"isBlockCoverage":false},{"functionName":"ForOfStatement","ranges":[{"startOffset":34800,"endOffset":35519,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":35534,"endOffset":36753,"count":3},{"startOffset":35615,"endOffset":35646,"count":0},{"startOffset":35648,"endOffset":35706,"count":0},{"startOffset":35773,"endOffset":35833,"count":0},{"startOffset":35935,"endOffset":36552,"count":0},{"startOffset":36655,"endOffset":36721,"count":0}],"isBlockCoverage":true},{"functionName":"ForStatement > *.init:exit","ranges":[{"startOffset":36768,"endOffset":39871,"count":3},{"startOffset":37263,"endOffset":39810,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37325,"endOffset":39790,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":39886,"endOffset":40058,"count":38},{"startOffset":39953,"endOffset":39984,"count":0},{"startOffset":39986,"endOffset":40044,"count":0}],"isBlockCoverage":true},{"functionName":"ImportExpression","ranges":[{"startOffset":40073,"endOffset":40440,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":40507,"endOffset":42498,"count":526},{"startOffset":40605,"endOffset":40673,"count":0},{"startOffset":40762,"endOffset":40798,"count":0},{"startOffset":40850,"endOffset":41089,"count":0},{"startOffset":41156,"endOffset":41222,"count":0},{"startOffset":41223,"endOffset":41596,"count":0},{"startOffset":41615,"endOffset":41675,"count":0},{"startOffset":41720,"endOffset":41778,"count":0},{"startOffset":41797,"endOffset":41857,"count":0},{"startOffset":41902,"endOffset":41949,"count":0},{"startOffset":41950,"endOffset":42007,"count":0},{"startOffset":42008,"endOffset":42067,"count":0},{"startOffset":42069,"endOffset":42129,"count":0},{"startOffset":42174,"endOffset":42210,"count":0},{"startOffset":42211,"endOffset":42272,"count":0},{"startOffset":42291,"endOffset":42351,"count":0},{"startOffset":42387,"endOffset":42420,"count":15},{"startOffset":42422,"endOffset":42484,"count":0}],"isBlockCoverage":true},{"functionName":"MethodDefinition[computed=true]","ranges":[{"startOffset":42513,"endOffset":42718,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":42775,"endOffset":43047,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42860,"endOffset":42966,"count":35},{"startOffset":42887,"endOffset":42966,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42997,"endOffset":43031,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPattern","ranges":[{"startOffset":43062,"endOffset":43381,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43144,"endOffset":43321,"count":19},{"startOffset":43273,"endOffset":43298,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43331,"endOffset":43365,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":43396,"endOffset":43683,"count":50},{"startOffset":43448,"endOffset":43669,"count":0}],"isBlockCoverage":true},{"functionName":"PropertyDefinition","ranges":[{"startOffset":43698,"endOffset":44074,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":44089,"endOffset":44311,"count":4},{"startOffset":44240,"endOffset":44297,"count":0}],"isBlockCoverage":true},{"functionName":"ReturnStatement","ranges":[{"startOffset":44326,"endOffset":44880,"count":78},{"startOffset":44470,"endOffset":44517,"count":0},{"startOffset":44553,"endOffset":44639,"count":73},{"startOffset":44640,"endOffset":44802,"count":0},{"startOffset":44804,"endOffset":44866,"count":0}],"isBlockCoverage":true},{"functionName":"SequenceExpression","ranges":[{"startOffset":44895,"endOffset":45151,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":45166,"endOffset":45318,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":45333,"endOffset":45493,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowStatement","ranges":[{"startOffset":45508,"endOffset":45755,"count":6},{"startOffset":45679,"endOffset":45741,"count":0}],"isBlockCoverage":true},{"functionName":"UpdateExpression","ranges":[{"startOffset":45828,"endOffset":46447,"count":4},{"startOffset":45886,"endOffset":45960,"count":0},{"startOffset":46251,"endOffset":46415,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":46520,"endOffset":46910,"count":91},{"startOffset":46598,"endOffset":46672,"count":89},{"startOffset":46673,"endOffset":46819,"count":0},{"startOffset":46838,"endOffset":46896,"count":0}],"isBlockCoverage":true},{"functionName":"WhileStatement","ranges":[{"startOffset":46925,"endOffset":47100,"count":0}],"isBlockCoverage":false},{"functionName":"WithStatement","ranges":[{"startOffset":47115,"endOffset":47261,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":47276,"endOffset":47742,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":48000,"endOffset":48166,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48085,"endOffset":48113,"count":5}],"isBlockCoverage":true},{"functionName":"AssignmentPattern","ranges":[{"startOffset":48181,"endOffset":48549,"count":19},{"startOffset":48328,"endOffset":48381,"count":0},{"startOffset":48481,"endOffset":48535,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1257","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12531,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":12530,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":12510,"count":1},{"startOffset":418,"endOffset":750,"count":0},{"startOffset":785,"endOffset":1118,"count":0},{"startOffset":1436,"endOffset":1845,"count":0},{"startOffset":1973,"endOffset":2311,"count":0},{"startOffset":2415,"endOffset":11941,"count":0},{"startOffset":11955,"endOffset":12311,"count":0},{"startOffset":12360,"endOffset":12423,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1258","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-fallthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5499,"count":1}],"isBlockCoverage":true},{"functionName":"hasFallthroughComment","ranges":[{"startOffset":820,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"isReachable","ranges":[{"startOffset":1761,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"hasBlankLinesBetween","ranges":[{"startOffset":2073,"endOffset":2176,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3292,"endOffset":5495,"count":8},{"startOffset":3799,"endOffset":3891,"count":0}],"isBlockCoverage":true},{"functionName":"onCodePathStart","ranges":[{"startOffset":4007,"endOffset":4092,"count":154}],"isBlockCoverage":true},{"functionName":"onCodePathEnd","ranges":[{"startOffset":4106,"endOffset":4194,"count":154}],"isBlockCoverage":true},{"functionName":"SwitchCase","ranges":[{"startOffset":4209,"endOffset":4781,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase:exit","ranges":[{"startOffset":4796,"endOffset":5478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1259","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3704,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3703,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3683,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":3286,"count":0},{"startOffset":3338,"endOffset":3600,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1260","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-floating-decimal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2396,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1118,"endOffset":2392,"count":8}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":1218,"endOffset":2374,"count":217},{"startOffset":1287,"endOffset":2360,"count":81},{"startOffset":1339,"endOffset":2018,"count":0},{"startOffset":2090,"endOffset":2342,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":1494,"endOffset":1968,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":2251,"endOffset":2292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1261","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-func-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2198,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":784,"endOffset":2194,"count":8}],"isBlockCoverage":true},{"functionName":"checkReference","ranges":[{"startOffset":1005,"endOffset":1400,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1107,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"checkVariable","ranges":[{"startOffset":1599,"endOffset":1770,"count":65},{"startOffset":1692,"endOffset":1760,"count":5}],"isBlockCoverage":true},{"functionName":"checkForFunction","ranges":[{"startOffset":1945,"endOffset":2059,"count":71}],"isBlockCoverage":true}]},{"scriptId":"1262","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-global-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2976,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1158,"endOffset":2972,"count":8},{"startOffset":1254,"endOffset":1274,"count":0}],"isBlockCoverage":true},{"functionName":"checkReference","ranges":[{"startOffset":1602,"endOffset":2376,"count":50},{"startOffset":1753,"endOffset":1791,"count":0},{"startOffset":1792,"endOffset":2089,"count":0},{"startOffset":2104,"endOffset":2366,"count":0}],"isBlockCoverage":true},{"functionName":"checkVariable","ranges":[{"startOffset":2574,"endOffset":2780,"count":6392},{"startOffset":2654,"endOffset":2692,"count":5600},{"startOffset":2694,"endOffset":2770,"count":5600}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":2811,"endOffset":2955,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1263","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-implied-eval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4563,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1047,"endOffset":4559,"count":8}],"isBlockCoverage":true},{"functionName":"isEvaluatedString","ranges":[{"startOffset":1456,"endOffset":1906,"count":1},{"startOffset":1549,"endOffset":1582,"count":0},{"startOffset":1649,"endOffset":1693,"count":0},{"startOffset":1743,"endOffset":1767,"count":0},{"startOffset":1769,"endOffset":1870,"count":0}],"isBlockCoverage":true},{"functionName":"reportImpliedEvalCallExpression","ranges":[{"startOffset":2099,"endOffset":2715,"count":1},{"startOffset":2373,"endOffset":2413,"count":0},{"startOffset":2531,"endOffset":2690,"count":0}],"isBlockCoverage":true},{"functionName":"reportImpliedEvalViaGlobal","ranges":[{"startOffset":2913,"endOffset":3756,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3046,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":3976,"endOffset":4171,"count":325},{"startOffset":4079,"endOffset":4157,"count":1}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":4185,"endOffset":4541,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4320,"endOffset":4383,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4413,"endOffset":4468,"count":24}],"isBlockCoverage":true}]},{"scriptId":"1264","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-import-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7344,"count":1}],"isBlockCoverage":true},{"functionName":"isAssignmentLeft","ranges":[{"startOffset":753,"endOffset":1326,"count":20},{"startOffset":891,"endOffset":926,"count":0},{"startOffset":1069,"endOffset":1105,"count":0},{"startOffset":1106,"endOffset":1159,"count":0},{"startOffset":1272,"endOffset":1307,"count":0}],"isBlockCoverage":true},{"functionName":"isOperandOfMutationUnaryOperator","ranges":[{"startOffset":1532,"endOffset":2019,"count":20},{"startOffset":1654,"endOffset":1667,"count":0},{"startOffset":1792,"endOffset":1839,"count":0},{"startOffset":1909,"endOffset":1952,"count":0},{"startOffset":1953,"endOffset":2000,"count":0}],"isBlockCoverage":true},{"functionName":"isIterationVariable","ranges":[{"startOffset":2221,"endOffset":2514,"count":20},{"startOffset":2356,"endOffset":2391,"count":0},{"startOffset":2460,"endOffset":2495,"count":0}],"isBlockCoverage":true},{"functionName":"isArgumentOfWellKnownMutationFunction","ranges":[{"startOffset":3072,"endOffset":3696,"count":20},{"startOffset":3205,"endOffset":3236,"count":0},{"startOffset":3267,"endOffset":3534,"count":0},{"startOffset":3541,"endOffset":3693,"count":0}],"isBlockCoverage":true},{"functionName":"isMemberWrite","ranges":[{"startOffset":3965,"endOffset":4392,"count":20}],"isBlockCoverage":true},{"functionName":"getWriteNode","ranges":[{"startOffset":4520,"endOffset":4928,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5592,"endOffset":7340,"count":8}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":5639,"endOffset":7322,"count":24},{"startOffset":5791,"endOffset":7308,"count":28},{"startOffset":6064,"endOffset":7290,"count":95},{"startOffset":6481,"endOffset":6546,"count":0},{"startOffset":6642,"endOffset":6921,"count":0},{"startOffset":6950,"endOffset":6981,"count":20},{"startOffset":6983,"endOffset":7268,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5884,"endOffset":5931,"count":28}],"isBlockCoverage":true}]},{"scriptId":"1265","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-invalid-regexp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5038,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1375,"endOffset":5034,"count":8},{"startOffset":1492,"endOffset":1524,"count":0},{"startOffset":1526,"endOffset":1728,"count":0}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":1920,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":2523,"endOffset":2780,"count":0}],"isBlockCoverage":false},{"functionName":"validateRegExpPattern","ranges":[{"startOffset":3035,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"validateRegExpFlags","ranges":[{"startOffset":3498,"endOffset":3758,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression, NewExpression","ranges":[{"startOffset":3789,"endOffset":5017,"count":363},{"startOffset":3883,"endOffset":3915,"count":97},{"startOffset":3916,"endOffset":3947,"count":0},{"startOffset":3996,"endOffset":4140,"count":0},{"startOffset":4142,"endOffset":4337,"count":0},{"startOffset":4360,"endOffset":4768,"count":0},{"startOffset":4800,"endOffset":5003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1266","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3817,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3816,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3796,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":3399,"count":0},{"startOffset":3451,"endOffset":3713,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1267","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-irregular-whitespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9578,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2383,"endOffset":9574,"count":8},{"startOffset":8054,"endOffset":9494,"count":0}],"isBlockCoverage":true},{"functionName":"removeWhitespaceError","ranges":[{"startOffset":3134,"endOffset":3657,"count":0}],"isBlockCoverage":false},{"functionName":"removeInvalidNodeErrorsInIdentifierOrLiteral","ranges":[{"startOffset":3941,"endOffset":4455,"count":0}],"isBlockCoverage":false},{"functionName":"removeInvalidNodeErrorsInTemplateLiteral","ranges":[{"startOffset":4741,"endOffset":5002,"count":0}],"isBlockCoverage":false},{"functionName":"removeInvalidNodeErrorsInComment","ranges":[{"startOffset":5272,"endOffset":5441,"count":0}],"isBlockCoverage":false},{"functionName":"checkForIrregularWhitespace","ranges":[{"startOffset":5634,"endOffset":6555,"count":0}],"isBlockCoverage":false},{"functionName":"checkForIrregularLineTerminators","ranges":[{"startOffset":6754,"endOffset":7753,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":7952,"endOffset":7970,"count":8}],"isBlockCoverage":true},{"functionName":"nodes.Program","ranges":[{"startOffset":8084,"endOffset":8834,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.Program:exit","ranges":[{"startOffset":9125,"endOffset":9483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1268","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4909,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4908,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4888,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":4491,"count":0},{"startOffset":4543,"endOffset":4805,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1269","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":964,"endOffset":1297,"count":8}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":1013,"endOffset":1279,"count":526},{"startOffset":1107,"endOffset":1265,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1270","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-labels.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4480,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1504,"endOffset":4476,"count":8}],"isBlockCoverage":true},{"functionName":"getBodyKind","ranges":[{"startOffset":1886,"endOffset":2136,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowed","ranges":[{"startOffset":2351,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"getKind","ranges":[{"startOffset":2800,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":3328,"endOffset":3546,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement:exit","ranges":[{"startOffset":3561,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"BreakStatement","ranges":[{"startOffset":3879,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"ContinueStatement","ranges":[{"startOffset":4173,"endOffset":4458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1271","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3646,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3645,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3625,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1149,"endOffset":1175,"count":0},{"startOffset":1216,"endOffset":1244,"count":0},{"startOffset":1311,"endOffset":1787,"count":2},{"startOffset":1367,"endOffset":1391,"count":1},{"startOffset":1415,"endOffset":1784,"count":0},{"startOffset":1889,"endOffset":2259,"count":0},{"startOffset":2397,"endOffset":2775,"count":0},{"startOffset":2861,"endOffset":3163,"count":0},{"startOffset":3280,"endOffset":3542,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1272","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-lone-blocks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4210,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":762,"endOffset":4206,"count":8}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":1062,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneBlock","ranges":[{"startOffset":1626,"endOffset":2063,"count":150},{"startOffset":1712,"endOffset":1765,"count":148},{"startOffset":1766,"endOffset":1815,"count":148},{"startOffset":1816,"endOffset":2052,"count":148},{"startOffset":1973,"endOffset":2052,"count":0}],"isBlockCoverage":true},{"functionName":"markLoneBlock","ranges":[{"startOffset":2251,"endOffset":2537,"count":100},{"startOffset":2319,"endOffset":2358,"count":98},{"startOffset":2358,"endOffset":2527,"count":2}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":2630,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"BlockStatement","ranges":[{"startOffset":2969,"endOffset":3123,"count":150},{"startOffset":3035,"endOffset":3105,"count":2}],"isBlockCoverage":true},{"functionName":"BlockStatement:exit","ranges":[{"startOffset":3141,"endOffset":3720,"count":150},{"startOffset":3217,"endOffset":3262,"count":0},{"startOffset":3264,"endOffset":3367,"count":0},{"startOffset":3470,"endOffset":3535,"count":148},{"startOffset":3562,"endOffset":3618,"count":2},{"startOffset":3641,"endOffset":3702,"count":0}],"isBlockCoverage":true},{"functionName":"ruleDef.VariableDeclaration","ranges":[{"startOffset":3779,"endOffset":3932,"count":91},{"startOffset":3836,"endOffset":3860,"count":80}],"isBlockCoverage":true},{"functionName":"ruleDef.FunctionDeclaration","ranges":[{"startOffset":3977,"endOffset":4109,"count":4}],"isBlockCoverage":true}]},{"scriptId":"1273","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-loss-of-precision.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7914,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":773,"endOffset":7910,"count":8}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":1008,"endOffset":1094,"count":165}],"isBlockCoverage":true},{"functionName":"getRaw","ranges":[{"startOffset":1381,"endOffset":1462,"count":44}],"isBlockCoverage":true},{"functionName":"isBaseTen","ranges":[{"startOffset":1666,"endOffset":1889,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1795,"endOffset":1833,"count":264}],"isBlockCoverage":true},{"functionName":"notBaseTenLosesPrecision","ranges":[{"startOffset":2167,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"addDecimalPointToNumber","ranges":[{"startOffset":2871,"endOffset":3004,"count":88}],"isBlockCoverage":true},{"functionName":"removeLeadingZeros","ranges":[{"startOffset":3225,"endOffset":3335,"count":88}],"isBlockCoverage":true},{"functionName":"removeTrailingZeros","ranges":[{"startOffset":3557,"endOffset":3668,"count":88}],"isBlockCoverage":true},{"functionName":"normalizeInteger","ranges":[{"startOffset":4004,"endOffset":4371,"count":88},{"startOffset":4220,"endOffset":4246,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFloat","ranges":[{"startOffset":4710,"endOffset":5418,"count":0}],"isBlockCoverage":false},{"functionName":"convertNumberToScientificNotation","ranges":[{"startOffset":5699,"endOffset":6352,"count":88},{"startOffset":5953,"endOffset":5990,"count":0},{"startOffset":6173,"endOffset":6234,"count":6},{"startOffset":6251,"endOffset":6279,"count":82}],"isBlockCoverage":true},{"functionName":"baseTenLosesPrecision","ranges":[{"startOffset":6626,"endOffset":7186,"count":44},{"startOffset":6895,"endOffset":6939,"count":0}],"isBlockCoverage":true},{"functionName":"losesPrecision","ranges":[{"startOffset":7452,"endOffset":7592,"count":44},{"startOffset":7549,"endOffset":7581,"count":0}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":7624,"endOffset":7893,"count":217},{"startOffset":7671,"endOffset":7688,"count":165},{"startOffset":7689,"endOffset":7712,"count":44},{"startOffset":7714,"endOffset":7879,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1274","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-misleading-character-class.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9287,"count":1}],"isBlockCoverage":true},{"functionName":"iterateCharacterSequence","ranges":[{"startOffset":1026,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"surrogatePairWithoutUFlag","ranges":[{"startOffset":1721,"endOffset":1843,"count":0}],"isBlockCoverage":false},{"functionName":"combiningClass","ranges":[{"startOffset":1850,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"emojiModifier","ranges":[{"startOffset":2046,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"regionalIndicatorSymbol","ranges":[{"startOffset":2231,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"zwj","ranges":[{"startOffset":2445,"endOffset":2715,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3887,"endOffset":9283,"count":8}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":4373,"endOffset":5783,"count":4},{"startOffset":4687,"endOffset":4798,"count":0},{"startOffset":5349,"endOffset":5773,"count":0}],"isBlockCoverage":true},{"functionName":"onCharacterClassEnter","ranges":[{"startOffset":4901,"endOffset":5288,"count":0}],"isBlockCoverage":false},{"functionName":"isValidWithUnicodeFlag","ranges":[{"startOffset":6212,"endOffset":6867,"count":0}],"isBlockCoverage":false},{"functionName":"Literal[regex]","ranges":[{"startOffset":6898,"endOffset":7226,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6990,"endOffset":7210,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":7240,"endOffset":9266,"count":8},{"startOffset":7753,"endOffset":9252,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8089,"endOffset":9210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1275","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/unicode/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1276","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/unicode/is-combining-character.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":449,"count":1}],"isBlockCoverage":true},{"functionName":"isCombiningCharacter","ranges":[{"startOffset":327,"endOffset":447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1277","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/unicode/is-emoji-modifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"isEmojiModifier","ranges":[{"startOffset":284,"endOffset":365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1278","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/unicode/is-regional-indicator-symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":true},{"functionName":"isRegionalIndicatorSymbol","ranges":[{"startOffset":304,"endOffset":395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1279","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/unicode/is-surrogate-pair.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":471,"count":1}],"isBlockCoverage":true},{"functionName":"isSurrogatePair","ranges":[{"startOffset":350,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1280","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-prototype-builtins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2054,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1029,"endOffset":2050,"count":8}],"isBlockCoverage":true},{"functionName":"disallowBuiltIns","ranges":[{"startOffset":1386,"endOffset":1970,"count":325},{"startOffset":1544,"endOffset":1583,"count":65},{"startOffset":1583,"endOffset":1722,"count":260},{"startOffset":1724,"endOffset":1960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1281","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-catch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1742,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":795,"endOffset":1738,"count":8}],"isBlockCoverage":true},{"functionName":"CatchClause","ranges":[{"startOffset":842,"endOffset":1721,"count":1},{"startOffset":1082,"endOffset":1153,"count":0},{"startOffset":1154,"endOffset":1228,"count":0},{"startOffset":1247,"endOffset":1707,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1282","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-mixed-operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7678,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":1452,"endOffset":1762,"count":8},{"startOffset":1607,"endOffset":1623,"count":0}],"isBlockCoverage":true},{"functionName":"includesBothInAGroup","ranges":[{"startOffset":2044,"endOffset":2178,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2120,"endOffset":2174,"count":6},{"startOffset":2150,"endOffset":2174,"count":2}],"isBlockCoverage":true},{"functionName":"getChildNode","ranges":[{"startOffset":2556,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4054,"endOffset":7674,"count":8}],"isBlockCoverage":true},{"functionName":"shouldIgnore","ranges":[{"startOffset":4544,"endOffset":4971,"count":2},{"startOffset":4760,"endOffset":4766,"count":1},{"startOffset":4767,"endOffset":4779,"count":1},{"startOffset":4781,"endOffset":4946,"count":0}],"isBlockCoverage":true},{"functionName":"isMixedWithParent","ranges":[{"startOffset":5357,"endOffset":5556,"count":9},{"startOffset":5469,"endOffset":5531,"count":2}],"isBlockCoverage":true},{"functionName":"getOperatorToken","ranges":[{"startOffset":5829,"endOffset":5970,"count":0}],"isBlockCoverage":false},{"functionName":"reportBothOperators","ranges":[{"startOffset":6313,"endOffset":7094,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":7305,"endOffset":7565,"count":42},{"startOffset":7401,"endOffset":7443,"count":9},{"startOffset":7444,"endOffset":7482,"count":2},{"startOffset":7497,"endOffset":7555,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1283","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6903,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6902,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6882,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1159,"endOffset":1194,"count":0},{"startOffset":1261,"endOffset":1742,"count":2},{"startOffset":1314,"endOffset":1346,"count":1},{"startOffset":1370,"endOffset":1739,"count":0},{"startOffset":1814,"endOffset":1832,"count":0},{"startOffset":1969,"endOffset":4460,"count":3},{"startOffset":2071,"endOffset":2433,"count":0},{"startOffset":2521,"endOffset":3332,"count":12},{"startOffset":2711,"endOffset":2767,"count":234},{"startOffset":2742,"endOffset":2767,"count":12},{"startOffset":2781,"endOffset":3235,"count":0},{"startOffset":3323,"endOffset":3329,"count":0},{"startOffset":3437,"endOffset":3526,"count":12},{"startOffset":3457,"endOffset":3524,"count":30},{"startOffset":3490,"endOffset":3522,"count":0},{"startOffset":3544,"endOffset":3966,"count":0},{"startOffset":3983,"endOffset":4374,"count":0},{"startOffset":4451,"endOffset":4457,"count":0},{"startOffset":4565,"endOffset":4654,"count":3},{"startOffset":4618,"endOffset":4650,"count":0},{"startOffset":4672,"endOffset":5070,"count":0},{"startOffset":5086,"endOffset":5447,"count":0},{"startOffset":5622,"endOffset":6032,"count":0},{"startOffset":6118,"endOffset":6420,"count":0},{"startOffset":6537,"endOffset":6799,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1284","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-mixed-spaces-and-tabs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3671,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":809,"endOffset":3667,"count":8},{"startOffset":954,"endOffset":964,"count":0},{"startOffset":1035,"endOffset":1110,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":1397,"endOffset":3650,"count":8},{"startOffset":2150,"endOffset":2397,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1671,"endOffset":1870,"count":53},{"startOffset":1777,"endOffset":1852,"count":142}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2429,"endOffset":3634,"count":1117},{"startOffset":2528,"endOffset":3616,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1285","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-multi-spaces.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5072,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1441,"endOffset":5068,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1763,"endOffset":1785,"count":8}],"isBlockCoverage":true},{"functionName":"formatReportedCommentValue","ranges":[{"startOffset":2024,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":2550,"endOffset":5050,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2615,"endOffset":5034,"count":4868},{"startOffset":2730,"endOffset":2785,"count":8},{"startOffset":2785,"endOffset":3089,"count":4860},{"startOffset":3089,"endOffset":3166,"count":704},{"startOffset":3189,"endOffset":3244,"count":4860},{"startOffset":3244,"endOffset":3486,"count":0},{"startOffset":3487,"endOffset":3717,"count":0},{"startOffset":3740,"endOffset":5033,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4913,"endOffset":4992,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1286","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5179,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":171,"endOffset":5159,"count":1},{"startOffset":395,"endOffset":660,"count":0},{"startOffset":695,"endOffset":961,"count":0},{"startOffset":1042,"endOffset":4762,"count":0},{"startOffset":4814,"endOffset":5076,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1287","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-multi-str.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":955,"endOffset":1834,"count":8}],"isBlockCoverage":true},{"functionName":"isJSXElement","ranges":[{"startOffset":1215,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":1530,"endOffset":1816,"count":217},{"startOffset":1608,"endOffset":1637,"count":0},{"startOffset":1639,"endOffset":1802,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1288","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-multiple-empty-lines.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6313,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1599,"endOffset":6309,"count":8},{"startOffset":1913,"endOffset":1918,"count":0},{"startOffset":1990,"endOffset":2017,"count":0},{"startOffset":2313,"endOffset":2331,"count":0}],"isBlockCoverage":true},{"functionName":"TemplateLiteral","ranges":[{"startOffset":2600,"endOffset":3054,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2660,"endOffset":3038,"count":8},{"startOffset":2934,"endOffset":3020,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":3068,"endOffset":6292,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3251,"endOffset":3537,"count":1109},{"startOffset":3331,"endOffset":3369,"count":172},{"startOffset":3371,"endOffset":3463,"count":937}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3836,"endOffset":6273,"count":945},{"startOffset":3972,"endOffset":4112,"count":8},{"startOffset":4112,"endOffset":4431,"count":937},{"startOffset":4158,"endOffset":4292,"count":8},{"startOffset":4292,"endOffset":4431,"count":929},{"startOffset":4507,"endOffset":6207,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":5128,"endOffset":6149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1289","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5985,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5984,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":5964,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1192,"endOffset":1678,"count":2},{"startOffset":1242,"endOffset":1261,"count":1},{"startOffset":1263,"endOffset":1282,"count":0},{"startOffset":1306,"endOffset":1675,"count":0},{"startOffset":1747,"endOffset":2101,"count":0},{"startOffset":2199,"endOffset":2545,"count":0},{"startOffset":2621,"endOffset":2964,"count":0},{"startOffset":3114,"endOffset":3132,"count":0},{"startOffset":3230,"endOffset":3588,"count":0},{"startOffset":3664,"endOffset":4016,"count":0},{"startOffset":4184,"endOffset":5147,"count":0},{"startOffset":5200,"endOffset":5502,"count":0},{"startOffset":5619,"endOffset":5881,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1290","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-new.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1054,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":785,"endOffset":1050,"count":8}],"isBlockCoverage":true},{"functionName":"ExpressionStatement > NewExpression","ranges":[{"startOffset":833,"endOffset":1032,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1291","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-new-func.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2977,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1183,"endOffset":2973,"count":8}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":1231,"endOffset":2955,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1483,"endOffset":2921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1292","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-new-object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1567,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":979,"endOffset":1563,"count":8}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":1026,"endOffset":1546,"count":38},{"startOffset":1271,"endOffset":1318,"count":20},{"startOffset":1318,"endOffset":1371,"count":18},{"startOffset":1371,"endOffset":1532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1293","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-new-symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1542,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":755,"endOffset":1538,"count":8}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":803,"endOffset":1520,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1053,"endOffset":1486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1294","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-new-wrappers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1226,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":766,"endOffset":1222,"count":8}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":815,"endOffset":1204,"count":38},{"startOffset":973,"endOffset":1190,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1295","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-obj-calls.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2653,"count":1}],"isBlockCoverage":true},{"functionName":"getReportNodeName","ranges":[{"startOffset":855,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1812,"endOffset":2649,"count":8}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":1860,"endOffset":2632,"count":8},{"startOffset":2073,"endOffset":2231,"count":32},{"startOffset":2321,"endOffset":2618,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1296","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-octal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1025,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":688,"endOffset":1021,"count":8}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":737,"endOffset":1003,"count":217},{"startOffset":804,"endOffset":832,"count":81},{"startOffset":834,"endOffset":989,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1297","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-octal-escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1469,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":776,"endOffset":1465,"count":8}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":825,"endOffset":1446,"count":217},{"startOffset":893,"endOffset":940,"count":109},{"startOffset":940,"endOffset":1211,"count":108},{"startOffset":1211,"endOffset":1432,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1298","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-proto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1233,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":963,"endOffset":1229,"count":8}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":1012,"endOffset":1211,"count":526},{"startOffset":1102,"endOffset":1197,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1299","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-redeclare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5782,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1361,"endOffset":5778,"count":8}],"isBlockCoverage":true},{"functionName":"iterateDeclarations","ranges":[{"startOffset":1897,"endOffset":2862,"count":6716},{"startOffset":1978,"endOffset":2135,"count":0},{"startOffset":2137,"endOffset":2195,"count":0},{"startOffset":2248,"endOffset":2328,"count":253},{"startOffset":2385,"endOffset":2852,"count":0}],"isBlockCoverage":true},{"functionName":"findVariablesInScope","ranges":[{"startOffset":3074,"endOffset":4231,"count":192},{"startOffset":3165,"endOffset":4221,"count":6716},{"startOffset":3418,"endOffset":3760,"count":0},{"startOffset":3781,"endOffset":3803,"count":0},{"startOffset":3973,"endOffset":4221,"count":0}],"isBlockCoverage":true},{"functionName":"checkForBlock","ranges":[{"startOffset":4424,"endOffset":4794,"count":299},{"startOffset":4724,"endOffset":4784,"count":176}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":4825,"endOffset":5357,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1300","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3072,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3052,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1184,"count":0},{"startOffset":1334,"endOffset":1703,"count":0},{"startOffset":1813,"endOffset":2203,"count":0},{"startOffset":2288,"endOffset":2590,"count":0},{"startOffset":2707,"endOffset":2969,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1301","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-regex-spaces.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6075,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":797,"endOffset":902,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1554,"endOffset":6071,"count":8}],"isBlockCoverage":true},{"functionName":"checkRegex","ranges":[{"startOffset":2069,"endOffset":4082,"count":4},{"startOffset":2358,"endOffset":4072,"count":0}],"isBlockCoverage":true},{"functionName":"onCharacterClassEnter","ranges":[{"startOffset":2745,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3227,"endOffset":3276,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":3498,"endOffset":3909,"count":0}],"isBlockCoverage":false},{"functionName":"checkLiteral","ranges":[{"startOffset":4261,"endOffset":4792,"count":217},{"startOffset":4319,"endOffset":4782,"count":4}],"isBlockCoverage":true},{"functionName":"checkFunction","ranges":[{"startOffset":4984,"endOffset":5917,"count":363},{"startOffset":5356,"endOffset":5388,"count":97},{"startOffset":5389,"endOffset":5413,"count":0},{"startOffset":5414,"endOffset":5426,"count":0},{"startOffset":5428,"endOffset":5907,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1302","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-return-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2685,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1434,"endOffset":2681,"count":8},{"startOffset":1495,"endOffset":1513,"count":0}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":1618,"endOffset":2664,"count":60},{"startOffset":1722,"endOffset":1769,"count":0},{"startOffset":2011,"endOffset":2117,"count":0},{"startOffset":2212,"endOffset":2384,"count":0},{"startOffset":2446,"endOffset":2477,"count":0},{"startOffset":2479,"endOffset":2650,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1303","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-self-assign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5627,"count":1}],"isBlockCoverage":true},{"functionName":"eachSelfAssignment","ranges":[{"startOffset":985,"endOffset":3870,"count":48},{"startOffset":1068,"endOffset":1098,"count":0},{"startOffset":1144,"endOffset":1182,"count":6},{"startOffset":1183,"endOffset":1218,"count":0},{"startOffset":1225,"endOffset":1255,"count":0},{"startOffset":1303,"endOffset":1346,"count":0},{"startOffset":1353,"endOffset":2096,"count":0},{"startOffset":2143,"endOffset":2184,"count":0},{"startOffset":2191,"endOffset":2272,"count":0},{"startOffset":2321,"endOffset":2365,"count":0},{"startOffset":2366,"endOffset":2405,"count":0},{"startOffset":2412,"endOffset":3224,"count":0},{"startOffset":3268,"endOffset":3304,"count":0},{"startOffset":3305,"endOffset":3337,"count":0},{"startOffset":3338,"endOffset":3362,"count":0},{"startOffset":3369,"endOffset":3609,"count":0},{"startOffset":3708,"endOffset":3782,"count":42},{"startOffset":3783,"endOffset":3831,"count":2},{"startOffset":3838,"endOffset":3868,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4786,"endOffset":5623,"count":8}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":5105,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":5394,"endOffset":5606,"count":60},{"startOffset":5495,"endOffset":5592,"count":48}],"isBlockCoverage":true}]},{"scriptId":"1304","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3001,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3000,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":2980,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1145,"endOffset":1166,"count":0},{"startOffset":1307,"endOffset":1676,"count":0},{"startOffset":1777,"endOffset":2131,"count":0},{"startOffset":2216,"endOffset":2518,"count":0},{"startOffset":2635,"endOffset":2897,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1305","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-self-compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1852,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":776,"endOffset":1848,"count":8}],"isBlockCoverage":true},{"functionName":"hasSameTokens","ranges":[{"startOffset":1136,"endOffset":1480,"count":12},{"startOffset":1343,"endOffset":1469,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1376,"endOffset":1468,"count":8},{"startOffset":1429,"endOffset":1468,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryExpression","ranges":[{"startOffset":1512,"endOffset":1830,"count":22},{"startOffset":1680,"endOffset":1719,"count":12},{"startOffset":1721,"endOffset":1816,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1306","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-sequences.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4775,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1381,"endOffset":4771,"count":8}],"isBlockCoverage":true},{"functionName":"requiresExtraParens","ranges":[{"startOffset":2546,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesised","ranges":[{"startOffset":2938,"endOffset":3043,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesisedTwice","ranges":[{"startOffset":3267,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":3755,"endOffset":4753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1307","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2803,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2802,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":2782,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2385,"count":0},{"startOffset":2437,"endOffset":2699,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1308","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-shadow-restricted-names.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2155,"count":1}],"isBlockCoverage":true},{"functionName":"safelyShadowsUndefined","ranges":[{"startOffset":476,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1376,"endOffset":2151,"count":8}],"isBlockCoverage":true},{"functionName":"VariableDeclaration, :function, CatchClause","ranges":[{"startOffset":1517,"endOffset":2133,"count":238},{"startOffset":1646,"endOffset":2119,"count":222},{"startOffset":1730,"endOffset":1766,"count":0},{"startOffset":1768,"endOffset":2101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1309","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-sparse-arrays.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1188,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":690,"endOffset":1184,"count":8}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":929,"endOffset":1165,"count":9},{"startOffset":1050,"endOffset":1151,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1310","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-tabs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2419,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1157,"endOffset":2415,"count":8},{"startOffset":1302,"endOffset":1344,"count":0}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":1376,"endOffset":2398,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1438,"endOffset":2382,"count":1117},{"startOffset":1556,"endOffset":2364,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1311","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3121,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3101,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2704,"count":0},{"startOffset":2756,"endOffset":3018,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1312","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-template-curly-in-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1175,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":783,"endOffset":1171,"count":8}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":869,"endOffset":1153,"count":217},{"startOffset":936,"endOffset":961,"count":108},{"startOffset":963,"endOffset":1139,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1313","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-this-before-super.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10235,"count":1}],"isBlockCoverage":true},{"functionName":"isConstructorFunction","ranges":[{"startOffset":813,"endOffset":1013,"count":154},{"startOffset":908,"endOffset":958,"count":67},{"startOffset":959,"endOffset":1004,"count":54}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1658,"endOffset":10231,"count":8}],"isBlockCoverage":true},{"functionName":"isCalled","ranges":[{"startOffset":2683,"endOffset":2798,"count":53}],"isBlockCoverage":true},{"functionName":"isInConstructorOfDerivedClass","ranges":[{"startOffset":2957,"endOffset":3096,"count":514},{"startOffset":3062,"endOffset":3084,"count":71}],"isBlockCoverage":true},{"functionName":"isBeforeCallOfSuper","ranges":[{"startOffset":3275,"endOffset":3471,"count":192},{"startOffset":3377,"endOffset":3446,"count":32}],"isBlockCoverage":true},{"functionName":"setInvalid","ranges":[{"startOffset":3693,"endOffset":4038,"count":0}],"isBlockCoverage":false},{"functionName":"setSuperCalled","ranges":[{"startOffset":4158,"endOffset":4498,"count":3}],"isBlockCoverage":true},{"functionName":"onCodePathStart","ranges":[{"startOffset":4786,"endOffset":5671,"count":154},{"startOffset":4869,"endOffset":5413,"count":5},{"startOffset":5232,"endOffset":5312,"count":3},{"startOffset":5413,"endOffset":5657,"count":149}],"isBlockCoverage":true},{"functionName":"onCodePathEnd","ranges":[{"startOffset":5994,"endOffset":6966,"count":154},{"startOffset":6161,"endOffset":6208,"count":151},{"startOffset":6208,"endOffset":6965,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6252,"endOffset":6950,"count":17},{"startOffset":6408,"endOffset":6822,"count":0},{"startOffset":6866,"endOffset":6932,"count":3}],"isBlockCoverage":true},{"functionName":"onCodePathSegmentStart","ranges":[{"startOffset":7195,"endOffset":7658,"count":316},{"startOffset":7283,"endOffset":7330,"count":294},{"startOffset":7330,"endOffset":7502,"count":22},{"startOffset":7502,"endOffset":7565,"count":19}],"isBlockCoverage":true},{"functionName":"onCodePathSegmentLoop","ranges":[{"startOffset":8068,"endOffset":9023,"count":6},{"startOffset":8217,"endOffset":9022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8410,"endOffset":8990,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":9205,"endOffset":9342,"count":187},{"startOffset":9271,"endOffset":9328,"count":0}],"isBlockCoverage":true},{"functionName":"Super","ranges":[{"startOffset":9524,"endOffset":9680,"count":5},{"startOffset":9583,"endOffset":9607,"count":2},{"startOffset":9609,"endOffset":9666,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression:exit","ranges":[{"startOffset":9849,"endOffset":10025,"count":325},{"startOffset":9928,"endOffset":9952,"count":3},{"startOffset":9954,"endOffset":10011,"count":3}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":10132,"endOffset":10214,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1314","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-throw-literal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1299,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":824,"endOffset":1295,"count":8}],"isBlockCoverage":true},{"functionName":"ThrowStatement","ranges":[{"startOffset":873,"endOffset":1276,"count":6},{"startOffset":955,"endOffset":1041,"count":0},{"startOffset":1088,"endOffset":1261,"count":2},{"startOffset":1150,"endOffset":1243,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1315","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-trailing-spaces.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6797,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1449,"endOffset":6793,"count":8}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":2111,"endOffset":2680,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentLineNumbers","ranges":[{"startOffset":2939,"endOffset":3389,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3049,"endOffset":3350,"count":53},{"startOffset":3139,"endOffset":3165,"count":44},{"startOffset":3186,"endOffset":3208,"count":9},{"startOffset":3283,"endOffset":3336,"count":151}],"isBlockCoverage":true},{"functionName":"checkTrailingSpaces","ranges":[{"startOffset":3619,"endOffset":6775,"count":8},{"startOffset":4380,"endOffset":6761,"count":1117},{"startOffset":4836,"endOffset":4858,"count":1109},{"startOffset":4859,"endOffset":4862,"count":8},{"startOffset":5028,"endOffset":6695,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1316","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3710,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3709,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3689,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":3292,"count":0},{"startOffset":3344,"endOffset":3606,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1317","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-undef.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2303,"count":1}],"isBlockCoverage":true},{"functionName":"hasTypeOfOperator","ranges":[{"startOffset":500,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1567,"endOffset":2299,"count":8},{"startOffset":1668,"endOffset":1694,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":1735,"endOffset":2282,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1865,"endOffset":2266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1318","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3009,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":2989,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2592,"count":0},{"startOffset":2644,"endOffset":2906,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1319","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-undef-init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2399,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":829,"endOffset":2395,"count":8}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":931,"endOffset":2377,"count":91},{"startOffset":1053,"endOffset":1070,"count":89},{"startOffset":1385,"endOffset":1416,"count":0},{"startOffset":1417,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":2363,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":1627,"endOffset":2321,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1320","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unexpected-multiline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4288,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1273,"endOffset":4284,"count":8}],"isBlockCoverage":true},{"functionName":"checkForBreakAfter","ranges":[{"startOffset":1716,"endOffset":2186,"count":282},{"startOffset":2012,"endOffset":2176,"count":0}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":2411,"endOffset":2611,"count":526},{"startOffset":2471,"endOffset":2487,"count":15},{"startOffset":2489,"endOffset":2536,"count":511},{"startOffset":2536,"endOffset":2610,"count":15}],"isBlockCoverage":true},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":2626,"endOffset":3420,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":3435,"endOffset":3646,"count":325},{"startOffset":3506,"endOffset":3522,"count":267},{"startOffset":3524,"endOffset":3571,"count":58},{"startOffset":3571,"endOffset":3645,"count":267}],"isBlockCoverage":true},{"functionName":"BinaryExpression[operator='/'] > BinaryExpression[operator='/'].left","ranges":[{"startOffset":3661,"endOffset":4266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1321","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unmodified-loop-condition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11920,"count":1}],"isBlockCoverage":true},{"functionName":"isWriteReference","ranges":[{"startOffset":1667,"endOffset":1954,"count":9},{"startOffset":1730,"endOffset":1920,"count":3},{"startOffset":1920,"endOffset":1953,"count":6}],"isBlockCoverage":true},{"functionName":"isUnmodified","ranges":[{"startOffset":2198,"endOffset":2266,"count":3}],"isBlockCoverage":true},{"functionName":"isUnmodifiedAndNotBelongToGroup","ranges":[{"startOffset":2564,"endOffset":2672,"count":3},{"startOffset":2650,"endOffset":2668,"count":0}],"isBlockCoverage":true},{"functionName":"isInRange","ranges":[{"startOffset":2930,"endOffset":3085,"count":6}],"isBlockCoverage":true},{"functionName":"ForStatement","ranges":[{"startOffset":3466,"endOffset":3633,"count":3}],"isBlockCoverage":true},{"functionName":"getEncloseFunctionDeclaration","ranges":[{"startOffset":3863,"endOffset":4129,"count":0}],"isBlockCoverage":false},{"functionName":"updateModifiedFlag","ranges":[{"startOffset":4388,"endOffset":5349,"count":3},{"startOffset":5034,"endOffset":5288,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":5982,"endOffset":11916,"count":8}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":6265,"endOffset":6510,"count":0}],"isBlockCoverage":false},{"functionName":"registerConditionsToGroup","ranges":[{"startOffset":6750,"endOffset":7248,"count":3}],"isBlockCoverage":true},{"functionName":"checkConditionsInGroup","ranges":[{"startOffset":7462,"endOffset":7625,"count":3},{"startOffset":7556,"endOffset":7615,"count":0}],"isBlockCoverage":true},{"functionName":"hasDynamicExpressions","ranges":[{"startOffset":7927,"endOffset":8444,"count":13}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":8105,"endOffset":8392,"count":41},{"startOffset":8176,"endOffset":8274,"count":4},{"startOffset":8274,"endOffset":8374,"count":37},{"startOffset":8314,"endOffset":8374,"count":0}],"isBlockCoverage":true},{"functionName":"toLoopCondition","ranges":[{"startOffset":8711,"endOffset":10190,"count":702},{"startOffset":8781,"endOffset":8825,"count":121},{"startOffset":8825,"endOffset":8966,"count":581},{"startOffset":8966,"endOffset":10154,"count":703},{"startOffset":9022,"endOffset":9568,"count":577},{"startOffset":9077,"endOffset":9099,"count":6},{"startOffset":9101,"endOffset":9452,"count":3},{"startOffset":9452,"endOffset":9568,"count":574},{"startOffset":9568,"endOffset":9806,"count":126},{"startOffset":9806,"endOffset":10073,"count":13},{"startOffset":9934,"endOffset":9988,"count":4},{"startOffset":9988,"endOffset":10055,"count":9},{"startOffset":10073,"endOffset":10154,"count":122},{"startOffset":10154,"endOffset":10189,"count":578}],"isBlockCoverage":true},{"functionName":"checkReferences","ranges":[{"startOffset":10469,"endOffset":11442,"count":6723},{"startOffset":10751,"endOffset":10790,"count":6720},{"startOffset":10790,"endOffset":11441,"count":3}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":11473,"endOffset":11899,"count":8},{"startOffset":11658,"endOffset":11793,"count":199}],"isBlockCoverage":true}]},{"scriptId":"1322","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unneeded-ternary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6953,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1713,"endOffset":6949,"count":8},{"startOffset":1774,"endOffset":1779,"count":0}],"isBlockCoverage":true},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":2123,"endOffset":2245,"count":2},{"startOffset":2200,"endOffset":2234,"count":0}],"isBlockCoverage":true},{"functionName":"invertExpression","ranges":[{"startOffset":2540,"endOffset":3439,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanExpression","ranges":[{"startOffset":3703,"endOffset":3918,"count":0}],"isBlockCoverage":false},{"functionName":"matchesDefaultAssignment","ranges":[{"startOffset":4192,"endOffset":4417,"count":2},{"startOffset":4285,"endOffset":4344,"count":1},{"startOffset":4345,"endOffset":4406,"count":0}],"isBlockCoverage":true},{"functionName":"ConditionalExpression","ranges":[{"startOffset":4449,"endOffset":6932,"count":2},{"startOffset":4532,"endOffset":4568,"count":0},{"startOffset":4570,"endOffset":5767,"count":0},{"startOffset":5831,"endOffset":6918,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4734,"endOffset":5725,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":6000,"endOffset":6876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1323","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3097,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3096,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3076,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1157,"endOffset":1190,"count":0},{"startOffset":1343,"endOffset":1712,"count":0},{"startOffset":1825,"endOffset":2227,"count":0},{"startOffset":2312,"endOffset":2614,"count":0},{"startOffset":2731,"endOffset":2993,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1324","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unreachable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8269,"count":1}],"isBlockCoverage":true},{"functionName":"isInitialized","ranges":[{"startOffset":746,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"isUnreachable","ranges":[{"startOffset":1010,"endOffset":1076,"count":628}],"isBlockCoverage":true},{"functionName":"ConsecutiveRange","ranges":[{"startOffset":1179,"endOffset":1308,"count":8}],"isBlockCoverage":true},{"functionName":"get location","ranges":[{"startOffset":1394,"endOffset":1527,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":1610,"endOffset":1681,"count":636},{"startOffset":1658,"endOffset":1673,"count":0}],"isBlockCoverage":true},{"functionName":"contains","ranges":[{"startOffset":1889,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"isConsecutive","ranges":[{"startOffset":2258,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2490,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":2697,"endOffset":2762,"count":636}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3400,"endOffset":8265,"count":8}],"isBlockCoverage":true},{"functionName":"reportIfUnreachable","ranges":[{"startOffset":3821,"endOffset":5127,"count":636},{"startOffset":3913,"endOffset":4008,"count":628},{"startOffset":4010,"endOffset":4641,"count":0},{"startOffset":4839,"endOffset":5040,"count":0}],"isBlockCoverage":true},{"functionName":"onCodePathStart","ranges":[{"startOffset":5205,"endOffset":5290,"count":154}],"isBlockCoverage":true},{"functionName":"onCodePathEnd","ranges":[{"startOffset":5305,"endOffset":5393,"count":154}],"isBlockCoverage":true},{"functionName":"VariableDeclaration","ranges":[{"startOffset":6338,"endOffset":6528,"count":91},{"startOffset":6406,"endOffset":6446,"count":0}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":6812,"endOffset":6883,"count":8}],"isBlockCoverage":true},{"functionName":"MethodDefinition[kind='constructor']","ranges":[{"startOffset":7117,"endOffset":7312,"count":5}],"isBlockCoverage":true},{"functionName":"MethodDefinition[kind='constructor']:exit","ranges":[{"startOffset":7326,"endOffset":8071,"count":5},{"startOffset":7598,"endOffset":7645,"count":0},{"startOffset":7755,"endOffset":7771,"count":3},{"startOffset":7773,"endOffset":8057,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression > Super.callee","ranges":[{"startOffset":8085,"endOffset":8248,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1325","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unreachable-loop.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5148,"count":1}],"isBlockCoverage":true},{"functionName":"isLoopingTarget","ranges":[{"startOffset":671,"endOffset":1238,"count":316},{"startOffset":753,"endOffset":1217,"count":308},{"startOffset":798,"endOffset":865,"count":0},{"startOffset":878,"endOffset":947,"count":0},{"startOffset":960,"endOffset":1059,"count":9},{"startOffset":1028,"endOffset":1042,"count":0},{"startOffset":1043,"endOffset":1057,"count":0},{"startOffset":1072,"endOffset":1094,"count":0},{"startOffset":1107,"endOffset":1174,"count":0},{"startOffset":1217,"endOffset":1237,"count":307}],"isBlockCoverage":true},{"functionName":"getDifference","ranges":[{"startOffset":1524,"endOffset":1610,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1584,"endOffset":1606,"count":40}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2580,"endOffset":5144,"count":8},{"startOffset":2650,"endOffset":2678,"count":0}],"isBlockCoverage":true},{"functionName":"onCodePathStart","ranges":[{"startOffset":2972,"endOffset":3057,"count":154}],"isBlockCoverage":true},{"functionName":"onCodePathEnd","ranges":[{"startOffset":3072,"endOffset":3160,"count":154}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3175,"endOffset":3668,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3559,"endOffset":3587,"count":3}],"isBlockCoverage":true},{"functionName":"onCodePathSegmentStart","ranges":[{"startOffset":3683,"endOffset":3908,"count":316},{"startOffset":3766,"endOffset":3894,"count":3}],"isBlockCoverage":true},{"functionName":"onCodePathSegmentLoop","ranges":[{"startOffset":3923,"endOffset":4947,"count":6},{"startOffset":4709,"endOffset":4745,"count":3},{"startOffset":4747,"endOffset":4933,"count":3}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":4962,"endOffset":5127,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5040,"endOffset":5094,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1326","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4512,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4511,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4491,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":4094,"count":0},{"startOffset":4146,"endOffset":4408,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1327","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unsafe-finally.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3997,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1437,"endOffset":3993,"count":8}],"isBlockCoverage":true},{"functionName":"isFinallyBlock","ranges":[{"startOffset":1685,"endOffset":1816,"count":209},{"startOffset":1772,"endOffset":1805,"count":1}],"isBlockCoverage":true},{"functionName":"isInFinallyBlock","ranges":[{"startOffset":2131,"endOffset":3218,"count":84},{"startOffset":2291,"endOffset":2305,"count":0},{"startOffset":2307,"endOffset":2383,"count":0},{"startOffset":2428,"endOffset":2507,"count":0},{"startOffset":2684,"endOffset":2727,"count":293},{"startOffset":2792,"endOffset":3182,"count":209},{"startOffset":2839,"endOffset":2847,"count":0},{"startOffset":2848,"endOffset":2897,"count":0},{"startOffset":2899,"endOffset":2958,"count":0},{"startOffset":3008,"endOffset":3168,"count":0}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":3410,"endOffset":3815,"count":84},{"startOffset":3485,"endOffset":3805,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1328","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unsafe-negation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4734,"count":1}],"isBlockCoverage":true},{"functionName":"isInOrInstanceOfOperator","ranges":[{"startOffset":723,"endOffset":811,"count":22}],"isBlockCoverage":true},{"functionName":"isOrderingRelationalOperator","ranges":[{"startOffset":1032,"endOffset":1144,"count":0}],"isBlockCoverage":false},{"functionName":"isNegation","ranges":[{"startOffset":1347,"endOffset":1445,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2744,"endOffset":4730,"count":8}],"isBlockCoverage":true},{"functionName":"BinaryExpression","ranges":[{"startOffset":2984,"endOffset":4713,"count":22},{"startOffset":3137,"endOffset":3178,"count":0},{"startOffset":3290,"endOffset":3334,"count":0},{"startOffset":3335,"endOffset":3406,"count":0},{"startOffset":3425,"endOffset":4699,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":3851,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":4444,"endOffset":4601,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1329","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3178,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3177,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3157,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2760,"count":0},{"startOffset":2812,"endOffset":3074,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1330","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unused-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6493,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysTrue","ranges":[{"startOffset":369,"endOffset":411,"count":0}],"isBlockCoverage":false},{"functionName":"alwaysFalse","ranges":[{"startOffset":472,"endOffset":516,"count":222}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1708,"endOffset":6489,"count":8},{"startOffset":1768,"endOffset":1773,"count":0},{"startOffset":1832,"endOffset":1840,"count":0},{"startOffset":1889,"endOffset":1897,"count":0},{"startOffset":1962,"endOffset":1970,"count":0}],"isBlockCoverage":true},{"functionName":"looksLikeDirective","ranges":[{"startOffset":2238,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":2805,"endOffset":3057,"count":0}],"isBlockCoverage":false},{"functionName":"directives","ranges":[{"startOffset":3311,"endOffset":3409,"count":0}],"isBlockCoverage":false},{"functionName":"isDirective","ranges":[{"startOffset":3699,"endOffset":4341,"count":0}],"isBlockCoverage":false},{"functionName":"isDisallowed","ranges":[{"startOffset":4598,"endOffset":4698,"count":223},{"startOffset":4662,"endOffset":4676,"count":222}],"isBlockCoverage":true},{"functionName":"ChainExpression","ranges":[{"startOffset":4845,"endOffset":4944,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":4999,"endOffset":5231,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":5325,"endOffset":5391,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":5405,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":5519,"endOffset":5707,"count":1},{"startOffset":5664,"endOffset":5706,"count":0}],"isBlockCoverage":true},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":5887,"endOffset":5975,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":6070,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":6229,"endOffset":6472,"count":222},{"startOffset":6315,"endOffset":6360,"count":0},{"startOffset":6362,"endOffset":6458,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1331","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5030,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5029,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":5009,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1157,"endOffset":1191,"count":0},{"startOffset":1233,"endOffset":1262,"count":0},{"startOffset":1312,"endOffset":1349,"count":0},{"startOffset":1489,"endOffset":2037,"count":4},{"startOffset":1553,"endOffset":1578,"count":3},{"startOffset":1580,"endOffset":1613,"count":2},{"startOffset":1615,"endOffset":1641,"count":1},{"startOffset":1665,"endOffset":2034,"count":0},{"startOffset":2147,"endOffset":2549,"count":0},{"startOffset":2688,"endOffset":3070,"count":0},{"startOffset":3217,"endOffset":3631,"count":0},{"startOffset":3771,"endOffset":4157,"count":0},{"startOffset":4245,"endOffset":4547,"count":0},{"startOffset":4664,"endOffset":4926,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1332","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-unused-vars.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27552,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2870,"endOffset":27548,"count":8},{"startOffset":3320,"endOffset":3378,"count":0},{"startOffset":3433,"endOffset":3447,"count":0},{"startOffset":3496,"endOffset":3510,"count":0},{"startOffset":3587,"endOffset":3615,"count":0},{"startOffset":3680,"endOffset":3702,"count":0},{"startOffset":3756,"endOffset":3870,"count":0},{"startOffset":3923,"endOffset":4037,"count":0},{"startOffset":4098,"endOffset":4228,"count":0},{"startOffset":4294,"endOffset":4434,"count":0}],"isBlockCoverage":true},{"functionName":"getDefinedMessageData","ranges":[{"startOffset":4797,"endOffset":5764,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedMessageData","ranges":[{"startOffset":6106,"endOffset":6815,"count":0}],"isBlockCoverage":false},{"functionName":"isExported","ranges":[{"startOffset":7343,"endOffset":7830,"count":6374},{"startOffset":7454,"endOffset":7793,"count":5},{"startOffset":7558,"endOffset":7617,"count":0},{"startOffset":7660,"endOffset":7713,"count":0},{"startOffset":7793,"endOffset":7829,"count":6369}],"isBlockCoverage":true},{"functionName":"hasRestSibling","ranges":[{"startOffset":8087,"endOffset":8336,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestSpreadSibling","ranges":[{"startOffset":8600,"endOffset":9043,"count":6369},{"startOffset":9006,"endOffset":9042,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8755,"endOffset":8793,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8869,"endOffset":8913,"count":0}],"isBlockCoverage":false},{"functionName":"isReadRef","ranges":[{"startOffset":9301,"endOffset":9369,"count":272}],"isBlockCoverage":true},{"functionName":"isSelfReference","ranges":[{"startOffset":9703,"endOffset":9995,"count":11},{"startOffset":9803,"endOffset":9958,"count":44},{"startOffset":9854,"endOffset":9906,"count":0}],"isBlockCoverage":true},{"functionName":"getFunctionDefinitions","ranges":[{"startOffset":10238,"endOffset":10921,"count":6533}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10361,"endOffset":10869,"count":141},{"startOffset":10500,"endOffset":10571,"count":4},{"startOffset":10652,"endOffset":10664,"count":104},{"startOffset":10665,"endOffset":10777,"count":102},{"startOffset":10779,"endOffset":10855,"count":9}],"isBlockCoverage":true},{"functionName":"isInside","ranges":[{"startOffset":11248,"endOffset":11428,"count":2}],"isBlockCoverage":true},{"functionName":"isUnusedExpression","ranges":[{"startOffset":11663,"endOffset":12192,"count":17},{"startOffset":11839,"endOffset":12191,"count":0}],"isBlockCoverage":true},{"functionName":"getRhsNode","ranges":[{"startOffset":12874,"endOffset":13734,"count":272},{"startOffset":13164,"endOffset":13188,"count":191},{"startOffset":13376,"endOffset":13404,"count":1},{"startOffset":13406,"endOffset":13457,"count":0},{"startOffset":13514,"endOffset":13559,"count":16},{"startOffset":13560,"endOffset":13597,"count":16},{"startOffset":13598,"endOffset":13632,"count":5},{"startOffset":13647,"endOffset":13699,"count":1},{"startOffset":13699,"endOffset":13733,"count":271}],"isBlockCoverage":true},{"functionName":"isStorableFunction","ranges":[{"startOffset":14384,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideOfStorableFunction","ranges":[{"startOffset":16538,"endOffset":16824,"count":0}],"isBlockCoverage":false},{"functionName":"isReadForItself","ranges":[{"startOffset":17175,"endOffset":18061,"count":272},{"startOffset":17326,"endOffset":18050,"count":160},{"startOffset":17488,"endOffset":17533,"count":12},{"startOffset":17534,"endOffset":17587,"count":1},{"startOffset":17610,"endOffset":17769,"count":159},{"startOffset":17694,"endOffset":17747,"count":0},{"startOffset":17788,"endOffset":18036,"count":159},{"startOffset":17910,"endOffset":17954,"count":1},{"startOffset":17955,"endOffset":18018,"count":0}],"isBlockCoverage":true},{"functionName":"isForInOfRef","ranges":[{"startOffset":18329,"endOffset":19124,"count":272},{"startOffset":18505,"endOffset":18567,"count":83},{"startOffset":18700,"endOffset":19123,"count":0}],"isBlockCoverage":true},{"functionName":"isUsedVariable","ranges":[{"startOffset":19345,"endOffset":20036,"count":6533}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19591,"endOffset":20024,"count":272},{"startOffset":19639,"endOffset":19691,"count":0},{"startOffset":19872,"endOffset":19905,"count":160},{"startOffset":19906,"endOffset":19991,"count":159},{"startOffset":19952,"endOffset":19990,"count":11}],"isBlockCoverage":true},{"functionName":"isAfterLastUsedArg","ranges":[{"startOffset":20329,"endOffset":20737,"count":0}],"isBlockCoverage":false},{"functionName":"collectUnusedVariables","ranges":[{"startOffset":21073,"endOffset":25335,"count":199},{"startOffset":21287,"endOffset":21311,"count":8},{"startOffset":21377,"endOffset":25134,"count":6723},{"startOffset":21557,"endOffset":21602,"count":5},{"startOffset":21604,"endOffset":21661,"count":5},{"startOffset":21661,"endOffset":21818,"count":6718},{"startOffset":21818,"endOffset":21840,"count":6717},{"startOffset":21842,"endOffset":21899,"count":1},{"startOffset":21899,"endOffset":22009,"count":6717},{"startOffset":22009,"endOffset":22041,"count":272},{"startOffset":22042,"endOffset":22078,"count":71},{"startOffset":22080,"endOffset":22137,"count":71},{"startOffset":22137,"endOffset":22292,"count":6646},{"startOffset":22292,"endOffset":24929,"count":254},{"startOffset":22769,"endOffset":22837,"count":0},{"startOffset":22838,"endOffset":22926,"count":0},{"startOffset":22953,"endOffset":23018,"count":0},{"startOffset":23120,"endOffset":23537,"count":1},{"startOffset":23259,"endOffset":23436,"count":0},{"startOffset":23438,"endOffset":23511,"count":0},{"startOffset":23537,"endOffset":23589,"count":253},{"startOffset":23589,"endOffset":24639,"count":112},{"startOffset":23717,"endOffset":23763,"count":98},{"startOffset":23765,"endOffset":23798,"count":58},{"startOffset":23800,"endOffset":23873,"count":0},{"startOffset":24082,"endOffset":24243,"count":0},{"startOffset":24245,"endOffset":24505,"count":0},{"startOffset":24506,"endOffset":24538,"count":0},{"startOffset":24540,"endOffset":24613,"count":0},{"startOffset":24639,"endOffset":24907,"count":141},{"startOffset":24759,"endOffset":24806,"count":0},{"startOffset":24808,"endOffset":24881,"count":0},{"startOffset":24929,"endOffset":24981,"count":6533},{"startOffset":24981,"endOffset":25005,"count":6374},{"startOffset":25006,"endOffset":25040,"count":6369},{"startOffset":25042,"endOffset":25116,"count":6369},{"startOffset":25210,"endOffset":25293,"count":191}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22421,"endOffset":22473,"count":650}],"isBlockCoverage":true},{"functionName":"Program:exit","ranges":[{"startOffset":25555,"endOffset":27530,"count":8},{"startOffset":25736,"endOffset":27516,"count":6369},{"startOffset":25896,"endOffset":26968,"count":0},{"startOffset":27018,"endOffset":27498,"count":0},{"startOffset":27516,"endOffset":27529,"count":6369}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26077,"endOffset":26157,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26651,"endOffset":26671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1333","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":10614,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":10594,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":2},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":2050,"endOffset":2790,"count":4},{"startOffset":2101,"endOffset":2131,"count":3},{"startOffset":2133,"endOffset":2150,"count":3},{"startOffset":2152,"endOffset":2183,"count":2},{"startOffset":2185,"endOffset":2215,"count":1},{"startOffset":2217,"endOffset":2242,"count":1},{"startOffset":2244,"endOffset":2282,"count":0},{"startOffset":2284,"endOffset":2327,"count":0},{"startOffset":2351,"endOffset":2787,"count":0},{"startOffset":2860,"endOffset":2878,"count":0},{"startOffset":3116,"endOffset":3578,"count":0},{"startOffset":3753,"endOffset":4328,"count":0},{"startOffset":4397,"endOffset":4415,"count":0},{"startOffset":4583,"endOffset":4639,"count":3},{"startOffset":4614,"endOffset":4639,"count":1},{"startOffset":4653,"endOffset":5115,"count":0},{"startOffset":5273,"endOffset":5291,"count":0},{"startOffset":5354,"endOffset":5836,"count":0},{"startOffset":5973,"endOffset":6548,"count":0},{"startOffset":6625,"endOffset":6643,"count":0},{"startOffset":6819,"endOffset":6875,"count":2},{"startOffset":6850,"endOffset":6875,"count":1},{"startOffset":6889,"endOffset":7383,"count":0},{"startOffset":7566,"endOffset":8173,"count":0},{"startOffset":8286,"endOffset":8913,"count":0},{"startOffset":8970,"endOffset":9348,"count":0},{"startOffset":9438,"endOffset":9497,"count":0},{"startOffset":9584,"endOffset":10017,"count":0},{"startOffset":10081,"endOffset":10106,"count":0},{"startOffset":10249,"endOffset":10511,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1334","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-use-before-define.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11081,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":626,"endOffset":1193,"count":8},{"startOffset":808,"endOffset":859,"count":0}],"isBlockCoverage":true},{"functionName":"isInRange","ranges":[{"startOffset":1458,"endOffset":1571,"count":201},{"startOffset":1511,"endOffset":1539,"count":199},{"startOffset":1540,"endOffset":1568,"count":199}],"isBlockCoverage":true},{"functionName":"isInClassStaticInitializerRange","ranges":[{"startOffset":1960,"endOffset":2384,"count":0}],"isBlockCoverage":false},{"functionName":"isClassStaticInitializerScope","ranges":[{"startOffset":2680,"endOffset":3038,"count":184},{"startOffset":2773,"endOffset":2801,"count":0},{"startOffset":2853,"endOffset":3017,"count":0}],"isBlockCoverage":true},{"functionName":"isFromSeparateExecutionContext","ranges":[{"startOffset":4107,"endOffset":4548,"count":709},{"startOffset":4355,"endOffset":4527,"count":184},{"startOffset":4421,"endOffset":4479,"count":0},{"startOffset":4527,"endOffset":4547,"count":525}],"isBlockCoverage":true},{"functionName":"isEvaluatedDuringInitialization","ranges":[{"startOffset":5197,"endOffset":6824,"count":462},{"startOffset":5302,"endOffset":5517,"count":119},{"startOffset":5517,"endOffset":5664,"count":343},{"startOffset":5664,"endOffset":6130,"count":0},{"startOffset":6130,"endOffset":6189,"count":343},{"startOffset":6189,"endOffset":6803,"count":413},{"startOffset":6239,"endOffset":6547,"count":182},{"startOffset":6289,"endOffset":6333,"count":0},{"startOffset":6395,"endOffset":6459,"count":0},{"startOffset":6474,"endOffset":6518,"count":0},{"startOffset":6547,"endOffset":6768,"count":231},{"startOffset":6592,"endOffset":6697,"count":19},{"startOffset":6643,"endOffset":6687,"count":0},{"startOffset":6697,"endOffset":6768,"count":212},{"startOffset":6738,"endOffset":6768,"count":161},{"startOffset":6768,"endOffset":6803,"count":70},{"startOffset":6803,"endOffset":6823,"count":343}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":8074,"endOffset":11077,"count":8}],"isBlockCoverage":true},{"functionName":"shouldCheck","ranges":[{"startOffset":8786,"endOffset":9984,"count":702},{"startOffset":8852,"endOffset":8897,"count":121},{"startOffset":8897,"endOffset":9005,"count":581},{"startOffset":9005,"endOffset":9068,"count":0},{"startOffset":9069,"endOffset":9126,"count":0},{"startOffset":9141,"endOffset":9186,"count":0},{"startOffset":9186,"endOffset":9293,"count":581},{"startOffset":9295,"endOffset":9340,"count":50},{"startOffset":9340,"endOffset":9472,"count":531},{"startOffset":9474,"endOffset":9519,"count":4},{"startOffset":9519,"endOffset":9627,"count":527},{"startOffset":9628,"endOffset":9701,"count":285},{"startOffset":9720,"endOffset":9888,"count":247},{"startOffset":9903,"endOffset":9948,"count":65},{"startOffset":9948,"endOffset":9983,"count":462}],"isBlockCoverage":true},{"functionName":"checkReferencesInScope","ranges":[{"startOffset":10193,"endOffset":10944,"count":199}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10291,"endOffset":10868,"count":462},{"startOffset":10615,"endOffset":10854,"count":0}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":10975,"endOffset":11060,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1335","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6926,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6925,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6905,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":2050,"endOffset":2645,"count":3},{"startOffset":2106,"endOffset":2126,"count":2},{"startOffset":2128,"endOffset":2150,"count":1},{"startOffset":2152,"endOffset":2182,"count":0},{"startOffset":2206,"endOffset":2642,"count":0},{"startOffset":2720,"endOffset":2738,"count":0},{"startOffset":2801,"endOffset":3247,"count":0},{"startOffset":3356,"endOffset":3374,"count":0},{"startOffset":3437,"endOffset":3875,"count":0},{"startOffset":3986,"endOffset":4004,"count":0},{"startOffset":4067,"endOffset":4513,"count":0},{"startOffset":4650,"endOffset":5228,"count":0},{"startOffset":5281,"endOffset":5659,"count":0},{"startOffset":5749,"endOffset":5808,"count":0},{"startOffset":5895,"endOffset":6328,"count":0},{"startOffset":6392,"endOffset":6417,"count":0},{"startOffset":6560,"endOffset":6822,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1336","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-call.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3055,"count":1}],"isBlockCoverage":true},{"functionName":"isCallOrNonVariadicApply","ranges":[{"startOffset":543,"endOffset":1026,"count":325},{"startOffset":704,"endOffset":752,"count":260},{"startOffset":753,"endOffset":789,"count":260},{"startOffset":790,"endOffset":1017,"count":260},{"startOffset":848,"endOffset":877,"count":0},{"startOffset":928,"endOffset":958,"count":0},{"startOffset":959,"endOffset":1006,"count":0}],"isBlockCoverage":true},{"functionName":"isValidThisArg","ranges":[{"startOffset":1456,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2288,"endOffset":3051,"count":8}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":2388,"endOffset":3034,"count":325},{"startOffset":2511,"endOffset":2755,"count":0},{"startOffset":2756,"endOffset":2762,"count":0},{"startOffset":2887,"endOffset":3020,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1337","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-computed-key.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6450,"count":1}],"isBlockCoverage":true},{"functionName":"hasUselessComputedKey","ranges":[{"startOffset":2241,"endOffset":3131,"count":50},{"startOffset":2333,"endOffset":2515,"count":0},{"startOffset":2517,"endOffset":2639,"count":0},{"startOffset":2649,"endOffset":2838,"count":0},{"startOffset":2848,"endOffset":3008,"count":0},{"startOffset":3047,"endOffset":3122,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4087,"endOffset":6446,"count":8},{"startOffset":4215,"endOffset":4259,"count":0},{"startOffset":6344,"endOffset":6351,"count":0},{"startOffset":6415,"endOffset":6422,"count":0}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":4431,"endOffset":6021,"count":50},{"startOffset":4499,"endOffset":6011,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4748,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":6225,"endOffset":6243,"count":54}],"isBlockCoverage":true}]},{"scriptId":"1338","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3138,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3137,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3117,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2720,"count":0},{"startOffset":2772,"endOffset":3034,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1339","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5880,"count":1}],"isBlockCoverage":true},{"functionName":"isSingleSuperCall","ranges":[{"startOffset":515,"endOffset":757,"count":3},{"startOffset":589,"endOffset":638,"count":0},{"startOffset":639,"endOffset":694,"count":0},{"startOffset":695,"endOffset":748,"count":0}],"isBlockCoverage":true},{"functionName":"isSimple","ranges":[{"startOffset":1035,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadArguments","ranges":[{"startOffset":1401,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"isValidIdentifierPair","ranges":[{"startOffset":1927,"endOffset":2128,"count":0}],"isBlockCoverage":false},{"functionName":"isValidRestSpreadPair","ranges":[{"startOffset":2413,"endOffset":2646,"count":0}],"isBlockCoverage":false},{"functionName":"isValidPair","ranges":[{"startOffset":2879,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"isPassingThrough","ranges":[{"startOffset":3372,"endOffset":3670,"count":0}],"isBlockCoverage":false},{"functionName":"isRedundantSuperCall","ranges":[{"startOffset":3928,"endOffset":4226,"count":3},{"startOffset":4023,"endOffset":4060,"count":0},{"startOffset":4061,"endOffset":4217,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4830,"endOffset":5876,"count":8}],"isBlockCoverage":true},{"functionName":"checkForConstructor","ranges":[{"startOffset":5015,"endOffset":5791,"count":54},{"startOffset":5097,"endOffset":5136,"count":49},{"startOffset":5136,"endOffset":5341,"count":5},{"startOffset":5341,"endOffset":5380,"count":0},{"startOffset":5380,"endOffset":5569,"count":5},{"startOffset":5569,"endOffset":5609,"count":3},{"startOffset":5610,"endOffset":5631,"count":2},{"startOffset":5633,"endOffset":5781,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1340","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10072,"count":1}],"isBlockCoverage":true},{"functionName":"union","ranges":[{"startOffset":501,"endOffset":617,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":549,"endOffset":611,"count":2}],"isBlockCoverage":true},{"functionName":"parseRegExp","ranges":[{"startOffset":1794,"endOffset":3022,"count":4}],"isBlockCoverage":true},{"functionName":"regExpText.split.reduce.escapeNextChar","ranges":[{"startOffset":1887,"endOffset":2923,"count":31},{"startOffset":1981,"endOffset":2067,"count":0},{"startOffset":2097,"endOffset":2118,"count":0},{"startOffset":2120,"endOffset":2228,"count":0},{"startOffset":2258,"endOffset":2278,"count":0},{"startOffset":2280,"endOffset":2564,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3689,"endOffset":10068,"count":8}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":4085,"endOffset":5121,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":5392,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":6810,"endOffset":9970,"count":225},{"startOffset":6956,"endOffset":6986,"count":8},{"startOffset":6987,"endOffset":7024,"count":8},{"startOffset":7025,"endOffset":7098,"count":8},{"startOffset":7099,"endOffset":7158,"count":0},{"startOffset":7173,"endOffset":7338,"count":0},{"startOffset":7387,"endOffset":7407,"count":117},{"startOffset":7409,"endOffset":8142,"count":116},{"startOffset":7797,"endOffset":7844,"count":0},{"startOffset":7894,"endOffset":7920,"count":8},{"startOffset":7921,"endOffset":7931,"count":108},{"startOffset":8060,"endOffset":8128,"count":0},{"startOffset":8142,"endOffset":9959,"count":109},{"startOffset":8164,"endOffset":9959,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8689,"endOffset":8805,"count":31},{"startOffset":8725,"endOffset":8748,"count":0},{"startOffset":8749,"endOffset":8777,"count":0},{"startOffset":8778,"endOffset":8804,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9346,"endOffset":9410,"count":31},{"startOffset":9382,"endOffset":9409,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9507,"endOffset":9535,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9688,"endOffset":9796,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9888,"endOffset":9943,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1341","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-rename.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6014,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1442,"endOffset":6010,"count":8}],"isBlockCoverage":true},{"functionName":"reportError","ranges":[{"startOffset":2237,"endOffset":3405,"count":0}],"isBlockCoverage":false},{"functionName":"checkDestructured","ranges":[{"startOffset":3590,"endOffset":4572,"count":6},{"startOffset":3662,"endOffset":3701,"count":0},{"startOffset":3755,"endOffset":4562,"count":19},{"startOffset":4033,"endOffset":4054,"count":17},{"startOffset":4055,"endOffset":4075,"count":0},{"startOffset":4126,"endOffset":4212,"count":0},{"startOffset":4214,"endOffset":4272,"count":0},{"startOffset":4353,"endOffset":4379,"count":0},{"startOffset":4380,"endOffset":4401,"count":0},{"startOffset":4444,"endOffset":4548,"count":0}],"isBlockCoverage":true},{"functionName":"checkImport","ranges":[{"startOffset":4741,"endOffset":5103,"count":18},{"startOffset":4800,"endOffset":4839,"count":0},{"startOffset":4921,"endOffset":5003,"count":1},{"startOffset":5018,"endOffset":5093,"count":0}],"isBlockCoverage":true},{"functionName":"checkExport","ranges":[{"startOffset":5272,"endOffset":5657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1342","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4353,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4333,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":3936,"count":0},{"startOffset":3988,"endOffset":4250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1343","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-useless-return.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12159,"count":1}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":724,"endOffset":864,"count":5}],"isBlockCoverage":true},{"functionName":"isRemovable","ranges":[{"startOffset":1057,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"isInFinally","ranges":[{"startOffset":1367,"endOffset":1734,"count":5},{"startOffset":1458,"endOffset":1479,"count":20},{"startOffset":1480,"endOffset":1516,"count":20},{"startOffset":1565,"endOffset":1713,"count":15},{"startOffset":1622,"endOffset":1669,"count":0},{"startOffset":1671,"endOffset":1707,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2367,"endOffset":12155,"count":8}],"isBlockCoverage":true},{"functionName":"isReturned","ranges":[{"startOffset":2884,"endOffset":3022,"count":26}],"isBlockCoverage":true},{"functionName":"getUselessReturns","ranges":[{"startOffset":4104,"endOffset":4926,"count":342},{"startOffset":4254,"endOffset":4270,"count":316},{"startOffset":4321,"endOffset":4880,"count":245},{"startOffset":4363,"endOffset":4781,"count":26},{"startOffset":4781,"endOffset":4880,"count":219}],"isBlockCoverage":true},{"functionName":"markReturnStatementsOnSegmentAsUsed","ranges":[{"startOffset":5793,"endOffset":6439,"count":473},{"startOffset":5885,"endOffset":6211,"count":0},{"startOffset":6320,"endOffset":6391,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6049,"endOffset":6105,"count":0}],"isBlockCoverage":false},{"functionName":"markReturnStatementsOnCurrentSegmentsAsUsed","ranges":[{"startOffset":6946,"endOffset":7156,"count":473}],"isBlockCoverage":true},{"functionName":"onCodePathStart","ranges":[{"startOffset":7425,"endOffset":7622,"count":154}],"isBlockCoverage":true},{"functionName":"onCodePathEnd","ranges":[{"startOffset":7696,"endOffset":8823,"count":154},{"startOffset":7775,"endOffset":8763,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":7963,"endOffset":8721,"count":0}],"isBlockCoverage":false},{"functionName":"onCodePathSegmentStart","ranges":[{"startOffset":8979,"endOffset":9284,"count":316}],"isBlockCoverage":true},{"functionName":"ReturnStatement","ranges":[{"startOffset":9378,"endOffset":10317,"count":78},{"startOffset":9437,"endOffset":9523,"count":73},{"startOffset":9579,"endOffset":9625,"count":5},{"startOffset":9626,"endOffset":9666,"count":5},{"startOffset":9667,"endOffset":9870,"count":5},{"startOffset":9889,"endOffset":9936,"count":73},{"startOffset":9936,"endOffset":10316,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9853,"endOffset":9869,"count":5}],"isBlockCoverage":true}]},{"scriptId":"1344","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/utils/fix-tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4125,"count":1}],"isBlockCoverage":true},{"functionName":"FixTracker","ranges":[{"startOffset":953,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"retainRange","ranges":[{"startOffset":1359,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"retainEnclosingFunction","ranges":[{"startOffset":1851,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"retainSurroundingTokens","ranges":[{"startOffset":2590,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTextRange","ranges":[{"startOffset":3203,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":4004,"endOffset":4092,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1345","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-void.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1758,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":996,"endOffset":1754,"count":8},{"startOffset":1078,"endOffset":1116,"count":0}],"isBlockCoverage":true},{"functionName":"UnaryExpression[operator=\"void\"]","ranges":[{"startOffset":1337,"endOffset":1737,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1346","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3090,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3089,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3069,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2672,"count":0},{"startOffset":2724,"endOffset":2986,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1347","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-whitespace-before-property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3926,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1007,"endOffset":3922,"count":8}],"isBlockCoverage":true},{"functionName":"reportError","ranges":[{"startOffset":1580,"endOffset":2869,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":3089,"endOffset":3905,"count":526},{"startOffset":3255,"endOffset":3302,"count":11},{"startOffset":3302,"endOffset":3339,"count":515},{"startOffset":3339,"endOffset":3559,"count":15},{"startOffset":3532,"endOffset":3535,"count":0},{"startOffset":3559,"endOffset":3732,"count":500},{"startOffset":3732,"endOffset":3810,"count":515},{"startOffset":3810,"endOffset":3891,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1348","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/no-with.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":693,"endOffset":865,"count":8}],"isBlockCoverage":true},{"functionName":"WithStatement","ranges":[{"startOffset":741,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1349","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/object-curly-newline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11719,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptionValue","ranges":[{"startOffset":1311,"endOffset":1939,"count":8},{"startOffset":1505,"endOffset":1547,"count":0},{"startOffset":1576,"endOffset":1641,"count":0},{"startOffset":1843,"endOffset":1883,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":2099,"endOffset":2183,"count":24},{"startOffset":2163,"endOffset":2180,"count":8}],"isBlockCoverage":true},{"functionName":"isNodeSpecificOption","ranges":[{"startOffset":2364,"endOffset":2464,"count":16}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":2987,"endOffset":3625,"count":8},{"startOffset":3104,"endOffset":3453,"count":0}],"isBlockCoverage":true},{"functionName":"areLineBreaksRequired","ranges":[{"startOffset":4055,"endOffset":4690,"count":41},{"startOffset":4184,"endOffset":4216,"count":20},{"startOffset":4218,"endOffset":4269,"count":27},{"startOffset":4269,"endOffset":4472,"count":14},{"startOffset":4620,"endOffset":4677,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4399,"endOffset":4464,"count":18},{"startOffset":4433,"endOffset":4464,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":6298,"endOffset":11715,"count":8}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":6702,"endOffset":11529,"count":57},{"startOffset":6852,"endOffset":6947,"count":24},{"startOffset":6949,"endOffset":7104,"count":47},{"startOffset":7008,"endOffset":7103,"count":6},{"startOffset":7119,"endOffset":7158,"count":16},{"startOffset":7158,"endOffset":7319,"count":41},{"startOffset":7319,"endOffset":7411,"count":0},{"startOffset":7411,"endOffset":8393,"count":41},{"startOffset":8393,"endOffset":9541,"count":13},{"startOffset":8461,"endOffset":8959,"count":0},{"startOffset":9026,"endOffset":9527,"count":0},{"startOffset":9541,"endOffset":11519,"count":28},{"startOffset":9875,"endOffset":9914,"count":0},{"startOffset":9991,"endOffset":10031,"count":2},{"startOffset":10051,"endOffset":10662,"count":0},{"startOffset":10717,"endOffset":10756,"count":0},{"startOffset":10834,"endOffset":10873,"count":26},{"startOffset":10893,"endOffset":11505,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6897,"endOffset":6946,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7053,"endOffset":7102,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7221,"endOffset":7249,"count":55}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7478,"endOffset":7506,"count":69}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":8671,"endOffset":8917,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":9238,"endOffset":9485,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":10263,"endOffset":10620,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":11107,"endOffset":11463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1350","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37964,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":37963,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":37943,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1392,"endOffset":1448,"count":2},{"startOffset":1423,"endOffset":1448,"count":0},{"startOffset":1860,"endOffset":1884,"count":0},{"startOffset":1897,"endOffset":1908,"count":0},{"startOffset":1933,"endOffset":1937,"count":0},{"startOffset":1984,"endOffset":2036,"count":0},{"startOffset":2168,"endOffset":2562,"count":0},{"startOffset":2638,"endOffset":3225,"count":2},{"startOffset":2694,"endOffset":2720,"count":1},{"startOffset":2722,"endOffset":2745,"count":1},{"startOffset":2769,"endOffset":3222,"count":0},{"startOffset":3300,"endOffset":3318,"count":0},{"startOffset":3381,"endOffset":3853,"count":0},{"startOffset":3986,"endOffset":5184,"count":0},{"startOffset":5259,"endOffset":5277,"count":0},{"startOffset":5340,"endOffset":5816,"count":0},{"startOffset":5906,"endOffset":6310,"count":0},{"startOffset":6400,"endOffset":6459,"count":0},{"startOffset":6546,"endOffset":6963,"count":0},{"startOffset":7027,"endOffset":7052,"count":0},{"startOffset":7338,"endOffset":7715,"count":0},{"startOffset":8359,"endOffset":8383,"count":0},{"startOffset":8422,"endOffset":36287,"count":0},{"startOffset":36311,"endOffset":36315,"count":0},{"startOffset":36319,"endOffset":36697,"count":0},{"startOffset":36722,"endOffset":36726,"count":0},{"startOffset":36772,"endOffset":36785,"count":0},{"startOffset":36787,"endOffset":36846,"count":0},{"startOffset":36867,"endOffset":36919,"count":0},{"startOffset":36933,"endOffset":37366,"count":0},{"startOffset":37430,"endOffset":37455,"count":0},{"startOffset":37598,"endOffset":37860,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1351","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/object-curly-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11817,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1497,"endOffset":11813,"count":8}],"isBlockCoverage":true},{"functionName":"isOptionSet","ranges":[{"startOffset":2014,"endOffset":2142,"count":16},{"startOffset":2083,"endOffset":2123,"count":0}],"isBlockCoverage":true},{"functionName":"reportNoBeginningSpace","ranges":[{"startOffset":2808,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"reportNoEndingSpace","ranges":[{"startOffset":3649,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredBeginningSpace","ranges":[{"startOffset":4498,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"reportRequiredEndingSpace","ranges":[{"startOffset":5172,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"validateBraceSpacing","ranges":[{"startOffset":6123,"endOffset":7847,"count":35},{"startOffset":6254,"endOffset":6644,"count":20},{"startOffset":6393,"endOffset":6475,"count":0},{"startOffset":6512,"endOffset":6526,"count":0},{"startOffset":6527,"endOffset":6552,"count":0},{"startOffset":6554,"endOffset":6630,"count":0},{"startOffset":6709,"endOffset":7837,"count":20},{"startOffset":6813,"endOffset":6859,"count":0},{"startOffset":6917,"endOffset":6961,"count":0},{"startOffset":7044,"endOffset":7104,"count":0},{"startOffset":7216,"endOffset":7256,"count":0},{"startOffset":7314,"endOffset":7396,"count":0},{"startOffset":7415,"endOffset":7432,"count":0},{"startOffset":7606,"endOffset":7684,"count":0},{"startOffset":7736,"endOffset":7749,"count":0},{"startOffset":7751,"endOffset":7823,"count":0}],"isBlockCoverage":true},{"functionName":"getClosingBraceOfObject","ranges":[{"startOffset":8344,"endOffset":8562,"count":21}],"isBlockCoverage":true},{"functionName":"checkForObject","ranges":[{"startOffset":8786,"endOffset":9276,"count":27},{"startOffset":8864,"endOffset":8903,"count":6},{"startOffset":8903,"endOffset":9275,"count":21}],"isBlockCoverage":true},{"functionName":"checkForImport","ranges":[{"startOffset":9484,"endOffset":10381,"count":24},{"startOffset":9562,"endOffset":9601,"count":0},{"startOffset":9794,"endOffset":9833,"count":10},{"startOffset":9833,"endOffset":9893,"count":14},{"startOffset":9893,"endOffset":9961,"count":0},{"startOffset":9961,"endOffset":10380,"count":14}],"isBlockCoverage":true},{"functionName":"checkForExport","ranges":[{"startOffset":10594,"endOffset":11261,"count":6},{"startOffset":10711,"endOffset":11260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1352","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4382,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4381,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4361,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1687,"endOffset":3963,"count":0},{"startOffset":4016,"endOffset":4278,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1353","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/object-property-newline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3806,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1398,"endOffset":3802,"count":8},{"startOffset":1704,"endOffset":1727,"count":0}],"isBlockCoverage":true},{"functionName":"ObjectExpression","ranges":[{"startOffset":1812,"endOffset":3785,"count":21},{"startOffset":1926,"endOffset":2428,"count":8},{"startOffset":2270,"endOffset":2406,"count":0},{"startOffset":2513,"endOffset":3771,"count":20},{"startOffset":2836,"endOffset":3753,"count":0},{"startOffset":3771,"endOffset":3784,"count":20}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":3046,"endOffset":3703,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1354","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3950,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3949,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3929,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1320,"count":0},{"startOffset":1387,"endOffset":1901,"count":2},{"startOffset":1462,"endOffset":1505,"count":1},{"startOffset":1529,"endOffset":1898,"count":0},{"startOffset":2022,"endOffset":2468,"count":0},{"startOffset":2625,"endOffset":3079,"count":0},{"startOffset":3165,"endOffset":3467,"count":0},{"startOffset":3584,"endOffset":3846,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1355","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/one-var.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22902,"count":1}],"isBlockCoverage":true},{"functionName":"isInStatementList","ranges":[{"startOffset":710,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3521,"endOffset":22898,"count":8},{"startOffset":3701,"endOffset":3715,"count":0},{"startOffset":3785,"endOffset":4059,"count":0},{"startOffset":4516,"endOffset":4725,"count":0}],"isBlockCoverage":true},{"functionName":"startBlock","ranges":[{"startOffset":5444,"endOffset":5658,"count":307}],"isBlockCoverage":true},{"functionName":"startFunction","ranges":[{"startOffset":5788,"endOffset":5928,"count":154}],"isBlockCoverage":true},{"functionName":"endBlock","ranges":[{"startOffset":6055,"endOffset":6116,"count":307}],"isBlockCoverage":true},{"functionName":"endFunction","ranges":[{"startOffset":6246,"endOffset":6337,"count":154}],"isBlockCoverage":true},{"functionName":"isRequire","ranges":[{"startOffset":6588,"endOffset":6732,"count":226},{"startOffset":6644,"endOffset":6682,"count":222},{"startOffset":6683,"endOffset":6721,"count":83}],"isBlockCoverage":true},{"functionName":"recordTypes","ranges":[{"startOffset":7133,"endOffset":7955,"count":91},{"startOffset":7310,"endOffset":7516,"count":2},{"startOffset":7416,"endOffset":7498,"count":0},{"startOffset":7516,"endOffset":7931,"count":89},{"startOffset":7626,"endOffset":7913,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentScope","ranges":[{"startOffset":8203,"endOffset":8691,"count":91},{"startOffset":8317,"endOffset":8404,"count":0},{"startOffset":8439,"endOffset":8524,"count":11},{"startOffset":8524,"endOffset":8648,"count":80}],"isBlockCoverage":true},{"functionName":"countDeclarations","ranges":[{"startOffset":8996,"endOffset":9397,"count":204},{"startOffset":9216,"endOffset":9279,"count":4},{"startOffset":9279,"endOffset":9346,"count":200}],"isBlockCoverage":true},{"functionName":"hasOnlyOneStatement","ranges":[{"startOffset":9777,"endOffset":11123,"count":91},{"startOffset":9967,"endOffset":9972,"count":0},{"startOffset":10163,"endOffset":10208,"count":0},{"startOffset":10210,"endOffset":10421,"count":0},{"startOffset":10476,"endOffset":10641,"count":2},{"startOffset":10543,"endOffset":10572,"count":0},{"startOffset":10574,"endOffset":10627,"count":0},{"startOffset":10693,"endOffset":10920,"count":89},{"startOffset":10758,"endOffset":10785,"count":0},{"startOffset":10787,"endOffset":10906,"count":0},{"startOffset":10959,"endOffset":10973,"count":0},{"startOffset":10975,"endOffset":11020,"count":0}],"isBlockCoverage":true},{"functionName":"joinDeclarations","ranges":[{"startOffset":11368,"endOffset":12386,"count":0}],"isBlockCoverage":false},{"functionName":"splitDeclarations","ranges":[{"startOffset":12639,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"checkVariableDeclaration","ranges":[{"startOffset":15201,"endOffset":21660,"count":91},{"startOffset":15352,"endOffset":15391,"count":0},{"startOffset":15579,"endOffset":15612,"count":0},{"startOffset":15674,"endOffset":15914,"count":0},{"startOffset":16012,"endOffset":16040,"count":88},{"startOffset":16042,"endOffset":16046,"count":33},{"startOffset":16080,"endOffset":18230,"count":58},{"startOffset":16337,"endOffset":16342,"count":30},{"startOffset":16413,"endOffset":16462,"count":28},{"startOffset":16463,"endOffset":16575,"count":22},{"startOffset":16529,"endOffset":16574,"count":0},{"startOffset":16594,"endOffset":18216,"count":22},{"startOffset":16761,"endOffset":16812,"count":0},{"startOffset":16814,"endOffset":17158,"count":0},{"startOffset":17215,"endOffset":17251,"count":0},{"startOffset":17252,"endOffset":17289,"count":0},{"startOffset":17291,"endOffset":17646,"count":0},{"startOffset":17705,"endOffset":17771,"count":0},{"startOffset":17772,"endOffset":17839,"count":0},{"startOffset":17841,"endOffset":18198,"count":0},{"startOffset":18312,"endOffset":19900,"count":0},{"startOffset":19970,"endOffset":19993,"count":3},{"startOffset":19995,"endOffset":21650,"count":88},{"startOffset":20148,"endOffset":21636,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1356","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10761,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":10760,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":10740,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":3},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":2566,"endOffset":2582,"count":0},{"startOffset":2645,"endOffset":5906,"count":0},{"startOffset":5930,"endOffset":5934,"count":0},{"startOffset":5937,"endOffset":6315,"count":0},{"startOffset":6340,"endOffset":6344,"count":0},{"startOffset":6390,"endOffset":6403,"count":0},{"startOffset":6405,"endOffset":6464,"count":0},{"startOffset":6485,"endOffset":6537,"count":0},{"startOffset":6754,"endOffset":6780,"count":0},{"startOffset":6804,"endOffset":7240,"count":0},{"startOffset":7320,"endOffset":7338,"count":0},{"startOffset":7513,"endOffset":7569,"count":2},{"startOffset":7544,"endOffset":7569,"count":1},{"startOffset":7583,"endOffset":8073,"count":0},{"startOffset":8244,"endOffset":9064,"count":0},{"startOffset":9115,"endOffset":9493,"count":0},{"startOffset":9583,"endOffset":9642,"count":0},{"startOffset":9730,"endOffset":10163,"count":0},{"startOffset":10227,"endOffset":10252,"count":0},{"startOffset":10395,"endOffset":10657,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1357","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/operator-linebreak.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10027,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1800,"endOffset":10023,"count":8},{"startOffset":1921,"endOffset":1931,"count":0},{"startOffset":1976,"endOffset":1981,"count":0},{"startOffset":2071,"endOffset":2075,"count":0},{"startOffset":2108,"endOffset":2131,"count":0},{"startOffset":2133,"endOffset":2188,"count":0},{"startOffset":2220,"endOffset":2243,"count":0},{"startOffset":2245,"endOffset":2300,"count":0}],"isBlockCoverage":true},{"functionName":"getFixer","ranges":[{"startOffset":2850,"endOffset":5781,"count":195}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2918,"endOffset":5770,"count":0}],"isBlockCoverage":false},{"functionName":"validateNode","ranges":[{"startOffset":6090,"endOffset":8796,"count":195},{"startOffset":6887,"endOffset":6901,"count":191},{"startOffset":7185,"endOffset":8786,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6591,"endOffset":6624,"count":195}],"isBlockCoverage":true},{"functionName":"validateBinaryExpression","ranges":[{"startOffset":9021,"endOffset":9131,"count":102}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":9524,"endOffset":9671,"count":91},{"startOffset":9582,"endOffset":9657,"count":89}],"isBlockCoverage":true},{"functionName":"PropertyDefinition","ranges":[{"startOffset":9685,"endOffset":9834,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":9848,"endOffset":10006,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1358","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4760,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4759,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4739,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1946,"endOffset":2315,"count":0},{"startOffset":2393,"endOffset":2411,"count":0},{"startOffset":2577,"endOffset":3435,"count":3},{"startOffset":2781,"endOffset":2837,"count":6},{"startOffset":2812,"endOffset":2837,"count":3},{"startOffset":2851,"endOffset":3338,"count":0},{"startOffset":3426,"endOffset":3432,"count":0},{"startOffset":3485,"endOffset":3860,"count":0},{"startOffset":3974,"endOffset":4276,"count":0},{"startOffset":4394,"endOffset":4656,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1359","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/padded-blocks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10965,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2140,"endOffset":10961,"count":8},{"startOffset":2233,"endOffset":2244,"count":0},{"startOffset":2348,"endOffset":2571,"count":0},{"startOffset":3166,"endOffset":3267,"count":0}],"isBlockCoverage":true},{"functionName":"getOpenBrace","ranges":[{"startOffset":3575,"endOffset":4000,"count":152},{"startOffset":3654,"endOffset":3734,"count":0},{"startOffset":3781,"endOffset":3891,"count":0}],"isBlockCoverage":true},{"functionName":"isComment","ranges":[{"startOffset":4209,"endOffset":4311,"count":304},{"startOffset":4276,"endOffset":4300,"count":303}],"isBlockCoverage":true},{"functionName":"isPaddingBetweenTokens","ranges":[{"startOffset":4582,"endOffset":4708,"count":304}],"isBlockCoverage":true},{"functionName":"getFirstBlockToken","ranges":[{"startOffset":4943,"endOffset":5287,"count":152},{"startOffset":5203,"endOffset":5248,"count":4}],"isBlockCoverage":true},{"functionName":"getLastBlockToken","ranges":[{"startOffset":5521,"endOffset":5858,"count":152},{"startOffset":5776,"endOffset":5820,"count":0}],"isBlockCoverage":true},{"functionName":"requirePaddingFor","ranges":[{"startOffset":6147,"endOffset":6634,"count":152},{"startOffset":6231,"endOffset":6253,"count":147},{"startOffset":6270,"endOffset":6332,"count":147},{"startOffset":6349,"endOffset":6417,"count":0},{"startOffset":6434,"endOffset":6495,"count":5},{"startOffset":6550,"endOffset":6610,"count":0}],"isBlockCoverage":true},{"functionName":"checkPadding","ranges":[{"startOffset":6861,"endOffset":10027,"count":152},{"startOffset":7577,"endOffset":7640,"count":0},{"startOffset":7642,"endOffset":7681,"count":0},{"startOffset":7724,"endOffset":8797,"count":0},{"startOffset":8845,"endOffset":9406,"count":0},{"startOffset":9451,"endOffset":10003,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":8041,"endOffset":8161,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":8569,"endOffset":8688,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":9119,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":9772,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"rule.SwitchStatement","ranges":[{"startOffset":10163,"endOffset":10322,"count":0}],"isBlockCoverage":false},{"functionName":"rule.BlockStatement","ranges":[{"startOffset":10440,"endOffset":10598,"count":150},{"startOffset":10501,"endOffset":10548,"count":3},{"startOffset":10548,"endOffset":10597,"count":147}],"isBlockCoverage":true},{"functionName":"rule.ClassBody","ranges":[{"startOffset":10764,"endOffset":10922,"count":5},{"startOffset":10825,"endOffset":10872,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1360","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9112,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9111,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":9091,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":2},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":2023,"endOffset":2400,"count":0},{"startOffset":2476,"endOffset":3035,"count":3},{"startOffset":2529,"endOffset":2550,"count":2},{"startOffset":2552,"endOffset":2572,"count":1},{"startOffset":2596,"endOffset":3032,"count":0},{"startOffset":3107,"endOffset":3125,"count":0},{"startOffset":3295,"endOffset":3351,"count":2},{"startOffset":3326,"endOffset":3351,"count":1},{"startOffset":3365,"endOffset":3835,"count":0},{"startOffset":3983,"endOffset":4001,"count":0},{"startOffset":4173,"endOffset":4229,"count":2},{"startOffset":4204,"endOffset":4229,"count":1},{"startOffset":4243,"endOffset":4721,"count":0},{"startOffset":4868,"endOffset":4886,"count":0},{"startOffset":5057,"endOffset":5113,"count":2},{"startOffset":5088,"endOffset":5113,"count":1},{"startOffset":5127,"endOffset":5601,"count":0},{"startOffset":5729,"endOffset":6107,"count":0},{"startOffset":6197,"endOffset":6256,"count":0},{"startOffset":6343,"endOffset":6776,"count":0},{"startOffset":6840,"endOffset":6865,"count":0},{"startOffset":7010,"endOffset":8693,"count":0},{"startOffset":8746,"endOffset":9008,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1361","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/prefer-const.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18701,"count":1}],"isBlockCoverage":true},{"functionName":"isInitOfForStatement","ranges":[{"startOffset":1091,"endOffset":1207,"count":11},{"startOffset":1176,"endOffset":1204,"count":3}],"isBlockCoverage":true},{"functionName":"canBecomeVariableDeclaration","ranges":[{"startOffset":1432,"endOffset":1858,"count":0}],"isBlockCoverage":false},{"functionName":"isOuterVariableInDestructing","ranges":[{"startOffset":2185,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"getDestructuringHost","ranges":[{"startOffset":2897,"endOffset":3219,"count":53},{"startOffset":2970,"endOffset":2998,"count":23},{"startOffset":2998,"endOffset":3085,"count":30},{"startOffset":3085,"endOffset":3120,"count":0},{"startOffset":3120,"endOffset":3172,"count":30},{"startOffset":3172,"endOffset":3200,"count":1},{"startOffset":3200,"endOffset":3218,"count":29}],"isBlockCoverage":true},{"functionName":"hasMemberExpressionAssignment","ranges":[{"startOffset":3641,"endOffset":4759,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierIfShouldBeConst","ranges":[{"startOffset":5979,"endOffset":8646,"count":8},{"startOffset":6081,"endOffset":6116,"count":0},{"startOffset":6118,"endOffset":6146,"count":0},{"startOffset":6338,"endOffset":8179,"count":21},{"startOffset":6415,"endOffset":7991,"count":14},{"startOffset":6484,"endOffset":6545,"count":6},{"startOffset":6592,"endOffset":6636,"count":6},{"startOffset":6636,"endOffset":6789,"count":8},{"startOffset":6791,"endOffset":7947,"count":2},{"startOffset":7000,"endOffset":7411,"count":0},{"startOffset":7455,"endOffset":7818,"count":0},{"startOffset":7880,"endOffset":7932,"count":0},{"startOffset":7947,"endOffset":7991,"count":8},{"startOffset":7991,"endOffset":8173,"count":7},{"startOffset":8040,"endOffset":8173,"count":0},{"startOffset":8179,"endOffset":8379,"count":15},{"startOffset":8379,"endOffset":8420,"count":2},{"startOffset":8421,"endOffset":8479,"count":0},{"startOffset":8512,"endOffset":8540,"count":2},{"startOffset":8540,"endOffset":8645,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7146,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7195,"endOffset":7218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7250,"endOffset":7308,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7592,"endOffset":7626,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7658,"endOffset":7716,"count":0}],"isBlockCoverage":false},{"functionName":"groupByDestructuring","ranges":[{"startOffset":9106,"endOffset":10275,"count":8},{"startOffset":9518,"endOffset":10240,"count":45},{"startOffset":9781,"endOffset":9822,"count":0},{"startOffset":10001,"endOffset":10230,"count":21},{"startOffset":10049,"endOffset":10131,"count":0}],"isBlockCoverage":true},{"functionName":"findUp","ranges":[{"startOffset":10663,"endOffset":10877,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":11885,"endOffset":18697,"count":8},{"startOffset":11946,"endOffset":11951,"count":0}],"isBlockCoverage":true},{"functionName":"checkGroup","ranges":[{"startOffset":12920,"endOffset":18301,"count":21},{"startOffset":13118,"endOffset":18291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13198,"endOffset":13249,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15532,"endOffset":15563,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16555,"endOffset":17063,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17237,"endOffset":18275,"count":0}],"isBlockCoverage":false},{"functionName":"Program:exit","ranges":[{"startOffset":18332,"endOffset":18457,"count":8}],"isBlockCoverage":true},{"functionName":"VariableDeclaration","ranges":[{"startOffset":18472,"endOffset":18680,"count":91},{"startOffset":18540,"endOffset":18570,"count":11},{"startOffset":18572,"endOffset":18666,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1362","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4015,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4014,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3994,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1153,"endOffset":1183,"count":0},{"startOffset":1341,"endOffset":1832,"count":2},{"startOffset":1401,"endOffset":1436,"count":1},{"startOffset":1460,"endOffset":1829,"count":0},{"startOffset":2043,"endOffset":2099,"count":2},{"startOffset":2074,"endOffset":2099,"count":1},{"startOffset":2113,"endOffset":2535,"count":0},{"startOffset":2722,"endOffset":3144,"count":0},{"startOffset":3230,"endOffset":3532,"count":0},{"startOffset":3649,"endOffset":3911,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1363","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/prefer-promise-reject-errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5445,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1089,"endOffset":5441,"count":8},{"startOffset":1166,"endOffset":1204,"count":0}],"isBlockCoverage":true},{"functionName":"checkRejectCall","ranges":[{"startOffset":1667,"endOffset":2261,"count":1},{"startOffset":1759,"endOffset":1780,"count":0},{"startOffset":1782,"endOffset":1821,"count":0},{"startOffset":2094,"endOffset":2251,"count":0}],"isBlockCoverage":true},{"functionName":"isPromiseRejectCall","ranges":[{"startOffset":2499,"endOffset":2631,"count":325}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":2896,"endOffset":3042,"count":325},{"startOffset":2966,"endOffset":3028,"count":0}],"isBlockCoverage":true},{"functionName":"NewExpression:exit","ranges":[{"startOffset":3364,"endOffset":5424,"count":38},{"startOffset":3502,"endOffset":3546,"count":8},{"startOffset":3547,"endOffset":3588,"count":8},{"startOffset":3589,"endOffset":3647,"count":8},{"startOffset":3648,"endOffset":3700,"count":1},{"startOffset":3719,"endOffset":5410,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4642,"endOffset":4704,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4926,"endOffset":4945,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5101,"endOffset":5206,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5345,"endOffset":5390,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1364","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3090,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3089,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3069,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2672,"count":0},{"startOffset":2724,"endOffset":2986,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1365","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/prefer-regex-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13519,"count":1}],"isBlockCoverage":true},{"functionName":"isStringLiteral","ranges":[{"startOffset":994,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexLiteral","ranges":[{"startOffset":1264,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticTemplateLiteral","ranges":[{"startOffset":1600,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3801,"endOffset":13515,"count":8}],"isBlockCoverage":true},{"functionName":"isGlobalReference","ranges":[{"startOffset":4226,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"isStringRawTaggedStaticTemplateLiteral","ranges":[{"startOffset":4779,"endOffset":5122,"count":0}],"isBlockCoverage":false},{"functionName":"getStringValue","ranges":[{"startOffset":5315,"endOffset":5722,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticString","ranges":[{"startOffset":5979,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyStaticStringArguments","ranges":[{"startOffset":6427,"endOffset":6684,"count":0}],"isBlockCoverage":false},{"functionName":"isUnnecessarilyWrappedRegexLiteral","ranges":[{"startOffset":6974,"endOffset":7346,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexppEcmaVersion","ranges":[{"startOffset":7617,"endOffset":7861,"count":0}],"isBlockCoverage":false},{"functionName":"resolveEscapes","ranges":[{"startOffset":8078,"endOffset":8745,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":8776,"endOffset":13498,"count":8},{"startOffset":9168,"endOffset":13484,"count":0}],"isBlockCoverage":true},{"functionName":"onCharacterEnter","ranges":[{"startOffset":11544,"endOffset":12283,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":12720,"endOffset":13385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1366","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3161,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3141,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1165,"endOffset":1207,"count":0},{"startOffset":1368,"endOffset":1737,"count":0},{"startOffset":1858,"endOffset":2292,"count":0},{"startOffset":2377,"endOffset":2679,"count":0},{"startOffset":2796,"endOffset":3058,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1367","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/quote-props.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12014,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3029,"endOffset":12010,"count":8},{"startOffset":3131,"endOffset":3161,"count":0},{"startOffset":3215,"endOffset":3258,"count":0},{"startOffset":3301,"endOffset":3330,"count":0}],"isBlockCoverage":true},{"functionName":"isKeyword","ranges":[{"startOffset":3607,"endOffset":3695,"count":0}],"isBlockCoverage":false},{"functionName":"areQuotesRedundant","ranges":[{"startOffset":4171,"endOffset":4558,"count":0}],"isBlockCoverage":false},{"functionName":"getUnquotedKey","ranges":[{"startOffset":4819,"endOffset":4928,"count":0}],"isBlockCoverage":false},{"functionName":"getQuotedKey","ranges":[{"startOffset":5187,"endOffset":5623,"count":0}],"isBlockCoverage":false},{"functionName":"checkUnnecessaryQuotes","ranges":[{"startOffset":5806,"endOffset":7632,"count":50},{"startOffset":5909,"endOffset":5925,"count":38},{"startOffset":5926,"endOffset":5943,"count":38},{"startOffset":5945,"endOffset":5984,"count":40},{"startOffset":5984,"endOffset":6025,"count":10},{"startOffset":6025,"endOffset":6057,"count":0},{"startOffset":6059,"endOffset":6913,"count":0},{"startOffset":6913,"endOffset":7622,"count":10},{"startOffset":6932,"endOffset":6960,"count":0},{"startOffset":6961,"endOffset":6983,"count":0},{"startOffset":6985,"endOffset":7264,"count":0},{"startOffset":7282,"endOffset":7307,"count":0},{"startOffset":7308,"endOffset":7341,"count":0},{"startOffset":7343,"endOffset":7622,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":6805,"endOffset":6857,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":7180,"endOffset":7230,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":7538,"endOffset":7588,"count":0}],"isBlockCoverage":false},{"functionName":"checkOmittedQuotes","ranges":[{"startOffset":7795,"endOffset":8294,"count":0}],"isBlockCoverage":false},{"functionName":"checkConsistency","ranges":[{"startOffset":8601,"endOffset":11416,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":11447,"endOffset":11703,"count":50},{"startOffset":11512,"endOffset":11577,"count":0}],"isBlockCoverage":true},{"functionName":"ObjectExpression","ranges":[{"startOffset":11717,"endOffset":11992,"count":21},{"startOffset":11785,"endOffset":11855,"count":0},{"startOffset":11909,"endOffset":11978,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1368","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8290,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8289,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":8269,"count":1},{"startOffset":418,"endOffset":750,"count":0},{"startOffset":785,"endOffset":1118,"count":0},{"startOffset":1366,"endOffset":1422,"count":2},{"startOffset":1397,"endOffset":1422,"count":1},{"startOffset":1436,"endOffset":1845,"count":0},{"startOffset":1973,"endOffset":2311,"count":0},{"startOffset":2415,"endOffset":7700,"count":0},{"startOffset":7714,"endOffset":8070,"count":0},{"startOffset":8119,"endOffset":8182,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1369","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/quotes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12406,"count":1}],"isBlockCoverage":true},{"functionName":"QUOTE_SETTINGS.double.convert.QUOTE_SETTINGS.single.convert.QUOTE_SETTINGS.backtick.convert","ranges":[{"startOffset":1589,"endOffset":2243,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3645,"endOffset":12402,"count":8},{"startOffset":3762,"endOffset":3773,"count":0},{"startOffset":4083,"endOffset":4126,"count":0}],"isBlockCoverage":true},{"functionName":"isJSXLiteral","ranges":[{"startOffset":5143,"endOffset":5313,"count":108}],"isBlockCoverage":true},{"functionName":"isDirective","ranges":[{"startOffset":5634,"endOffset":5875,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfDirectivePrologue","ranges":[{"startOffset":6269,"endOffset":6921,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedAsNonBacktick","ranges":[{"startOffset":7181,"endOffset":8435,"count":0}],"isBlockCoverage":false},{"functionName":"isUsingFeatureOfTemplateLiteral","ranges":[{"startOffset":8846,"endOffset":9473,"count":3},{"startOffset":8970,"endOffset":8999,"count":0},{"startOffset":9026,"endOffset":9070,"count":0},{"startOffset":9229,"endOffset":9354,"count":0},{"startOffset":9392,"endOffset":9472,"count":0}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":9505,"endOffset":11110,"count":217},{"startOffset":9658,"endOffset":11096,"count":108},{"startOffset":9722,"endOffset":9753,"count":0},{"startOffset":9911,"endOffset":9925,"count":0},{"startOffset":9927,"endOffset":10077,"count":0},{"startOffset":10113,"endOffset":11078,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":10405,"endOffset":11028,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":11125,"endOffset":12384,"count":3},{"startOffset":11496,"endOffset":12383,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":11732,"endOffset":12350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1370","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6126,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6125,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6105,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1954,"endOffset":1979,"count":0},{"startOffset":2365,"endOffset":2389,"count":0},{"startOffset":2402,"endOffset":2413,"count":0},{"startOffset":2438,"endOffset":2442,"count":0},{"startOffset":2678,"endOffset":3233,"count":2},{"startOffset":2736,"endOffset":2770,"count":1},{"startOffset":2794,"endOffset":3230,"count":0},{"startOffset":3310,"endOffset":3328,"count":0},{"startOffset":3391,"endOffset":3845,"count":0},{"startOffset":3968,"endOffset":3986,"count":0},{"startOffset":4049,"endOffset":4543,"count":0},{"startOffset":4631,"endOffset":5009,"count":0},{"startOffset":5113,"endOffset":5117,"count":0},{"startOffset":5132,"endOffset":5526,"count":0},{"startOffset":5590,"endOffset":5615,"count":0},{"startOffset":5760,"endOffset":6022,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1371","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/rest-spread-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4043,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":987,"endOffset":4039,"count":8}],"isBlockCoverage":true},{"functionName":"checkWhiteSpace","ranges":[{"startOffset":1498,"endOffset":3618,"count":8},{"startOffset":1814,"endOffset":2033,"count":4},{"startOffset":1938,"endOffset":2006,"count":2},{"startOffset":2050,"endOffset":2262,"count":4},{"startOffset":2167,"endOffset":2235,"count":2},{"startOffset":2279,"endOffset":2386,"count":0},{"startOffset":2403,"endOffset":2506,"count":0},{"startOffset":2523,"endOffset":2559,"count":0},{"startOffset":2603,"endOffset":2620,"count":0},{"startOffset":2622,"endOffset":3044,"count":0},{"startOffset":3085,"endOffset":3608,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":2875,"endOffset":3010,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":3449,"endOffset":3574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1372","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/semi.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14982,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2343,"endOffset":14978,"count":8},{"startOffset":2720,"endOffset":2753,"count":0},{"startOffset":2813,"endOffset":2856,"count":0}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":3393,"endOffset":4672,"count":0}],"isBlockCoverage":false},{"functionName":"isRedundantSemi","ranges":[{"startOffset":4903,"endOffset":5196,"count":1}],"isBlockCoverage":true},{"functionName":"isEndOfArrowBlock","ranges":[{"startOffset":5459,"endOffset":5839,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClassFieldAsiHazard","ranges":[{"startOffset":6289,"endOffset":7715,"count":1},{"startOffset":6429,"endOffset":6686,"count":0},{"startOffset":6908,"endOffset":6951,"count":0},{"startOffset":6953,"endOffset":7714,"count":0}],"isBlockCoverage":true},{"functionName":"isOnSameLineWithNextToken","ranges":[{"startOffset":7975,"endOffset":8238,"count":1}],"isBlockCoverage":true},{"functionName":"maybeAsiHazardAfter","ranges":[{"startOffset":8501,"endOffset":9266,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAsiHazardBefore","ranges":[{"startOffset":9531,"endOffset":9779,"count":1}],"isBlockCoverage":true},{"functionName":"canRemoveSemicolon","ranges":[{"startOffset":10179,"endOffset":11127,"count":1},{"startOffset":10279,"endOffset":10339,"count":0},{"startOffset":10388,"endOffset":10433,"count":0},{"startOffset":10483,"endOffset":10542,"count":0},{"startOffset":10748,"endOffset":10793,"count":0},{"startOffset":10808,"endOffset":10910,"count":0},{"startOffset":10982,"endOffset":11090,"count":0}],"isBlockCoverage":true},{"functionName":"isLastInOneLinerBlock","ranges":[{"startOffset":11550,"endOffset":12218,"count":0}],"isBlockCoverage":false},{"functionName":"checkForSemicolon","ranges":[{"startOffset":12396,"endOffset":13277,"count":422},{"startOffset":12569,"endOffset":12596,"count":1},{"startOffset":12598,"endOffset":12657,"count":0},{"startOffset":12696,"endOffset":12744,"count":421},{"startOffset":12745,"endOffset":12802,"count":0},{"startOffset":12803,"endOffset":12878,"count":0},{"startOffset":12897,"endOffset":12950,"count":0},{"startOffset":12964,"endOffset":13267,"count":0}],"isBlockCoverage":true},{"functionName":"checkForSemicolonForVariableDeclaration","ranges":[{"startOffset":13468,"endOffset":13809,"count":91},{"startOffset":13614,"endOffset":13637,"count":3},{"startOffset":13639,"endOffset":13728,"count":88},{"startOffset":13704,"endOffset":13727,"count":0},{"startOffset":13743,"endOffset":13799,"count":88}],"isBlockCoverage":true},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":14553,"endOffset":14701,"count":6},{"startOffset":14623,"endOffset":14687,"count":0}],"isBlockCoverage":true},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":14715,"endOffset":14909,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1373","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9348,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9347,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":9327,"count":1},{"startOffset":418,"endOffset":750,"count":0},{"startOffset":785,"endOffset":1118,"count":0},{"startOffset":1436,"endOffset":1845,"count":0},{"startOffset":1975,"endOffset":4220,"count":0},{"startOffset":4273,"endOffset":4611,"count":0},{"startOffset":4715,"endOffset":8758,"count":0},{"startOffset":8772,"endOffset":9128,"count":0},{"startOffset":9177,"endOffset":9240,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1374","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/semi-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8831,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1485,"endOffset":8827,"count":8}],"isBlockCoverage":true},{"functionName":"hasLeadingSpace","ranges":[{"startOffset":2054,"endOffset":2301,"count":7},{"startOffset":2236,"endOffset":2290,"count":6}],"isBlockCoverage":true},{"functionName":"hasTrailingSpace","ranges":[{"startOffset":2536,"endOffset":2779,"count":6}],"isBlockCoverage":true},{"functionName":"isLastTokenInCurrentLine","ranges":[{"startOffset":3013,"endOffset":3213,"count":6}],"isBlockCoverage":true},{"functionName":"isFirstTokenInCurrentLine","ranges":[{"startOffset":3448,"endOffset":3653,"count":7}],"isBlockCoverage":true},{"functionName":"isBeforeClosingParen","ranges":[{"startOffset":3921,"endOffset":4151,"count":6}],"isBlockCoverage":true},{"functionName":"checkSemicolonSpacing","ranges":[{"startOffset":4688,"endOffset":7553,"count":437},{"startOffset":4784,"endOffset":7543,"count":7},{"startOffset":4830,"endOffset":5542,"count":0},{"startOffset":5594,"endOffset":6013,"count":0},{"startOffset":6087,"endOffset":6122,"count":6},{"startOffset":6123,"endOffset":6154,"count":6},{"startOffset":6156,"endOffset":7529,"count":6},{"startOffset":6257,"endOffset":6955,"count":0},{"startOffset":6977,"endOffset":7511,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":5333,"endOffset":5474,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":5846,"endOffset":5963,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":6749,"endOffset":6897,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":7307,"endOffset":7431,"count":0}],"isBlockCoverage":false},{"functionName":"checkNode","ranges":[{"startOffset":7771,"endOffset":7913,"count":431}],"isBlockCoverage":true},{"functionName":"ForStatement","ranges":[{"startOffset":8458,"endOffset":8767,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1375","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/space-before-blocks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7228,"count":1}],"isBlockCoverage":true},{"functionName":"isFunctionBody","ranges":[{"startOffset":720,"endOffset":916,"count":101},{"startOffset":837,"endOffset":875,"count":96},{"startOffset":876,"endOffset":907,"count":71}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2413,"endOffset":7224,"count":8},{"startOffset":2775,"endOffset":3134,"count":0},{"startOffset":3164,"endOffset":3385,"count":0}],"isBlockCoverage":true},{"functionName":"isConflicted","ranges":[{"startOffset":4043,"endOffset":4621,"count":155},{"startOffset":4164,"endOffset":4307,"count":103},{"startOffset":4245,"endOffset":4289,"count":1},{"startOffset":4308,"endOffset":4596,"count":102},{"startOffset":4387,"endOffset":4421,"count":0},{"startOffset":4422,"endOffset":4478,"count":0},{"startOffset":4479,"endOffset":4578,"count":0}],"isBlockCoverage":true},{"functionName":"checkPrecedingSpace","ranges":[{"startOffset":4871,"endOffset":6440,"count":155},{"startOffset":5047,"endOffset":5098,"count":102},{"startOffset":5100,"endOffset":6430,"count":100},{"startOffset":5303,"endOffset":5427,"count":71},{"startOffset":5427,"endOffset":5712,"count":29},{"startOffset":5464,"endOffset":5584,"count":5},{"startOffset":5584,"endOffset":5712,"count":24},{"startOffset":5761,"endOffset":6055,"count":0},{"startOffset":6080,"endOffset":6091,"count":0},{"startOffset":6093,"endOffset":6416,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":5905,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":6240,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpaceBeforeCaseBlock","ranges":[{"startOffset":6667,"endOffset":7040,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1376","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6968,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6967,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6947,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1343,"endOffset":1752,"count":0},{"startOffset":1955,"endOffset":1979,"count":0},{"startOffset":1982,"endOffset":5323,"count":0},{"startOffset":5664,"endOffset":5688,"count":0},{"startOffset":5726,"endOffset":5730,"count":0},{"startOffset":5776,"endOffset":5789,"count":0},{"startOffset":5791,"endOffset":5850,"count":0},{"startOffset":5871,"endOffset":5923,"count":0},{"startOffset":5937,"endOffset":6370,"count":0},{"startOffset":6434,"endOffset":6459,"count":0},{"startOffset":6602,"endOffset":6864,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1377","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/space-before-function-paren.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5921,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1932,"endOffset":5917,"count":8},{"startOffset":2089,"endOffset":2099,"count":0},{"startOffset":2171,"endOffset":2191,"count":0}],"isBlockCoverage":true},{"functionName":"isNamedFunction","ranges":[{"startOffset":2399,"endOffset":2856,"count":71},{"startOffset":2457,"endOffset":2501,"count":5},{"startOffset":2501,"endOffset":2598,"count":66},{"startOffset":2598,"endOffset":2845,"count":12}],"isBlockCoverage":true},{"functionName":"getConfigForFunction","ranges":[{"startOffset":3049,"endOffset":3818,"count":146},{"startOffset":3144,"endOffset":3468,"count":75},{"startOffset":3289,"endOffset":3365,"count":16},{"startOffset":3367,"endOffset":3454,"count":16},{"startOffset":3468,"endOffset":3778,"count":71},{"startOffset":3673,"endOffset":3778,"count":0},{"startOffset":3778,"endOffset":3817,"count":59}],"isBlockCoverage":true},{"functionName":"checkFunction","ranges":[{"startOffset":3976,"endOffset":5736,"count":146},{"startOffset":4116,"endOffset":4155,"count":59},{"startOffset":4155,"endOffset":4463,"count":87},{"startOffset":4465,"endOffset":5418,"count":0},{"startOffset":5418,"endOffset":5726,"count":87},{"startOffset":5440,"endOffset":5470,"count":0},{"startOffset":5472,"endOffset":5726,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4746,"endOffset":5384,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":5646,"endOffset":5692,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1378","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6968,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6967,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6947,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1343,"endOffset":1752,"count":0},{"startOffset":1955,"endOffset":1979,"count":0},{"startOffset":1982,"endOffset":5323,"count":0},{"startOffset":5664,"endOffset":5688,"count":0},{"startOffset":5726,"endOffset":5730,"count":0},{"startOffset":5776,"endOffset":5789,"count":0},{"startOffset":5791,"endOffset":5850,"count":0},{"startOffset":5871,"endOffset":5923,"count":0},{"startOffset":5937,"endOffset":6370,"count":0},{"startOffset":6434,"endOffset":6459,"count":0},{"startOffset":6602,"endOffset":6864,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1379","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/space-in-parens.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10715,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1553,"endOffset":10711,"count":8},{"startOffset":1684,"endOffset":1716,"count":0},{"startOffset":1820,"endOffset":2131,"count":0}],"isBlockCoverage":true},{"functionName":"getExceptions","ranges":[{"startOffset":2329,"endOffset":3014,"count":8},{"startOffset":2459,"endOffset":2544,"count":0},{"startOffset":2588,"endOffset":2673,"count":0},{"startOffset":2715,"endOffset":2800,"count":0},{"startOffset":2833,"endOffset":2918,"count":0}],"isBlockCoverage":true},{"functionName":"isOpenerException","ranges":[{"startOffset":3515,"endOffset":3621,"count":396}],"isBlockCoverage":true},{"functionName":"isCloserException","ranges":[{"startOffset":3880,"endOffset":3986,"count":396}],"isBlockCoverage":true},{"functionName":"openerMissingSpace","ranges":[{"startOffset":4320,"endOffset":4845,"count":527},{"startOffset":4485,"endOffset":4530,"count":0},{"startOffset":4620,"endOffset":4665,"count":131},{"startOffset":4665,"endOffset":4691,"count":396},{"startOffset":4691,"endOffset":4773,"count":0},{"startOffset":4773,"endOffset":4844,"count":396}],"isBlockCoverage":true},{"functionName":"openerRejectsSpace","ranges":[{"startOffset":5176,"endOffset":5805,"count":527},{"startOffset":5337,"endOffset":5382,"count":0},{"startOffset":5440,"endOffset":5485,"count":0},{"startOffset":5625,"endOffset":5804,"count":0}],"isBlockCoverage":true},{"functionName":"closerMissingSpace","ranges":[{"startOffset":6147,"endOffset":6677,"count":527},{"startOffset":6314,"endOffset":6359,"count":0},{"startOffset":6450,"endOffset":6495,"count":131},{"startOffset":6495,"endOffset":6521,"count":396},{"startOffset":6521,"endOffset":6604,"count":0},{"startOffset":6604,"endOffset":6676,"count":396}],"isBlockCoverage":true},{"functionName":"closerRejectsSpace","ranges":[{"startOffset":7015,"endOffset":7546,"count":527},{"startOffset":7178,"endOffset":7223,"count":0},{"startOffset":7364,"endOffset":7545,"count":0}],"isBlockCoverage":true},{"functionName":"checkParenSpaces","ranges":[{"startOffset":7775,"endOffset":10694,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7948,"endOffset":10678,"count":4868},{"startOffset":8217,"endOffset":8256,"count":4341},{"startOffset":8258,"endOffset":8313,"count":3814},{"startOffset":8313,"endOffset":8451,"count":1054},{"startOffset":8451,"endOffset":8490,"count":527},{"startOffset":8492,"endOffset":8869,"count":0},{"startOffset":8869,"endOffset":9005,"count":1054},{"startOffset":9005,"endOffset":9044,"count":527},{"startOffset":9046,"endOffset":9487,"count":0},{"startOffset":9487,"endOffset":9624,"count":1054},{"startOffset":9624,"endOffset":9663,"count":527},{"startOffset":9665,"endOffset":10043,"count":0},{"startOffset":10043,"endOffset":10178,"count":1054},{"startOffset":10178,"endOffset":10217,"count":527},{"startOffset":10219,"endOffset":10660,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":8703,"endOffset":8819,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":9299,"endOffset":9437,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":9876,"endOffset":9993,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":10472,"endOffset":10610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1380","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5260,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5259,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":5239,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1210,"count":2},{"startOffset":1185,"endOffset":1210,"count":1},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1687,"endOffset":4841,"count":0},{"startOffset":4894,"endOffset":5156,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1381","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/space-infix-ops.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6491,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1094,"endOffset":6487,"count":8},{"startOffset":1157,"endOffset":1196,"count":0}],"isBlockCoverage":true},{"functionName":"getFirstNonSpacedToken","ranges":[{"startOffset":1616,"endOffset":2097,"count":214},{"startOffset":2013,"endOffset":2061,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1741,"endOffset":1768,"count":214}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":2355,"endOffset":3318,"count":0}],"isBlockCoverage":false},{"functionName":"checkBinary","ranges":[{"startOffset":3500,"endOffset":4067,"count":121},{"startOffset":3585,"endOffset":3611,"count":0},{"startOffset":3766,"endOffset":3772,"count":19},{"startOffset":3896,"endOffset":4057,"count":0}],"isBlockCoverage":true},{"functionName":"checkConditional","ranges":[{"startOffset":4242,"endOffset":4715,"count":2},{"startOffset":4524,"endOffset":4594,"count":0},{"startOffset":4636,"endOffset":4705,"count":0}],"isBlockCoverage":true},{"functionName":"checkVar","ranges":[{"startOffset":4889,"endOffset":5292,"count":91},{"startOffset":4969,"endOffset":4993,"count":0},{"startOffset":5074,"endOffset":5282,"count":89},{"startOffset":5200,"endOffset":5268,"count":0}],"isBlockCoverage":true},{"functionName":"PropertyDefinition","ranges":[{"startOffset":5597,"endOffset":6469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1382","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3034,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3033,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3013,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2616,"count":0},{"startOffset":2668,"endOffset":2930,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1383","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/space-unary-ops.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12602,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2140,"endOffset":12598,"count":8},{"startOffset":2201,"endOffset":2236,"count":0}],"isBlockCoverage":true},{"functionName":"isFirstBangInBangBangExpression","ranges":[{"startOffset":2717,"endOffset":2980,"count":0}],"isBlockCoverage":false},{"functionName":"overrideExistsForOperator","ranges":[{"startOffset":3213,"endOffset":3376,"count":105},{"startOffset":3297,"endOffset":3365,"count":0}],"isBlockCoverage":true},{"functionName":"overrideEnforcesSpaces","ranges":[{"startOffset":3621,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"verifyWordHasSpaces","ranges":[{"startOffset":4102,"endOffset":4589,"count":86},{"startOffset":4232,"endOffset":4579,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4440,"endOffset":4545,"count":0}],"isBlockCoverage":false},{"functionName":"verifyWordDoesntHaveSpaces","ranges":[{"startOffset":4978,"endOffset":5636,"count":0}],"isBlockCoverage":false},{"functionName":"checkUnaryWordOperatorForSpaces","ranges":[{"startOffset":6016,"endOffset":6644,"count":86},{"startOffset":6145,"endOffset":6418,"count":0},{"startOffset":6532,"endOffset":6634,"count":0}],"isBlockCoverage":true},{"functionName":"checkForSpacesAfterYield","ranges":[{"startOffset":6813,"endOffset":7129,"count":0}],"isBlockCoverage":false},{"functionName":"checkForSpacesAfterAwait","ranges":[{"startOffset":7314,"endOffset":7511,"count":47}],"isBlockCoverage":true},{"functionName":"verifyNonWordsHaveSpaces","ranges":[{"startOffset":7865,"endOffset":9080,"count":0}],"isBlockCoverage":false},{"functionName":"verifyNonWordsDontHaveSpaces","ranges":[{"startOffset":9440,"endOffset":10762,"count":19},{"startOffset":9540,"endOffset":10224,"count":15},{"startOffset":9606,"endOffset":10210,"count":0},{"startOffset":10224,"endOffset":10752,"count":4},{"startOffset":10296,"endOffset":10738,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":9867,"endOffset":10168,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":10559,"endOffset":10696,"count":0}],"isBlockCoverage":false},{"functionName":"checkForSpaces","ranges":[{"startOffset":10966,"endOffset":12130,"count":58},{"startOffset":11058,"endOffset":11073,"count":4},{"startOffset":11090,"endOffset":11125,"count":4},{"startOffset":11142,"endOffset":11178,"count":54},{"startOffset":11313,"endOffset":11327,"count":20},{"startOffset":11329,"endOffset":11361,"count":54},{"startOffset":11363,"endOffset":11500,"count":39},{"startOffset":11500,"endOffset":11543,"count":19},{"startOffset":11543,"endOffset":11560,"count":15},{"startOffset":11561,"endOffset":11578,"count":4},{"startOffset":11634,"endOffset":11906,"count":0},{"startOffset":11906,"endOffset":12120,"count":19},{"startOffset":11934,"endOffset":12022,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1384","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4953,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4932,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1145,"endOffset":1166,"count":0},{"startOffset":1204,"endOffset":1229,"count":0},{"startOffset":1296,"endOffset":1789,"count":2},{"startOffset":1348,"endOffset":1369,"count":1},{"startOffset":1371,"endOffset":1393,"count":0},{"startOffset":1417,"endOffset":1786,"count":0},{"startOffset":1887,"endOffset":2241,"count":0},{"startOffset":2376,"endOffset":2742,"count":0},{"startOffset":2869,"endOffset":4116,"count":0},{"startOffset":4168,"endOffset":4470,"count":0},{"startOffset":4587,"endOffset":4849,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1385","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/spaced-comment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13073,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":521,"endOffset":580,"count":224}],"isBlockCoverage":true},{"functionName":"escapeAndRepeat","ranges":[{"startOffset":751,"endOffset":810,"count":16}],"isBlockCoverage":true},{"functionName":"parseMarkersOption","ranges":[{"startOffset":1008,"endOffset":1189,"count":16},{"startOffset":1166,"endOffset":1188,"count":0}],"isBlockCoverage":true},{"functionName":"createExceptionsPattern","ranges":[{"startOffset":1438,"endOffset":2501,"count":32},{"startOffset":1920,"endOffset":2478,"count":16},{"startOffset":2195,"endOffset":2397,"count":0}],"isBlockCoverage":true},{"functionName":"createAlwaysStylePattern","ranges":[{"startOffset":2882,"endOffset":3588,"count":16},{"startOffset":3249,"endOffset":3319,"count":0}],"isBlockCoverage":true},{"functionName":"createNeverStylePattern","ranges":[{"startOffset":3865,"endOffset":4014,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":7364,"endOffset":13069,"count":8},{"startOffset":7760,"endOffset":7765,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7884,"endOffset":8748,"count":16},{"startOffset":7986,"endOffset":8003,"count":0},{"startOffset":8004,"endOffset":8009,"count":0},{"startOffset":8083,"endOffset":8103,"count":8},{"startOffset":8104,"endOffset":8109,"count":8},{"startOffset":8331,"endOffset":8365,"count":0},{"startOffset":8479,"endOffset":8513,"count":0}],"isBlockCoverage":true},{"functionName":"reportBegin","ranges":[{"startOffset":9169,"endOffset":10033,"count":0}],"isBlockCoverage":false},{"functionName":"reportEnd","ranges":[{"startOffset":10369,"endOffset":10903,"count":0}],"isBlockCoverage":false},{"functionName":"checkCommentForSpace","ranges":[{"startOffset":11074,"endOffset":12835,"count":53},{"startOffset":11256,"endOffset":11262,"count":44},{"startOffset":11263,"endOffset":11269,"count":9},{"startOffset":11394,"endOffset":11425,"count":51},{"startOffset":11427,"endOffset":11466,"count":2},{"startOffset":11466,"endOffset":12306,"count":51},{"startOffset":11683,"endOffset":12148,"count":0},{"startOffset":12199,"endOffset":12211,"count":44},{"startOffset":12213,"endOffset":12292,"count":0},{"startOffset":12306,"endOffset":12825,"count":0}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":12866,"endOffset":13052,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12973,"endOffset":13006,"count":53}],"isBlockCoverage":true}]},{"scriptId":"1386","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":14157,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":14137,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1868,"endOffset":2380,"count":2},{"startOffset":1966,"endOffset":1984,"count":1},{"startOffset":2008,"endOffset":2377,"count":0},{"startOffset":2474,"endOffset":3624,"count":0},{"startOffset":3714,"endOffset":4840,"count":0},{"startOffset":4909,"endOffset":4927,"count":0},{"startOffset":5194,"endOffset":5600,"count":0},{"startOffset":5697,"endOffset":6953,"count":0},{"startOffset":7025,"endOffset":7043,"count":0},{"startOffset":7180,"endOffset":7761,"count":5},{"startOffset":7259,"endOffset":7702,"count":0},{"startOffset":7752,"endOffset":7758,"count":0},{"startOffset":7793,"endOffset":8211,"count":0},{"startOffset":8326,"endOffset":8681,"count":0},{"startOffset":8815,"endOffset":8833,"count":0},{"startOffset":8970,"endOffset":8995,"count":0},{"startOffset":9062,"endOffset":9598,"count":3},{"startOffset":9119,"endOffset":9139,"count":2},{"startOffset":9141,"endOffset":9162,"count":1},{"startOffset":9186,"endOffset":9595,"count":0},{"startOffset":9674,"endOffset":9692,"count":0},{"startOffset":9908,"endOffset":10367,"count":0},{"startOffset":10417,"endOffset":10423,"count":0},{"startOffset":10458,"endOffset":10892,"count":0},{"startOffset":11028,"endOffset":11046,"count":0},{"startOffset":11183,"endOffset":11768,"count":6},{"startOffset":11262,"endOffset":11709,"count":0},{"startOffset":11759,"endOffset":11765,"count":0},{"startOffset":11800,"endOffset":12222,"count":0},{"startOffset":12386,"endOffset":12809,"count":0},{"startOffset":12896,"endOffset":13255,"count":0},{"startOffset":13372,"endOffset":13674,"count":0},{"startOffset":13792,"endOffset":14054,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1387","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/symbol-description.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2021,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":964,"endOffset":2017,"count":8}],"isBlockCoverage":true},{"functionName":"checkArgument","ranges":[{"startOffset":1221,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"Program:exit","ranges":[{"startOffset":1474,"endOffset":1999,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1732,"endOffset":1965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1388","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/template-curly-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4767,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1280,"endOffset":4763,"count":8}],"isBlockCoverage":true},{"functionName":"checkSpacingBefore","ranges":[{"startOffset":1597,"endOffset":2975,"count":8},{"startOffset":1680,"endOffset":1805,"count":3},{"startOffset":1805,"endOffset":2034,"count":5},{"startOffset":2034,"endOffset":2073,"count":0},{"startOffset":2073,"endOffset":2098,"count":5},{"startOffset":2098,"endOffset":2110,"count":0},{"startOffset":2112,"endOffset":2572,"count":0},{"startOffset":2572,"endOffset":2609,"count":5},{"startOffset":2611,"endOffset":2965,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":2495,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":2867,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"checkSpacingAfter","ranges":[{"startOffset":3167,"endOffset":4530,"count":8},{"startOffset":3248,"endOffset":3370,"count":3},{"startOffset":3370,"endOffset":3598,"count":5},{"startOffset":3598,"endOffset":3637,"count":0},{"startOffset":3637,"endOffset":3662,"count":5},{"startOffset":3662,"endOffset":3674,"count":0},{"startOffset":3676,"endOffset":4128,"count":0},{"startOffset":4128,"endOffset":4165,"count":5},{"startOffset":4167,"endOffset":4520,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4052,"endOffset":4094,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":4422,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":4561,"endOffset":4746,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1389","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/template-tag-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3071,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":955,"endOffset":3067,"count":8}],"isBlockCoverage":true},{"functionName":"checkSpacing","ranges":[{"startOffset":1288,"endOffset":2981,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1390","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/unicode-bom.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2204,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":915,"endOffset":2200,"count":8}],"isBlockCoverage":true},{"functionName":"checkUnicodeBOM","ranges":[{"startOffset":1162,"endOffset":2181,"count":8},{"startOffset":1363,"endOffset":1373,"count":0},{"startOffset":1445,"endOffset":1786,"count":0},{"startOffset":1814,"endOffset":1841,"count":0},{"startOffset":1843,"endOffset":2167,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":1624,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":2024,"endOffset":2125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1391","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/use-isnan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4746,"count":1}],"isBlockCoverage":true},{"functionName":"isNaNIdentifier","ranges":[{"startOffset":690,"endOffset":870,"count":24}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2230,"endOffset":4742,"count":8}],"isBlockCoverage":true},{"functionName":"checkBinaryExpression","ranges":[{"startOffset":2649,"endOffset":2955,"count":22},{"startOffset":2763,"endOffset":2841,"count":12},{"startOffset":2856,"endOffset":2945,"count":0}],"isBlockCoverage":true},{"functionName":"checkSwitchStatement","ranges":[{"startOffset":3194,"endOffset":3595,"count":0}],"isBlockCoverage":false},{"functionName":"checkCallExpression","ranges":[{"startOffset":3803,"endOffset":4404,"count":325},{"startOffset":3963,"endOffset":4394,"count":260},{"startOffset":4141,"endOffset":4191,"count":0},{"startOffset":4192,"endOffset":4249,"count":0},{"startOffset":4268,"endOffset":4380,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1392","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3781,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3780,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3760,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1160,"endOffset":1196,"count":0},{"startOffset":1243,"endOffset":1277,"count":0},{"startOffset":1344,"endOffset":1837,"count":2},{"startOffset":1411,"endOffset":1441,"count":1},{"startOffset":1465,"endOffset":1834,"count":0},{"startOffset":1950,"endOffset":2364,"count":0},{"startOffset":2508,"endOffset":2910,"count":0},{"startOffset":2996,"endOffset":3298,"count":0},{"startOffset":3415,"endOffset":3677,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1393","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/valid-typeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4793,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1245,"endOffset":4789,"count":8}],"isBlockCoverage":true},{"functionName":"isReferenceToGlobalVariable","ranges":[{"startOffset":2018,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeofExpression","ranges":[{"startOffset":2478,"endOffset":2605,"count":16}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":2826,"endOffset":2901,"count":8}],"isBlockCoverage":true},{"functionName":"UnaryExpression","ranges":[{"startOffset":2916,"endOffset":4770,"count":16},{"startOffset":2986,"endOffset":4756,"count":1},{"startOffset":3226,"endOffset":3239,"count":0},{"startOffset":3297,"endOffset":3365,"count":0},{"startOffset":3454,"endOffset":3486,"count":0},{"startOffset":3546,"endOffset":3671,"count":0},{"startOffset":3697,"endOffset":4716,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4259,"endOffset":4407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1394","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3130,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3129,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3109,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1161,"endOffset":1199,"count":0},{"startOffset":1356,"endOffset":1725,"count":0},{"startOffset":1842,"endOffset":2260,"count":0},{"startOffset":2345,"endOffset":2647,"count":0},{"startOffset":2764,"endOffset":3026,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1395","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/wrap-iife.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7889,"count":1}],"isBlockCoverage":true},{"functionName":"isCalleeOfNewExpression","ranges":[{"startOffset":740,"endOffset":1009,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2236,"endOffset":7885,"count":8},{"startOffset":2296,"endOffset":2308,"count":0}],"isBlockCoverage":true},{"functionName":"isWrappedInAnyParens","ranges":[{"startOffset":2771,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"isWrappedInGroupingParens","ranges":[{"startOffset":3159,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionNodeFromIIFE","ranges":[{"startOffset":3518,"endOffset":4125,"count":325},{"startOffset":3684,"endOffset":3730,"count":0},{"startOffset":3834,"endOffset":3896,"count":260},{"startOffset":3897,"endOffset":4021,"count":0},{"startOffset":4036,"endOffset":4089,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":4157,"endOffset":7867,"count":325},{"startOffset":4325,"endOffset":4563,"count":0},{"startOffset":4565,"endOffset":7853,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":4711,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":5203,"endOffset":6718,"count":0}],"isBlockCoverage":false},{"functionName":"fix","ranges":[{"startOffset":6965,"endOffset":7811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1396","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3845,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3825,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1210,"count":3},{"startOffset":1185,"endOffset":1210,"count":1},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1855,"endOffset":1896,"count":0},{"startOffset":2056,"endOffset":2425,"count":0},{"startOffset":2545,"endOffset":2975,"count":0},{"startOffset":3060,"endOffset":3362,"count":0},{"startOffset":3480,"endOffset":3742,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1397","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/yield-star-spacing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4328,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1457,"endOffset":4324,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1550,"endOffset":1976,"count":8},{"startOffset":1913,"endOffset":1923,"count":0},{"startOffset":1939,"endOffset":1975,"count":0}],"isBlockCoverage":true},{"functionName":"checkSpacing","ranges":[{"startOffset":2455,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"checkExpression","ranges":[{"startOffset":3824,"endOffset":4243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1398","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5522,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5521,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":5501,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":3},{"startOffset":1304,"endOffset":1329,"count":1},{"startOffset":1343,"endOffset":1752,"count":0},{"startOffset":1955,"endOffset":1979,"count":0},{"startOffset":1982,"endOffset":3877,"count":0},{"startOffset":4218,"endOffset":4242,"count":0},{"startOffset":4280,"endOffset":4284,"count":0},{"startOffset":4330,"endOffset":4343,"count":0},{"startOffset":4345,"endOffset":4404,"count":0},{"startOffset":4425,"endOffset":4477,"count":0},{"startOffset":4491,"endOffset":4924,"count":0},{"startOffset":4988,"endOffset":5013,"count":0},{"startOffset":5156,"endOffset":5418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1399","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/yoda.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12512,"count":1}],"isBlockCoverage":true},{"functionName":"isComparisonOperator","ranges":[{"startOffset":684,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperator","ranges":[{"startOffset":970,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeTestOperator","ranges":[{"startOffset":1282,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativeNumericLiteral","ranges":[{"startOffset":1685,"endOffset":1896,"count":22},{"startOffset":1780,"endOffset":1812,"count":1},{"startOffset":1813,"endOffset":1835,"count":0},{"startOffset":1836,"endOffset":1887,"count":0}],"isBlockCoverage":true},{"functionName":"isStaticTemplateLiteral","ranges":[{"startOffset":2112,"endOffset":2231,"count":22},{"startOffset":2196,"endOffset":2228,"count":0}],"isBlockCoverage":true},{"functionName":"looksLikeLiteral","ranges":[{"startOffset":2447,"endOffset":2558,"count":22}],"isBlockCoverage":true},{"functionName":"getNormalizedLiteral","ranges":[{"startOffset":3078,"endOffset":3582,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4758,"endOffset":12508,"count":8},{"startOffset":4945,"endOffset":4978,"count":0},{"startOffset":5040,"endOffset":5074,"count":0}],"isBlockCoverage":true},{"functionName":"isRangeTest","ranges":[{"startOffset":5714,"endOffset":8494,"count":0}],"isBlockCoverage":false},{"functionName":"getFlippedString","ranges":[{"startOffset":9037,"endOffset":10968,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":11188,"endOffset":12491,"count":22},{"startOffset":11260,"endOffset":11271,"count":0},{"startOffset":11336,"endOffset":11348,"count":0},{"startOffset":11621,"endOffset":11788,"count":0},{"startOffset":11789,"endOffset":11865,"count":0},{"startOffset":11866,"endOffset":11924,"count":0},{"startOffset":11925,"endOffset":12007,"count":0},{"startOffset":12026,"endOffset":12477,"count":0}],"isBlockCoverage":true},{"functionName":"fix","ranges":[{"startOffset":12351,"endOffset":12435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1400","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4362,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4361,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4341,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1154,"endOffset":1210,"count":2},{"startOffset":1185,"endOffset":1210,"count":1},{"startOffset":1224,"endOffset":1557,"count":0},{"startOffset":1687,"endOffset":3943,"count":0},{"startOffset":3996,"endOffset":4258,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1401","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2379,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2378,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":2358,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":1961,"count":0},{"startOffset":2013,"endOffset":2275,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1402","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6462,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6461,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6441,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1177,"endOffset":1688,"count":3},{"startOffset":1232,"endOffset":1248,"count":2},{"startOffset":1250,"endOffset":1271,"count":1},{"startOffset":1273,"endOffset":1292,"count":0},{"startOffset":1316,"endOffset":1685,"count":0},{"startOffset":1762,"endOffset":1780,"count":0},{"startOffset":1843,"endOffset":2209,"count":0},{"startOffset":2314,"endOffset":2332,"count":0},{"startOffset":2395,"endOffset":2741,"count":0},{"startOffset":2851,"endOffset":2869,"count":0},{"startOffset":2932,"endOffset":3298,"count":0},{"startOffset":3424,"endOffset":5624,"count":0},{"startOffset":5677,"endOffset":5979,"count":0},{"startOffset":6096,"endOffset":6358,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1403","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3085,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3084,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3064,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2667,"count":0},{"startOffset":2719,"endOffset":2981,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1404","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1824,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1823,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":1803,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1073,"endOffset":1368,"count":0},{"startOffset":1458,"endOffset":1720,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1405","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8155,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8154,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":8134,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":7737,"count":0},{"startOffset":7789,"endOffset":8051,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1406","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3660,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3659,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3639,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":3242,"count":0},{"startOffset":3294,"endOffset":3556,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1407","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint/lib/rules/jsx-quotes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2958,"count":1}],"isBlockCoverage":true},{"functionName":"convert","ranges":[{"startOffset":668,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"convert","ranges":[{"startOffset":832,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1673,"endOffset":2954,"count":8},{"startOffset":1738,"endOffset":1756,"count":0}],"isBlockCoverage":true},{"functionName":"usesExpectedQuotes","ranges":[{"startOffset":2083,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute","ranges":[{"startOffset":2266,"endOffset":2937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1408","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13917,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":13916,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":13896,"count":1},{"startOffset":470,"endOffset":814,"count":0},{"startOffset":860,"endOffset":1582,"count":0},{"startOffset":1633,"endOffset":1971,"count":0},{"startOffset":2075,"endOffset":13327,"count":0},{"startOffset":13341,"endOffset":13697,"count":0},{"startOffset":13746,"endOffset":13809,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1409","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8292,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8291,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":8271,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":3},{"startOffset":1304,"endOffset":1329,"count":1},{"startOffset":1343,"endOffset":1752,"count":0},{"startOffset":1955,"endOffset":1979,"count":0},{"startOffset":1982,"endOffset":3503,"count":0},{"startOffset":3844,"endOffset":3868,"count":0},{"startOffset":3906,"endOffset":3910,"count":0},{"startOffset":3956,"endOffset":3969,"count":0},{"startOffset":3971,"endOffset":4030,"count":0},{"startOffset":4051,"endOffset":4103,"count":0},{"startOffset":4167,"endOffset":4191,"count":0},{"startOffset":4194,"endOffset":6646,"count":0},{"startOffset":6971,"endOffset":6987,"count":0},{"startOffset":7049,"endOffset":7053,"count":0},{"startOffset":7099,"endOffset":7112,"count":0},{"startOffset":7114,"endOffset":7173,"count":0},{"startOffset":7194,"endOffset":7246,"count":0},{"startOffset":7261,"endOffset":7694,"count":0},{"startOffset":7758,"endOffset":7783,"count":0},{"startOffset":7926,"endOffset":8188,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1410","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7009,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6989,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1287,"endOffset":1855,"count":2},{"startOffset":1339,"endOffset":1360,"count":1},{"startOffset":1362,"endOffset":1392,"count":0},{"startOffset":1416,"endOffset":1852,"count":0},{"startOffset":1926,"endOffset":1944,"count":0},{"startOffset":2113,"endOffset":2169,"count":2},{"startOffset":2144,"endOffset":2169,"count":1},{"startOffset":2183,"endOffset":2649,"count":0},{"startOffset":2797,"endOffset":2815,"count":0},{"startOffset":2987,"endOffset":3043,"count":2},{"startOffset":3018,"endOffset":3043,"count":1},{"startOffset":3057,"endOffset":3535,"count":0},{"startOffset":3710,"endOffset":4550,"count":0},{"startOffset":4602,"endOffset":4980,"count":0},{"startOffset":5253,"endOffset":5309,"count":3},{"startOffset":5284,"endOffset":5309,"count":0},{"startOffset":5695,"endOffset":5719,"count":0},{"startOffset":5732,"endOffset":5743,"count":0},{"startOffset":5768,"endOffset":5772,"count":0},{"startOffset":5818,"endOffset":5831,"count":0},{"startOffset":5833,"endOffset":5892,"count":0},{"startOffset":5913,"endOffset":5965,"count":0},{"startOffset":5979,"endOffset":6412,"count":0},{"startOffset":6476,"endOffset":6501,"count":0},{"startOffset":6644,"endOffset":6906,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1411","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6079,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6078,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6058,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":2},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":2050,"endOffset":2592,"count":2},{"startOffset":2107,"endOffset":2129,"count":1},{"startOffset":2153,"endOffset":2589,"count":0},{"startOffset":2668,"endOffset":2686,"count":0},{"startOffset":2930,"endOffset":3416,"count":0},{"startOffset":3565,"endOffset":3583,"count":0},{"startOffset":3826,"endOffset":4308,"count":0},{"startOffset":4434,"endOffset":4812,"count":0},{"startOffset":4902,"endOffset":4961,"count":0},{"startOffset":5048,"endOffset":5481,"count":0},{"startOffset":5545,"endOffset":5570,"count":0},{"startOffset":5713,"endOffset":5975,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1412","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5391,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5390,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":149,"endOffset":5370,"count":2},{"startOffset":303,"endOffset":319,"count":0},{"startOffset":614,"endOffset":632,"count":0},{"startOffset":776,"endOffset":832,"count":4},{"startOffset":807,"endOffset":832,"count":2},{"startOffset":846,"endOffset":1257,"count":0},{"startOffset":1410,"endOffset":1428,"count":0},{"startOffset":1491,"endOffset":1906,"count":0},{"startOffset":2032,"endOffset":3593,"count":0},{"startOffset":3644,"endOffset":3970,"count":0},{"startOffset":4287,"endOffset":4292,"count":0},{"startOffset":4531,"endOffset":4555,"count":0},{"startOffset":4616,"endOffset":4629,"count":0},{"startOffset":4631,"endOffset":4690,"count":0},{"startOffset":4711,"endOffset":4763,"count":0},{"startOffset":4777,"endOffset":5172,"count":0},{"startOffset":5236,"endOffset":5261,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1413","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11238,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":11237,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":197,"endOffset":11217,"count":1},{"startOffset":853,"endOffset":1558,"count":0},{"startOffset":1655,"endOffset":2177,"count":0},{"startOffset":2267,"endOffset":3840,"count":0},{"startOffset":3891,"endOffset":4225,"count":0},{"startOffset":4556,"endOffset":4574,"count":0},{"startOffset":4722,"endOffset":4845,"count":0},{"startOffset":4973,"endOffset":4991,"count":0},{"startOffset":5135,"endOffset":5262,"count":0},{"startOffset":5387,"endOffset":5791,"count":0},{"startOffset":6148,"endOffset":6204,"count":2},{"startOffset":6179,"endOffset":6204,"count":0},{"startOffset":6590,"endOffset":6614,"count":0},{"startOffset":6627,"endOffset":6638,"count":0},{"startOffset":6663,"endOffset":6667,"count":0},{"startOffset":6713,"endOffset":6726,"count":0},{"startOffset":6728,"endOffset":6787,"count":0},{"startOffset":6808,"endOffset":6860,"count":0},{"startOffset":6874,"endOffset":7307,"count":0},{"startOffset":7371,"endOffset":7396,"count":0},{"startOffset":7541,"endOffset":10821,"count":0},{"startOffset":10872,"endOffset":11134,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1414","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19754,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19753,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":19733,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":19336,"count":0},{"startOffset":19388,"endOffset":19650,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1415","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5974,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5973,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":5953,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":1982,"endOffset":2355,"count":0},{"startOffset":2418,"endOffset":2477,"count":0},{"startOffset":2564,"endOffset":2997,"count":0},{"startOffset":3061,"endOffset":3086,"count":0},{"startOffset":3412,"endOffset":3907,"count":2},{"startOffset":3474,"endOffset":3511,"count":1},{"startOffset":3535,"endOffset":3904,"count":0},{"startOffset":3988,"endOffset":4006,"count":0},{"startOffset":4069,"endOffset":4463,"count":0},{"startOffset":4589,"endOffset":4607,"count":0},{"startOffset":4670,"endOffset":5100,"count":0},{"startOffset":5188,"endOffset":5490,"count":0},{"startOffset":5608,"endOffset":5870,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1416","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7618,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7617,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":7597,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1273,"endOffset":1329,"count":2},{"startOffset":1304,"endOffset":1329,"count":0},{"startOffset":1715,"endOffset":1739,"count":0},{"startOffset":1752,"endOffset":1763,"count":0},{"startOffset":1788,"endOffset":1792,"count":0},{"startOffset":1839,"endOffset":1891,"count":0},{"startOffset":1982,"endOffset":2355,"count":0},{"startOffset":2418,"endOffset":2477,"count":0},{"startOffset":2614,"endOffset":2638,"count":0},{"startOffset":2641,"endOffset":5972,"count":0},{"startOffset":6297,"endOffset":6313,"count":0},{"startOffset":6375,"endOffset":6379,"count":0},{"startOffset":6425,"endOffset":6438,"count":0},{"startOffset":6440,"endOffset":6499,"count":0},{"startOffset":6520,"endOffset":6572,"count":0},{"startOffset":6587,"endOffset":7020,"count":0},{"startOffset":7084,"endOffset":7109,"count":0},{"startOffset":7252,"endOffset":7514,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1417","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4506,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4505,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":4485,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1162,"endOffset":1201,"count":0},{"startOffset":1442,"endOffset":1975,"count":3},{"startOffset":1511,"endOffset":1548,"count":2},{"startOffset":1550,"endOffset":1579,"count":1},{"startOffset":1603,"endOffset":1972,"count":0},{"startOffset":2090,"endOffset":2512,"count":0},{"startOffset":2663,"endOffset":3093,"count":0},{"startOffset":3236,"endOffset":3634,"count":0},{"startOffset":3721,"endOffset":4023,"count":0},{"startOffset":4140,"endOffset":4402,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1418","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3031,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3030,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3010,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2613,"count":0},{"startOffset":2665,"endOffset":2927,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1419","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5743,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5742,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":5722,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1290,"endOffset":1855,"count":3},{"startOffset":1384,"endOffset":1419,"count":2},{"startOffset":1421,"endOffset":1439,"count":2},{"startOffset":1441,"endOffset":1459,"count":1},{"startOffset":1483,"endOffset":1852,"count":0},{"startOffset":1952,"endOffset":2438,"count":0},{"startOffset":2522,"endOffset":2540,"count":0},{"startOffset":2784,"endOffset":3230,"count":0},{"startOffset":3410,"endOffset":3932,"count":0},{"startOffset":4029,"endOffset":4383,"count":0},{"startOffset":4515,"endOffset":4869,"count":0},{"startOffset":4958,"endOffset":5260,"count":0},{"startOffset":5377,"endOffset":5639,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1420","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3043,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3042,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3022,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1258,"endOffset":1627,"count":0},{"startOffset":1708,"endOffset":1726,"count":0},{"startOffset":1789,"endOffset":2171,"count":0},{"startOffset":2258,"endOffset":2560,"count":0},{"startOffset":2677,"endOffset":2939,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1421","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6520,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6519,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6499,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1236,"endOffset":1271,"count":0},{"startOffset":1273,"endOffset":1300,"count":0},{"startOffset":1302,"endOffset":1321,"count":0},{"startOffset":1345,"endOffset":1714,"count":0},{"startOffset":1795,"endOffset":1813,"count":0},{"startOffset":1876,"endOffset":2258,"count":0},{"startOffset":2400,"endOffset":2922,"count":0},{"startOffset":3019,"endOffset":3509,"count":0},{"startOffset":3598,"endOffset":5682,"count":0},{"startOffset":5735,"endOffset":6037,"count":0},{"startOffset":6154,"endOffset":6416,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1422","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6036,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6035,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":6015,"count":1},{"startOffset":354,"endOffset":467,"count":0},{"startOffset":493,"endOffset":758,"count":0},{"startOffset":793,"endOffset":1059,"count":0},{"startOffset":1321,"endOffset":1861,"count":4},{"startOffset":1380,"endOffset":1410,"count":3},{"startOffset":1412,"endOffset":1437,"count":2},{"startOffset":1439,"endOffset":1465,"count":1},{"startOffset":1489,"endOffset":1858,"count":0},{"startOffset":1939,"endOffset":1957,"count":0},{"startOffset":2124,"endOffset":2180,"count":2},{"startOffset":2155,"endOffset":2180,"count":1},{"startOffset":2194,"endOffset":2612,"count":0},{"startOffset":2769,"endOffset":2787,"count":0},{"startOffset":3029,"endOffset":3467,"count":0},{"startOffset":3619,"endOffset":3637,"count":0},{"startOffset":3804,"endOffset":3860,"count":3},{"startOffset":3835,"endOffset":3860,"count":1},{"startOffset":3874,"endOffset":4292,"count":0},{"startOffset":4445,"endOffset":4463,"count":0},{"startOffset":4631,"endOffset":4687,"count":3},{"startOffset":4662,"endOffset":4687,"count":1},{"startOffset":4701,"endOffset":5123,"count":0},{"startOffset":5251,"endOffset":5553,"count":0},{"startOffset":5670,"endOffset":5932,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1423","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8185,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8184,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":8164,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1177,"endOffset":1760,"count":7},{"startOffset":1235,"endOffset":1258,"count":6},{"startOffset":1260,"endOffset":1279,"count":5},{"startOffset":1281,"endOffset":1299,"count":4},{"startOffset":1301,"endOffset":1323,"count":3},{"startOffset":1325,"endOffset":1345,"count":2},{"startOffset":1347,"endOffset":1364,"count":1},{"startOffset":1388,"endOffset":1757,"count":0},{"startOffset":1837,"endOffset":1855,"count":0},{"startOffset":2021,"endOffset":2077,"count":5},{"startOffset":2052,"endOffset":2077,"count":1},{"startOffset":2091,"endOffset":2505,"count":0},{"startOffset":2655,"endOffset":2673,"count":0},{"startOffset":2838,"endOffset":2894,"count":5},{"startOffset":2869,"endOffset":2894,"count":1},{"startOffset":2908,"endOffset":3318,"count":0},{"startOffset":3464,"endOffset":3482,"count":0},{"startOffset":3643,"endOffset":3699,"count":5},{"startOffset":3674,"endOffset":3699,"count":1},{"startOffset":3713,"endOffset":4107,"count":0},{"startOffset":4252,"endOffset":4270,"count":0},{"startOffset":4430,"endOffset":4486,"count":3},{"startOffset":4461,"endOffset":4486,"count":1},{"startOffset":4500,"endOffset":4890,"count":0},{"startOffset":5039,"endOffset":5057,"count":0},{"startOffset":5221,"endOffset":5277,"count":3},{"startOffset":5252,"endOffset":5277,"count":1},{"startOffset":5291,"endOffset":5697,"count":0},{"startOffset":5844,"endOffset":5862,"count":0},{"startOffset":6024,"endOffset":6080,"count":3},{"startOffset":6055,"endOffset":6080,"count":1},{"startOffset":6094,"endOffset":6492,"count":0},{"startOffset":6636,"endOffset":6654,"count":0},{"startOffset":6813,"endOffset":6869,"count":3},{"startOffset":6844,"endOffset":6869,"count":1},{"startOffset":6883,"endOffset":7269,"count":0},{"startOffset":7400,"endOffset":7702,"count":0},{"startOffset":7819,"endOffset":8081,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1424","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3074,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3053,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":2656,"count":0},{"startOffset":2708,"endOffset":2970,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1425","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3079,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3078,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3058,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1264,"endOffset":1633,"count":0},{"startOffset":1720,"endOffset":1738,"count":0},{"startOffset":1801,"endOffset":2207,"count":0},{"startOffset":2294,"endOffset":2596,"count":0},{"startOffset":2713,"endOffset":2975,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1426","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8648,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8647,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":8627,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":1252,"endOffset":1621,"count":0},{"startOffset":1696,"endOffset":1714,"count":0},{"startOffset":1851,"endOffset":7356,"count":2},{"startOffset":2040,"endOffset":2502,"count":0},{"startOffset":2667,"endOffset":2691,"count":0},{"startOffset":2694,"endOffset":5926,"count":0},{"startOffset":6358,"endOffset":6382,"count":0},{"startOffset":6420,"endOffset":6424,"count":0},{"startOffset":6470,"endOffset":6483,"count":0},{"startOffset":6485,"endOffset":6544,"count":0},{"startOffset":6565,"endOffset":6617,"count":0},{"startOffset":6631,"endOffset":7155,"count":0},{"startOffset":7219,"endOffset":7244,"count":0},{"startOffset":7347,"endOffset":7353,"count":0},{"startOffset":7388,"endOffset":7749,"count":0},{"startOffset":7863,"endOffset":8165,"count":0},{"startOffset":8282,"endOffset":8544,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1427","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3588,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3587,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":125,"endOffset":3567,"count":1},{"startOffset":349,"endOffset":614,"count":0},{"startOffset":649,"endOffset":915,"count":0},{"startOffset":996,"endOffset":3170,"count":0},{"startOffset":3222,"endOffset":3484,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1428","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-import-resolver-node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1861,"count":1}],"isBlockCoverage":true},{"functionName":"exports.resolve","ranges":[{"startOffset":200,"endOffset":755,"count":22},{"startOffset":329,"endOffset":403,"count":2},{"startOffset":403,"endOffset":669,"count":20},{"startOffset":669,"endOffset":753,"count":3}],"isBlockCoverage":true},{"functionName":"cachedFilter","ranges":[{"startOffset":438,"endOffset":501,"count":32}],"isBlockCoverage":true},{"functionName":"opts","ranges":[{"startOffset":758,"endOffset":1110,"count":26}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":1112,"endOffset":1146,"count":6}],"isBlockCoverage":true},{"functionName":"packageFilter","ranges":[{"startOffset":1148,"endOffset":1860,"count":32},{"startOffset":1273,"endOffset":1527,"count":6},{"startOffset":1438,"endOffset":1523,"count":0},{"startOffset":1541,"endOffset":1562,"count":26},{"startOffset":1564,"endOffset":1844,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1429","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-import-resolver-node/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1},{"startOffset":232,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1430","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-import-resolver-node/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4415,"count":1},{"startOffset":673,"endOffset":1049,"count":0},{"startOffset":1052,"endOffset":1068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1376,"endOffset":1425,"count":125}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1434,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1987,"endOffset":2123,"count":1},{"startOffset":2051,"endOffset":2088,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2196,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":2673,"endOffset":2794,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":2883,"endOffset":2975,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3057,"endOffset":3325,"count":1},{"startOffset":3103,"endOffset":3144,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3442,"endOffset":3489,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3654,"endOffset":3861,"count":1},{"startOffset":3791,"endOffset":3859,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4031,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4308,"endOffset":4412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1431","url":"file:///home/runner/work/deluge/deluge/node_modules/eslint-import-resolver-node/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5929,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":121,"endOffset":5902,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":410,"endOffset":463,"count":8}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1108,"endOffset":1399,"count":1},{"startOffset":1208,"endOffset":1319,"count":34}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1579,"endOffset":3602,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1636,"endOffset":3096,"count":44},{"startOffset":1725,"endOffset":1996,"count":0},{"startOffset":2181,"endOffset":3058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2380,"endOffset":2914,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3606,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3802,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":4122,"endOffset":4922,"count":1},{"startOffset":4301,"endOffset":4313,"count":0},{"startOffset":4478,"endOffset":4735,"count":0},{"startOffset":4798,"endOffset":4918,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4984,"endOffset":5036,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5188,"endOffset":5617,"count":1},{"startOffset":5252,"endOffset":5278,"count":0},{"startOffset":5367,"endOffset":5449,"count":0},{"startOffset":5513,"endOffset":5594,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":5715,"endOffset":5835,"count":0}],"isBlockCoverage":false}]}],"timestamp":56.859584,"source-map-cache":{"file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/dist/eslintrc.cjs":{"lineLengths":[13,0,62,0,33,23,42,31,27,51,31,31,27,37,25,33,23,0,114,0,71,57,75,65,61,79,65,65,61,71,59,67,57,0,3,39,2,72,2,34,2,45,46,49,76,2,43,2,15,46,15,76,76,38,73,79,14,2,73,31,2,57,3,0,73,0,61,0,80,10,80,0,3,64,76,63,3,45,32,0,50,25,33,0,84,45,0,35,76,32,48,22,13,56,31,13,9,5,0,64,0,91,89,55,5,26,1,0,3,22,61,64,39,3,29,64,0,47,23,5,65,1,0,3,37,46,51,3,30,19,58,64,6,0,28,1,0,62,66,0,80,9,80,0,21,0,7,28,23,7,34,31,5,0,7,45,57,100,30,62,62,86,7,37,76,5,0,7,75,75,101,30,62,62,86,7,41,51,0,84,35,73,10,111,93,0,59,0,29,40,132,64,81,51,76,0,83,30,14,34,10,5,0,7,49,72,60,7,37,124,0,11,49,27,11,33,0,11,39,25,11,33,0,11,133,10,111,76,26,11,27,5,0,7,72,78,13,49,46,7,40,130,51,0,39,28,9,61,0,40,53,45,63,0,65,49,13,67,11,5,1,0,3,41,2,79,2,26,2,46,77,75,71,2,78,2,57,3,0,26,68,68,72,79,79,0,3,34,14,38,64,54,3,29,69,1,0,3,39,3,23,19,0,11,67,25,11,45,0,11,24,42,11,22,0,11,28,45,11,26,0,11,49,118,11,30,0,11,53,36,11,37,0,11,29,39,11,27,0,11,34,25,11,32,0,11,30,50,11,26,0,11,24,30,11,30,0,11,76,36,11,52,0,11,25,59,11,24,0,11,27,25,11,27,5,0,7,77,50,7,45,15,47,49,32,46,20,21,17,0,64,79,64,0,60,79,35,82,9,0,22,5,1,0,3,37,2,78,80,11,2,65,2,25,23,18,75,77,67,15,67,30,76,78,53,2,67,2,57,3,0,80,10,80,0,40,70,68,64,56,60,66,79,79,78,0,3,39,59,82,128,78,89,73,90,66,65,84,89,115,63,73,61,80,3,0,3,45,79,114,116,94,3,0,61,54,14,35,0,21,21,33,29,35,29,14,34,9,0,21,5,4,0,3,53,55,54,35,3,48,23,0,52,36,0,81,28,9,5,0,19,1,0,3,41,37,63,3,29,47,1,0,3,21,2,79,59,50,56,18,3,48,35,15,5,0,44,34,21,9,0,43,60,44,47,67,64,48,42,13,9,5,1,0,3,34,3,41,0,7,36,46,86,7,36,119,49,49,5,1,0,3,17,48,75,81,18,3,39,35,15,5,0,44,34,21,9,40,40,0,53,37,36,40,13,38,67,48,17,51,58,18,17,51,58,17,15,9,5,1,0,3,22,48,65,74,18,3,43,35,15,5,0,44,34,21,9,38,38,0,58,35,43,45,20,42,13,0,10,79,66,11,19,37,39,33,11,50,9,5,1,0,3,31,53,48,51,3,42,41,30,0,22,34,40,0,53,47,39,43,13,43,9,0,56,53,49,9,0,61,84,59,61,9,0,76,114,89,9,0,33,36,55,9,0,24,55,63,75,65,54,54,5,0,57,36,78,5,0,18,1,0,3,23,17,53,61,49,77,18,3,50,15,50,0,58,20,34,52,14,9,5,1,0,3,31,64,50,3,36,64,1,0,3,48,55,18,3,37,34,53,54,50,7,1,0,3,83,62,62,18,3,48,32,0,29,35,30,0,37,31,21,9,0,74,44,0,53,25,13,36,0,65,69,80,9,5,0,40,46,41,1,0,3,83,53,60,3,43,51,0,25,46,5,0,17,1,0,80,19,80,0,3,20,2,70,76,79,8,39,3,33,0,7,35,42,72,7,30,51,5,0,7,33,42,68,7,28,57,5,0,7,28,42,61,7,23,52,5,0,7,44,62,7,14,52,38,0,44,28,13,9,21,5,0,7,64,69,60,7,29,55,58,43,0,35,61,9,0,35,5,0,7,58,69,74,7,38,48,16,36,27,45,39,15,28,13,9,21,5,1,0,3,34,67,64,59,11,3,44,55,0,38,1,0,3,42,2,64,2,80,63,2,78,31,2,80,14,2,57,3,0,3,44,80,14,3,24,0,7,32,48,76,74,98,57,97,97,7,17,26,21,24,11,21,20,8,0,11,58,25,11,37,0,11,50,29,11,27,0,11,58,30,11,33,0,11,37,25,11,21,0,11,67,25,11,41,0,11,67,25,11,41,5,0,57,7,50,7,14,68,0,69,41,69,9,0,19,5,0,57,7,65,7,49,15,70,18,17,0,19,5,1,0,3,40,2,79,25,2,26,2,21,68,77,13,2,74,26,2,57,3,0,52,0,53,0,3,28,79,79,3,0,3,41,91,48,11,3,38,34,40,5,51,26,5,14,1,0,3,41,43,60,3,30,32,20,5,36,40,33,33,0,65,54,14,9,53,7,1,0,3,37,42,58,3,48,12,59,58,6,1,0,3,61,3,22,0,7,43,48,75,83,77,69,7,51,57,65,37,0,43,24,9,0,63,48,89,117,13,40,40,13,9,48,89,117,13,9,0,52,52,0,34,37,21,28,10,5,0,7,42,69,65,47,53,54,7,22,17,43,27,27,34,14,9,17,38,27,27,34,14,9,0,71,34,42,23,52,10,5,0,7,32,48,46,80,7,63,0,32,33,0,29,33,0,30,49,5,0,7,46,69,57,7,20,93,91,9,88,0,64,71,69,11,5,0,57,7,50,7,14,41,20,51,39,14,9,16,50,35,10,5,0,57,7,65,7,49,29,5,1,0,3,37,57,3,0,3,81,40,28,3,0,80,10,80,0,55,73,27,19,11,57,0,80,19,80,0,3,70,108,108,101,90,92,3,38,81,0,76,29,5,0,44,63,5,0,13,1,0,3,64,82,49,57,18,3,37,0,23,53,52,0,49,101,88,97,13,11,5,1,0,3,83,81,73,3,38,45,1,0,3,59,84,69,3,38,74,0,39,42,5,53,1,0,3,73,54,69,3,39,80,1,0,3,46,101,29,77,43,3,49,30,19,25,0,18,20,25,24,30,0,18,19,21,24,24,30,0,16,133,5,1,0,17,20,37,43,37,37,47,48,2,0,3,70,56,3,0,80,10,80,0,38,36,31,83,32,63,73,36,63,76,74,2,0,39,0,3,96,94,102,89,57,18,3,52,59,0,45,15,5,39,0,73,58,0,24,41,29,17,6,1,0,3,47,28,3,0,79,10,79,0,2,53,24,44,3,20,50,55,43,18,22,26,24,32,10,26,28,22,10,34,78,10,22,87,10,22,26,38,24,29,9,6,19,17,13,26,10,18,26,10,16,26,10,22,26,10,21,21,27,23,34,10,18,26,10,27,28,26,10,18,26,10,27,28,26,10,61,69,18,27,27,10,26,20,36,29,14,24,10,16,20,30,53,14,24,10,60,68,22,28,26,10,65,73,56,31,20,36,29,14,24,10,22,27,48,24,10,21,27,48,24,10,28,27,48,24,10,23,27,35,24,34,57,17,13,10,15,26,24,29,10,15,20,54,17,34,65,32,37,17,13,10,35,53,53,53,26,6,19,38,37,6,16,2,0,80,19,80,0,43,45,20,26,30,30,22,25,28,7,0,34,52,42,0,15,2,0,3,46,23,3,0,30,32,28,55,32,16,22,56,30,6,41,38,31,34,30,33,40,55,0,76,2,0,22,18,26,20,35,17,34,46,42,17,13,10,34,20,35,17,34,46,43,31,17,13,10,0,31,23,27,25,42,74,39,14,39,10,0,33,25,27,25,73,73,39,14,32,39,9,6,0,38,2,0,3,58,23,3,0,80,10,80,0,3,38,60,57,59,3,33,20,0,57,53,30,9,5,0,16,1,0,142,24,19,28,2,24,18,25,26,21,2,0,24,26,32,18,2,0,80,19,80,0,69,43,0,15,14,48,6,10,32,24,26,9,6,13,32,24,26,9,6,13,32,24,26,9,6,13,58,24,26,9,6,13,58,24,26,9,6,13,58,24,27,9,6,13,77,24,27,9,6,13,96,24,27,9,6,13,96,24,27,9,6,0,16,14,52,6,11,50,24,27,34,13,9,6,28,67,6,13,51,6,20,58,6,0,17,15,54,24,27,34,13,9,6,10,48,6,12,50,6,14,52,6,11,49,6,16,54,6,13,51,6,12,50,6,18,56,6,14,52,6,13,51,6,12,50,6,17,55,6,18,56,6,14,52,6,15,53,6,16,54,6,20,58,6,19,57,5,4,0,3,35,24,3,0,22,0,37,32,0,80,10,80,19,21,13,12,10,2,0,32,0,79,10,79,0,23,52,41,5,0,7,49,85,60,7,32,20,24,9,0,68,0,74,36,32,24,34,34,32,43,18,13,20,30,28,27,14,0,9,0,46,30,5,0,7,110,63,57,7,35,71,107,0,77,32,9,0,204,0,5,0,7,80,60,79,22,7,44,40,59,0,25,62,13,9,0,54,0,27,39,38,56,88,28,13,9,5,0,7,53,92,53,68,118,45,22,7,63,13,64,0,33,94,13,23,101,0,45,68,20,49,13,9,5,0,7,38,77,91,108,22,7,24,20,15,31,7,0,42,27,19,9,0,48,77,0,23,85,0,41,13,11,5,0,7,38,71,91,100,22,7,18,20,15,32,7,27,19,9,0,48,84,0,72,11,5,0,7,53,58,107,22,7,51,29,19,9,0,37,63,21,59,31,133,17,15,5,0,7,42,66,54,93,22,7,60,60,126,9,5,0,7,52,66,48,7,26,36,59,168,0,82,13,43,63,114,66,0,138,13,0,95,0,87,56,5,0,7,63,60,91,22,7,49,69,0,38,122,9,0,65,73,9,5,0,7,41,60,91,103,100,22,7,67,50,68,71,53,0,56,74,77,57,9,5,0,7,36,69,22,7,38,84,88,78,0,20,44,41,25,13,35,0,78,64,88,75,9,5,0,1,0,3,77,3,0,35,0,3,56,48,94,51,11,3,45,30,0,7,81,56,51,7,40,61,5,0,43,0,11,32,57,11,93,72,0,62,96,80,0,15,78,73,15,93,9,58,55,5,0,26,1,0,3,38,63,47,45,3,45,30,81,0,26,34,9,0,82,26,57,9,51,49,5,0,20,1,0,3,40,62,61,3,37,46,0,33,1,0,14,20,47,39,46,2,0,3,60,21,3,0,2,71,72,3,63,0,3,52,84,135,72,137,3,46,9,65,21,0,100,12,40,29,48,34,46,11,69,9,20,5,1,0,22,20,20,2,0,3,54,2,64,2,34,80,33,34,76,80,65,63,48,50,46,77,76,45,33,81,56,32,80,37,2,77,75,76,2,79,35,2,57,3,0,92,0,79,0,80,10,80,0,25,19,20,21,20,21,16,18,2,0,40,64,80,56,56,52,92,92,51,0,3,46,88,70,129,83,75,79,82,95,98,3,0,3,52,86,68,131,83,75,79,82,95,98,3,0,3,53,69,150,65,70,264,3,0,3,53,69,150,65,264,3,0,75,41,0,38,40,0,3,42,57,64,3,33,12,44,55,6,1,0,3,63,49,61,11,3,29,89,1,0,3,42,49,64,46,11,3,39,53,0,58,38,0,9,0,53,51,17,56,80,16,5,1,0,3,42,49,64,46,11,3,39,53,0,9,81,17,56,80,50,25,27,30,10,16,5,1,0,3,56,49,64,46,11,3,41,55,0,58,38,0,9,113,17,64,80,16,5,1,0,3,48,49,64,46,11,3,37,51,9,57,17,62,80,16,5,1,0,3,50,49,64,46,11,3,46,61,9,57,0,71,32,82,57,14,9,0,40,17,64,80,16,5,1,0,3,39,49,57,11,3,41,55,0,9,33,29,73,17,65,87,16,5,1,0,3,68,61,87,82,45,11,3,72,25,75,9,28,53,9,6,1,0,3,78,58,58,60,11,3,35,57,19,20,46,0,21,81,59,13,48,0,21,20,48,0,16,50,5,1,0,3,19,53,79,51,18,3,65,30,26,34,0,13,44,42,26,14,71,0,53,25,66,37,9,0,61,5,1,0,3,44,69,141,137,111,140,67,3,23,38,17,17,21,25,3,37,65,13,25,98,67,12,16,23,73,11,26,35,67,12,42,0,67,1,0,3,28,93,52,50,43,3,34,0,28,57,0,27,32,5,0,24,38,48,44,33,6,0,35,52,0,28,1,0,80,19,80,0,3,40,3,26,0,7,32,83,7,17,41,28,33,21,34,22,27,30,34,13,38,33,16,37,43,80,25,21,26,31,34,38,11,5,0,7,56,69,45,156,71,54,44,7,59,26,37,9,0,51,77,68,0,44,5,0,7,26,58,45,156,54,44,7,49,51,77,0,61,5,0,7,59,61,45,156,54,96,7,61,51,0,49,38,22,25,21,71,24,14,0,124,31,0,21,62,33,83,36,21,17,0,33,66,43,69,22,17,13,9,0,61,33,5,0,7,65,61,90,7,58,49,84,0,62,50,25,60,40,44,24,36,17,13,9,20,5,0,7,33,75,96,7,32,51,34,18,21,19,21,21,10,66,0,31,67,10,5,0,7,66,96,7,31,51,94,92,0,66,59,9,65,61,0,67,56,101,17,42,26,29,51,36,29,18,0,39,78,18,13,9,0,33,5,0,7,32,73,69,15,7,26,76,5,0,7,71,69,73,77,15,7,54,57,31,15,10,0,69,41,40,51,13,26,9,5,0,7,44,67,73,77,15,7,43,48,0,77,64,5,0,7,44,86,73,77,15,7,50,67,47,18,26,29,10,78,0,47,41,0,14,34,69,55,15,78,0,14,79,40,15,35,38,13,0,26,9,5,0,7,44,67,73,77,15,7,36,9,16,28,20,27,27,31,26,32,22,42,17,18,21,40,10,11,7,69,66,78,29,10,0,29,62,54,9,0,33,71,73,0,66,22,67,9,0,66,15,0,33,27,27,35,0,27,27,16,20,26,27,19,26,20,22,42,17,18,20,10,0,30,55,51,32,63,14,9,5,0,7,47,60,73,77,15,7,35,81,13,51,72,13,51,71,13,70,25,78,24,9,5,0,7,47,60,73,77,15,7,49,15,26,31,34,38,41,0,50,55,0,45,71,128,17,111,13,41,23,21,47,15,9,42,55,0,37,63,112,17,103,13,41,23,21,39,15,9,0,80,5,0,7,47,60,73,77,15,7,48,55,0,32,81,9,0,74,60,0,37,77,9,0,57,26,32,50,0,25,58,23,58,71,15,9,0,100,5,0,7,47,60,73,77,15,7,51,63,100,20,0,37,33,48,113,16,43,27,31,14,9,0,21,0,13,61,25,38,61,92,13,24,9,0,63,37,19,21,44,11,5,0,7,26,56,73,67,15,7,30,44,35,77,13,55,0,36,0,23,15,5,0,7,27,80,73,52,7,34,71,0,63,100,0,13,70,0,70,0,41,48,25,31,39,42,15,25,0,73,42,44,45,52,58,35,43,46,19,13,0,90,112,0,41,22,31,39,42,15,9,5,0,7,27,52,73,52,15,7,28,65,0,80,68,62,99,0,33,40,71,17,56,56,17,14,0,41,22,19,39,42,15,9,0,37,22,48,41,0,21,41,52,73,19,39,42,15,9,0,21,18,0,13,61,32,33,38,61,57,37,40,65,42,18,13,9,0,23,17,71,0,45,61,0,85,0,45,66,29,23,43,46,19,33,34,13,9,0,80,102,37,18,15,35,38,11,5,0,7,64,78,73,111,15,7,49,54,30,36,47,56,0,30,25,13,0,64,50,59,25,55,67,26,25,35,55,88,25,22,17,13,9,5,1,0,3,53,2,60,2,40,2,27,2,38,78,49,19,66,80,78,2,57,3,0,89,0,80,10,80,0,40,64,56,56,52,70,0,3,55,88,73,215,63,87,69,74,82,68,83,75,79,82,95,98,3,0,3,61,83,121,74,111,83,100,61,119,87,113,117,80,68,83,75,79,82,95,98,3,0,93,39,0,3,61,69,63,3,32,23,19,14,8,13,4,54,23,30,6,0,6,71,73,49,7,54,58,40,10,0,6,57,78,68,7,44,30,27,31,25,22,42,33,48,62,36,57,30,30,25,22,33,27,47,36,18,13,11,5,0,27,1,0,3,44,69,63,3,31,18,23,8,15,22,4,53,22,30,6,0,27,22,61,59,6,0,29,31,43,35,51,13,10,5,0,26,1,0,3,92,3,48,0,57,7,56,7,32,68,49,45,5,1,0,3,76,57,3,35,0,7,34,71,7,17,41,42,40,28,19,33,23,34,27,33,18,17,30,35,22,26,13,59,33,16,37,25,21,34,39,26,30,11,0,36,52,31,35,20,26,25,15,27,50,30,35,20,27,34,15,26,31,35,16,41,23,22,31,24,25,21,11,5,0,7,49,29,21,7,15,51,0,19,5,0,7,44,77,44,58,45,115,59,7,75,15,28,27,15,39,0,24,74,9,0,112,0,59,0,41,55,26,31,10,5,0,7,51,73,78,22,7,35,49,0,41,5,0,7,26,22,7,18,49,0,61,59,34,5,0,7,69,66,95,48,15,7,74,15,28,31,24,16,23,39,0,27,35,9,0,57,0,21,26,52,31,9,53,0,58,0,33,61,67,40,98,0,31,43,33,57,22,17,13,69,9,0,45,13,76,25,38,42,70,73,13,24,9,0,61,63,52,65,9,0,48,75,76,42,27,63,13,30,0,37,54,16,44,9,0,28,61,5,0,7,39,76,74,57,7,46,59,0,35,52,0,27,5,0,7,37,52,64,89,105,48,15,7,75,15,27,31,26,24,24,39,0,62,0,32,43,0,77,16,30,54,90,15,66,0,84,0,79,29,46,18,0,20,53,55,19,39,76,0,43,45,53,22,17,0,80,13,0,33,44,75,13,0,55,51,28,15,0,60,0,24,44,61,0,20,57,33,29,14,9,0,69,82,64,9,0,32,5,1,0,3,53,28,3,0,79,10,79,0,70,66,0,68,38,0,3,77,10,66,64,78,21,76,21,98,25,92,25,55,3,44,28,29,23,20,4,0,26,23,31,29,58,77,88,0,72,34,61,34,9,0,69,42,9,5,0,36,35,82,50,9,5,0,32,50,82,0,64,57,0,35,107,0,48,52,17,0,70,25,13,0,70,81,40,42,18,20,59,13,9,5,0,30,48,82,53,53,9,5,0,34,40,0,61,84,61,9,0,60,82,60,9,0,82,70,49,9,5,0,16,34,96,5,0,24,79,64,0,32,0,71,0,55,93,0,85,0,24,28,13,0,52,0,49,36,77,56,85,0,41,60,93,27,21,0,17,13,9,5,0,46,71,64,0,50,46,61,0,48,0,68,85,48,48,24,61,0,101,88,48,48,24,17,13,9,5,0,56,45,33,5,0,19,1,0,0,79,10,79,0,3,50,3,18,0,17,38,48,13,43,65,50,31,37,77,92,11,5,0,7,75,71,59,7,28,70,40,11,0,29,38,0,45,47,82,65,115,127,73,68,20,13,11,0,69,32,31,39,0,62,110,78,0,79,89,18,15,9,0,25,5,0,7,64,73,76,7,20,28,26,11,5,0,7,68,75,70,7,33,28,36,11,5,0,7,68,67,71,7,25,28,19,11,5,1,0,3,53,28,3,0,79,10,79,0,16,16,51,32,23,21,20,18,19,28,17,0,13,14,20,19,10,2,0,32,24,37,0],"data":{"version":3,"file":"eslintrc.cjs","sources":["file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/config-array/ignore-pattern.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/config-array/extracted-config.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/config-array/config-array.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/config-array/config-dependency.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/config-array/override-tester.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/config-array/index.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/config-ops.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/deprecation-warnings.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/ajv.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/conf/config-schema.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/conf/environments.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/config-validator.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/naming.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/relative-module-resolver.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/config-array-factory.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/cascading-config-array-factory.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/flat-compat.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/index.js"],"sourcesContent":["/**\n * @fileoverview `IgnorePattern` class.\n *\n * `IgnorePattern` class has the set of glob patterns and the base path.\n *\n * It provides two static methods.\n *\n * - `IgnorePattern.createDefaultIgnore(cwd)`\n *      Create the default predicate function.\n * - `IgnorePattern.createIgnore(ignorePatterns)`\n *      Create the predicate function from multiple `IgnorePattern` objects.\n *\n * It provides two properties and a method.\n *\n * - `patterns`\n *      The glob patterns that ignore to lint.\n * - `basePath`\n *      The base path of the glob patterns. If absolute paths existed in the\n *      glob patterns, those are handled as relative paths to the base path.\n * - `getPatternsRelativeTo(basePath)`\n *      Get `patterns` as modified for a given base path. It modifies the\n *      absolute paths in the patterns as prepending the difference of two base\n *      paths.\n *\n * `ConfigArrayFactory` creates `IgnorePattern` objects when it processes\n * `ignorePatterns` properties.\n *\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport assert from \"assert\";\nimport path from \"path\";\nimport ignore from \"ignore\";\nimport debugOrig from \"debug\";\n\nconst debug = debugOrig(\"eslintrc:ignore-pattern\");\n\n/** @typedef {ReturnType<import(\"ignore\").default>} Ignore */\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Get the path to the common ancestor directory of given paths.\n * @param {string[]} sourcePaths The paths to calculate the common ancestor.\n * @returns {string} The path to the common ancestor directory.\n */\nfunction getCommonAncestorPath(sourcePaths) {\n    let result = sourcePaths[0];\n\n    for (let i = 1; i < sourcePaths.length; ++i) {\n        const a = result;\n        const b = sourcePaths[i];\n\n        // Set the shorter one (it's the common ancestor if one includes the other).\n        result = a.length < b.length ? a : b;\n\n        // Set the common ancestor.\n        for (let j = 0, lastSepPos = 0; j < a.length && j < b.length; ++j) {\n            if (a[j] !== b[j]) {\n                result = a.slice(0, lastSepPos);\n                break;\n            }\n            if (a[j] === path.sep) {\n                lastSepPos = j;\n            }\n        }\n    }\n\n    let resolvedResult = result || path.sep;\n\n    // if Windows common ancestor is root of drive must have trailing slash to be absolute.\n    if (resolvedResult && resolvedResult.endsWith(\":\") && process.platform === \"win32\") {\n        resolvedResult += path.sep;\n    }\n    return resolvedResult;\n}\n\n/**\n * Make relative path.\n * @param {string} from The source path to get relative path.\n * @param {string} to The destination path to get relative path.\n * @returns {string} The relative path.\n */\nfunction relative(from, to) {\n    const relPath = path.relative(from, to);\n\n    if (path.sep === \"/\") {\n        return relPath;\n    }\n    return relPath.split(path.sep).join(\"/\");\n}\n\n/**\n * Get the trailing slash if existed.\n * @param {string} filePath The path to check.\n * @returns {string} The trailing slash if existed.\n */\nfunction dirSuffix(filePath) {\n    const isDir = (\n        filePath.endsWith(path.sep) ||\n        (process.platform === \"win32\" && filePath.endsWith(\"/\"))\n    );\n\n    return isDir ? \"/\" : \"\";\n}\n\nconst DefaultPatterns = Object.freeze([\"/**/node_modules/*\"]);\nconst DotPatterns = Object.freeze([\".*\", \"!.eslintrc.*\", \"!../\"]);\n\n//------------------------------------------------------------------------------\n// Public\n//------------------------------------------------------------------------------\n\nclass IgnorePattern {\n\n    /**\n     * The default patterns.\n     * @type {string[]}\n     */\n    static get DefaultPatterns() {\n        return DefaultPatterns;\n    }\n\n    /**\n     * Create the default predicate function.\n     * @param {string} cwd The current working directory.\n     * @returns {((filePath:string, dot:boolean) => boolean) & {basePath:string; patterns:string[]}}\n     * The preficate function.\n     * The first argument is an absolute path that is checked.\n     * The second argument is the flag to not ignore dotfiles.\n     * If the predicate function returned `true`, it means the path should be ignored.\n     */\n    static createDefaultIgnore(cwd) {\n        return this.createIgnore([new IgnorePattern(DefaultPatterns, cwd)]);\n    }\n\n    /**\n     * Create the predicate function from multiple `IgnorePattern` objects.\n     * @param {IgnorePattern[]} ignorePatterns The list of ignore patterns.\n     * @returns {((filePath:string, dot?:boolean) => boolean) & {basePath:string; patterns:string[]}}\n     * The preficate function.\n     * The first argument is an absolute path that is checked.\n     * The second argument is the flag to not ignore dotfiles.\n     * If the predicate function returned `true`, it means the path should be ignored.\n     */\n    static createIgnore(ignorePatterns) {\n        debug(\"Create with: %o\", ignorePatterns);\n\n        const basePath = getCommonAncestorPath(ignorePatterns.map(p => p.basePath));\n        const patterns = [].concat(\n            ...ignorePatterns.map(p => p.getPatternsRelativeTo(basePath))\n        );\n        const ig = ignore({ allowRelativePaths: true }).add([...DotPatterns, ...patterns]);\n        const dotIg = ignore({ allowRelativePaths: true }).add(patterns);\n\n        debug(\"  processed: %o\", { basePath, patterns });\n\n        return Object.assign(\n            (filePath, dot = false) => {\n                assert(path.isAbsolute(filePath), \"'filePath' should be an absolute path.\");\n                const relPathRaw = relative(basePath, filePath);\n                const relPath = relPathRaw && (relPathRaw + dirSuffix(filePath));\n                const adoptedIg = dot ? dotIg : ig;\n                const result = relPath !== \"\" && adoptedIg.ignores(relPath);\n\n                debug(\"Check\", { filePath, dot, relativePath: relPath, result });\n                return result;\n            },\n            { basePath, patterns }\n        );\n    }\n\n    /**\n     * Initialize a new `IgnorePattern` instance.\n     * @param {string[]} patterns The glob patterns that ignore to lint.\n     * @param {string} basePath The base path of `patterns`.\n     */\n    constructor(patterns, basePath) {\n        assert(path.isAbsolute(basePath), \"'basePath' should be an absolute path.\");\n\n        /**\n         * The glob patterns that ignore to lint.\n         * @type {string[]}\n         */\n        this.patterns = patterns;\n\n        /**\n         * The base path of `patterns`.\n         * @type {string}\n         */\n        this.basePath = basePath;\n\n        /**\n         * If `true` then patterns which don't start with `/` will match the paths to the outside of `basePath`. Defaults to `false`.\n         *\n         * It's set `true` for `.eslintignore`, `package.json`, and `--ignore-path` for backward compatibility.\n         * It's `false` as-is for `ignorePatterns` property in config files.\n         * @type {boolean}\n         */\n        this.loose = false;\n    }\n\n    /**\n     * Get `patterns` as modified for a given base path. It modifies the\n     * absolute paths in the patterns as prepending the difference of two base\n     * paths.\n     * @param {string} newBasePath The base path.\n     * @returns {string[]} Modifired patterns.\n     */\n    getPatternsRelativeTo(newBasePath) {\n        assert(path.isAbsolute(newBasePath), \"'newBasePath' should be an absolute path.\");\n        const { basePath, loose, patterns } = this;\n\n        if (newBasePath === basePath) {\n            return patterns;\n        }\n        const prefix = `/${relative(newBasePath, basePath)}`;\n\n        return patterns.map(pattern => {\n            const negative = pattern.startsWith(\"!\");\n            const head = negative ? \"!\" : \"\";\n            const body = negative ? pattern.slice(1) : pattern;\n\n            if (body.startsWith(\"/\") || body.startsWith(\"../\")) {\n                return `${head}${prefix}${body}`;\n            }\n            return loose ? pattern : `${head}${prefix}/**/${body}`;\n        });\n    }\n}\n\nexport { IgnorePattern };\n","/**\n * @fileoverview `ExtractedConfig` class.\n *\n * `ExtractedConfig` class expresses a final configuration for a specific file.\n *\n * It provides one method.\n *\n * - `toCompatibleObjectAsConfigFileContent()`\n *      Convert this configuration to the compatible object as the content of\n *      config files. It converts the loaded parser and plugins to strings.\n *      `CLIEngine#getConfigForFile(filePath)` method uses this method.\n *\n * `ConfigArray#extractConfig(filePath)` creates a `ExtractedConfig` instance.\n *\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\nimport { IgnorePattern } from \"./ignore-pattern.js\";\n\n// For VSCode intellisense\n/** @typedef {import(\"../../shared/types\").ConfigData} ConfigData */\n/** @typedef {import(\"../../shared/types\").GlobalConf} GlobalConf */\n/** @typedef {import(\"../../shared/types\").SeverityConf} SeverityConf */\n/** @typedef {import(\"./config-dependency\").DependentParser} DependentParser */\n/** @typedef {import(\"./config-dependency\").DependentPlugin} DependentPlugin */\n\n/**\n * Check if `xs` starts with `ys`.\n * @template T\n * @param {T[]} xs The array to check.\n * @param {T[]} ys The array that may be the first part of `xs`.\n * @returns {boolean} `true` if `xs` starts with `ys`.\n */\nfunction startsWith(xs, ys) {\n    return xs.length >= ys.length && ys.every((y, i) => y === xs[i]);\n}\n\n/**\n * The class for extracted config data.\n */\nclass ExtractedConfig {\n    constructor() {\n\n        /**\n         * The config name what `noInlineConfig` setting came from.\n         * @type {string}\n         */\n        this.configNameOfNoInlineConfig = \"\";\n\n        /**\n         * Environments.\n         * @type {Record<string, boolean>}\n         */\n        this.env = {};\n\n        /**\n         * Global variables.\n         * @type {Record<string, GlobalConf>}\n         */\n        this.globals = {};\n\n        /**\n         * The glob patterns that ignore to lint.\n         * @type {(((filePath:string, dot?:boolean) => boolean) & { basePath:string; patterns:string[] }) | undefined}\n         */\n        this.ignores = void 0;\n\n        /**\n         * The flag that disables directive comments.\n         * @type {boolean|undefined}\n         */\n        this.noInlineConfig = void 0;\n\n        /**\n         * Parser definition.\n         * @type {DependentParser|null}\n         */\n        this.parser = null;\n\n        /**\n         * Options for the parser.\n         * @type {Object}\n         */\n        this.parserOptions = {};\n\n        /**\n         * Plugin definitions.\n         * @type {Record<string, DependentPlugin>}\n         */\n        this.plugins = {};\n\n        /**\n         * Processor ID.\n         * @type {string|null}\n         */\n        this.processor = null;\n\n        /**\n         * The flag that reports unused `eslint-disable` directive comments.\n         * @type {boolean|undefined}\n         */\n        this.reportUnusedDisableDirectives = void 0;\n\n        /**\n         * Rule settings.\n         * @type {Record<string, [SeverityConf, ...any[]]>}\n         */\n        this.rules = {};\n\n        /**\n         * Shared settings.\n         * @type {Object}\n         */\n        this.settings = {};\n    }\n\n    /**\n     * Convert this config to the compatible object as a config file content.\n     * @returns {ConfigData} The converted object.\n     */\n    toCompatibleObjectAsConfigFileContent() {\n        const {\n            /* eslint-disable no-unused-vars */\n            configNameOfNoInlineConfig: _ignore1,\n            processor: _ignore2,\n            /* eslint-enable no-unused-vars */\n            ignores,\n            ...config\n        } = this;\n\n        config.parser = config.parser && config.parser.filePath;\n        config.plugins = Object.keys(config.plugins).filter(Boolean).reverse();\n        config.ignorePatterns = ignores ? ignores.patterns : [];\n\n        // Strip the default patterns from `ignorePatterns`.\n        if (startsWith(config.ignorePatterns, IgnorePattern.DefaultPatterns)) {\n            config.ignorePatterns =\n                config.ignorePatterns.slice(IgnorePattern.DefaultPatterns.length);\n        }\n\n        return config;\n    }\n}\n\nexport { ExtractedConfig };\n","/**\n * @fileoverview `ConfigArray` class.\n *\n * `ConfigArray` class expresses the full of a configuration. It has the entry\n * config file, base config files that were extended, loaded parsers, and loaded\n * plugins.\n *\n * `ConfigArray` class provides three properties and two methods.\n *\n * - `pluginEnvironments`\n * - `pluginProcessors`\n * - `pluginRules`\n *      The `Map` objects that contain the members of all plugins that this\n *      config array contains. Those map objects don't have mutation methods.\n *      Those keys are the member ID such as `pluginId/memberName`.\n * - `isRoot()`\n *      If `true` then this configuration has `root:true` property.\n * - `extractConfig(filePath)`\n *      Extract the final configuration for a given file. This means merging\n *      every config array element which that `criteria` property matched. The\n *      `filePath` argument must be an absolute path.\n *\n * `ConfigArrayFactory` provides the loading logic of config files.\n *\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport { ExtractedConfig } from \"./extracted-config.js\";\nimport { IgnorePattern } from \"./ignore-pattern.js\";\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n// Define types for VSCode IntelliSense.\n/** @typedef {import(\"../../shared/types\").Environment} Environment */\n/** @typedef {import(\"../../shared/types\").GlobalConf} GlobalConf */\n/** @typedef {import(\"../../shared/types\").RuleConf} RuleConf */\n/** @typedef {import(\"../../shared/types\").Rule} Rule */\n/** @typedef {import(\"../../shared/types\").Plugin} Plugin */\n/** @typedef {import(\"../../shared/types\").Processor} Processor */\n/** @typedef {import(\"./config-dependency\").DependentParser} DependentParser */\n/** @typedef {import(\"./config-dependency\").DependentPlugin} DependentPlugin */\n/** @typedef {import(\"./override-tester\")[\"OverrideTester\"]} OverrideTester */\n\n/**\n * @typedef {Object} ConfigArrayElement\n * @property {string} name The name of this config element.\n * @property {string} filePath The path to the source file of this config element.\n * @property {InstanceType<OverrideTester>|null} criteria The tester for the `files` and `excludedFiles` of this config element.\n * @property {Record<string, boolean>|undefined} env The environment settings.\n * @property {Record<string, GlobalConf>|undefined} globals The global variable settings.\n * @property {IgnorePattern|undefined} ignorePattern The ignore patterns.\n * @property {boolean|undefined} noInlineConfig The flag that disables directive comments.\n * @property {DependentParser|undefined} parser The parser loader.\n * @property {Object|undefined} parserOptions The parser options.\n * @property {Record<string, DependentPlugin>|undefined} plugins The plugin loaders.\n * @property {string|undefined} processor The processor name to refer plugin's processor.\n * @property {boolean|undefined} reportUnusedDisableDirectives The flag to report unused `eslint-disable` comments.\n * @property {boolean|undefined} root The flag to express root.\n * @property {Record<string, RuleConf>|undefined} rules The rule settings\n * @property {Object|undefined} settings The shared settings.\n * @property {\"config\" | \"ignore\" | \"implicit-processor\"} type The element type.\n */\n\n/**\n * @typedef {Object} ConfigArrayInternalSlots\n * @property {Map<string, ExtractedConfig>} cache The cache to extract configs.\n * @property {ReadonlyMap<string, Environment>|null} envMap The map from environment ID to environment definition.\n * @property {ReadonlyMap<string, Processor>|null} processorMap The map from processor ID to environment definition.\n * @property {ReadonlyMap<string, Rule>|null} ruleMap The map from rule ID to rule definition.\n */\n\n/** @type {WeakMap<ConfigArray, ConfigArrayInternalSlots>} */\nconst internalSlotsMap = new class extends WeakMap {\n    get(key) {\n        let value = super.get(key);\n\n        if (!value) {\n            value = {\n                cache: new Map(),\n                envMap: null,\n                processorMap: null,\n                ruleMap: null\n            };\n            super.set(key, value);\n        }\n\n        return value;\n    }\n}();\n\n/**\n * Get the indices which are matched to a given file.\n * @param {ConfigArrayElement[]} elements The elements.\n * @param {string} filePath The path to a target file.\n * @returns {number[]} The indices.\n */\nfunction getMatchedIndices(elements, filePath) {\n    const indices = [];\n\n    for (let i = elements.length - 1; i >= 0; --i) {\n        const element = elements[i];\n\n        if (!element.criteria || (filePath && element.criteria.test(filePath))) {\n            indices.push(i);\n        }\n    }\n\n    return indices;\n}\n\n/**\n * Check if a value is a non-null object.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is a non-null object.\n */\nfunction isNonNullObject(x) {\n    return typeof x === \"object\" && x !== null;\n}\n\n/**\n * Merge two objects.\n *\n * Assign every property values of `y` to `x` if `x` doesn't have the property.\n * If `x`'s property value is an object, it does recursive.\n * @param {Object} target The destination to merge\n * @param {Object|undefined} source The source to merge.\n * @returns {void}\n */\nfunction mergeWithoutOverwrite(target, source) {\n    if (!isNonNullObject(source)) {\n        return;\n    }\n\n    for (const key of Object.keys(source)) {\n        if (key === \"__proto__\") {\n            continue;\n        }\n\n        if (isNonNullObject(target[key])) {\n            mergeWithoutOverwrite(target[key], source[key]);\n        } else if (target[key] === void 0) {\n            if (isNonNullObject(source[key])) {\n                target[key] = Array.isArray(source[key]) ? [] : {};\n                mergeWithoutOverwrite(target[key], source[key]);\n            } else if (source[key] !== void 0) {\n                target[key] = source[key];\n            }\n        }\n    }\n}\n\n/**\n * The error for plugin conflicts.\n */\nclass PluginConflictError extends Error {\n\n    /**\n     * Initialize this error object.\n     * @param {string} pluginId The plugin ID.\n     * @param {{filePath:string, importerName:string}[]} plugins The resolved plugins.\n     */\n    constructor(pluginId, plugins) {\n        super(`Plugin \"${pluginId}\" was conflicted between ${plugins.map(p => `\"${p.importerName}\"`).join(\" and \")}.`);\n        this.messageTemplate = \"plugin-conflict\";\n        this.messageData = { pluginId, plugins };\n    }\n}\n\n/**\n * Merge plugins.\n * `target`'s definition is prior to `source`'s.\n * @param {Record<string, DependentPlugin>} target The destination to merge\n * @param {Record<string, DependentPlugin>|undefined} source The source to merge.\n * @returns {void}\n */\nfunction mergePlugins(target, source) {\n    if (!isNonNullObject(source)) {\n        return;\n    }\n\n    for (const key of Object.keys(source)) {\n        if (key === \"__proto__\") {\n            continue;\n        }\n        const targetValue = target[key];\n        const sourceValue = source[key];\n\n        // Adopt the plugin which was found at first.\n        if (targetValue === void 0) {\n            if (sourceValue.error) {\n                throw sourceValue.error;\n            }\n            target[key] = sourceValue;\n        } else if (sourceValue.filePath !== targetValue.filePath) {\n            throw new PluginConflictError(key, [\n                {\n                    filePath: targetValue.filePath,\n                    importerName: targetValue.importerName\n                },\n                {\n                    filePath: sourceValue.filePath,\n                    importerName: sourceValue.importerName\n                }\n            ]);\n        }\n    }\n}\n\n/**\n * Merge rule configs.\n * `target`'s definition is prior to `source`'s.\n * @param {Record<string, Array>} target The destination to merge\n * @param {Record<string, RuleConf>|undefined} source The source to merge.\n * @returns {void}\n */\nfunction mergeRuleConfigs(target, source) {\n    if (!isNonNullObject(source)) {\n        return;\n    }\n\n    for (const key of Object.keys(source)) {\n        if (key === \"__proto__\") {\n            continue;\n        }\n        const targetDef = target[key];\n        const sourceDef = source[key];\n\n        // Adopt the rule config which was found at first.\n        if (targetDef === void 0) {\n            if (Array.isArray(sourceDef)) {\n                target[key] = [...sourceDef];\n            } else {\n                target[key] = [sourceDef];\n            }\n\n        /*\n         * If the first found rule config is severity only and the current rule\n         * config has options, merge the severity and the options.\n         */\n        } else if (\n            targetDef.length === 1 &&\n            Array.isArray(sourceDef) &&\n            sourceDef.length >= 2\n        ) {\n            targetDef.push(...sourceDef.slice(1));\n        }\n    }\n}\n\n/**\n * Create the extracted config.\n * @param {ConfigArray} instance The config elements.\n * @param {number[]} indices The indices to use.\n * @returns {ExtractedConfig} The extracted config.\n */\nfunction createConfig(instance, indices) {\n    const config = new ExtractedConfig();\n    const ignorePatterns = [];\n\n    // Merge elements.\n    for (const index of indices) {\n        const element = instance[index];\n\n        // Adopt the parser which was found at first.\n        if (!config.parser && element.parser) {\n            if (element.parser.error) {\n                throw element.parser.error;\n            }\n            config.parser = element.parser;\n        }\n\n        // Adopt the processor which was found at first.\n        if (!config.processor && element.processor) {\n            config.processor = element.processor;\n        }\n\n        // Adopt the noInlineConfig which was found at first.\n        if (config.noInlineConfig === void 0 && element.noInlineConfig !== void 0) {\n            config.noInlineConfig = element.noInlineConfig;\n            config.configNameOfNoInlineConfig = element.name;\n        }\n\n        // Adopt the reportUnusedDisableDirectives which was found at first.\n        if (config.reportUnusedDisableDirectives === void 0 && element.reportUnusedDisableDirectives !== void 0) {\n            config.reportUnusedDisableDirectives = element.reportUnusedDisableDirectives;\n        }\n\n        // Collect ignorePatterns\n        if (element.ignorePattern) {\n            ignorePatterns.push(element.ignorePattern);\n        }\n\n        // Merge others.\n        mergeWithoutOverwrite(config.env, element.env);\n        mergeWithoutOverwrite(config.globals, element.globals);\n        mergeWithoutOverwrite(config.parserOptions, element.parserOptions);\n        mergeWithoutOverwrite(config.settings, element.settings);\n        mergePlugins(config.plugins, element.plugins);\n        mergeRuleConfigs(config.rules, element.rules);\n    }\n\n    // Create the predicate function for ignore patterns.\n    if (ignorePatterns.length > 0) {\n        config.ignores = IgnorePattern.createIgnore(ignorePatterns.reverse());\n    }\n\n    return config;\n}\n\n/**\n * Collect definitions.\n * @template T, U\n * @param {string} pluginId The plugin ID for prefix.\n * @param {Record<string,T>} defs The definitions to collect.\n * @param {Map<string, U>} map The map to output.\n * @param {function(T): U} [normalize] The normalize function for each value.\n * @returns {void}\n */\nfunction collect(pluginId, defs, map, normalize) {\n    if (defs) {\n        const prefix = pluginId && `${pluginId}/`;\n\n        for (const [key, value] of Object.entries(defs)) {\n            map.set(\n                `${prefix}${key}`,\n                normalize ? normalize(value) : value\n            );\n        }\n    }\n}\n\n/**\n * Normalize a rule definition.\n * @param {Function|Rule} rule The rule definition to normalize.\n * @returns {Rule} The normalized rule definition.\n */\nfunction normalizePluginRule(rule) {\n    return typeof rule === \"function\" ? { create: rule } : rule;\n}\n\n/**\n * Delete the mutation methods from a given map.\n * @param {Map<any, any>} map The map object to delete.\n * @returns {void}\n */\nfunction deleteMutationMethods(map) {\n    Object.defineProperties(map, {\n        clear: { configurable: true, value: void 0 },\n        delete: { configurable: true, value: void 0 },\n        set: { configurable: true, value: void 0 }\n    });\n}\n\n/**\n * Create `envMap`, `processorMap`, `ruleMap` with the plugins in the config array.\n * @param {ConfigArrayElement[]} elements The config elements.\n * @param {ConfigArrayInternalSlots} slots The internal slots.\n * @returns {void}\n */\nfunction initPluginMemberMaps(elements, slots) {\n    const processed = new Set();\n\n    slots.envMap = new Map();\n    slots.processorMap = new Map();\n    slots.ruleMap = new Map();\n\n    for (const element of elements) {\n        if (!element.plugins) {\n            continue;\n        }\n\n        for (const [pluginId, value] of Object.entries(element.plugins)) {\n            const plugin = value.definition;\n\n            if (!plugin || processed.has(pluginId)) {\n                continue;\n            }\n            processed.add(pluginId);\n\n            collect(pluginId, plugin.environments, slots.envMap);\n            collect(pluginId, plugin.processors, slots.processorMap);\n            collect(pluginId, plugin.rules, slots.ruleMap, normalizePluginRule);\n        }\n    }\n\n    deleteMutationMethods(slots.envMap);\n    deleteMutationMethods(slots.processorMap);\n    deleteMutationMethods(slots.ruleMap);\n}\n\n/**\n * Create `envMap`, `processorMap`, `ruleMap` with the plugins in the config array.\n * @param {ConfigArray} instance The config elements.\n * @returns {ConfigArrayInternalSlots} The extracted config.\n */\nfunction ensurePluginMemberMaps(instance) {\n    const slots = internalSlotsMap.get(instance);\n\n    if (!slots.ruleMap) {\n        initPluginMemberMaps(instance, slots);\n    }\n\n    return slots;\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * The Config Array.\n *\n * `ConfigArray` instance contains all settings, parsers, and plugins.\n * You need to call `ConfigArray#extractConfig(filePath)` method in order to\n * extract, merge and get only the config data which is related to an arbitrary\n * file.\n * @extends {Array<ConfigArrayElement>}\n */\nclass ConfigArray extends Array {\n\n    /**\n     * Get the plugin environments.\n     * The returned map cannot be mutated.\n     * @type {ReadonlyMap<string, Environment>} The plugin environments.\n     */\n    get pluginEnvironments() {\n        return ensurePluginMemberMaps(this).envMap;\n    }\n\n    /**\n     * Get the plugin processors.\n     * The returned map cannot be mutated.\n     * @type {ReadonlyMap<string, Processor>} The plugin processors.\n     */\n    get pluginProcessors() {\n        return ensurePluginMemberMaps(this).processorMap;\n    }\n\n    /**\n     * Get the plugin rules.\n     * The returned map cannot be mutated.\n     * @returns {ReadonlyMap<string, Rule>} The plugin rules.\n     */\n    get pluginRules() {\n        return ensurePluginMemberMaps(this).ruleMap;\n    }\n\n    /**\n     * Check if this config has `root` flag.\n     * @returns {boolean} `true` if this config array is root.\n     */\n    isRoot() {\n        for (let i = this.length - 1; i >= 0; --i) {\n            const root = this[i].root;\n\n            if (typeof root === \"boolean\") {\n                return root;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Extract the config data which is related to a given file.\n     * @param {string} filePath The absolute path to the target file.\n     * @returns {ExtractedConfig} The extracted config data.\n     */\n    extractConfig(filePath) {\n        const { cache } = internalSlotsMap.get(this);\n        const indices = getMatchedIndices(this, filePath);\n        const cacheKey = indices.join(\",\");\n\n        if (!cache.has(cacheKey)) {\n            cache.set(cacheKey, createConfig(this, indices));\n        }\n\n        return cache.get(cacheKey);\n    }\n\n    /**\n     * Check if a given path is an additional lint target.\n     * @param {string} filePath The absolute path to the target file.\n     * @returns {boolean} `true` if the file is an additional lint target.\n     */\n    isAdditionalTargetPath(filePath) {\n        for (const { criteria, type } of this) {\n            if (\n                type === \"config\" &&\n                criteria &&\n                !criteria.endsWithWildcard &&\n                criteria.test(filePath)\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Get the used extracted configs.\n * CLIEngine will use this method to collect used deprecated rules.\n * @param {ConfigArray} instance The config array object to get.\n * @returns {ExtractedConfig[]} The used extracted configs.\n * @private\n */\nfunction getUsedExtractedConfigs(instance) {\n    const { cache } = internalSlotsMap.get(instance);\n\n    return Array.from(cache.values());\n}\n\n\nexport {\n    ConfigArray,\n    getUsedExtractedConfigs\n};\n","/**\n * @fileoverview `ConfigDependency` class.\n *\n * `ConfigDependency` class expresses a loaded parser or plugin.\n *\n * If the parser or plugin was loaded successfully, it has `definition` property\n * and `filePath` property. Otherwise, it has `error` property.\n *\n * When `JSON.stringify()` converted a `ConfigDependency` object to a JSON, it\n * omits `definition` property.\n *\n * `ConfigArrayFactory` creates `ConfigDependency` objects when it loads parsers\n * or plugins.\n *\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\nimport util from \"util\";\n\n/**\n * The class is to store parsers or plugins.\n * This class hides the loaded object from `JSON.stringify()` and `console.log`.\n * @template T\n */\nclass ConfigDependency {\n\n    /**\n     * Initialize this instance.\n     * @param {Object} data The dependency data.\n     * @param {T} [data.definition] The dependency if the loading succeeded.\n     * @param {Error} [data.error] The error object if the loading failed.\n     * @param {string} [data.filePath] The actual path to the dependency if the loading succeeded.\n     * @param {string} data.id The ID of this dependency.\n     * @param {string} data.importerName The name of the config file which loads this dependency.\n     * @param {string} data.importerPath The path to the config file which loads this dependency.\n     */\n    constructor({\n        definition = null,\n        error = null,\n        filePath = null,\n        id,\n        importerName,\n        importerPath\n    }) {\n\n        /**\n         * The loaded dependency if the loading succeeded.\n         * @type {T|null}\n         */\n        this.definition = definition;\n\n        /**\n         * The error object if the loading failed.\n         * @type {Error|null}\n         */\n        this.error = error;\n\n        /**\n         * The loaded dependency if the loading succeeded.\n         * @type {string|null}\n         */\n        this.filePath = filePath;\n\n        /**\n         * The ID of this dependency.\n         * @type {string}\n         */\n        this.id = id;\n\n        /**\n         * The name of the config file which loads this dependency.\n         * @type {string}\n         */\n        this.importerName = importerName;\n\n        /**\n         * The path to the config file which loads this dependency.\n         * @type {string}\n         */\n        this.importerPath = importerPath;\n    }\n\n    // eslint-disable-next-line jsdoc/require-description\n    /**\n     * @returns {Object} a JSON compatible object.\n     */\n    toJSON() {\n        const obj = this[util.inspect.custom]();\n\n        // Display `error.message` (`Error#message` is unenumerable).\n        if (obj.error instanceof Error) {\n            obj.error = { ...obj.error, message: obj.error.message };\n        }\n\n        return obj;\n    }\n\n    // eslint-disable-next-line jsdoc/require-description\n    /**\n     * @returns {Object} an object to display by `console.log()`.\n     */\n    [util.inspect.custom]() {\n        const {\n            definition: _ignore, // eslint-disable-line no-unused-vars\n            ...obj\n        } = this;\n\n        return obj;\n    }\n}\n\n/** @typedef {ConfigDependency<import(\"../../shared/types\").Parser>} DependentParser */\n/** @typedef {ConfigDependency<import(\"../../shared/types\").Plugin>} DependentPlugin */\n\nexport { ConfigDependency };\n","/**\n * @fileoverview `OverrideTester` class.\n *\n * `OverrideTester` class handles `files` property and `excludedFiles` property\n * of `overrides` config.\n *\n * It provides one method.\n *\n * - `test(filePath)`\n *      Test if a file path matches the pair of `files` property and\n *      `excludedFiles` property. The `filePath` argument must be an absolute\n *      path.\n *\n * `ConfigArrayFactory` creates `OverrideTester` objects when it processes\n * `overrides` properties.\n *\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\nimport assert from \"assert\";\nimport path from \"path\";\nimport util from \"util\";\nimport minimatch from \"minimatch\";\n\nconst { Minimatch } = minimatch;\n\nconst minimatchOpts = { dot: true, matchBase: true };\n\n/**\n * @typedef {Object} Pattern\n * @property {InstanceType<Minimatch>[] | null} includes The positive matchers.\n * @property {InstanceType<Minimatch>[] | null} excludes The negative matchers.\n */\n\n/**\n * Normalize a given pattern to an array.\n * @param {string|string[]|undefined} patterns A glob pattern or an array of glob patterns.\n * @returns {string[]|null} Normalized patterns.\n * @private\n */\nfunction normalizePatterns(patterns) {\n    if (Array.isArray(patterns)) {\n        return patterns.filter(Boolean);\n    }\n    if (typeof patterns === \"string\" && patterns) {\n        return [patterns];\n    }\n    return [];\n}\n\n/**\n * Create the matchers of given patterns.\n * @param {string[]} patterns The patterns.\n * @returns {InstanceType<Minimatch>[] | null} The matchers.\n */\nfunction toMatcher(patterns) {\n    if (patterns.length === 0) {\n        return null;\n    }\n    return patterns.map(pattern => {\n        if (/^\\.[/\\\\]/u.test(pattern)) {\n            return new Minimatch(\n                pattern.slice(2),\n\n                // `./*.js` should not match with `subdir/foo.js`\n                { ...minimatchOpts, matchBase: false }\n            );\n        }\n        return new Minimatch(pattern, minimatchOpts);\n    });\n}\n\n/**\n * Convert a given matcher to string.\n * @param {Pattern} matchers The matchers.\n * @returns {string} The string expression of the matcher.\n */\nfunction patternToJson({ includes, excludes }) {\n    return {\n        includes: includes && includes.map(m => m.pattern),\n        excludes: excludes && excludes.map(m => m.pattern)\n    };\n}\n\n/**\n * The class to test given paths are matched by the patterns.\n */\nclass OverrideTester {\n\n    /**\n     * Create a tester with given criteria.\n     * If there are no criteria, returns `null`.\n     * @param {string|string[]} files The glob patterns for included files.\n     * @param {string|string[]} excludedFiles The glob patterns for excluded files.\n     * @param {string} basePath The path to the base directory to test paths.\n     * @returns {OverrideTester|null} The created instance or `null`.\n     */\n    static create(files, excludedFiles, basePath) {\n        const includePatterns = normalizePatterns(files);\n        const excludePatterns = normalizePatterns(excludedFiles);\n        let endsWithWildcard = false;\n\n        if (includePatterns.length === 0) {\n            return null;\n        }\n\n        // Rejects absolute paths or relative paths to parents.\n        for (const pattern of includePatterns) {\n            if (path.isAbsolute(pattern) || pattern.includes(\"..\")) {\n                throw new Error(`Invalid override pattern (expected relative path not containing '..'): ${pattern}`);\n            }\n            if (pattern.endsWith(\"*\")) {\n                endsWithWildcard = true;\n            }\n        }\n        for (const pattern of excludePatterns) {\n            if (path.isAbsolute(pattern) || pattern.includes(\"..\")) {\n                throw new Error(`Invalid override pattern (expected relative path not containing '..'): ${pattern}`);\n            }\n        }\n\n        const includes = toMatcher(includePatterns);\n        const excludes = toMatcher(excludePatterns);\n\n        return new OverrideTester(\n            [{ includes, excludes }],\n            basePath,\n            endsWithWildcard\n        );\n    }\n\n    /**\n     * Combine two testers by logical and.\n     * If either of the testers was `null`, returns the other tester.\n     * The `basePath` property of the two must be the same value.\n     * @param {OverrideTester|null} a A tester.\n     * @param {OverrideTester|null} b Another tester.\n     * @returns {OverrideTester|null} Combined tester.\n     */\n    static and(a, b) {\n        if (!b) {\n            return a && new OverrideTester(\n                a.patterns,\n                a.basePath,\n                a.endsWithWildcard\n            );\n        }\n        if (!a) {\n            return new OverrideTester(\n                b.patterns,\n                b.basePath,\n                b.endsWithWildcard\n            );\n        }\n\n        assert.strictEqual(a.basePath, b.basePath);\n        return new OverrideTester(\n            a.patterns.concat(b.patterns),\n            a.basePath,\n            a.endsWithWildcard || b.endsWithWildcard\n        );\n    }\n\n    /**\n     * Initialize this instance.\n     * @param {Pattern[]} patterns The matchers.\n     * @param {string} basePath The base path.\n     * @param {boolean} endsWithWildcard If `true` then a pattern ends with `*`.\n     */\n    constructor(patterns, basePath, endsWithWildcard = false) {\n\n        /** @type {Pattern[]} */\n        this.patterns = patterns;\n\n        /** @type {string} */\n        this.basePath = basePath;\n\n        /** @type {boolean} */\n        this.endsWithWildcard = endsWithWildcard;\n    }\n\n    /**\n     * Test if a given path is matched or not.\n     * @param {string} filePath The absolute path to the target file.\n     * @returns {boolean} `true` if the path was matched.\n     */\n    test(filePath) {\n        if (typeof filePath !== \"string\" || !path.isAbsolute(filePath)) {\n            throw new Error(`'filePath' should be an absolute path, but got ${filePath}.`);\n        }\n        const relativePath = path.relative(this.basePath, filePath);\n\n        return this.patterns.every(({ includes, excludes }) => (\n            (!includes || includes.some(m => m.match(relativePath))) &&\n            (!excludes || !excludes.some(m => m.match(relativePath)))\n        ));\n    }\n\n    // eslint-disable-next-line jsdoc/require-description\n    /**\n     * @returns {Object} a JSON compatible object.\n     */\n    toJSON() {\n        if (this.patterns.length === 1) {\n            return {\n                ...patternToJson(this.patterns[0]),\n                basePath: this.basePath\n            };\n        }\n        return {\n            AND: this.patterns.map(patternToJson),\n            basePath: this.basePath\n        };\n    }\n\n    // eslint-disable-next-line jsdoc/require-description\n    /**\n     * @returns {Object} an object to display by `console.log()`.\n     */\n    [util.inspect.custom]() {\n        return this.toJSON();\n    }\n}\n\nexport { OverrideTester };\n","/**\n * @fileoverview `ConfigArray` class.\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\nimport { ConfigArray, getUsedExtractedConfigs } from \"./config-array.js\";\nimport { ConfigDependency } from \"./config-dependency.js\";\nimport { ExtractedConfig } from \"./extracted-config.js\";\nimport { IgnorePattern } from \"./ignore-pattern.js\";\nimport { OverrideTester } from \"./override-tester.js\";\n\nexport {\n    ConfigArray,\n    ConfigDependency,\n    ExtractedConfig,\n    IgnorePattern,\n    OverrideTester,\n    getUsedExtractedConfigs\n};\n","/**\n * @fileoverview Config file operations. This file must be usable in the browser,\n * so no Node-specific code can be here.\n * @author Nicholas C. Zakas\n */\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\n\nconst RULE_SEVERITY_STRINGS = [\"off\", \"warn\", \"error\"],\n    RULE_SEVERITY = RULE_SEVERITY_STRINGS.reduce((map, value, index) => {\n        map[value] = index;\n        return map;\n    }, {}),\n    VALID_SEVERITIES = [0, 1, 2, \"off\", \"warn\", \"error\"];\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Normalizes the severity value of a rule's configuration to a number\n * @param {(number|string|[number, ...*]|[string, ...*])} ruleConfig A rule's configuration value, generally\n * received from the user. A valid config value is either 0, 1, 2, the string \"off\" (treated the same as 0),\n * the string \"warn\" (treated the same as 1), the string \"error\" (treated the same as 2), or an array\n * whose first element is one of the above values. Strings are matched case-insensitively.\n * @returns {(0|1|2)} The numeric severity value if the config value was valid, otherwise 0.\n */\nfunction getRuleSeverity(ruleConfig) {\n    const severityValue = Array.isArray(ruleConfig) ? ruleConfig[0] : ruleConfig;\n\n    if (severityValue === 0 || severityValue === 1 || severityValue === 2) {\n        return severityValue;\n    }\n\n    if (typeof severityValue === \"string\") {\n        return RULE_SEVERITY[severityValue.toLowerCase()] || 0;\n    }\n\n    return 0;\n}\n\n/**\n * Converts old-style severity settings (0, 1, 2) into new-style\n * severity settings (off, warn, error) for all rules. Assumption is that severity\n * values have already been validated as correct.\n * @param {Object} config The config object to normalize.\n * @returns {void}\n */\nfunction normalizeToStrings(config) {\n\n    if (config.rules) {\n        Object.keys(config.rules).forEach(ruleId => {\n            const ruleConfig = config.rules[ruleId];\n\n            if (typeof ruleConfig === \"number\") {\n                config.rules[ruleId] = RULE_SEVERITY_STRINGS[ruleConfig] || RULE_SEVERITY_STRINGS[0];\n            } else if (Array.isArray(ruleConfig) && typeof ruleConfig[0] === \"number\") {\n                ruleConfig[0] = RULE_SEVERITY_STRINGS[ruleConfig[0]] || RULE_SEVERITY_STRINGS[0];\n            }\n        });\n    }\n}\n\n/**\n * Determines if the severity for the given rule configuration represents an error.\n * @param {int|string|Array} ruleConfig The configuration for an individual rule.\n * @returns {boolean} True if the rule represents an error, false if not.\n */\nfunction isErrorSeverity(ruleConfig) {\n    return getRuleSeverity(ruleConfig) === 2;\n}\n\n/**\n * Checks whether a given config has valid severity or not.\n * @param {number|string|Array} ruleConfig The configuration for an individual rule.\n * @returns {boolean} `true` if the configuration has valid severity.\n */\nfunction isValidSeverity(ruleConfig) {\n    let severity = Array.isArray(ruleConfig) ? ruleConfig[0] : ruleConfig;\n\n    if (typeof severity === \"string\") {\n        severity = severity.toLowerCase();\n    }\n    return VALID_SEVERITIES.indexOf(severity) !== -1;\n}\n\n/**\n * Checks whether every rule of a given config has valid severity or not.\n * @param {Object} config The configuration for rules.\n * @returns {boolean} `true` if the configuration has valid severity.\n */\nfunction isEverySeverityValid(config) {\n    return Object.keys(config).every(ruleId => isValidSeverity(config[ruleId]));\n}\n\n/**\n * Normalizes a value for a global in a config\n * @param {(boolean|string|null)} configuredValue The value given for a global in configuration or in\n * a global directive comment\n * @returns {(\"readable\"|\"writeable\"|\"off\")} The value normalized as a string\n * @throws Error if global value is invalid\n */\nfunction normalizeConfigGlobal(configuredValue) {\n    switch (configuredValue) {\n        case \"off\":\n            return \"off\";\n\n        case true:\n        case \"true\":\n        case \"writeable\":\n        case \"writable\":\n            return \"writable\";\n\n        case null:\n        case false:\n        case \"false\":\n        case \"readable\":\n        case \"readonly\":\n            return \"readonly\";\n\n        default:\n            throw new Error(`'${configuredValue}' is not a valid configuration for a global (use 'readonly', 'writable', or 'off')`);\n    }\n}\n\nexport {\n    getRuleSeverity,\n    normalizeToStrings,\n    isErrorSeverity,\n    isValidSeverity,\n    isEverySeverityValid,\n    normalizeConfigGlobal\n};\n","/**\n * @fileoverview Provide the function that emits deprecation warnings.\n * @author Toru Nagashima <http://github.com/mysticatea>\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport path from \"path\";\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\n\n// Defitions for deprecation warnings.\nconst deprecationWarningMessages = {\n    ESLINT_LEGACY_ECMAFEATURES:\n        \"The 'ecmaFeatures' config file property is deprecated and has no effect.\",\n    ESLINT_PERSONAL_CONFIG_LOAD:\n        \"'~/.eslintrc.*' config files have been deprecated. \" +\n        \"Please use a config file per project or the '--config' option.\",\n    ESLINT_PERSONAL_CONFIG_SUPPRESS:\n        \"'~/.eslintrc.*' config files have been deprecated. \" +\n        \"Please remove it or add 'root:true' to the config files in your \" +\n        \"projects in order to avoid loading '~/.eslintrc.*' accidentally.\"\n};\n\nconst sourceFileErrorCache = new Set();\n\n/**\n * Emits a deprecation warning containing a given filepath. A new deprecation warning is emitted\n * for each unique file path, but repeated invocations with the same file path have no effect.\n * No warnings are emitted if the `--no-deprecation` or `--no-warnings` Node runtime flags are active.\n * @param {string} source The name of the configuration source to report the warning for.\n * @param {string} errorCode The warning message to show.\n * @returns {void}\n */\nfunction emitDeprecationWarning(source, errorCode) {\n    const cacheKey = JSON.stringify({ source, errorCode });\n\n    if (sourceFileErrorCache.has(cacheKey)) {\n        return;\n    }\n    sourceFileErrorCache.add(cacheKey);\n\n    const rel = path.relative(process.cwd(), source);\n    const message = deprecationWarningMessages[errorCode];\n\n    process.emitWarning(\n        `${message} (found in \"${rel}\")`,\n        \"DeprecationWarning\",\n        errorCode\n    );\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport {\n    emitDeprecationWarning\n};\n","/**\n * @fileoverview The instance of Ajv validator.\n * @author Evgeny Poberezkin\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport Ajv from \"ajv\";\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\n/*\n * Copied from ajv/lib/refs/json-schema-draft-04.json\n * The MIT License (MIT)\n * Copyright (c) 2015-2017 Evgeny Poberezkin\n */\nconst metaSchema = {\n    id: \"http://json-schema.org/draft-04/schema#\",\n    $schema: \"http://json-schema.org/draft-04/schema#\",\n    description: \"Core schema meta-schema\",\n    definitions: {\n        schemaArray: {\n            type: \"array\",\n            minItems: 1,\n            items: { $ref: \"#\" }\n        },\n        positiveInteger: {\n            type: \"integer\",\n            minimum: 0\n        },\n        positiveIntegerDefault0: {\n            allOf: [{ $ref: \"#/definitions/positiveInteger\" }, { default: 0 }]\n        },\n        simpleTypes: {\n            enum: [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n        },\n        stringArray: {\n            type: \"array\",\n            items: { type: \"string\" },\n            minItems: 1,\n            uniqueItems: true\n        }\n    },\n    type: \"object\",\n    properties: {\n        id: {\n            type: \"string\"\n        },\n        $schema: {\n            type: \"string\"\n        },\n        title: {\n            type: \"string\"\n        },\n        description: {\n            type: \"string\"\n        },\n        default: { },\n        multipleOf: {\n            type: \"number\",\n            minimum: 0,\n            exclusiveMinimum: true\n        },\n        maximum: {\n            type: \"number\"\n        },\n        exclusiveMaximum: {\n            type: \"boolean\",\n            default: false\n        },\n        minimum: {\n            type: \"number\"\n        },\n        exclusiveMinimum: {\n            type: \"boolean\",\n            default: false\n        },\n        maxLength: { $ref: \"#/definitions/positiveInteger\" },\n        minLength: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        pattern: {\n            type: \"string\",\n            format: \"regex\"\n        },\n        additionalItems: {\n            anyOf: [\n                { type: \"boolean\" },\n                { $ref: \"#\" }\n            ],\n            default: { }\n        },\n        items: {\n            anyOf: [\n                { $ref: \"#\" },\n                { $ref: \"#/definitions/schemaArray\" }\n            ],\n            default: { }\n        },\n        maxItems: { $ref: \"#/definitions/positiveInteger\" },\n        minItems: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        uniqueItems: {\n            type: \"boolean\",\n            default: false\n        },\n        maxProperties: { $ref: \"#/definitions/positiveInteger\" },\n        minProperties: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        required: { $ref: \"#/definitions/stringArray\" },\n        additionalProperties: {\n            anyOf: [\n                { type: \"boolean\" },\n                { $ref: \"#\" }\n            ],\n            default: { }\n        },\n        definitions: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        properties: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        patternProperties: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        dependencies: {\n            type: \"object\",\n            additionalProperties: {\n                anyOf: [\n                    { $ref: \"#\" },\n                    { $ref: \"#/definitions/stringArray\" }\n                ]\n            }\n        },\n        enum: {\n            type: \"array\",\n            minItems: 1,\n            uniqueItems: true\n        },\n        type: {\n            anyOf: [\n                { $ref: \"#/definitions/simpleTypes\" },\n                {\n                    type: \"array\",\n                    items: { $ref: \"#/definitions/simpleTypes\" },\n                    minItems: 1,\n                    uniqueItems: true\n                }\n            ]\n        },\n        format: { type: \"string\" },\n        allOf: { $ref: \"#/definitions/schemaArray\" },\n        anyOf: { $ref: \"#/definitions/schemaArray\" },\n        oneOf: { $ref: \"#/definitions/schemaArray\" },\n        not: { $ref: \"#\" }\n    },\n    dependencies: {\n        exclusiveMaximum: [\"maximum\"],\n        exclusiveMinimum: [\"minimum\"]\n    },\n    default: { }\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport default (additionalOptions = {}) => {\n    const ajv = new Ajv({\n        meta: false,\n        useDefaults: true,\n        validateSchema: false,\n        missingRefs: \"ignore\",\n        verbose: true,\n        schemaId: \"auto\",\n        ...additionalOptions\n    });\n\n    ajv.addMetaSchema(metaSchema);\n    // eslint-disable-next-line no-underscore-dangle\n    ajv._opts.defaultMeta = metaSchema.id;\n\n    return ajv;\n};\n","/**\n * @fileoverview Defines a schema for configs.\n * @author Sylvan Mably\n */\n\nconst baseConfigProperties = {\n    $schema: { type: \"string\" },\n    env: { type: \"object\" },\n    extends: { $ref: \"#/definitions/stringOrStrings\" },\n    globals: { type: \"object\" },\n    overrides: {\n        type: \"array\",\n        items: { $ref: \"#/definitions/overrideConfig\" },\n        additionalItems: false\n    },\n    parser: { type: [\"string\", \"null\"] },\n    parserOptions: { type: \"object\" },\n    plugins: { type: \"array\" },\n    processor: { type: \"string\" },\n    rules: { type: \"object\" },\n    settings: { type: \"object\" },\n    noInlineConfig: { type: \"boolean\" },\n    reportUnusedDisableDirectives: { type: \"boolean\" },\n\n    ecmaFeatures: { type: \"object\" } // deprecated; logs a warning when used\n};\n\nconst configSchema = {\n    definitions: {\n        stringOrStrings: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false\n                }\n            ]\n        },\n        stringOrStringsRequired: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false,\n                    minItems: 1\n                }\n            ]\n        },\n\n        // Config at top-level.\n        objectConfig: {\n            type: \"object\",\n            properties: {\n                root: { type: \"boolean\" },\n                ignorePatterns: { $ref: \"#/definitions/stringOrStrings\" },\n                ...baseConfigProperties\n            },\n            additionalProperties: false\n        },\n\n        // Config in `overrides`.\n        overrideConfig: {\n            type: \"object\",\n            properties: {\n                excludedFiles: { $ref: \"#/definitions/stringOrStrings\" },\n                files: { $ref: \"#/definitions/stringOrStringsRequired\" },\n                ...baseConfigProperties\n            },\n            required: [\"files\"],\n            additionalProperties: false\n        }\n    },\n\n    $ref: \"#/definitions/objectConfig\"\n};\n\nexport default configSchema;\n","/**\n * @fileoverview Defines environment settings and globals.\n * @author Elan Shanker\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport globals from \"globals\";\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Get the object that has difference.\n * @param {Record<string,boolean>} current The newer object.\n * @param {Record<string,boolean>} prev The older object.\n * @returns {Record<string,boolean>} The difference object.\n */\nfunction getDiff(current, prev) {\n    const retv = {};\n\n    for (const [key, value] of Object.entries(current)) {\n        if (!Object.hasOwnProperty.call(prev, key)) {\n            retv[key] = value;\n        }\n    }\n\n    return retv;\n}\n\nconst newGlobals2015 = getDiff(globals.es2015, globals.es5); // 19 variables such as Promise, Map, ...\nconst newGlobals2017 = {\n    Atomics: false,\n    SharedArrayBuffer: false\n};\nconst newGlobals2020 = {\n    BigInt: false,\n    BigInt64Array: false,\n    BigUint64Array: false,\n    globalThis: false\n};\n\nconst newGlobals2021 = {\n    AggregateError: false,\n    FinalizationRegistry: false,\n    WeakRef: false\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/** @type {Map<string, import(\"../lib/shared/types\").Environment>} */\nexport default new Map(Object.entries({\n\n    // Language\n    builtin: {\n        globals: globals.es5\n    },\n    es6: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2015: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2016: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 7\n        }\n    },\n    es2017: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 8\n        }\n    },\n    es2018: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 9\n        }\n    },\n    es2019: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 10\n        }\n    },\n    es2020: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020 },\n        parserOptions: {\n            ecmaVersion: 11\n        }\n    },\n    es2021: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020, ...newGlobals2021 },\n        parserOptions: {\n            ecmaVersion: 12\n        }\n    },\n    es2022: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020, ...newGlobals2021 },\n        parserOptions: {\n            ecmaVersion: 13\n        }\n    },\n\n    // Platforms\n    browser: {\n        globals: globals.browser\n    },\n    node: {\n        globals: globals.node,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    \"shared-node-browser\": {\n        globals: globals[\"shared-node-browser\"]\n    },\n    worker: {\n        globals: globals.worker\n    },\n    serviceworker: {\n        globals: globals.serviceworker\n    },\n\n    // Frameworks\n    commonjs: {\n        globals: globals.commonjs,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    amd: {\n        globals: globals.amd\n    },\n    mocha: {\n        globals: globals.mocha\n    },\n    jasmine: {\n        globals: globals.jasmine\n    },\n    jest: {\n        globals: globals.jest\n    },\n    phantomjs: {\n        globals: globals.phantomjs\n    },\n    jquery: {\n        globals: globals.jquery\n    },\n    qunit: {\n        globals: globals.qunit\n    },\n    prototypejs: {\n        globals: globals.prototypejs\n    },\n    shelljs: {\n        globals: globals.shelljs\n    },\n    meteor: {\n        globals: globals.meteor\n    },\n    mongo: {\n        globals: globals.mongo\n    },\n    protractor: {\n        globals: globals.protractor\n    },\n    applescript: {\n        globals: globals.applescript\n    },\n    nashorn: {\n        globals: globals.nashorn\n    },\n    atomtest: {\n        globals: globals.atomtest\n    },\n    embertest: {\n        globals: globals.embertest\n    },\n    webextensions: {\n        globals: globals.webextensions\n    },\n    greasemonkey: {\n        globals: globals.greasemonkey\n    }\n}));\n","/**\n * @fileoverview Validates configs.\n * @author Brandon Mills\n */\n\n/* eslint class-methods-use-this: \"off\" */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport util from \"util\";\nimport * as ConfigOps from \"./config-ops.js\";\nimport { emitDeprecationWarning } from \"./deprecation-warnings.js\";\nimport ajvOrig from \"./ajv.js\";\nimport configSchema from \"../../conf/config-schema.js\";\nimport BuiltInEnvironments from \"../../conf/environments.js\";\n\nconst ajv = ajvOrig();\n\nconst ruleValidators = new WeakMap();\nconst noop = Function.prototype;\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\nlet validateSchema;\nconst severityMap = {\n    error: 2,\n    warn: 1,\n    off: 0\n};\n\nconst validated = new WeakSet();\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\nexport default class ConfigValidator {\n    constructor({ builtInRules = new Map() } = {}) {\n        this.builtInRules = builtInRules;\n    }\n\n    /**\n     * Gets a complete options schema for a rule.\n     * @param {{create: Function, schema: (Array|null)}} rule A new-style rule object\n     * @returns {Object} JSON Schema for the rule's options.\n     */\n    getRuleOptionsSchema(rule) {\n        if (!rule) {\n            return null;\n        }\n\n        const schema = rule.schema || rule.meta && rule.meta.schema;\n\n        // Given a tuple of schemas, insert warning level at the beginning\n        if (Array.isArray(schema)) {\n            if (schema.length) {\n                return {\n                    type: \"array\",\n                    items: schema,\n                    minItems: 0,\n                    maxItems: schema.length\n                };\n            }\n            return {\n                type: \"array\",\n                minItems: 0,\n                maxItems: 0\n            };\n\n        }\n\n        // Given a full schema, leave it alone\n        return schema || null;\n    }\n\n    /**\n     * Validates a rule's severity and returns the severity value. Throws an error if the severity is invalid.\n     * @param {options} options The given options for the rule.\n     * @returns {number|string} The rule's severity value\n     */\n    validateRuleSeverity(options) {\n        const severity = Array.isArray(options) ? options[0] : options;\n        const normSeverity = typeof severity === \"string\" ? severityMap[severity.toLowerCase()] : severity;\n\n        if (normSeverity === 0 || normSeverity === 1 || normSeverity === 2) {\n            return normSeverity;\n        }\n\n        throw new Error(`\\tSeverity should be one of the following: 0 = off, 1 = warn, 2 = error (you passed '${util.inspect(severity).replace(/'/gu, \"\\\"\").replace(/\\n/gu, \"\")}').\\n`);\n\n    }\n\n    /**\n     * Validates the non-severity options passed to a rule, based on its schema.\n     * @param {{create: Function}} rule The rule to validate\n     * @param {Array} localOptions The options for the rule, excluding severity\n     * @returns {void}\n     */\n    validateRuleSchema(rule, localOptions) {\n        if (!ruleValidators.has(rule)) {\n            const schema = this.getRuleOptionsSchema(rule);\n\n            if (schema) {\n                ruleValidators.set(rule, ajv.compile(schema));\n            }\n        }\n\n        const validateRule = ruleValidators.get(rule);\n\n        if (validateRule) {\n            validateRule(localOptions);\n            if (validateRule.errors) {\n                throw new Error(validateRule.errors.map(\n                    error => `\\tValue ${JSON.stringify(error.data)} ${error.message}.\\n`\n                ).join(\"\"));\n            }\n        }\n    }\n\n    /**\n     * Validates a rule's options against its schema.\n     * @param {{create: Function}|null} rule The rule that the config is being validated for\n     * @param {string} ruleId The rule's unique name.\n     * @param {Array|number} options The given options for the rule.\n     * @param {string|null} source The name of the configuration source to report in any errors. If null or undefined,\n     * no source is prepended to the message.\n     * @returns {void}\n     */\n    validateRuleOptions(rule, ruleId, options, source = null) {\n        try {\n            const severity = this.validateRuleSeverity(options);\n\n            if (severity !== 0) {\n                this.validateRuleSchema(rule, Array.isArray(options) ? options.slice(1) : []);\n            }\n        } catch (err) {\n            const enhancedMessage = `Configuration for rule \"${ruleId}\" is invalid:\\n${err.message}`;\n\n            if (typeof source === \"string\") {\n                throw new Error(`${source}:\\n\\t${enhancedMessage}`);\n            } else {\n                throw new Error(enhancedMessage);\n            }\n        }\n    }\n\n    /**\n     * Validates an environment object\n     * @param {Object} environment The environment config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @param {function(envId:string): Object} [getAdditionalEnv] A map from strings to loaded environments.\n     * @returns {void}\n     */\n    validateEnvironment(\n        environment,\n        source,\n        getAdditionalEnv = noop\n    ) {\n\n        // not having an environment is ok\n        if (!environment) {\n            return;\n        }\n\n        Object.keys(environment).forEach(id => {\n            const env = getAdditionalEnv(id) || BuiltInEnvironments.get(id) || null;\n\n            if (!env) {\n                const message = `${source}:\\n\\tEnvironment key \"${id}\" is unknown\\n`;\n\n                throw new Error(message);\n            }\n        });\n    }\n\n    /**\n     * Validates a rules config object\n     * @param {Object} rulesConfig The rules config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @param {function(ruleId:string): Object} getAdditionalRule A map from strings to loaded rules\n     * @returns {void}\n     */\n    validateRules(\n        rulesConfig,\n        source,\n        getAdditionalRule = noop\n    ) {\n        if (!rulesConfig) {\n            return;\n        }\n\n        Object.keys(rulesConfig).forEach(id => {\n            const rule = getAdditionalRule(id) || this.builtInRules.get(id) || null;\n\n            this.validateRuleOptions(rule, id, rulesConfig[id], source);\n        });\n    }\n\n    /**\n     * Validates a `globals` section of a config file\n     * @param {Object} globalsConfig The `globals` section\n     * @param {string|null} source The name of the configuration source to report in the event of an error.\n     * @returns {void}\n     */\n    validateGlobals(globalsConfig, source = null) {\n        if (!globalsConfig) {\n            return;\n        }\n\n        Object.entries(globalsConfig)\n            .forEach(([configuredGlobal, configuredValue]) => {\n                try {\n                    ConfigOps.normalizeConfigGlobal(configuredValue);\n                } catch (err) {\n                    throw new Error(`ESLint configuration of global '${configuredGlobal}' in ${source} is invalid:\\n${err.message}`);\n                }\n            });\n    }\n\n    /**\n     * Validate `processor` configuration.\n     * @param {string|undefined} processorName The processor name.\n     * @param {string} source The name of config file.\n     * @param {function(id:string): Processor} getProcessor The getter of defined processors.\n     * @returns {void}\n     */\n    validateProcessor(processorName, source, getProcessor) {\n        if (processorName && !getProcessor(processorName)) {\n            throw new Error(`ESLint configuration of processor in '${source}' is invalid: '${processorName}' was not found.`);\n        }\n    }\n\n    /**\n     * Formats an array of schema validation errors.\n     * @param {Array} errors An array of error messages to format.\n     * @returns {string} Formatted error message\n     */\n    formatErrors(errors) {\n        return errors.map(error => {\n            if (error.keyword === \"additionalProperties\") {\n                const formattedPropertyPath = error.dataPath.length ? `${error.dataPath.slice(1)}.${error.params.additionalProperty}` : error.params.additionalProperty;\n\n                return `Unexpected top-level property \"${formattedPropertyPath}\"`;\n            }\n            if (error.keyword === \"type\") {\n                const formattedField = error.dataPath.slice(1);\n                const formattedExpectedType = Array.isArray(error.schema) ? error.schema.join(\"/\") : error.schema;\n                const formattedValue = JSON.stringify(error.data);\n\n                return `Property \"${formattedField}\" is the wrong type (expected ${formattedExpectedType} but got \\`${formattedValue}\\`)`;\n            }\n\n            const field = error.dataPath[0] === \".\" ? error.dataPath.slice(1) : error.dataPath;\n\n            return `\"${field}\" ${error.message}. Value: ${JSON.stringify(error.data)}`;\n        }).map(message => `\\t- ${message}.\\n`).join(\"\");\n    }\n\n    /**\n     * Validates the top level properties of the config object.\n     * @param {Object} config The config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @returns {void}\n     */\n    validateConfigSchema(config, source = null) {\n        validateSchema = validateSchema || ajv.compile(configSchema);\n\n        if (!validateSchema(config)) {\n            throw new Error(`ESLint configuration in ${source} is invalid:\\n${this.formatErrors(validateSchema.errors)}`);\n        }\n\n        if (Object.hasOwnProperty.call(config, \"ecmaFeatures\")) {\n            emitDeprecationWarning(source, \"ESLINT_LEGACY_ECMAFEATURES\");\n        }\n    }\n\n    /**\n     * Validates an entire config object.\n     * @param {Object} config The config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @param {function(ruleId:string): Object} [getAdditionalRule] A map from strings to loaded rules.\n     * @param {function(envId:string): Object} [getAdditionalEnv] A map from strings to loaded envs.\n     * @returns {void}\n     */\n    validate(config, source, getAdditionalRule, getAdditionalEnv) {\n        this.validateConfigSchema(config, source);\n        this.validateRules(config.rules, source, getAdditionalRule);\n        this.validateEnvironment(config.env, source, getAdditionalEnv);\n        this.validateGlobals(config.globals, source);\n\n        for (const override of config.overrides || []) {\n            this.validateRules(override.rules, source, getAdditionalRule);\n            this.validateEnvironment(override.env, source, getAdditionalEnv);\n            this.validateGlobals(config.globals, source);\n        }\n    }\n\n    /**\n     * Validate config array object.\n     * @param {ConfigArray} configArray The config array to validate.\n     * @returns {void}\n     */\n    validateConfigArray(configArray) {\n        const getPluginEnv = Map.prototype.get.bind(configArray.pluginEnvironments);\n        const getPluginProcessor = Map.prototype.get.bind(configArray.pluginProcessors);\n        const getPluginRule = Map.prototype.get.bind(configArray.pluginRules);\n\n        // Validate.\n        for (const element of configArray) {\n            if (validated.has(element)) {\n                continue;\n            }\n            validated.add(element);\n\n            this.validateEnvironment(element.env, element.name, getPluginEnv);\n            this.validateGlobals(element.globals, element.name);\n            this.validateProcessor(element.processor, element.name, getPluginProcessor);\n            this.validateRules(element.rules, element.name, getPluginRule);\n        }\n    }\n\n}\n","/**\n * @fileoverview Common helpers for naming of plugins, formatters and configs\n */\n\nconst NAMESPACE_REGEX = /^@.*\\//iu;\n\n/**\n * Brings package name to correct format based on prefix\n * @param {string} name The name of the package.\n * @param {string} prefix Can be either \"eslint-plugin\", \"eslint-config\" or \"eslint-formatter\"\n * @returns {string} Normalized name of the package\n * @private\n */\nfunction normalizePackageName(name, prefix) {\n    let normalizedName = name;\n\n    /**\n     * On Windows, name can come in with Windows slashes instead of Unix slashes.\n     * Normalize to Unix first to avoid errors later on.\n     * https://github.com/eslint/eslint/issues/5644\n     */\n    if (normalizedName.includes(\"\\\\\")) {\n        normalizedName = normalizedName.replace(/\\\\/gu, \"/\");\n    }\n\n    if (normalizedName.charAt(0) === \"@\") {\n\n        /**\n         * it's a scoped package\n         * package name is the prefix, or just a username\n         */\n        const scopedPackageShortcutRegex = new RegExp(`^(@[^/]+)(?:/(?:${prefix})?)?$`, \"u\"),\n            scopedPackageNameRegex = new RegExp(`^${prefix}(-|$)`, \"u\");\n\n        if (scopedPackageShortcutRegex.test(normalizedName)) {\n            normalizedName = normalizedName.replace(scopedPackageShortcutRegex, `$1/${prefix}`);\n        } else if (!scopedPackageNameRegex.test(normalizedName.split(\"/\")[1])) {\n\n            /**\n             * for scoped packages, insert the prefix after the first / unless\n             * the path is already @scope/eslint or @scope/eslint-xxx-yyy\n             */\n            normalizedName = normalizedName.replace(/^@([^/]+)\\/(.*)$/u, `@$1/${prefix}-$2`);\n        }\n    } else if (!normalizedName.startsWith(`${prefix}-`)) {\n        normalizedName = `${prefix}-${normalizedName}`;\n    }\n\n    return normalizedName;\n}\n\n/**\n * Removes the prefix from a fullname.\n * @param {string} fullname The term which may have the prefix.\n * @param {string} prefix The prefix to remove.\n * @returns {string} The term without prefix.\n */\nfunction getShorthandName(fullname, prefix) {\n    if (fullname[0] === \"@\") {\n        let matchResult = new RegExp(`^(@[^/]+)/${prefix}$`, \"u\").exec(fullname);\n\n        if (matchResult) {\n            return matchResult[1];\n        }\n\n        matchResult = new RegExp(`^(@[^/]+)/${prefix}-(.+)$`, \"u\").exec(fullname);\n        if (matchResult) {\n            return `${matchResult[1]}/${matchResult[2]}`;\n        }\n    } else if (fullname.startsWith(`${prefix}-`)) {\n        return fullname.slice(prefix.length + 1);\n    }\n\n    return fullname;\n}\n\n/**\n * Gets the scope (namespace) of a term.\n * @param {string} term The term which may have the namespace.\n * @returns {string} The namespace of the term if it has one.\n */\nfunction getNamespaceFromTerm(term) {\n    const match = term.match(NAMESPACE_REGEX);\n\n    return match ? match[0] : \"\";\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport {\n    normalizePackageName,\n    getShorthandName,\n    getNamespaceFromTerm\n};\n","/**\n * Utility for resolving a module relative to another module\n * @author Teddy Katz\n */\n\nimport Module from \"module\";\n\n/*\n * `Module.createRequire` is added in v12.2.0. It supports URL as well.\n * We only support the case where the argument is a filepath, not a URL.\n */\nconst createRequire = Module.createRequire;\n\n/**\n * Resolves a Node module relative to another module\n * @param {string} moduleName The name of a Node module, or a path to a Node module.\n * @param {string} relativeToPath An absolute path indicating the module that `moduleName` should be resolved relative to. This must be\n * a file rather than a directory, but the file need not actually exist.\n * @returns {string} The absolute path that would result from calling `require.resolve(moduleName)` in a file located at `relativeToPath`\n */\nfunction resolve(moduleName, relativeToPath) {\n    try {\n        return createRequire(relativeToPath).resolve(moduleName);\n    } catch (error) {\n\n        // This `if` block is for older Node.js than 12.0.0. We can remove this block in the future.\n        if (\n            typeof error === \"object\" &&\n            error !== null &&\n            error.code === \"MODULE_NOT_FOUND\" &&\n            !error.requireStack &&\n            error.message.includes(moduleName)\n        ) {\n            error.message += `\\nRequire stack:\\n- ${relativeToPath}`;\n        }\n        throw error;\n    }\n}\n\nexport {\n    resolve\n};\n","/**\n * @fileoverview The factory of `ConfigArray` objects.\n *\n * This class provides methods to create `ConfigArray` instance.\n *\n * - `create(configData, options)`\n *     Create a `ConfigArray` instance from a config data. This is to handle CLI\n *     options except `--config`.\n * - `loadFile(filePath, options)`\n *     Create a `ConfigArray` instance from a config file. This is to handle\n *     `--config` option. If the file was not found, throws the following error:\n *      - If the filename was `*.js`, a `MODULE_NOT_FOUND` error.\n *      - If the filename was `package.json`, an IO error or an\n *        `ESLINT_CONFIG_FIELD_NOT_FOUND` error.\n *      - Otherwise, an IO error such as `ENOENT`.\n * - `loadInDirectory(directoryPath, options)`\n *     Create a `ConfigArray` instance from a config file which is on a given\n *     directory. This tries to load `.eslintrc.*` or `package.json`. If not\n *     found, returns an empty `ConfigArray`.\n * - `loadESLintIgnore(filePath)`\n *     Create a `ConfigArray` instance from a config file that is `.eslintignore`\n *     format. This is to handle `--ignore-path` option.\n * - `loadDefaultESLintIgnore()`\n *     Create a `ConfigArray` instance from `.eslintignore` or `package.json` in\n *     the current working directory.\n *\n * `ConfigArrayFactory` class has the responsibility that loads configuration\n * files, including loading `extends`, `parser`, and `plugins`. The created\n * `ConfigArray` instance has the loaded `extends`, `parser`, and `plugins`.\n *\n * But this class doesn't handle cascading. `CascadingConfigArrayFactory` class\n * handles cascading and hierarchy.\n *\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport debugOrig from \"debug\";\nimport fs from \"fs\";\nimport importFresh from \"import-fresh\";\nimport { createRequire } from \"module\";\nimport path from \"path\";\nimport stripComments from \"strip-json-comments\";\n\nimport {\n    ConfigArray,\n    ConfigDependency,\n    IgnorePattern,\n    OverrideTester\n} from \"./config-array/index.js\";\nimport ConfigValidator from \"./shared/config-validator.js\";\nimport * as naming from \"./shared/naming.js\";\nimport * as ModuleResolver from \"./shared/relative-module-resolver.js\";\n\nconst require = createRequire(import.meta.url);\n\nconst debug = debugOrig(\"eslintrc:config-array-factory\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nconst configFilenames = [\n    \".eslintrc.js\",\n    \".eslintrc.cjs\",\n    \".eslintrc.yaml\",\n    \".eslintrc.yml\",\n    \".eslintrc.json\",\n    \".eslintrc\",\n    \"package.json\"\n];\n\n// Define types for VSCode IntelliSense.\n/** @typedef {import(\"./shared/types\").ConfigData} ConfigData */\n/** @typedef {import(\"./shared/types\").OverrideConfigData} OverrideConfigData */\n/** @typedef {import(\"./shared/types\").Parser} Parser */\n/** @typedef {import(\"./shared/types\").Plugin} Plugin */\n/** @typedef {import(\"./shared/types\").Rule} Rule */\n/** @typedef {import(\"./config-array/config-dependency\").DependentParser} DependentParser */\n/** @typedef {import(\"./config-array/config-dependency\").DependentPlugin} DependentPlugin */\n/** @typedef {ConfigArray[0]} ConfigArrayElement */\n\n/**\n * @typedef {Object} ConfigArrayFactoryOptions\n * @property {Map<string,Plugin>} [additionalPluginPool] The map for additional plugins.\n * @property {string} [cwd] The path to the current working directory.\n * @property {string} [resolvePluginsRelativeTo] A path to the directory that plugins should be resolved from. Defaults to `cwd`.\n * @property {Map<string,Rule>} builtInRules The rules that are built in to ESLint.\n * @property {Object} [resolver=ModuleResolver] The module resolver object.\n * @property {string} eslintAllPath The path to the definitions for eslint:all.\n * @property {Function} getEslintAllConfig Returns the config data for eslint:all.\n * @property {string} eslintRecommendedPath The path to the definitions for eslint:recommended.\n * @property {Function} getEslintRecommendedConfig Returns the config data for eslint:recommended.\n */\n\n/**\n * @typedef {Object} ConfigArrayFactoryInternalSlots\n * @property {Map<string,Plugin>} additionalPluginPool The map for additional plugins.\n * @property {string} cwd The path to the current working directory.\n * @property {string | undefined} resolvePluginsRelativeTo An absolute path the the directory that plugins should be resolved from.\n * @property {Map<string,Rule>} builtInRules The rules that are built in to ESLint.\n * @property {Object} [resolver=ModuleResolver] The module resolver object.\n * @property {string} eslintAllPath The path to the definitions for eslint:all.\n * @property {Function} getEslintAllConfig Returns the config data for eslint:all.\n * @property {string} eslintRecommendedPath The path to the definitions for eslint:recommended.\n * @property {Function} getEslintRecommendedConfig Returns the config data for eslint:recommended.\n */\n\n/**\n * @typedef {Object} ConfigArrayFactoryLoadingContext\n * @property {string} filePath The path to the current configuration.\n * @property {string} matchBasePath The base path to resolve relative paths in `overrides[].files`, `overrides[].excludedFiles`, and `ignorePatterns`.\n * @property {string} name The name of the current configuration.\n * @property {string} pluginBasePath The base path to resolve plugins.\n * @property {\"config\" | \"ignore\" | \"implicit-processor\"} type The type of the current configuration. This is `\"config\"` in normal. This is `\"ignore\"` if it came from `.eslintignore`. This is `\"implicit-processor\"` if it came from legacy file-extension processors.\n */\n\n/**\n * @typedef {Object} ConfigArrayFactoryLoadingContext\n * @property {string} filePath The path to the current configuration.\n * @property {string} matchBasePath The base path to resolve relative paths in `overrides[].files`, `overrides[].excludedFiles`, and `ignorePatterns`.\n * @property {string} name The name of the current configuration.\n * @property {\"config\" | \"ignore\" | \"implicit-processor\"} type The type of the current configuration. This is `\"config\"` in normal. This is `\"ignore\"` if it came from `.eslintignore`. This is `\"implicit-processor\"` if it came from legacy file-extension processors.\n */\n\n/** @type {WeakMap<ConfigArrayFactory, ConfigArrayFactoryInternalSlots>} */\nconst internalSlotsMap = new WeakMap();\n\n/** @type {WeakMap<object, Plugin>} */\nconst normalizedPlugins = new WeakMap();\n\n/**\n * Check if a given string is a file path.\n * @param {string} nameOrPath A module name or file path.\n * @returns {boolean} `true` if the `nameOrPath` is a file path.\n */\nfunction isFilePath(nameOrPath) {\n    return (\n        /^\\.{1,2}[/\\\\]/u.test(nameOrPath) ||\n        path.isAbsolute(nameOrPath)\n    );\n}\n\n/**\n * Convenience wrapper for synchronously reading file contents.\n * @param {string} filePath The filename to read.\n * @returns {string} The file contents, with the BOM removed.\n * @private\n */\nfunction readFile(filePath) {\n    return fs.readFileSync(filePath, \"utf8\").replace(/^\\ufeff/u, \"\");\n}\n\n/**\n * Loads a YAML configuration from a file.\n * @param {string} filePath The filename to load.\n * @returns {ConfigData} The configuration object from the file.\n * @throws {Error} If the file cannot be read.\n * @private\n */\nfunction loadYAMLConfigFile(filePath) {\n    debug(`Loading YAML config file: ${filePath}`);\n\n    // lazy load YAML to improve performance when not used\n    const yaml = require(\"js-yaml\");\n\n    try {\n\n        // empty YAML file can be null, so always use\n        return yaml.load(readFile(filePath)) || {};\n    } catch (e) {\n        debug(`Error reading YAML file: ${filePath}`);\n        e.message = `Cannot read config file: ${filePath}\\nError: ${e.message}`;\n        throw e;\n    }\n}\n\n/**\n * Loads a JSON configuration from a file.\n * @param {string} filePath The filename to load.\n * @returns {ConfigData} The configuration object from the file.\n * @throws {Error} If the file cannot be read.\n * @private\n */\nfunction loadJSONConfigFile(filePath) {\n    debug(`Loading JSON config file: ${filePath}`);\n\n    try {\n        return JSON.parse(stripComments(readFile(filePath)));\n    } catch (e) {\n        debug(`Error reading JSON file: ${filePath}`);\n        e.message = `Cannot read config file: ${filePath}\\nError: ${e.message}`;\n        e.messageTemplate = \"failed-to-read-json\";\n        e.messageData = {\n            path: filePath,\n            message: e.message\n        };\n        throw e;\n    }\n}\n\n/**\n * Loads a legacy (.eslintrc) configuration from a file.\n * @param {string} filePath The filename to load.\n * @returns {ConfigData} The configuration object from the file.\n * @throws {Error} If the file cannot be read.\n * @private\n */\nfunction loadLegacyConfigFile(filePath) {\n    debug(`Loading legacy config file: ${filePath}`);\n\n    // lazy load YAML to improve performance when not used\n    const yaml = require(\"js-yaml\");\n\n    try {\n        return yaml.load(stripComments(readFile(filePath))) || /* istanbul ignore next */ {};\n    } catch (e) {\n        debug(\"Error reading YAML file: %s\\n%o\", filePath, e);\n        e.message = `Cannot read config file: ${filePath}\\nError: ${e.message}`;\n        throw e;\n    }\n}\n\n/**\n * Loads a JavaScript configuration from a file.\n * @param {string} filePath The filename to load.\n * @returns {ConfigData} The configuration object from the file.\n * @throws {Error} If the file cannot be read.\n * @private\n */\nfunction loadJSConfigFile(filePath) {\n    debug(`Loading JS config file: ${filePath}`);\n    try {\n        return importFresh(filePath);\n    } catch (e) {\n        debug(`Error reading JavaScript file: ${filePath}`);\n        e.message = `Cannot read config file: ${filePath}\\nError: ${e.message}`;\n        throw e;\n    }\n}\n\n/**\n * Loads a configuration from a package.json file.\n * @param {string} filePath The filename to load.\n * @returns {ConfigData} The configuration object from the file.\n * @throws {Error} If the file cannot be read.\n * @private\n */\nfunction loadPackageJSONConfigFile(filePath) {\n    debug(`Loading package.json config file: ${filePath}`);\n    try {\n        const packageData = loadJSONConfigFile(filePath);\n\n        if (!Object.hasOwnProperty.call(packageData, \"eslintConfig\")) {\n            throw Object.assign(\n                new Error(\"package.json file doesn't have 'eslintConfig' field.\"),\n                { code: \"ESLINT_CONFIG_FIELD_NOT_FOUND\" }\n            );\n        }\n\n        return packageData.eslintConfig;\n    } catch (e) {\n        debug(`Error reading package.json file: ${filePath}`);\n        e.message = `Cannot read config file: ${filePath}\\nError: ${e.message}`;\n        throw e;\n    }\n}\n\n/**\n * Loads a `.eslintignore` from a file.\n * @param {string} filePath The filename to load.\n * @returns {string[]} The ignore patterns from the file.\n * @private\n */\nfunction loadESLintIgnoreFile(filePath) {\n    debug(`Loading .eslintignore file: ${filePath}`);\n\n    try {\n        return readFile(filePath)\n            .split(/\\r?\\n/gu)\n            .filter(line => line.trim() !== \"\" && !line.startsWith(\"#\"));\n    } catch (e) {\n        debug(`Error reading .eslintignore file: ${filePath}`);\n        e.message = `Cannot read .eslintignore file: ${filePath}\\nError: ${e.message}`;\n        throw e;\n    }\n}\n\n/**\n * Creates an error to notify about a missing config to extend from.\n * @param {string} configName The name of the missing config.\n * @param {string} importerName The name of the config that imported the missing config\n * @param {string} messageTemplate The text template to source error strings from.\n * @returns {Error} The error object to throw\n * @private\n */\nfunction configInvalidError(configName, importerName, messageTemplate) {\n    return Object.assign(\n        new Error(`Failed to load config \"${configName}\" to extend from.`),\n        {\n            messageTemplate,\n            messageData: { configName, importerName }\n        }\n    );\n}\n\n/**\n * Loads a configuration file regardless of the source. Inspects the file path\n * to determine the correctly way to load the config file.\n * @param {string} filePath The path to the configuration.\n * @returns {ConfigData|null} The configuration information.\n * @private\n */\nfunction loadConfigFile(filePath) {\n    switch (path.extname(filePath)) {\n        case \".js\":\n        case \".cjs\":\n            return loadJSConfigFile(filePath);\n\n        case \".json\":\n            if (path.basename(filePath) === \"package.json\") {\n                return loadPackageJSONConfigFile(filePath);\n            }\n            return loadJSONConfigFile(filePath);\n\n        case \".yaml\":\n        case \".yml\":\n            return loadYAMLConfigFile(filePath);\n\n        default:\n            return loadLegacyConfigFile(filePath);\n    }\n}\n\n/**\n * Write debug log.\n * @param {string} request The requested module name.\n * @param {string} relativeTo The file path to resolve the request relative to.\n * @param {string} filePath The resolved file path.\n * @returns {void}\n */\nfunction writeDebugLogForLoading(request, relativeTo, filePath) {\n    /* istanbul ignore next */\n    if (debug.enabled) {\n        let nameAndVersion = null;\n\n        try {\n            const packageJsonPath = ModuleResolver.resolve(\n                `${request}/package.json`,\n                relativeTo\n            );\n            const { version = \"unknown\" } = require(packageJsonPath);\n\n            nameAndVersion = `${request}@${version}`;\n        } catch (error) {\n            debug(\"package.json was not found:\", error.message);\n            nameAndVersion = request;\n        }\n\n        debug(\"Loaded: %s (%s)\", nameAndVersion, filePath);\n    }\n}\n\n/**\n * Create a new context with default values.\n * @param {ConfigArrayFactoryInternalSlots} slots The internal slots.\n * @param {\"config\" | \"ignore\" | \"implicit-processor\" | undefined} providedType The type of the current configuration. Default is `\"config\"`.\n * @param {string | undefined} providedName The name of the current configuration. Default is the relative path from `cwd` to `filePath`.\n * @param {string | undefined} providedFilePath The path to the current configuration. Default is empty string.\n * @param {string | undefined} providedMatchBasePath The type of the current configuration. Default is the directory of `filePath` or `cwd`.\n * @returns {ConfigArrayFactoryLoadingContext} The created context.\n */\nfunction createContext(\n    { cwd, resolvePluginsRelativeTo },\n    providedType,\n    providedName,\n    providedFilePath,\n    providedMatchBasePath\n) {\n    const filePath = providedFilePath\n        ? path.resolve(cwd, providedFilePath)\n        : \"\";\n    const matchBasePath =\n        (providedMatchBasePath && path.resolve(cwd, providedMatchBasePath)) ||\n        (filePath && path.dirname(filePath)) ||\n        cwd;\n    const name =\n        providedName ||\n        (filePath && path.relative(cwd, filePath)) ||\n        \"\";\n    const pluginBasePath =\n        resolvePluginsRelativeTo ||\n        (filePath && path.dirname(filePath)) ||\n        cwd;\n    const type = providedType || \"config\";\n\n    return { filePath, matchBasePath, name, pluginBasePath, type };\n}\n\n/**\n * Normalize a given plugin.\n * - Ensure the object to have four properties: configs, environments, processors, and rules.\n * - Ensure the object to not have other properties.\n * @param {Plugin} plugin The plugin to normalize.\n * @returns {Plugin} The normalized plugin.\n */\nfunction normalizePlugin(plugin) {\n\n    // first check the cache\n    let normalizedPlugin = normalizedPlugins.get(plugin);\n\n    if (normalizedPlugin) {\n        return normalizedPlugin;\n    }\n\n    normalizedPlugin = {\n        configs: plugin.configs || {},\n        environments: plugin.environments || {},\n        processors: plugin.processors || {},\n        rules: plugin.rules || {}\n    };\n\n    // save the reference for later\n    normalizedPlugins.set(plugin, normalizedPlugin);\n\n    return normalizedPlugin;\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * The factory of `ConfigArray` objects.\n */\nclass ConfigArrayFactory {\n\n    /**\n     * Initialize this instance.\n     * @param {ConfigArrayFactoryOptions} [options] The map for additional plugins.\n     */\n    constructor({\n        additionalPluginPool = new Map(),\n        cwd = process.cwd(),\n        resolvePluginsRelativeTo,\n        builtInRules,\n        resolver = ModuleResolver,\n        eslintAllPath,\n        getEslintAllConfig,\n        eslintRecommendedPath,\n        getEslintRecommendedConfig\n    } = {}) {\n        internalSlotsMap.set(this, {\n            additionalPluginPool,\n            cwd,\n            resolvePluginsRelativeTo:\n                resolvePluginsRelativeTo &&\n                path.resolve(cwd, resolvePluginsRelativeTo),\n            builtInRules,\n            resolver,\n            eslintAllPath,\n            getEslintAllConfig,\n            eslintRecommendedPath,\n            getEslintRecommendedConfig\n        });\n    }\n\n    /**\n     * Create `ConfigArray` instance from a config data.\n     * @param {ConfigData|null} configData The config data to create.\n     * @param {Object} [options] The options.\n     * @param {string} [options.basePath] The base path to resolve relative paths in `overrides[].files`, `overrides[].excludedFiles`, and `ignorePatterns`.\n     * @param {string} [options.filePath] The path to this config data.\n     * @param {string} [options.name] The config name.\n     * @returns {ConfigArray} Loaded config.\n     */\n    create(configData, { basePath, filePath, name } = {}) {\n        if (!configData) {\n            return new ConfigArray();\n        }\n\n        const slots = internalSlotsMap.get(this);\n        const ctx = createContext(slots, \"config\", name, filePath, basePath);\n        const elements = this._normalizeConfigData(configData, ctx);\n\n        return new ConfigArray(...elements);\n    }\n\n    /**\n     * Load a config file.\n     * @param {string} filePath The path to a config file.\n     * @param {Object} [options] The options.\n     * @param {string} [options.basePath] The base path to resolve relative paths in `overrides[].files`, `overrides[].excludedFiles`, and `ignorePatterns`.\n     * @param {string} [options.name] The config name.\n     * @returns {ConfigArray} Loaded config.\n     */\n    loadFile(filePath, { basePath, name } = {}) {\n        const slots = internalSlotsMap.get(this);\n        const ctx = createContext(slots, \"config\", name, filePath, basePath);\n\n        return new ConfigArray(...this._loadConfigData(ctx));\n    }\n\n    /**\n     * Load the config file on a given directory if exists.\n     * @param {string} directoryPath The path to a directory.\n     * @param {Object} [options] The options.\n     * @param {string} [options.basePath] The base path to resolve relative paths in `overrides[].files`, `overrides[].excludedFiles`, and `ignorePatterns`.\n     * @param {string} [options.name] The config name.\n     * @returns {ConfigArray} Loaded config. An empty `ConfigArray` if any config doesn't exist.\n     */\n    loadInDirectory(directoryPath, { basePath, name } = {}) {\n        const slots = internalSlotsMap.get(this);\n\n        for (const filename of configFilenames) {\n            const ctx = createContext(\n                slots,\n                \"config\",\n                name,\n                path.join(directoryPath, filename),\n                basePath\n            );\n\n            if (fs.existsSync(ctx.filePath) && fs.statSync(ctx.filePath).isFile()) {\n                let configData;\n\n                try {\n                    configData = loadConfigFile(ctx.filePath);\n                } catch (error) {\n                    if (!error || error.code !== \"ESLINT_CONFIG_FIELD_NOT_FOUND\") {\n                        throw error;\n                    }\n                }\n\n                if (configData) {\n                    debug(`Config file found: ${ctx.filePath}`);\n                    return new ConfigArray(\n                        ...this._normalizeConfigData(configData, ctx)\n                    );\n                }\n            }\n        }\n\n        debug(`Config file not found on ${directoryPath}`);\n        return new ConfigArray();\n    }\n\n    /**\n     * Check if a config file on a given directory exists or not.\n     * @param {string} directoryPath The path to a directory.\n     * @returns {string | null} The path to the found config file. If not found then null.\n     */\n    static getPathToConfigFileInDirectory(directoryPath) {\n        for (const filename of configFilenames) {\n            const filePath = path.join(directoryPath, filename);\n\n            if (fs.existsSync(filePath)) {\n                if (filename === \"package.json\") {\n                    try {\n                        loadPackageJSONConfigFile(filePath);\n                        return filePath;\n                    } catch { /* ignore */ }\n                } else {\n                    return filePath;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Load `.eslintignore` file.\n     * @param {string} filePath The path to a `.eslintignore` file to load.\n     * @returns {ConfigArray} Loaded config. An empty `ConfigArray` if any config doesn't exist.\n     */\n    loadESLintIgnore(filePath) {\n        const slots = internalSlotsMap.get(this);\n        const ctx = createContext(\n            slots,\n            \"ignore\",\n            void 0,\n            filePath,\n            slots.cwd\n        );\n        const ignorePatterns = loadESLintIgnoreFile(ctx.filePath);\n\n        return new ConfigArray(\n            ...this._normalizeESLintIgnoreData(ignorePatterns, ctx)\n        );\n    }\n\n    /**\n     * Load `.eslintignore` file in the current working directory.\n     * @returns {ConfigArray} Loaded config. An empty `ConfigArray` if any config doesn't exist.\n     */\n    loadDefaultESLintIgnore() {\n        const slots = internalSlotsMap.get(this);\n        const eslintIgnorePath = path.resolve(slots.cwd, \".eslintignore\");\n        const packageJsonPath = path.resolve(slots.cwd, \"package.json\");\n\n        if (fs.existsSync(eslintIgnorePath)) {\n            return this.loadESLintIgnore(eslintIgnorePath);\n        }\n        if (fs.existsSync(packageJsonPath)) {\n            const data = loadJSONConfigFile(packageJsonPath);\n\n            if (Object.hasOwnProperty.call(data, \"eslintIgnore\")) {\n                if (!Array.isArray(data.eslintIgnore)) {\n                    throw new Error(\"Package.json eslintIgnore property requires an array of paths\");\n                }\n                const ctx = createContext(\n                    slots,\n                    \"ignore\",\n                    \"eslintIgnore in package.json\",\n                    packageJsonPath,\n                    slots.cwd\n                );\n\n                return new ConfigArray(\n                    ...this._normalizeESLintIgnoreData(data.eslintIgnore, ctx)\n                );\n            }\n        }\n\n        return new ConfigArray();\n    }\n\n    /**\n     * Load a given config file.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} Loaded config.\n     * @private\n     */\n    _loadConfigData(ctx) {\n        return this._normalizeConfigData(loadConfigFile(ctx.filePath), ctx);\n    }\n\n    /**\n     * Normalize a given `.eslintignore` data to config array elements.\n     * @param {string[]} ignorePatterns The patterns to ignore files.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    *_normalizeESLintIgnoreData(ignorePatterns, ctx) {\n        const elements = this._normalizeObjectConfigData(\n            { ignorePatterns },\n            ctx\n        );\n\n        // Set `ignorePattern.loose` flag for backward compatibility.\n        for (const element of elements) {\n            if (element.ignorePattern) {\n                element.ignorePattern.loose = true;\n            }\n            yield element;\n        }\n    }\n\n    /**\n     * Normalize a given config to an array.\n     * @param {ConfigData} configData The config data to normalize.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    _normalizeConfigData(configData, ctx) {\n        const validator = new ConfigValidator();\n\n        validator.validateConfigSchema(configData, ctx.name || ctx.filePath);\n        return this._normalizeObjectConfigData(configData, ctx);\n    }\n\n    /**\n     * Normalize a given config to an array.\n     * @param {ConfigData|OverrideConfigData} configData The config data to normalize.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    *_normalizeObjectConfigData(configData, ctx) {\n        const { files, excludedFiles, ...configBody } = configData;\n        const criteria = OverrideTester.create(\n            files,\n            excludedFiles,\n            ctx.matchBasePath\n        );\n        const elements = this._normalizeObjectConfigDataBody(configBody, ctx);\n\n        // Apply the criteria to every element.\n        for (const element of elements) {\n\n            /*\n             * Merge the criteria.\n             * This is for the `overrides` entries that came from the\n             * configurations of `overrides[].extends`.\n             */\n            element.criteria = OverrideTester.and(criteria, element.criteria);\n\n            /*\n             * Remove `root` property to ignore `root` settings which came from\n             * `extends` in `overrides`.\n             */\n            if (element.criteria) {\n                element.root = void 0;\n            }\n\n            yield element;\n        }\n    }\n\n    /**\n     * Normalize a given config to an array.\n     * @param {ConfigData} configData The config data to normalize.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    *_normalizeObjectConfigDataBody(\n        {\n            env,\n            extends: extend,\n            globals,\n            ignorePatterns,\n            noInlineConfig,\n            parser: parserName,\n            parserOptions,\n            plugins: pluginList,\n            processor,\n            reportUnusedDisableDirectives,\n            root,\n            rules,\n            settings,\n            overrides: overrideList = []\n        },\n        ctx\n    ) {\n        const extendList = Array.isArray(extend) ? extend : [extend];\n        const ignorePattern = ignorePatterns && new IgnorePattern(\n            Array.isArray(ignorePatterns) ? ignorePatterns : [ignorePatterns],\n            ctx.matchBasePath\n        );\n\n        // Flatten `extends`.\n        for (const extendName of extendList.filter(Boolean)) {\n            yield* this._loadExtends(extendName, ctx);\n        }\n\n        // Load parser & plugins.\n        const parser = parserName && this._loadParser(parserName, ctx);\n        const plugins = pluginList && this._loadPlugins(pluginList, ctx);\n\n        // Yield pseudo config data for file extension processors.\n        if (plugins) {\n            yield* this._takeFileExtensionProcessors(plugins, ctx);\n        }\n\n        // Yield the config data except `extends` and `overrides`.\n        yield {\n\n            // Debug information.\n            type: ctx.type,\n            name: ctx.name,\n            filePath: ctx.filePath,\n\n            // Config data.\n            criteria: null,\n            env,\n            globals,\n            ignorePattern,\n            noInlineConfig,\n            parser,\n            parserOptions,\n            plugins,\n            processor,\n            reportUnusedDisableDirectives,\n            root,\n            rules,\n            settings\n        };\n\n        // Flatten `overries`.\n        for (let i = 0; i < overrideList.length; ++i) {\n            yield* this._normalizeObjectConfigData(\n                overrideList[i],\n                { ...ctx, name: `${ctx.name}#overrides[${i}]` }\n            );\n        }\n    }\n\n    /**\n     * Load configs of an element in `extends`.\n     * @param {string} extendName The name of a base config.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    _loadExtends(extendName, ctx) {\n        debug(\"Loading {extends:%j} relative to %s\", extendName, ctx.filePath);\n        try {\n            if (extendName.startsWith(\"eslint:\")) {\n                return this._loadExtendedBuiltInConfig(extendName, ctx);\n            }\n            if (extendName.startsWith(\"plugin:\")) {\n                return this._loadExtendedPluginConfig(extendName, ctx);\n            }\n            return this._loadExtendedShareableConfig(extendName, ctx);\n        } catch (error) {\n            error.message += `\\nReferenced from: ${ctx.filePath || ctx.name}`;\n            throw error;\n        }\n    }\n\n    /**\n     * Load configs of an element in `extends`.\n     * @param {string} extendName The name of a base config.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    _loadExtendedBuiltInConfig(extendName, ctx) {\n        const {\n            eslintAllPath,\n            getEslintAllConfig,\n            eslintRecommendedPath,\n            getEslintRecommendedConfig\n        } = internalSlotsMap.get(this);\n\n        if (extendName === \"eslint:recommended\") {\n            const name = `${ctx.name} » ${extendName}`;\n\n            if (getEslintRecommendedConfig) {\n                if (typeof getEslintRecommendedConfig !== \"function\") {\n                    throw new Error(`getEslintRecommendedConfig must be a function instead of '${getEslintRecommendedConfig}'`);\n                }\n                return this._normalizeConfigData(getEslintRecommendedConfig(), { ...ctx, name, filePath: \"\" });\n            }\n            return this._loadConfigData({\n                ...ctx,\n                name,\n                filePath: eslintRecommendedPath\n            });\n        }\n        if (extendName === \"eslint:all\") {\n            const name = `${ctx.name} » ${extendName}`;\n\n            if (getEslintAllConfig) {\n                if (typeof getEslintAllConfig !== \"function\") {\n                    throw new Error(`getEslintAllConfig must be a function instead of '${getEslintAllConfig}'`);\n                }\n                return this._normalizeConfigData(getEslintAllConfig(), { ...ctx, name, filePath: \"\" });\n            }\n            return this._loadConfigData({\n                ...ctx,\n                name,\n                filePath: eslintAllPath\n            });\n        }\n\n        throw configInvalidError(extendName, ctx.name, \"extend-config-missing\");\n    }\n\n    /**\n     * Load configs of an element in `extends`.\n     * @param {string} extendName The name of a base config.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    _loadExtendedPluginConfig(extendName, ctx) {\n        const slashIndex = extendName.lastIndexOf(\"/\");\n\n        if (slashIndex === -1) {\n            throw configInvalidError(extendName, ctx.filePath, \"plugin-invalid\");\n        }\n\n        const pluginName = extendName.slice(\"plugin:\".length, slashIndex);\n        const configName = extendName.slice(slashIndex + 1);\n\n        if (isFilePath(pluginName)) {\n            throw new Error(\"'extends' cannot use a file path for plugins.\");\n        }\n\n        const plugin = this._loadPlugin(pluginName, ctx);\n        const configData =\n            plugin.definition &&\n            plugin.definition.configs[configName];\n\n        if (configData) {\n            return this._normalizeConfigData(configData, {\n                ...ctx,\n                filePath: plugin.filePath || ctx.filePath,\n                name: `${ctx.name} » plugin:${plugin.id}/${configName}`\n            });\n        }\n\n        throw plugin.error || configInvalidError(extendName, ctx.filePath, \"extend-config-missing\");\n    }\n\n    /**\n     * Load configs of an element in `extends`.\n     * @param {string} extendName The name of a base config.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The normalized config.\n     * @private\n     */\n    _loadExtendedShareableConfig(extendName, ctx) {\n        const { cwd, resolver } = internalSlotsMap.get(this);\n        const relativeTo = ctx.filePath || path.join(cwd, \"__placeholder__.js\");\n        let request;\n\n        if (isFilePath(extendName)) {\n            request = extendName;\n        } else if (extendName.startsWith(\".\")) {\n            request = `./${extendName}`; // For backward compatibility. A ton of tests depended on this behavior.\n        } else {\n            request = naming.normalizePackageName(\n                extendName,\n                \"eslint-config\"\n            );\n        }\n\n        let filePath;\n\n        try {\n            filePath = resolver.resolve(request, relativeTo);\n        } catch (error) {\n            /* istanbul ignore else */\n            if (error && error.code === \"MODULE_NOT_FOUND\") {\n                throw configInvalidError(extendName, ctx.filePath, \"extend-config-missing\");\n            }\n            throw error;\n        }\n\n        writeDebugLogForLoading(request, relativeTo, filePath);\n        return this._loadConfigData({\n            ...ctx,\n            filePath,\n            name: `${ctx.name} » ${request}`\n        });\n    }\n\n    /**\n     * Load given plugins.\n     * @param {string[]} names The plugin names to load.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {Record<string,DependentPlugin>} The loaded parser.\n     * @private\n     */\n    _loadPlugins(names, ctx) {\n        return names.reduce((map, name) => {\n            if (isFilePath(name)) {\n                throw new Error(\"Plugins array cannot includes file paths.\");\n            }\n            const plugin = this._loadPlugin(name, ctx);\n\n            map[plugin.id] = plugin;\n\n            return map;\n        }, {});\n    }\n\n    /**\n     * Load a given parser.\n     * @param {string} nameOrPath The package name or the path to a parser file.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {DependentParser} The loaded parser.\n     */\n    _loadParser(nameOrPath, ctx) {\n        debug(\"Loading parser %j from %s\", nameOrPath, ctx.filePath);\n\n        const { cwd, resolver } = internalSlotsMap.get(this);\n        const relativeTo = ctx.filePath || path.join(cwd, \"__placeholder__.js\");\n\n        try {\n            const filePath = resolver.resolve(nameOrPath, relativeTo);\n\n            writeDebugLogForLoading(nameOrPath, relativeTo, filePath);\n\n            return new ConfigDependency({\n                definition: require(filePath),\n                filePath,\n                id: nameOrPath,\n                importerName: ctx.name,\n                importerPath: ctx.filePath\n            });\n        } catch (error) {\n\n            // If the parser name is \"espree\", load the espree of ESLint.\n            if (nameOrPath === \"espree\") {\n                debug(\"Fallback espree.\");\n                return new ConfigDependency({\n                    definition: require(\"espree\"),\n                    filePath: require.resolve(\"espree\"),\n                    id: nameOrPath,\n                    importerName: ctx.name,\n                    importerPath: ctx.filePath\n                });\n            }\n\n            debug(\"Failed to load parser '%s' declared in '%s'.\", nameOrPath, ctx.name);\n            error.message = `Failed to load parser '${nameOrPath}' declared in '${ctx.name}': ${error.message}`;\n\n            return new ConfigDependency({\n                error,\n                id: nameOrPath,\n                importerName: ctx.name,\n                importerPath: ctx.filePath\n            });\n        }\n    }\n\n    /**\n     * Load a given plugin.\n     * @param {string} name The plugin name to load.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {DependentPlugin} The loaded plugin.\n     * @private\n     */\n    _loadPlugin(name, ctx) {\n        debug(\"Loading plugin %j from %s\", name, ctx.filePath);\n\n        const { additionalPluginPool, resolver } = internalSlotsMap.get(this);\n        const request = naming.normalizePackageName(name, \"eslint-plugin\");\n        const id = naming.getShorthandName(request, \"eslint-plugin\");\n        const relativeTo = path.join(ctx.pluginBasePath, \"__placeholder__.js\");\n\n        if (name.match(/\\s+/u)) {\n            const error = Object.assign(\n                new Error(`Whitespace found in plugin name '${name}'`),\n                {\n                    messageTemplate: \"whitespace-found\",\n                    messageData: { pluginName: request }\n                }\n            );\n\n            return new ConfigDependency({\n                error,\n                id,\n                importerName: ctx.name,\n                importerPath: ctx.filePath\n            });\n        }\n\n        // Check for additional pool.\n        const plugin =\n            additionalPluginPool.get(request) ||\n            additionalPluginPool.get(id);\n\n        if (plugin) {\n            return new ConfigDependency({\n                definition: normalizePlugin(plugin),\n                filePath: \"\", // It's unknown where the plugin came from.\n                id,\n                importerName: ctx.name,\n                importerPath: ctx.filePath\n            });\n        }\n\n        let filePath;\n        let error;\n\n        try {\n            filePath = resolver.resolve(request, relativeTo);\n        } catch (resolveError) {\n            error = resolveError;\n            /* istanbul ignore else */\n            if (error && error.code === \"MODULE_NOT_FOUND\") {\n                error.messageTemplate = \"plugin-missing\";\n                error.messageData = {\n                    pluginName: request,\n                    resolvePluginsRelativeTo: ctx.pluginBasePath,\n                    importerName: ctx.name\n                };\n            }\n        }\n\n        if (filePath) {\n            try {\n                writeDebugLogForLoading(request, relativeTo, filePath);\n\n                const startTime = Date.now();\n                const pluginDefinition = require(filePath);\n\n                debug(`Plugin ${filePath} loaded in: ${Date.now() - startTime}ms`);\n\n                return new ConfigDependency({\n                    definition: normalizePlugin(pluginDefinition),\n                    filePath,\n                    id,\n                    importerName: ctx.name,\n                    importerPath: ctx.filePath\n                });\n            } catch (loadError) {\n                error = loadError;\n            }\n        }\n\n        debug(\"Failed to load plugin '%s' declared in '%s'.\", name, ctx.name);\n        error.message = `Failed to load plugin '${name}' declared in '${ctx.name}': ${error.message}`;\n        return new ConfigDependency({\n            error,\n            id,\n            importerName: ctx.name,\n            importerPath: ctx.filePath\n        });\n    }\n\n    /**\n     * Take file expression processors as config array elements.\n     * @param {Record<string,DependentPlugin>} plugins The plugin definitions.\n     * @param {ConfigArrayFactoryLoadingContext} ctx The loading context.\n     * @returns {IterableIterator<ConfigArrayElement>} The config array elements of file expression processors.\n     * @private\n     */\n    *_takeFileExtensionProcessors(plugins, ctx) {\n        for (const pluginId of Object.keys(plugins)) {\n            const processors =\n                plugins[pluginId] &&\n                plugins[pluginId].definition &&\n                plugins[pluginId].definition.processors;\n\n            if (!processors) {\n                continue;\n            }\n\n            for (const processorId of Object.keys(processors)) {\n                if (processorId.startsWith(\".\")) {\n                    yield* this._normalizeObjectConfigData(\n                        {\n                            files: [`*${processorId}`],\n                            processor: `${pluginId}/${processorId}`\n                        },\n                        {\n                            ...ctx,\n                            type: \"implicit-processor\",\n                            name: `${ctx.name}#processors[\"${pluginId}/${processorId}\"]`\n                        }\n                    );\n                }\n            }\n        }\n    }\n}\n\nexport { ConfigArrayFactory, createContext };\n","/**\n * @fileoverview `CascadingConfigArrayFactory` class.\n *\n * `CascadingConfigArrayFactory` class has a responsibility:\n *\n * 1. Handles cascading of config files.\n *\n * It provides two methods:\n *\n * - `getConfigArrayForFile(filePath)`\n *     Get the corresponded configuration of a given file. This method doesn't\n *     throw even if the given file didn't exist.\n * - `clearCache()`\n *     Clear the internal cache. You have to call this method when\n *     `additionalPluginPool` was updated if `baseConfig` or `cliConfig` depends\n *     on the additional plugins. (`CLIEngine#addPlugin()` method calls this.)\n *\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport debugOrig from \"debug\";\nimport os from \"os\";\nimport path from \"path\";\n\nimport { ConfigArrayFactory } from \"./config-array-factory.js\";\nimport {\n    ConfigArray,\n    ConfigDependency,\n    IgnorePattern\n} from \"./config-array/index.js\";\nimport ConfigValidator from \"./shared/config-validator.js\";\nimport { emitDeprecationWarning } from \"./shared/deprecation-warnings.js\";\n\nconst debug = debugOrig(\"eslintrc:cascading-config-array-factory\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n// Define types for VSCode IntelliSense.\n/** @typedef {import(\"./shared/types\").ConfigData} ConfigData */\n/** @typedef {import(\"./shared/types\").Parser} Parser */\n/** @typedef {import(\"./shared/types\").Plugin} Plugin */\n/** @typedef {import(\"./shared/types\").Rule} Rule */\n/** @typedef {ReturnType<ConfigArrayFactory[\"create\"]>} ConfigArray */\n\n/**\n * @typedef {Object} CascadingConfigArrayFactoryOptions\n * @property {Map<string,Plugin>} [additionalPluginPool] The map for additional plugins.\n * @property {ConfigData} [baseConfig] The config by `baseConfig` option.\n * @property {ConfigData} [cliConfig] The config by CLI options (`--env`, `--global`, `--ignore-pattern`, `--parser`, `--parser-options`, `--plugin`, and `--rule`). CLI options overwrite the setting in config files.\n * @property {string} [cwd] The base directory to start lookup.\n * @property {string} [ignorePath] The path to the alternative file of `.eslintignore`.\n * @property {string[]} [rulePaths] The value of `--rulesdir` option.\n * @property {string} [specificConfigPath] The value of `--config` option.\n * @property {boolean} [useEslintrc] if `false` then it doesn't load config files.\n * @property {Function} loadRules The function to use to load rules.\n * @property {Map<string,Rule>} builtInRules The rules that are built in to ESLint.\n * @property {Object} [resolver=ModuleResolver] The module resolver object.\n * @property {string} eslintAllPath The path to the definitions for eslint:all.\n * @property {Function} getEslintAllConfig Returns the config data for eslint:all.\n * @property {string} eslintRecommendedPath The path to the definitions for eslint:recommended.\n * @property {Function} getEslintRecommendedConfig Returns the config data for eslint:recommended.\n */\n\n/**\n * @typedef {Object} CascadingConfigArrayFactoryInternalSlots\n * @property {ConfigArray} baseConfigArray The config array of `baseConfig` option.\n * @property {ConfigData} baseConfigData The config data of `baseConfig` option. This is used to reset `baseConfigArray`.\n * @property {ConfigArray} cliConfigArray The config array of CLI options.\n * @property {ConfigData} cliConfigData The config data of CLI options. This is used to reset `cliConfigArray`.\n * @property {ConfigArrayFactory} configArrayFactory The factory for config arrays.\n * @property {Map<string, ConfigArray>} configCache The cache from directory paths to config arrays.\n * @property {string} cwd The base directory to start lookup.\n * @property {WeakMap<ConfigArray, ConfigArray>} finalizeCache The cache from config arrays to finalized config arrays.\n * @property {string} [ignorePath] The path to the alternative file of `.eslintignore`.\n * @property {string[]|null} rulePaths The value of `--rulesdir` option. This is used to reset `baseConfigArray`.\n * @property {string|null} specificConfigPath The value of `--config` option. This is used to reset `cliConfigArray`.\n * @property {boolean} useEslintrc if `false` then it doesn't load config files.\n * @property {Function} loadRules The function to use to load rules.\n * @property {Map<string,Rule>} builtInRules The rules that are built in to ESLint.\n * @property {Object} [resolver=ModuleResolver] The module resolver object.\n * @property {string} eslintAllPath The path to the definitions for eslint:all.\n * @property {Function} getEslintAllConfig Returns the config data for eslint:all.\n * @property {string} eslintRecommendedPath The path to the definitions for eslint:recommended.\n * @property {Function} getEslintRecommendedConfig Returns the config data for eslint:recommended.\n */\n\n/** @type {WeakMap<CascadingConfigArrayFactory, CascadingConfigArrayFactoryInternalSlots>} */\nconst internalSlotsMap = new WeakMap();\n\n/**\n * Create the config array from `baseConfig` and `rulePaths`.\n * @param {CascadingConfigArrayFactoryInternalSlots} slots The slots.\n * @returns {ConfigArray} The config array of the base configs.\n */\nfunction createBaseConfigArray({\n    configArrayFactory,\n    baseConfigData,\n    rulePaths,\n    cwd,\n    loadRules\n}) {\n    const baseConfigArray = configArrayFactory.create(\n        baseConfigData,\n        { name: \"BaseConfig\" }\n    );\n\n    /*\n     * Create the config array element for the default ignore patterns.\n     * This element has `ignorePattern` property that ignores the default\n     * patterns in the current working directory.\n     */\n    baseConfigArray.unshift(configArrayFactory.create(\n        { ignorePatterns: IgnorePattern.DefaultPatterns },\n        { name: \"DefaultIgnorePattern\" }\n    )[0]);\n\n    /*\n     * Load rules `--rulesdir` option as a pseudo plugin.\n     * Use a pseudo plugin to define rules of `--rulesdir`, so we can validate\n     * the rule's options with only information in the config array.\n     */\n    if (rulePaths && rulePaths.length > 0) {\n        baseConfigArray.push({\n            type: \"config\",\n            name: \"--rulesdir\",\n            filePath: \"\",\n            plugins: {\n                \"\": new ConfigDependency({\n                    definition: {\n                        rules: rulePaths.reduce(\n                            (map, rulesPath) => Object.assign(\n                                map,\n                                loadRules(rulesPath, cwd)\n                            ),\n                            {}\n                        )\n                    },\n                    filePath: \"\",\n                    id: \"\",\n                    importerName: \"--rulesdir\",\n                    importerPath: \"\"\n                })\n            }\n        });\n    }\n\n    return baseConfigArray;\n}\n\n/**\n * Create the config array from CLI options.\n * @param {CascadingConfigArrayFactoryInternalSlots} slots The slots.\n * @returns {ConfigArray} The config array of the base configs.\n */\nfunction createCLIConfigArray({\n    cliConfigData,\n    configArrayFactory,\n    cwd,\n    ignorePath,\n    specificConfigPath\n}) {\n    const cliConfigArray = configArrayFactory.create(\n        cliConfigData,\n        { name: \"CLIOptions\" }\n    );\n\n    cliConfigArray.unshift(\n        ...(ignorePath\n            ? configArrayFactory.loadESLintIgnore(ignorePath)\n            : configArrayFactory.loadDefaultESLintIgnore())\n    );\n\n    if (specificConfigPath) {\n        cliConfigArray.unshift(\n            ...configArrayFactory.loadFile(\n                specificConfigPath,\n                { name: \"--config\", basePath: cwd }\n            )\n        );\n    }\n\n    return cliConfigArray;\n}\n\n/**\n * The error type when there are files matched by a glob, but all of them have been ignored.\n */\nclass ConfigurationNotFoundError extends Error {\n\n    // eslint-disable-next-line jsdoc/require-description\n    /**\n     * @param {string} directoryPath The directory path.\n     */\n    constructor(directoryPath) {\n        super(`No ESLint configuration found in ${directoryPath}.`);\n        this.messageTemplate = \"no-config-found\";\n        this.messageData = { directoryPath };\n    }\n}\n\n/**\n * This class provides the functionality that enumerates every file which is\n * matched by given glob patterns and that configuration.\n */\nclass CascadingConfigArrayFactory {\n\n    /**\n     * Initialize this enumerator.\n     * @param {CascadingConfigArrayFactoryOptions} options The options.\n     */\n    constructor({\n        additionalPluginPool = new Map(),\n        baseConfig: baseConfigData = null,\n        cliConfig: cliConfigData = null,\n        cwd = process.cwd(),\n        ignorePath,\n        resolvePluginsRelativeTo,\n        rulePaths = [],\n        specificConfigPath = null,\n        useEslintrc = true,\n        builtInRules = new Map(),\n        loadRules,\n        resolver,\n        eslintRecommendedPath,\n        getEslintRecommendedConfig,\n        eslintAllPath,\n        getEslintAllConfig\n    } = {}) {\n        const configArrayFactory = new ConfigArrayFactory({\n            additionalPluginPool,\n            cwd,\n            resolvePluginsRelativeTo,\n            builtInRules,\n            resolver,\n            eslintRecommendedPath,\n            getEslintRecommendedConfig,\n            eslintAllPath,\n            getEslintAllConfig\n        });\n\n        internalSlotsMap.set(this, {\n            baseConfigArray: createBaseConfigArray({\n                baseConfigData,\n                configArrayFactory,\n                cwd,\n                rulePaths,\n                loadRules\n            }),\n            baseConfigData,\n            cliConfigArray: createCLIConfigArray({\n                cliConfigData,\n                configArrayFactory,\n                cwd,\n                ignorePath,\n                specificConfigPath\n            }),\n            cliConfigData,\n            configArrayFactory,\n            configCache: new Map(),\n            cwd,\n            finalizeCache: new WeakMap(),\n            ignorePath,\n            rulePaths,\n            specificConfigPath,\n            useEslintrc,\n            builtInRules,\n            loadRules\n        });\n    }\n\n    /**\n     * The path to the current working directory.\n     * This is used by tests.\n     * @type {string}\n     */\n    get cwd() {\n        const { cwd } = internalSlotsMap.get(this);\n\n        return cwd;\n    }\n\n    /**\n     * Get the config array of a given file.\n     * If `filePath` was not given, it returns the config which contains only\n     * `baseConfigData` and `cliConfigData`.\n     * @param {string} [filePath] The file path to a file.\n     * @param {Object} [options] The options.\n     * @param {boolean} [options.ignoreNotFoundError] If `true` then it doesn't throw `ConfigurationNotFoundError`.\n     * @returns {ConfigArray} The config array of the file.\n     */\n    getConfigArrayForFile(filePath, { ignoreNotFoundError = false } = {}) {\n        const {\n            baseConfigArray,\n            cliConfigArray,\n            cwd\n        } = internalSlotsMap.get(this);\n\n        if (!filePath) {\n            return new ConfigArray(...baseConfigArray, ...cliConfigArray);\n        }\n\n        const directoryPath = path.dirname(path.resolve(cwd, filePath));\n\n        debug(`Load config files for ${directoryPath}.`);\n\n        return this._finalizeConfigArray(\n            this._loadConfigInAncestors(directoryPath),\n            directoryPath,\n            ignoreNotFoundError\n        );\n    }\n\n    /**\n     * Set the config data to override all configs.\n     * Require to call `clearCache()` method after this method is called.\n     * @param {ConfigData} configData The config data to override all configs.\n     * @returns {void}\n     */\n    setOverrideConfig(configData) {\n        const slots = internalSlotsMap.get(this);\n\n        slots.cliConfigData = configData;\n    }\n\n    /**\n     * Clear config cache.\n     * @returns {void}\n     */\n    clearCache() {\n        const slots = internalSlotsMap.get(this);\n\n        slots.baseConfigArray = createBaseConfigArray(slots);\n        slots.cliConfigArray = createCLIConfigArray(slots);\n        slots.configCache.clear();\n    }\n\n    /**\n     * Load and normalize config files from the ancestor directories.\n     * @param {string} directoryPath The path to a leaf directory.\n     * @param {boolean} configsExistInSubdirs `true` if configurations exist in subdirectories.\n     * @returns {ConfigArray} The loaded config.\n     * @private\n     */\n    _loadConfigInAncestors(directoryPath, configsExistInSubdirs = false) {\n        const {\n            baseConfigArray,\n            configArrayFactory,\n            configCache,\n            cwd,\n            useEslintrc\n        } = internalSlotsMap.get(this);\n\n        if (!useEslintrc) {\n            return baseConfigArray;\n        }\n\n        let configArray = configCache.get(directoryPath);\n\n        // Hit cache.\n        if (configArray) {\n            debug(`Cache hit: ${directoryPath}.`);\n            return configArray;\n        }\n        debug(`No cache found: ${directoryPath}.`);\n\n        const homePath = os.homedir();\n\n        // Consider this is root.\n        if (directoryPath === homePath && cwd !== homePath) {\n            debug(\"Stop traversing because of considered root.\");\n            if (configsExistInSubdirs) {\n                const filePath = ConfigArrayFactory.getPathToConfigFileInDirectory(directoryPath);\n\n                if (filePath) {\n                    emitDeprecationWarning(\n                        filePath,\n                        \"ESLINT_PERSONAL_CONFIG_SUPPRESS\"\n                    );\n                }\n            }\n            return this._cacheConfig(directoryPath, baseConfigArray);\n        }\n\n        // Load the config on this directory.\n        try {\n            configArray = configArrayFactory.loadInDirectory(directoryPath);\n        } catch (error) {\n            /* istanbul ignore next */\n            if (error.code === \"EACCES\") {\n                debug(\"Stop traversing because of 'EACCES' error.\");\n                return this._cacheConfig(directoryPath, baseConfigArray);\n            }\n            throw error;\n        }\n\n        if (configArray.length > 0 && configArray.isRoot()) {\n            debug(\"Stop traversing because of 'root:true'.\");\n            configArray.unshift(...baseConfigArray);\n            return this._cacheConfig(directoryPath, configArray);\n        }\n\n        // Load from the ancestors and merge it.\n        const parentPath = path.dirname(directoryPath);\n        const parentConfigArray = parentPath && parentPath !== directoryPath\n            ? this._loadConfigInAncestors(\n                parentPath,\n                configsExistInSubdirs || configArray.length > 0\n            )\n            : baseConfigArray;\n\n        if (configArray.length > 0) {\n            configArray.unshift(...parentConfigArray);\n        } else {\n            configArray = parentConfigArray;\n        }\n\n        // Cache and return.\n        return this._cacheConfig(directoryPath, configArray);\n    }\n\n    /**\n     * Freeze and cache a given config.\n     * @param {string} directoryPath The path to a directory as a cache key.\n     * @param {ConfigArray} configArray The config array as a cache value.\n     * @returns {ConfigArray} The `configArray` (frozen).\n     */\n    _cacheConfig(directoryPath, configArray) {\n        const { configCache } = internalSlotsMap.get(this);\n\n        Object.freeze(configArray);\n        configCache.set(directoryPath, configArray);\n\n        return configArray;\n    }\n\n    /**\n     * Finalize a given config array.\n     * Concatenate `--config` and other CLI options.\n     * @param {ConfigArray} configArray The parent config array.\n     * @param {string} directoryPath The path to the leaf directory to find config files.\n     * @param {boolean} ignoreNotFoundError If `true` then it doesn't throw `ConfigurationNotFoundError`.\n     * @returns {ConfigArray} The loaded config.\n     * @private\n     */\n    _finalizeConfigArray(configArray, directoryPath, ignoreNotFoundError) {\n        const {\n            cliConfigArray,\n            configArrayFactory,\n            finalizeCache,\n            useEslintrc,\n            builtInRules\n        } = internalSlotsMap.get(this);\n\n        let finalConfigArray = finalizeCache.get(configArray);\n\n        if (!finalConfigArray) {\n            finalConfigArray = configArray;\n\n            // Load the personal config if there are no regular config files.\n            if (\n                useEslintrc &&\n                configArray.every(c => !c.filePath) &&\n                cliConfigArray.every(c => !c.filePath) // `--config` option can be a file.\n            ) {\n                const homePath = os.homedir();\n\n                debug(\"Loading the config file of the home directory:\", homePath);\n\n                const personalConfigArray = configArrayFactory.loadInDirectory(\n                    homePath,\n                    { name: \"PersonalConfig\" }\n                );\n\n                if (\n                    personalConfigArray.length > 0 &&\n                    !directoryPath.startsWith(homePath)\n                ) {\n                    const lastElement =\n                        personalConfigArray[personalConfigArray.length - 1];\n\n                    emitDeprecationWarning(\n                        lastElement.filePath,\n                        \"ESLINT_PERSONAL_CONFIG_LOAD\"\n                    );\n                }\n\n                finalConfigArray = finalConfigArray.concat(personalConfigArray);\n            }\n\n            // Apply CLI options.\n            if (cliConfigArray.length > 0) {\n                finalConfigArray = finalConfigArray.concat(cliConfigArray);\n            }\n\n            // Validate rule settings and environments.\n            const validator = new ConfigValidator({\n                builtInRules\n            });\n\n            validator.validateConfigArray(finalConfigArray);\n\n            // Cache it.\n            Object.freeze(finalConfigArray);\n            finalizeCache.set(configArray, finalConfigArray);\n\n            debug(\n                \"Configuration was determined: %o on %s\",\n                finalConfigArray,\n                directoryPath\n            );\n        }\n\n        // At least one element (the default ignore patterns) exists.\n        if (!ignoreNotFoundError && useEslintrc && finalConfigArray.length <= 1) {\n            throw new ConfigurationNotFoundError(directoryPath);\n        }\n\n        return finalConfigArray;\n    }\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport { CascadingConfigArrayFactory };\n","/**\n * @fileoverview Compatibility class for flat config.\n * @author Nicholas C. Zakas\n */\n\n//-----------------------------------------------------------------------------\n// Requirements\n//-----------------------------------------------------------------------------\n\nimport createDebug from \"debug\";\nimport path from \"path\";\n\nimport environments from \"../conf/environments.js\";\nimport { ConfigArrayFactory } from \"./config-array-factory.js\";\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\n/** @typedef {import(\"../../shared/types\").Environment} Environment */\n/** @typedef {import(\"../../shared/types\").Processor} Processor */\n\nconst debug = createDebug(\"eslintrc:flat-compat\");\nconst cafactory = Symbol(\"cafactory\");\n\n/**\n * Translates an ESLintRC-style config object into a flag-config-style config\n * object.\n * @param {Object} eslintrcConfig An ESLintRC-style config object.\n * @param {Object} options Options to help translate the config.\n * @param {string} options.resolveConfigRelativeTo To the directory to resolve\n *      configs from.\n * @param {string} options.resolvePluginsRelativeTo The directory to resolve\n *      plugins from.\n * @param {ReadOnlyMap<string,Environment>} options.pluginEnvironments A map of plugin environment\n *      names to objects.\n * @param {ReadOnlyMap<string,Processor>} options.pluginProcessors A map of plugin processor\n *      names to objects.\n * @returns {Object} A flag-config-style config object.\n */\nfunction translateESLintRC(eslintrcConfig, {\n    resolveConfigRelativeTo,\n    resolvePluginsRelativeTo,\n    pluginEnvironments,\n    pluginProcessors\n}) {\n\n    const flatConfig = {};\n    const configs = [];\n    const languageOptions = {};\n    const linterOptions = {};\n    const keysToCopy = [\"settings\", \"rules\", \"processor\"];\n    const languageOptionsKeysToCopy = [\"globals\", \"parser\", \"parserOptions\"];\n    const linterOptionsKeysToCopy = [\"noInlineConfig\", \"reportUnusedDisableDirectives\"];\n\n    // check for special settings for eslint:all and eslint:recommended:\n    if (eslintrcConfig.settings) {\n        if (eslintrcConfig.settings[\"eslint:all\"] === true) {\n            return [\"eslint:all\"];\n        }\n\n        if (eslintrcConfig.settings[\"eslint:recommended\"] === true) {\n            return [\"eslint:recommended\"];\n        }\n    }\n\n    // copy over simple translations\n    for (const key of keysToCopy) {\n        if (key in eslintrcConfig && typeof eslintrcConfig[key] !== \"undefined\") {\n            flatConfig[key] = eslintrcConfig[key];\n        }\n    }\n\n    // copy over languageOptions\n    for (const key of languageOptionsKeysToCopy) {\n        if (key in eslintrcConfig && typeof eslintrcConfig[key] !== \"undefined\") {\n\n            // create the languageOptions key in the flat config\n            flatConfig.languageOptions = languageOptions;\n\n            if (key === \"parser\") {\n                debug(`Resolving parser '${languageOptions[key]}' relative to ${resolveConfigRelativeTo}`);\n\n                if (eslintrcConfig[key].error) {\n                    throw eslintrcConfig[key].error;\n                }\n\n                languageOptions[key] = eslintrcConfig[key].definition;\n                continue;\n            }\n\n            // clone any object values that are in the eslintrc config\n            if (eslintrcConfig[key] && typeof eslintrcConfig[key] === \"object\") {\n                languageOptions[key] = {\n                    ...eslintrcConfig[key]\n                };\n            } else {\n                languageOptions[key] = eslintrcConfig[key];\n            }\n        }\n    }\n\n    // copy over linterOptions\n    for (const key of linterOptionsKeysToCopy) {\n        if (key in eslintrcConfig && typeof eslintrcConfig[key] !== \"undefined\") {\n            flatConfig.linterOptions = linterOptions;\n            linterOptions[key] = eslintrcConfig[key];\n        }\n    }\n\n    // move ecmaVersion a level up\n    if (languageOptions.parserOptions) {\n\n        if (\"ecmaVersion\" in languageOptions.parserOptions) {\n            languageOptions.ecmaVersion = languageOptions.parserOptions.ecmaVersion;\n            delete languageOptions.parserOptions.ecmaVersion;\n        }\n\n        if (\"sourceType\" in languageOptions.parserOptions) {\n            languageOptions.sourceType = languageOptions.parserOptions.sourceType;\n            delete languageOptions.parserOptions.sourceType;\n        }\n\n        // check to see if we even need parserOptions anymore and remove it if not\n        if (Object.keys(languageOptions.parserOptions).length === 0) {\n            delete languageOptions.parserOptions;\n        }\n    }\n\n    // overrides\n    if (eslintrcConfig.criteria) {\n        flatConfig.files = [absoluteFilePath => eslintrcConfig.criteria.test(absoluteFilePath)];\n    }\n\n    // translate plugins\n    if (eslintrcConfig.plugins && typeof eslintrcConfig.plugins === \"object\") {\n        debug(`Translating plugins: ${eslintrcConfig.plugins}`);\n\n        flatConfig.plugins = {};\n\n        for (const pluginName of Object.keys(eslintrcConfig.plugins)) {\n\n            debug(`Translating plugin: ${pluginName}`);\n            debug(`Resolving plugin '${pluginName} relative to ${resolvePluginsRelativeTo}`);\n\n            const { definition: plugin, error } = eslintrcConfig.plugins[pluginName];\n\n            if (error) {\n                throw error;\n            }\n\n            flatConfig.plugins[pluginName] = plugin;\n\n            // create a config for any processors\n            if (plugin.processors) {\n                for (const processorName of Object.keys(plugin.processors)) {\n                    if (processorName.startsWith(\".\")) {\n                        debug(`Assigning processor: ${pluginName}/${processorName}`);\n\n                        configs.unshift({\n                            files: [`**/*${processorName}`],\n                            processor: pluginProcessors.get(`${pluginName}/${processorName}`)\n                        });\n                    }\n\n                }\n            }\n        }\n    }\n\n    // translate env - must come after plugins\n    if (eslintrcConfig.env && typeof eslintrcConfig.env === \"object\") {\n        for (const envName of Object.keys(eslintrcConfig.env)) {\n\n            // only add environments that are true\n            if (eslintrcConfig.env[envName]) {\n                debug(`Translating environment: ${envName}`);\n\n                if (environments.has(envName)) {\n\n                    // built-in environments should be defined first\n                    configs.unshift(...translateESLintRC(environments.get(envName), {\n                        resolveConfigRelativeTo,\n                        resolvePluginsRelativeTo\n                    }));\n                } else if (pluginEnvironments.has(envName)) {\n\n                    // if the environment comes from a plugin, it should come after the plugin config\n                    configs.push(...translateESLintRC(pluginEnvironments.get(envName), {\n                        resolveConfigRelativeTo,\n                        resolvePluginsRelativeTo\n                    }));\n                }\n            }\n        }\n    }\n\n    // only add if there are actually keys in the config\n    if (Object.keys(flatConfig).length > 0) {\n        configs.push(flatConfig);\n    }\n\n    return configs;\n}\n\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\n/**\n * A compatibility class for working with configs.\n */\nclass FlatCompat {\n\n    constructor({\n        baseDirectory = process.cwd(),\n        resolvePluginsRelativeTo = baseDirectory\n    } = {}) {\n        this.baseDirectory = baseDirectory;\n        this.resolvePluginsRelativeTo = resolvePluginsRelativeTo;\n        this[cafactory] = new ConfigArrayFactory({\n            cwd: baseDirectory,\n            resolvePluginsRelativeTo,\n            getEslintAllConfig: () => ({ settings: { \"eslint:all\": true } }),\n            getEslintRecommendedConfig: () => ({ settings: { \"eslint:recommended\": true } })\n        });\n    }\n\n    /**\n     * Translates an ESLintRC-style config into a flag-config-style config.\n     * @param {Object} eslintrcConfig The ESLintRC-style config object.\n     * @returns {Object} A flag-config-style config object.\n     */\n    config(eslintrcConfig) {\n        const eslintrcArray = this[cafactory].create(eslintrcConfig, {\n            basePath: this.baseDirectory\n        });\n\n        const flatArray = [];\n        let hasIgnorePatterns = false;\n\n        eslintrcArray.forEach(configData => {\n            if (configData.type === \"config\") {\n                hasIgnorePatterns = hasIgnorePatterns || configData.ignorePattern;\n                flatArray.push(...translateESLintRC(configData, {\n                    resolveConfigRelativeTo: path.join(this.baseDirectory, \"__placeholder.js\"),\n                    resolvePluginsRelativeTo: path.join(this.resolvePluginsRelativeTo, \"__placeholder.js\"),\n                    pluginEnvironments: eslintrcArray.pluginEnvironments,\n                    pluginProcessors: eslintrcArray.pluginProcessors\n                }));\n            }\n        });\n\n        // combine ignorePatterns to emulate ESLintRC behavior better\n        if (hasIgnorePatterns) {\n            flatArray.unshift({\n                ignores: [filePath => {\n\n                    // Compute the final config for this file.\n                    // This filters config array elements by `files`/`excludedFiles` then merges the elements.\n                    const finalConfig = eslintrcArray.extractConfig(filePath);\n\n                    // Test the `ignorePattern` properties of the final config.\n                    return Boolean(finalConfig.ignores) && finalConfig.ignores(filePath);\n                }]\n            });\n        }\n\n        return flatArray;\n    }\n\n    /**\n     * Translates the `env` section of an ESLintRC-style config.\n     * @param {Object} envConfig The `env` section of an ESLintRC config.\n     * @returns {Object} A flag-config object representing the environments.\n     */\n    env(envConfig) {\n        return this.config({\n            env: envConfig\n        });\n    }\n\n    /**\n     * Translates the `extends` section of an ESLintRC-style config.\n     * @param {...string} configsToExtend The names of the configs to load.\n     * @returns {Object} A flag-config object representing the config.\n     */\n    extends(...configsToExtend) {\n        return this.config({\n            extends: configsToExtend\n        });\n    }\n\n    /**\n     * Translates the `plugins` section of an ESLintRC-style config.\n     * @param {...string} plugins The names of the plugins to load.\n     * @returns {Object} A flag-config object representing the plugins.\n     */\n    plugins(...plugins) {\n        return this.config({\n            plugins\n        });\n    }\n}\n\nexport { FlatCompat };\n","/**\n * @fileoverview Package exports for @eslint/eslintrc\n * @author Nicholas C. Zakas\n */\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport {\n    ConfigArrayFactory,\n    createContext as createConfigArrayFactoryContext\n} from \"./config-array-factory.js\";\n\nimport { CascadingConfigArrayFactory } from \"./cascading-config-array-factory.js\";\nimport * as ModuleResolver from \"./shared/relative-module-resolver.js\";\nimport { ConfigArray, getUsedExtractedConfigs } from \"./config-array/index.js\";\nimport { ConfigDependency } from \"./config-array/config-dependency.js\";\nimport { ExtractedConfig } from \"./config-array/extracted-config.js\";\nimport { IgnorePattern } from \"./config-array/ignore-pattern.js\";\nimport { OverrideTester } from \"./config-array/override-tester.js\";\nimport * as ConfigOps from \"./shared/config-ops.js\";\nimport ConfigValidator from \"./shared/config-validator.js\";\nimport * as naming from \"./shared/naming.js\";\nimport { FlatCompat } from \"./flat-compat.js\";\nimport environments from \"../conf/environments.js\";\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\nconst Legacy = {\n    ConfigArray,\n    createConfigArrayFactoryContext,\n    CascadingConfigArrayFactory,\n    ConfigArrayFactory,\n    ConfigDependency,\n    ExtractedConfig,\n    IgnorePattern,\n    OverrideTester,\n    getUsedExtractedConfigs,\n    environments,\n\n    // shared\n    ConfigOps,\n    ConfigValidator,\n    ModuleResolver,\n    naming\n};\n\nexport {\n\n    Legacy,\n\n    FlatCompat\n\n};\n"],"names":["debug","debugOrig","path","ignore","assert","internalSlotsMap","util","minimatch","Ajv","globals","BuiltInEnvironments","ConfigOps.normalizeConfigGlobal","Module","require","createRequire","fs","stripComments","importFresh","ModuleResolver.resolve","naming.normalizePackageName","naming.getShorthandName","os","createDebug","createConfigArrayFactoryContext"],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/uri-js/dist/es5/uri.all.js":{"lineLengths":[94,29,82,76,44,43,0,18,90,37,5,0,26,39,33,38,43,9,37,29,12,23,5,1,22,29,1,20,149,1,27,29,1,23,198,1,33,21,17,33,35,9,5,15,1,0,27,29,24,26,29,46,26,21,25,227,18,45,61,55,113,50,52,16,72,81,106,172,186,31,133,42,73,69,54,76,54,92,54,125,54,125,54,109,54,94,54,93,53,86,36,173,74,18,58,18,101,46,103,113,18,93,101,38,97,92,40,43,111,63,83,20,60,20,57,20,39,127,84,63,141,117,145,108,56,92,342,328,302,69,121,12,83,86,88,88,94,110,101,74,50,80,51,60,187,6,1,36,0,35,0,33,34,18,18,19,23,0,9,91,28,0,42,7,19,16,15,15,11,48,17,25,7,5,0,16,3,0,28,29,17,48,35,12,82,5,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,40,27,84,0,16,10,27,3,2,0,49,0,53,0,28,14,13,14,14,15,21,27,30,0,26,28,52,73,0,21,14,63,63,33,2,0,28,32,23,45,0,78,0,3,36,11,39,76,3,24,36,1,0,3,42,11,50,75,8,76,3,25,17,27,19,37,2,15,1,0,3,78,13,11,59,69,13,71,12,3,32,31,17,24,72,55,26,20,2,56,50,32,41,25,1,0,3,70,67,71,66,19,30,60,26,15,59,49,3,29,17,17,28,27,43,63,59,44,36,21,69,11,75,64,23,14,4,10,22,3,2,15,1,0,3,61,30,26,15,62,52,3,45,69,2,0,3,52,24,11,64,72,70,45,3,53,31,26,2,31,26,2,31,26,2,13,2,0,3,52,24,11,65,68,68,66,68,59,3,55,36,28,60,2,0,3,59,50,11,3,57,11,54,35,78,39,2,64,2,0,3,74,11,21,67,61,3,37,20,17,32,11,18,24,0,73,72,46,0,42,17,12,2,0,34,35,36,24,3,35,2,0,77,57,0,93,0,63,63,61,64,40,15,59,0,30,29,4,0,55,0,58,24,4,0,18,65,0,19,10,4,0,29,40,24,4,0,19,3,0,30,41,0,55,55,36,23,3,0,22,11,0,46,27,2,0,51,2,0,3,71,41,21,55,73,3,37,17,0,66,27,0,21,32,0,25,18,15,24,0,33,38,31,32,0,6,155,36,0,31,52,4,3,16,27,23,12,7,56,23,4,13,27,25,4,3,2,0,33,34,0,73,53,0,63,19,25,2,0,23,39,0,75,16,17,40,33,34,0,7,162,36,0,48,22,5,4,0,76,33,17,29,25,13,8,59,25,5,14,29,27,5,4,3,0,49,64,23,3,0,43,8,0,40,33,34,0,7,162,37,0,48,25,5,29,65,19,55,68,18,13,7,26,32,81,38,6,0,57,79,15,22,5,4,17,29,25,13,8,59,25,5,14,29,27,5,4,3,0,10,6,2,24,2,0,3,76,76,69,24,21,70,22,69,10,3,43,44,85,4,2,0,3,78,75,72,9,21,74,18,76,17,3,39,44,71,4,2,0,78,0,28,16,4,65,22,16,4,20,4,72,60,61,22,16,4,10,23,22,3,18,18,20,23,2,0,3,9,2,114,63,42,3,3,50,2,87,60,2,92,49,2,92,95,40,2,79,91,83,86,91,91,85,87,45,2,89,92,29,3,17,26,30,19,397,13,1,27,20,14,24,20,51,22,45,19,41,30,60,71,20,43,13,19,30,30,60,60,89,20,43,13,19,16,39,19,9,5,18,1,60,36,38,65,5,168,227,225,260,215,227,22,1,0,34,47,1,41,57,0,45,30,0,18,68,12,20,5,1,41,57,0,46,31,28,0,18,80,77,45,46,0,80,65,98,56,61,39,46,80,9,37,86,9,72,42,54,86,41,24,58,17,13,23,15,68,39,14,29,64,68,91,68,16,39,9,19,34,9,23,12,20,5,1,146,63,27,89,0,24,71,116,45,18,36,34,43,45,41,55,47,42,45,29,41,45,13,16,49,34,56,89,86,55,47,86,89,29,41,108,13,9,30,32,98,9,34,203,51,53,46,55,46,16,41,9,36,112,103,9,29,95,43,91,48,103,50,21,129,29,129,17,13,32,66,16,33,62,9,41,51,53,9,12,72,5,22,1,0,51,71,23,44,44,28,5,40,77,151,59,12,5,85,28,48,5,61,1,0,22,25,27,36,35,20,26,32,44,39,45,39,45,25,53,23,16,39,21,30,46,31,20,68,13,9,5,27,1,0,32,89,0,61,23,25,91,43,95,26,46,58,54,0,44,83,42,21,182,29,168,17,13,5,24,54,62,42,28,5,61,34,45,33,9,34,67,32,9,5,40,32,87,37,9,38,85,9,26,5,41,28,41,5,44,28,44,5,59,1,0,44,89,41,0,20,29,84,96,5,28,47,40,48,44,36,36,61,38,12,108,52,48,40,40,65,42,16,33,40,51,50,24,46,17,20,54,67,24,124,58,44,52,28,105,21,65,17,46,13,48,44,36,36,9,36,5,40,18,1,0,49,64,158,1,0,34,34,54,42,54,5,15,1,0,37,35,56,43,40,5,35,56,43,40,5,25,1,0,40,123,1,0,42,134,1,0,15,19,21,48,29,31,81,9,26,6,56,73,36,80,40,9,34,31,34,9,59,76,32,26,5,2,0,17,20,35,25,32,2,0,33,128,1,10,17,17,21,48,38,44,53,32,118,38,39,28,6,58,36,100,42,9,43,55,69,44,9,45,40,77,81,49,50,0,72,39,50,9,35,42,28,5,2,0,17,18,37,27,34,2,0,11,17,10,143,48,234,69,89,31,103,111,34,31,104,78,94,99,70,75,43,58,47,48,87,76,29,32,34,52,1,17,21,51,42,101,42,37,39,29,60,63,51,36,30,59,80,49,25,30,35,89,30,32,86,30,28,46,111,30,17,13,67,9,43,64,42,49,42,50,21,98,29,150,17,20,76,13,37,9,32,6,65,42,46,17,58,43,52,164,53,42,21,140,29,177,17,49,13,43,9,80,84,75,24,35,44,267,13,9,28,48,9,26,5,2,0,34,10,17,18,51,74,39,22,73,47,33,64,51,36,36,43,32,76,13,16,82,9,29,6,62,69,36,60,47,28,76,9,42,36,62,29,5,2,0,70,10,17,23,51,43,49,39,94,80,9,30,6,60,43,24,70,29,5,2,0,34,38,38,38,38,38,38,0,26,32,34,22,46,30,46,26,30,22,42,46,0,62,0,5,35,0],"data":{"version":3,"file":"uri.all.js","sources":["file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/index.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/schemes/urn-uuid.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/schemes/urn.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/schemes/mailto.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/schemes/wss.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/schemes/ws.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/schemes/https.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/schemes/http.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/uri.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/node_modules/punycode/punycode.es6.js","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/regexps-iri.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/regexps-uri.ts","file:///home/runner/work/deluge/deluge/node_modules/uri-js/src/util.ts"],"sourcesContent":["import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}"],"names":["SCHEMES","uuid","scheme","urn","mailto","wss","ws","https","http","urnComponents","nss","uuidComponents","toLowerCase","options","error","tolerant","match","UUID","undefined","handler","uriComponents","path","nid","schemeHandler","serialize","urnScheme","parse","matches","components","URN_PARSE","query","fields","join","length","push","name","replace","PCT_ENCODED","decodeUnreserved","toUpperCase","NOT_HFNAME","pctEncChar","headers","NOT_HFVALUE","O","mailtoComponents","body","subject","to","x","localPart","domain","iri","e","punycode","toASCII","unescapeComponent","toUnicode","toAddr","slice","atIdx","NOT_LOCAL_PART","lastIndexOf","String","xl","toArray","addr","unicodeSupport","split","unknownHeaders","hfield","toAddrs","hfields","decStr","UNRESERVED","str","pctDecChars","RegExp","merge","UNRESERVED$$","SOME_DELIMS$$","ATEXT$$","VCHAR$$","PCT_ENCODED$","QTEXT$$","subexp","HEXDIG$$","isIRI","domainHost","wsComponents","fragment","resourceName","secure","port","isSecure","host","toString","URI_PROTOCOL","IRI_PROTOCOL","ESCAPE","escapeComponent","uriA","uriB","typeOf","equal","uri","normalize","resolveComponents","baseURI","schemelessOptions","relativeURI","assign","resolve","target","relative","base","userinfo","removeDotSegments","charAt","skipNormalization","uriTokens","s","authority","absolutePath","reference","_recomposeAuthority","protocol","IPV6ADDRESS","test","output","Error","input","im","RDS5","pop","RDS3","RDS2","RDS1","$1","$2","_normalizeIPv6","_normalizeIPv4","_","uriString","isNaN","indexOf","parseInt","NO_MATCH_IS_UNDEFINED","URI_PARSE","newHost","zone","newFirst","newLast","longestZeroFields","index","b","a","allZeroFields","sort","acc","lastLongest","field","reduce","fieldCount","isLastFieldIPv4Address","firstFields","lastFields","lastFieldsStart","Array","IPV4ADDRESS","last","map","_stripLeadingZeros","first","address","reverse","NOT_FRAGMENT","NOT_QUERY","NOT_PATH","NOT_PATH_NOSCHEME","NOT_HOST","NOT_USERINFO","NOT_SCHEME","_normalizeComponentEncoding","newStr","substr","i","fromCharCode","c","c2","c3","il","chr","charCodeAt","encode","decode","ucs2encode","ucs2decode","regexNonASCII","string","mapDomain","regexPunycode","n","delta","handledCPCount","adapt","handledCPCountPlusOne","basicLength","stringFromCharCode","digitToBasic","q","floor","qMinusT","baseMinusT","t","k","bias","tMin","tMax","currentValue","maxInt","m","inputLength","delimiter","initialBias","initialN","fromCodePoint","splice","out","oldi","w","digit","basicToDigit","basic","j","baseMinusTMin","skew","numPoints","firstTime","damp","flag","codePoint","array","value","extra","counter","result","encoded","labels","fn","regexSeparators","parts","RangeError","errors","type","Math","buildExps","IPV6ADDRESS$","ZONEID$","IPV4ADDRESS$","RESERVED$$","SUB_DELIMS$$","IPRIVATE$$","ALPHA$$","DIGIT$$","AUTHORITY_REF$","USERINFO$","HOST$","PORT$","SAMEDOC_REF$","FRAGMENT$","ABSOLUTE_REF$","SCHEME$","PATH_ABEMPTY$","PATH_ABSOLUTE$","PATH_ROOTLESS$","PATH_EMPTY$","QUERY$","RELATIVE_REF$","PATH_NOSCHEME$","GENERIC_REF$","ABSOLUTE_URI$","HIER_PART$","URI_REFERENCE$","URI$","RELATIVE$","RELATIVE_PART$","AUTHORITY$","PCHAR$","PATH$","SEGMENT_NZ$","SEGMENT_NZ_NC$","SEGMENT$","IP_LITERAL$","REG_NAME$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","H16$","LS32$","DEC_OCTET_RELAXED$","DEC_OCTET$","UCSCHAR$$","GEN_DELIMS$$","SP$$","DQUOTE$$","CR$","obj","key","source","setInterval","call","prototype","o","Object","shift","sets"],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-scope/dist/eslint-scope.cjs":{"lineLengths":[13,0,62,0,31,39,37,0,114,0,65,73,71,0,2,58,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,17,18,24,0,3,71,25,3,17,84,0,11,34,58,11,32,0,11,44,41,11,26,0,11,76,63,46,11,29,0,11,56,48,11,29,0,11,72,75,42,19,11,25,29,0,15,79,55,15,39,0,15,81,50,15,35,0,15,67,47,15,29,9,57,5,0,7,39,35,32,7,16,80,5,0,7,42,34,31,7,15,47,5,0,7,41,33,30,7,14,46,5,0,7,42,37,35,7,18,44,5,0,7,43,38,36,7,19,45,5,0,7,43,38,36,7,19,42,5,1,0,3,27,11,3,22,0,3,28,11,3,24,0,3,25,11,3,18,0,35,0,2,58,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,3,80,13,24,3,16,30,0,11,58,41,11,25,0,11,75,53,61,11,30,0,11,94,68,54,52,11,29,0,11,75,58,47,11,23,0,29,0,11,44,43,11,26,0,11,44,41,11,27,5,1,0,37,33,39,33,31,41,59,0,35,0,2,58,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,3,26,3,18,56,0,11,105,11,25,0,11,99,11,25,0,11,88,11,25,0,11,101,11,29,0,11,87,11,27,0,11,85,11,25,5,1,0,3,35,3,46,42,65,0,11,74,53,11,25,5,1,0,35,0,2,58,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,60,0,3,26,29,29,59,46,37,3,72,13,0,73,46,20,5,0,29,20,5,0,60,20,5,0,60,21,5,0,36,109,25,9,0,46,25,16,30,9,0,20,25,9,41,21,12,21,5,0,37,23,61,38,0,60,22,13,79,28,13,9,12,61,38,0,61,22,13,41,0,83,22,13,62,83,32,17,20,50,32,17,13,9,5,17,1,0,3,17,51,29,18,3,45,36,0,63,0,17,27,12,61,5,1,0,3,23,26,42,3,34,12,44,69,6,1,0,3,21,3,13,76,0,11,120,68,38,11,25,0,11,79,31,34,11,29,0,11,74,28,40,32,0,11,75,79,77,75,75,49,53,42,11,70,0,11,57,44,11,27,0,11,82,46,11,26,0,11,71,86,70,47,11,28,0,11,77,76,74,79,77,50,49,11,29,0,11,76,76,24,46,11,28,37,37,39,54,46,22,43,0,11,65,58,11,45,0,11,72,56,11,43,0,11,44,11,31,0,25,0,11,55,38,11,32,0,11,59,43,11,60,91,20,0,11,41,46,11,30,25,46,9,0,68,0,42,5,0,43,64,5,0,43,0,87,41,0,34,25,9,0,44,35,0,65,5,0,27,35,45,9,5,0,28,0,49,27,0,12,38,36,26,5,0,27,0,70,49,57,39,16,40,9,5,0,27,21,0,57,45,44,46,16,45,9,0,54,63,39,0,37,9,27,0,26,5,0,38,101,102,20,5,0,20,41,0,34,25,9,44,0,55,25,9,38,89,26,36,49,9,32,0,20,5,0,33,25,40,9,31,5,0,50,50,19,9,0,59,0,60,27,58,9,49,37,9,5,0,54,21,0,33,24,48,36,37,9,0,18,36,66,68,9,19,44,9,5,0,25,56,33,26,25,31,21,19,14,9,5,0,80,0,44,57,19,9,0,40,36,19,9,0,123,0,34,30,5,0,20,27,0,42,12,35,36,26,5,0,20,30,5,0,18,36,5,0,7,35,30,66,37,7,20,23,0,81,103,63,37,43,27,13,9,20,5,0,7,35,31,32,7,16,29,5,0,7,52,46,48,7,77,20,5,0,7,59,41,43,7,72,20,5,0,22,33,24,9,64,59,28,13,9,21,5,1,0,33,38,58,25,27,26,0,15,82,64,56,15,20,10,5,0,27,28,0,63,39,0,82,57,13,9,0,72,60,37,0,47,31,52,33,30,25,25,24,19,0,9,0,41,0,43,5,0,33,56,33,26,34,40,21,19,14,9,5,1,0,33,50,64,5,1,0,49,50,82,31,27,38,25,22,21,21,20,15,44,5,1,0,32,50,63,5,1,0,31,50,62,5,0,27,57,47,9,0,63,39,0,31,45,9,27,0,26,5,1,0,32,50,63,5,1,0,33,50,64,5,1,0,35,70,79,0,60,64,67,37,9,5,0,31,0,30,62,10,25,50,37,16,12,67,25,9,0,31,24,9,0,51,0,80,68,5,0,26,31,24,9,30,5,0,25,29,24,21,27,17,16,10,43,5,0,101,22,85,26,29,12,40,0,81,44,24,9,0,51,0,57,17,38,93,98,10,5,1,0,30,50,61,5,1,0,32,50,63,5,1,0,48,50,80,5,1,0,43,50,75,5,1,0,35,0,2,58,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,3,28,3,20,26,25,32,43,35,33,49,5,0,22,40,5,0,22,41,5,0,20,41,5,0,23,86,5,0,16,54,5,0,23,44,5,0,29,47,5,0,47,17,44,5,0,7,51,6,111,72,105,47,65,7,32,56,5,0,7,31,37,61,92,40,7,26,0,11,20,49,39,11,39,85,29,13,24,9,0,40,0,45,24,9,0,47,83,34,29,9,0,20,58,40,0,39,33,17,13,16,62,40,0,39,33,17,13,9,0,20,5,0,7,36,40,61,37,7,22,32,5,0,7,24,37,48,92,50,7,26,40,0,38,42,0,25,28,13,52,9,20,5,0,62,0,62,0,24,43,69,37,9,36,21,5,0,29,61,5,0,28,81,5,0,51,104,5,0,26,79,5,0,28,81,5,0,27,80,5,0,28,81,5,0,44,97,5,0,39,92,5,0,29,82,5,0,29,82,5,0,45,98,5,0,15,47,5,1,0,35,0,2,58,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,60,0,3,25,26,29,3,22,37,1,0,68,28,35,0,16,47,50,49,50,48,51,10,5,0,49,29,39,33,30,33,31,5,0,25,59,0,32,51,116,41,11,5,0,24,0,56,32,51,9,0,59,123,74,35,5,0,27,68,48,0,32,9,5,0,32,39,33,48,31,5,0,26,40,37,32,5,0,28,0,56,28,52,9,0,58,46,5,0,6,84,70,83,73,6,0,25,34,5,0,27,48,5,0,32,36,30,45,31,5,0,26,0,42,37,40,11,32,5,1,0,35,0,2,58,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,50,0,3,33,34,44,42,38,18,3,82,0,85,71,0,31,0,48,58,69,5,1,0,31,90,72,73,28,0,62,42,40,39,37,5,0,32,53,60,31,43,28,30,37,25,24,19,11,5,0,36,46,0,20,42,9,5,0,34,46,0,38,5,0,27,46,0,24,46,16,42,9,5,1,0,47,64,40,29,31,41,27,45,5,0,20,48,5,0,17,75,94,9,5,0,56,54,0,63,24,5,0,55,63,5,0,78,42,0,43,32,24,32,33,36,44,20,14,11,5,0,43,42,44,0,44,43,67,9,0,36,25,17,68,32,10,5,0,25,18,0,61,61,16,66,63,0,55,0,43,49,31,42,28,25,25,25,24,19,9,0,66,39,65,70,9,0,61,82,0,26,0,11,33,43,36,26,11,54,49,40,28,25,22,29,19,0,80,9,0,42,59,101,9,0,47,24,31,36,35,27,53,44,32,29,43,28,23,15,9,0,91,47,24,0,76,59,46,20,38,13,9,0,25,5,0,22,52,49,31,39,28,25,25,25,24,19,9,0,36,0,49,0,22,49,31,39,28,24,19,9,30,0,25,5,0,25,21,0,28,33,9,0,73,0,33,60,9,31,33,52,9,5,0,22,88,51,9,0,60,34,72,106,15,16,94,47,0,52,43,32,28,22,17,100,122,15,9,31,30,0,25,5,0,70,0,46,31,0,88,41,24,31,25,28,25,25,26,29,17,14,0,80,23,110,13,11,5,0,32,50,40,98,51,0,56,47,36,32,26,21,104,136,19,20,87,13,16,34,9,31,5,0,23,49,0,91,49,31,41,31,25,25,25,24,19,80,11,30,0,25,5,0,19,50,0,50,0,81,49,63,9,0,74,54,9,0,95,48,9,0,33,25,5,0,22,48,5,0,54,25,0,22,5,0,28,54,81,16,37,9,5,0,28,32,28,38,9,5,0,20,33,5,0,30,46,0,23,28,9,20,70,30,30,9,5,0,23,60,0,33,0,25,5,0,28,33,5,0,69,0,72,0,28,30,5,0,24,0,43,59,56,74,101,51,9,0,33,0,25,5,0,27,30,5,0,28,30,5,0,26,0,44,121,0,114,116,61,9,33,5,0,26,42,53,9,0,33,0,25,5,0,22,57,5,0,25,32,0,45,48,0,30,0,25,5,0,31,116,0,69,46,0,91,28,38,13,9,5,0,18,27,38,0,42,54,9,0,62,38,9,0,25,5,0,31,33,5,0,30,33,5,0,26,30,5,0,26,30,5,0,35,33,5,0,29,179,0,50,0,29,5,0,34,26,19,9,31,41,19,9,0,33,5,0,53,29,42,5,0,32,42,5,0,36,42,5,0,34,42,5,0,27,0,49,46,0,26,5,0,66,0,22,5,1,0,35,0,24,0,2,63,59,60,0,68,77,0,68,67,71,73,74,0,77,75,76,72,76,78,77,76,74,67,2,0,3,26,28,3,27,12,26,25,27,29,72,23,31,29,6,1,0,3,39,33,35,36,3,41,0,7,21,39,32,7,34,127,5,0,33,66,38,0,36,48,51,24,56,17,20,34,13,9,5,18,1,0,3,71,19,20,49,73,74,72,86,73,74,59,77,25,129,89,176,200,39,3,41,68,51,61,0,27,0,101,0,24,1,0,35,0,32,40,30,32,22,36,28,26,26,41,0],"data":null,"url":"eslint-scope.cjs.map"},"file:///home/runner/work/deluge/deluge/node_modules/eslint-visitor-keys/dist/eslint-visitor-keys.cjs":{"lineLengths":[13,0,62,0,3,58,3,0,3,22,3,14,27,15,15,6,24,15,15,6,22,18,6,19,18,6,30,17,14,6,22,18,6,21,14,6,23,15,15,6,21,15,6,21,17,19,6,18,16,14,6,22,20,6,16,14,6,23,13,21,14,6,22,13,21,14,6,28,15,21,19,6,24,15,6,26,23,15,14,6,23,27,19,16,6,31,21,6,29,22,21,16,6,22,19,15,6,26,20,6,31,18,6,33,18,6,19,15,15,17,14,6,21,15,16,14,6,21,15,16,14,6,26,13,17,14,6,25,13,17,14,6,19,18,15,21,19,6,24,21,16,6,29,15,6,23,16,6,31,15,6,22,19,15,6,19,15,15,6,24,14,6,17,25,19,24,6,27,29,20,6,22,26,17,18,6,24,20,14,6,24,15,20,6,25,18,6,16,18,26,19,25,6,27,27,16,23,16,14,6,24,15,15,6,23,17,18,6,19,15,18,6,23,14,15,6,20,17,19,6,23,20,6,20,20,6,26,14,14,6,15,14,15,6,25,14,15,6,18,18,6,22,18,6,25,21,6,20,18,6,18,14,6,14,22,23,15,6,17,15,20,6,31,14,15,6,24,22,17,21,6,23,21,18,6,19,16,18,19,6,22,18,6,23,18,6,26,22,6,25,13,14,6,21,15,14,6,20,17,14,6,22,18,5,2,0,9,37,0,19,32,30,1,20,0,3,57,55,3,0,3,76,3,0,23,31,13,22,22,3,0,3,51,40,55,3,25,53,1,0,3,36,49,57,3,24,47,1,0,84,39,3,49,59,40,3,36,29,45,36,0,53,63,55,0,43,30,13,0,57,16,73,9,5,0,31,1,0,20,26,30,48,0],"data":null,"url":"eslint-visitor-keys.cjs.map"},"file:///home/runner/work/deluge/deluge/node_modules/espree/dist/espree.cjs":{"lineLengths":[13,0,62,0,29,31,49,0,114,0,31,36,32,12,45,34,62,57,37,53,19,13,11,5,21,28,1,0,61,59,73,0,3,75,28,3,36,0,80,15,80,0,8,0,80,10,80,0,0,22,15,23,17,29,43,23,17,23,29,21,43,25,35,22,2,0,3,53,75,40,72,11,3,44,33,54,0,19,29,66,6,0,25,21,40,42,10,5,0,27,42,47,47,5,0,17,1,0,3,64,55,75,55,15,3,47,0,18,40,0,33,22,0,33,28,0,22,22,0,1,0,29,33,0,7,77,77,58,62,49,64,7,29,0,32,37,0,31,42,0,48,43,43,13,0,94,43,13,0,43,49,0,59,60,60,59,61,64,64,62,63,43,49,33,0,42,67,41,45,79,39,34,70,43,49,40,20,43,13,37,39,67,40,0,42,48,43,20,42,13,0,67,40,49,38,0,27,35,38,14,61,9,0,21,6,0,7,55,49,53,22,7,27,0,26,37,34,42,0,11,71,20,26,19,11,44,71,30,9,0,36,0,43,35,69,13,0,19,9,0,42,0,72,35,69,40,13,0,39,0,27,44,42,13,0,19,9,45,39,38,19,9,39,0,72,35,69,13,0,40,37,19,9,78,35,54,40,13,0,39,19,9,0,31,65,36,9,0,50,5,2,0,3,73,22,3,0,80,10,80,0,28,6,6,14,14,14,14,15,15,15,15,14,2,0,3,57,51,3,33,61,1,0,3,59,77,3,37,35,1,0,3,55,84,65,50,3,48,0,82,0,38,123,5,0,83,68,26,24,5,0,48,48,5,0,19,1,0,3,47,42,58,42,3,53,61,26,5,0,36,24,5,0,43,1,0,3,26,58,58,39,3,36,66,63,42,43,0,53,0,108,83,5,101,84,5,89,52,75,43,0,53,152,5,0,39,20,19,15,18,22,34,7,1,0,37,0,0,48,65,0,0,3,50,69,48,60,56,71,67,53,40,11,3,95,13,0,16,23,55,26,12,22,5,0,21,13,19,6,0,36,30,26,37,5,0,39,23,28,23,10,5,0,19,1,0,30,62,0,26,58,5,0,40,33,60,26,13,72,36,13,0,60,55,51,60,35,39,57,27,0,14,78,24,14,78,75,22,15,27,77,52,63,95,49,41,32,36,14,0,39,19,0,96,49,47,39,45,53,0,67,79,0,33,35,42,0,93,62,21,54,48,21,18,0,35,75,41,125,0,53,21,17,21,0,14,79,72,15,32,9,0,20,16,28,49,0,42,24,0,38,40,0,33,49,13,0,26,9,0,29,53,0,53,9,0,31,55,0,53,9,0,17,38,42,0,58,0,33,50,13,31,46,13,0,14,79,84,87,85,87,15,38,49,0,36,58,17,34,60,17,48,13,34,36,64,17,34,62,17,50,13,0,0,14,58,76,74,77,76,74,75,80,76,78,67,15,69,39,63,0,53,49,0,44,60,58,17,0,42,68,64,17,15,0,27,9,0,29,44,35,13,45,9,0,11,77,54,53,48,26,11,29,66,49,0,28,38,70,22,9,0,11,77,54,53,48,26,11,40,37,9,0,11,82,54,48,26,11,25,45,0,49,31,0,45,55,94,39,21,17,0,33,13,0,40,72,13,0,44,9,0,10,85,84,87,85,33,10,64,55,0,48,53,13,26,9,0,11,80,53,48,11,39,0,89,67,52,0,74,58,13,0,72,41,13,0,26,9,6,2,0,26,0,3,74,2,68,11,13,18,2,68,2,105,124,76,2,69,78,2,67,66,70,72,73,2,78,76,77,73,77,79,78,77,75,68,2,90,2,69,78,2,69,68,72,74,75,2,78,76,77,73,77,79,78,77,75,68,3,0,0,24,17,19,15,0,19,37,69,9,29,6,0,15,33,92,9,25,6,0,18,31,22,35,36,10,0,48,5,2,0,80,12,80,0,3,28,45,60,41,54,11,3,34,40,0,32,46,104,5,0,48,1,0,80,9,80,0,3,25,45,60,45,54,3,31,40,0,45,1,0,80,9,80,0,26,0,26,33,39,5,0,37,26,28,13,19,0,46,36,5,0,31,60,31,9,5,0,46,29,5,0,17,5,0,49,0,57,0,24,34,46,22,54,28,26,35,0],"data":null,"url":"espree.cjs.map"},"file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/dist/eslintrc-universal.cjs":{"lineLengths":[13,0,62,0,27,27,25,33,0,114,0,61,61,59,67,0,3,81,40,28,3,0,80,10,80,0,55,73,27,19,11,57,0,80,19,80,0,3,70,108,108,101,90,92,3,38,81,0,76,29,5,0,44,63,5,0,13,1,0,3,64,82,49,57,18,3,37,0,23,53,52,0,49,101,88,97,13,11,5,1,0,3,83,81,73,3,38,45,1,0,3,59,84,69,3,38,74,0,39,42,5,53,1,0,3,73,54,69,3,39,80,1,0,3,46,101,29,77,43,3,49,30,19,25,0,18,20,25,24,30,0,18,19,21,24,24,30,0,16,133,5,1,0,17,20,37,43,37,37,47,48,2,0,3,70,56,3,0,80,10,80,0,38,36,31,83,32,63,73,36,63,76,74,2,0,39,0,3,96,94,102,89,57,18,3,52,59,0,45,15,5,39,0,73,58,0,24,41,29,17,6,1,0,3,47,28,3,0,79,10,79,0,2,53,24,44,3,20,50,55,43,18,22,26,24,32,10,26,28,22,10,34,78,10,22,87,10,22,26,38,24,29,9,6,19,17,13,26,10,18,26,10,16,26,10,22,26,10,21,21,27,23,34,10,18,26,10,27,28,26,10,18,26,10,27,28,26,10,61,69,18,27,27,10,26,20,36,29,14,24,10,16,20,30,53,14,24,10,60,68,22,28,26,10,65,73,56,31,20,36,29,14,24,10,22,27,48,24,10,21,27,48,24,10,28,27,48,24,10,23,27,35,24,34,57,17,13,10,15,26,24,29,10,15,20,54,17,34,65,32,37,17,13,10,35,53,53,53,26,6,19,38,37,6,16,2,0,80,19,80,0,43,45,20,26,30,30,22,25,28,7,0,34,52,42,0,15,2,0,3,46,23,3,0,30,32,28,55,32,16,22,56,30,6,41,38,31,34,30,33,40,55,0,76,2,0,22,18,26,20,35,17,34,46,42,17,13,10,34,20,35,17,34,46,43,31,17,13,10,0,31,23,27,25,42,74,39,14,39,10,0,33,25,27,25,73,73,39,14,32,39,9,6,0,38,2,0,3,58,23,3,0,80,10,80,0,3,38,60,57,59,3,33,20,0,57,53,30,9,5,0,16,1,0,142,24,19,28,2,24,18,25,26,21,2,0,24,26,32,18,2,0,80,19,80,0,69,43,0,15,14,48,6,10,32,24,26,9,6,13,32,24,26,9,6,13,32,24,26,9,6,13,58,24,26,9,6,13,58,24,26,9,6,13,58,24,27,9,6,13,77,24,27,9,6,13,96,24,27,9,6,13,96,24,27,9,6,0,16,14,52,6,11,50,24,27,34,13,9,6,28,67,6,13,51,6,20,58,6,0,17,15,54,24,27,34,13,9,6,10,48,6,12,50,6,14,52,6,11,49,6,16,54,6,13,51,6,12,50,6,18,56,6,14,52,6,13,51,6,12,50,6,17,55,6,18,56,6,14,52,6,15,53,6,16,54,6,20,58,6,19,57,5,4,0,3,35,24,3,0,22,0,37,32,0,80,10,80,19,21,13,12,10,2,0,32,0,79,10,79,0,23,52,41,5,0,7,49,85,60,7,32,20,24,9,0,68,0,74,36,32,24,34,34,32,43,18,13,20,30,28,27,14,0,9,0,46,30,5,0,7,110,63,57,7,35,71,107,0,77,32,9,0,204,0,5,0,7,80,60,79,22,7,44,40,59,0,25,62,13,9,0,54,0,27,39,38,56,88,28,13,9,5,0,7,53,92,53,68,118,45,22,7,63,13,64,0,33,94,13,23,101,0,45,68,20,49,13,9,5,0,7,38,77,91,108,22,7,24,20,15,31,7,0,42,27,19,9,0,48,77,0,23,85,0,41,13,11,5,0,7,38,71,91,100,22,7,18,20,15,32,7,27,19,9,0,48,84,0,72,11,5,0,7,53,58,107,22,7,51,29,19,9,0,37,63,21,59,31,133,17,15,5,0,7,42,66,54,93,22,7,60,60,126,9,5,0,7,52,66,48,7,26,36,59,168,0,82,13,43,63,114,66,0,138,13,0,95,0,87,56,5,0,7,63,60,91,22,7,49,69,0,38,122,9,0,65,73,9,5,0,7,41,60,91,103,100,22,7,67,50,68,71,53,0,56,74,77,57,9,5,0,7,36,69,22,7,38,84,88,78,0,20,44,41,25,13,35,0,78,64,88,75,9,5,0,1,0,3,77,3,0,35,0,3,56,48,94,51,11,3,45,30,0,7,81,56,51,7,40,61,5,0,43,0,11,32,57,11,93,72,0,62,96,80,0,15,78,73,15,93,9,58,55,5,0,26,1,0,3,38,63,47,45,3,45,30,81,0,26,34,9,0,82,26,57,9,51,49,5,0,20,1,0,3,40,62,61,3,37,46,0,33,1,0,14,20,47,39,46,2,0,3,53,28,3,0,79,10,79,0,16,17,0,13,14,20,10,2,0,24,47,0],"data":{"version":3,"file":"eslintrc-universal.cjs","sources":["file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/config-ops.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/deprecation-warnings.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/ajv.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/conf/config-schema.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/conf/environments.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/config-validator.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/shared/naming.js","file:///home/runner/work/deluge/deluge/node_modules/@eslint/eslintrc/lib/index-universal.js"],"sourcesContent":["/**\n * @fileoverview Config file operations. This file must be usable in the browser,\n * so no Node-specific code can be here.\n * @author Nicholas C. Zakas\n */\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\n\nconst RULE_SEVERITY_STRINGS = [\"off\", \"warn\", \"error\"],\n    RULE_SEVERITY = RULE_SEVERITY_STRINGS.reduce((map, value, index) => {\n        map[value] = index;\n        return map;\n    }, {}),\n    VALID_SEVERITIES = [0, 1, 2, \"off\", \"warn\", \"error\"];\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Normalizes the severity value of a rule's configuration to a number\n * @param {(number|string|[number, ...*]|[string, ...*])} ruleConfig A rule's configuration value, generally\n * received from the user. A valid config value is either 0, 1, 2, the string \"off\" (treated the same as 0),\n * the string \"warn\" (treated the same as 1), the string \"error\" (treated the same as 2), or an array\n * whose first element is one of the above values. Strings are matched case-insensitively.\n * @returns {(0|1|2)} The numeric severity value if the config value was valid, otherwise 0.\n */\nfunction getRuleSeverity(ruleConfig) {\n    const severityValue = Array.isArray(ruleConfig) ? ruleConfig[0] : ruleConfig;\n\n    if (severityValue === 0 || severityValue === 1 || severityValue === 2) {\n        return severityValue;\n    }\n\n    if (typeof severityValue === \"string\") {\n        return RULE_SEVERITY[severityValue.toLowerCase()] || 0;\n    }\n\n    return 0;\n}\n\n/**\n * Converts old-style severity settings (0, 1, 2) into new-style\n * severity settings (off, warn, error) for all rules. Assumption is that severity\n * values have already been validated as correct.\n * @param {Object} config The config object to normalize.\n * @returns {void}\n */\nfunction normalizeToStrings(config) {\n\n    if (config.rules) {\n        Object.keys(config.rules).forEach(ruleId => {\n            const ruleConfig = config.rules[ruleId];\n\n            if (typeof ruleConfig === \"number\") {\n                config.rules[ruleId] = RULE_SEVERITY_STRINGS[ruleConfig] || RULE_SEVERITY_STRINGS[0];\n            } else if (Array.isArray(ruleConfig) && typeof ruleConfig[0] === \"number\") {\n                ruleConfig[0] = RULE_SEVERITY_STRINGS[ruleConfig[0]] || RULE_SEVERITY_STRINGS[0];\n            }\n        });\n    }\n}\n\n/**\n * Determines if the severity for the given rule configuration represents an error.\n * @param {int|string|Array} ruleConfig The configuration for an individual rule.\n * @returns {boolean} True if the rule represents an error, false if not.\n */\nfunction isErrorSeverity(ruleConfig) {\n    return getRuleSeverity(ruleConfig) === 2;\n}\n\n/**\n * Checks whether a given config has valid severity or not.\n * @param {number|string|Array} ruleConfig The configuration for an individual rule.\n * @returns {boolean} `true` if the configuration has valid severity.\n */\nfunction isValidSeverity(ruleConfig) {\n    let severity = Array.isArray(ruleConfig) ? ruleConfig[0] : ruleConfig;\n\n    if (typeof severity === \"string\") {\n        severity = severity.toLowerCase();\n    }\n    return VALID_SEVERITIES.indexOf(severity) !== -1;\n}\n\n/**\n * Checks whether every rule of a given config has valid severity or not.\n * @param {Object} config The configuration for rules.\n * @returns {boolean} `true` if the configuration has valid severity.\n */\nfunction isEverySeverityValid(config) {\n    return Object.keys(config).every(ruleId => isValidSeverity(config[ruleId]));\n}\n\n/**\n * Normalizes a value for a global in a config\n * @param {(boolean|string|null)} configuredValue The value given for a global in configuration or in\n * a global directive comment\n * @returns {(\"readable\"|\"writeable\"|\"off\")} The value normalized as a string\n * @throws Error if global value is invalid\n */\nfunction normalizeConfigGlobal(configuredValue) {\n    switch (configuredValue) {\n        case \"off\":\n            return \"off\";\n\n        case true:\n        case \"true\":\n        case \"writeable\":\n        case \"writable\":\n            return \"writable\";\n\n        case null:\n        case false:\n        case \"false\":\n        case \"readable\":\n        case \"readonly\":\n            return \"readonly\";\n\n        default:\n            throw new Error(`'${configuredValue}' is not a valid configuration for a global (use 'readonly', 'writable', or 'off')`);\n    }\n}\n\nexport {\n    getRuleSeverity,\n    normalizeToStrings,\n    isErrorSeverity,\n    isValidSeverity,\n    isEverySeverityValid,\n    normalizeConfigGlobal\n};\n","/**\n * @fileoverview Provide the function that emits deprecation warnings.\n * @author Toru Nagashima <http://github.com/mysticatea>\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport path from \"path\";\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\n\n// Defitions for deprecation warnings.\nconst deprecationWarningMessages = {\n    ESLINT_LEGACY_ECMAFEATURES:\n        \"The 'ecmaFeatures' config file property is deprecated and has no effect.\",\n    ESLINT_PERSONAL_CONFIG_LOAD:\n        \"'~/.eslintrc.*' config files have been deprecated. \" +\n        \"Please use a config file per project or the '--config' option.\",\n    ESLINT_PERSONAL_CONFIG_SUPPRESS:\n        \"'~/.eslintrc.*' config files have been deprecated. \" +\n        \"Please remove it or add 'root:true' to the config files in your \" +\n        \"projects in order to avoid loading '~/.eslintrc.*' accidentally.\"\n};\n\nconst sourceFileErrorCache = new Set();\n\n/**\n * Emits a deprecation warning containing a given filepath. A new deprecation warning is emitted\n * for each unique file path, but repeated invocations with the same file path have no effect.\n * No warnings are emitted if the `--no-deprecation` or `--no-warnings` Node runtime flags are active.\n * @param {string} source The name of the configuration source to report the warning for.\n * @param {string} errorCode The warning message to show.\n * @returns {void}\n */\nfunction emitDeprecationWarning(source, errorCode) {\n    const cacheKey = JSON.stringify({ source, errorCode });\n\n    if (sourceFileErrorCache.has(cacheKey)) {\n        return;\n    }\n    sourceFileErrorCache.add(cacheKey);\n\n    const rel = path.relative(process.cwd(), source);\n    const message = deprecationWarningMessages[errorCode];\n\n    process.emitWarning(\n        `${message} (found in \"${rel}\")`,\n        \"DeprecationWarning\",\n        errorCode\n    );\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport {\n    emitDeprecationWarning\n};\n","/**\n * @fileoverview The instance of Ajv validator.\n * @author Evgeny Poberezkin\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport Ajv from \"ajv\";\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\n/*\n * Copied from ajv/lib/refs/json-schema-draft-04.json\n * The MIT License (MIT)\n * Copyright (c) 2015-2017 Evgeny Poberezkin\n */\nconst metaSchema = {\n    id: \"http://json-schema.org/draft-04/schema#\",\n    $schema: \"http://json-schema.org/draft-04/schema#\",\n    description: \"Core schema meta-schema\",\n    definitions: {\n        schemaArray: {\n            type: \"array\",\n            minItems: 1,\n            items: { $ref: \"#\" }\n        },\n        positiveInteger: {\n            type: \"integer\",\n            minimum: 0\n        },\n        positiveIntegerDefault0: {\n            allOf: [{ $ref: \"#/definitions/positiveInteger\" }, { default: 0 }]\n        },\n        simpleTypes: {\n            enum: [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n        },\n        stringArray: {\n            type: \"array\",\n            items: { type: \"string\" },\n            minItems: 1,\n            uniqueItems: true\n        }\n    },\n    type: \"object\",\n    properties: {\n        id: {\n            type: \"string\"\n        },\n        $schema: {\n            type: \"string\"\n        },\n        title: {\n            type: \"string\"\n        },\n        description: {\n            type: \"string\"\n        },\n        default: { },\n        multipleOf: {\n            type: \"number\",\n            minimum: 0,\n            exclusiveMinimum: true\n        },\n        maximum: {\n            type: \"number\"\n        },\n        exclusiveMaximum: {\n            type: \"boolean\",\n            default: false\n        },\n        minimum: {\n            type: \"number\"\n        },\n        exclusiveMinimum: {\n            type: \"boolean\",\n            default: false\n        },\n        maxLength: { $ref: \"#/definitions/positiveInteger\" },\n        minLength: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        pattern: {\n            type: \"string\",\n            format: \"regex\"\n        },\n        additionalItems: {\n            anyOf: [\n                { type: \"boolean\" },\n                { $ref: \"#\" }\n            ],\n            default: { }\n        },\n        items: {\n            anyOf: [\n                { $ref: \"#\" },\n                { $ref: \"#/definitions/schemaArray\" }\n            ],\n            default: { }\n        },\n        maxItems: { $ref: \"#/definitions/positiveInteger\" },\n        minItems: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        uniqueItems: {\n            type: \"boolean\",\n            default: false\n        },\n        maxProperties: { $ref: \"#/definitions/positiveInteger\" },\n        minProperties: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        required: { $ref: \"#/definitions/stringArray\" },\n        additionalProperties: {\n            anyOf: [\n                { type: \"boolean\" },\n                { $ref: \"#\" }\n            ],\n            default: { }\n        },\n        definitions: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        properties: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        patternProperties: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        dependencies: {\n            type: \"object\",\n            additionalProperties: {\n                anyOf: [\n                    { $ref: \"#\" },\n                    { $ref: \"#/definitions/stringArray\" }\n                ]\n            }\n        },\n        enum: {\n            type: \"array\",\n            minItems: 1,\n            uniqueItems: true\n        },\n        type: {\n            anyOf: [\n                { $ref: \"#/definitions/simpleTypes\" },\n                {\n                    type: \"array\",\n                    items: { $ref: \"#/definitions/simpleTypes\" },\n                    minItems: 1,\n                    uniqueItems: true\n                }\n            ]\n        },\n        format: { type: \"string\" },\n        allOf: { $ref: \"#/definitions/schemaArray\" },\n        anyOf: { $ref: \"#/definitions/schemaArray\" },\n        oneOf: { $ref: \"#/definitions/schemaArray\" },\n        not: { $ref: \"#\" }\n    },\n    dependencies: {\n        exclusiveMaximum: [\"maximum\"],\n        exclusiveMinimum: [\"minimum\"]\n    },\n    default: { }\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport default (additionalOptions = {}) => {\n    const ajv = new Ajv({\n        meta: false,\n        useDefaults: true,\n        validateSchema: false,\n        missingRefs: \"ignore\",\n        verbose: true,\n        schemaId: \"auto\",\n        ...additionalOptions\n    });\n\n    ajv.addMetaSchema(metaSchema);\n    // eslint-disable-next-line no-underscore-dangle\n    ajv._opts.defaultMeta = metaSchema.id;\n\n    return ajv;\n};\n","/**\n * @fileoverview Defines a schema for configs.\n * @author Sylvan Mably\n */\n\nconst baseConfigProperties = {\n    $schema: { type: \"string\" },\n    env: { type: \"object\" },\n    extends: { $ref: \"#/definitions/stringOrStrings\" },\n    globals: { type: \"object\" },\n    overrides: {\n        type: \"array\",\n        items: { $ref: \"#/definitions/overrideConfig\" },\n        additionalItems: false\n    },\n    parser: { type: [\"string\", \"null\"] },\n    parserOptions: { type: \"object\" },\n    plugins: { type: \"array\" },\n    processor: { type: \"string\" },\n    rules: { type: \"object\" },\n    settings: { type: \"object\" },\n    noInlineConfig: { type: \"boolean\" },\n    reportUnusedDisableDirectives: { type: \"boolean\" },\n\n    ecmaFeatures: { type: \"object\" } // deprecated; logs a warning when used\n};\n\nconst configSchema = {\n    definitions: {\n        stringOrStrings: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false\n                }\n            ]\n        },\n        stringOrStringsRequired: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false,\n                    minItems: 1\n                }\n            ]\n        },\n\n        // Config at top-level.\n        objectConfig: {\n            type: \"object\",\n            properties: {\n                root: { type: \"boolean\" },\n                ignorePatterns: { $ref: \"#/definitions/stringOrStrings\" },\n                ...baseConfigProperties\n            },\n            additionalProperties: false\n        },\n\n        // Config in `overrides`.\n        overrideConfig: {\n            type: \"object\",\n            properties: {\n                excludedFiles: { $ref: \"#/definitions/stringOrStrings\" },\n                files: { $ref: \"#/definitions/stringOrStringsRequired\" },\n                ...baseConfigProperties\n            },\n            required: [\"files\"],\n            additionalProperties: false\n        }\n    },\n\n    $ref: \"#/definitions/objectConfig\"\n};\n\nexport default configSchema;\n","/**\n * @fileoverview Defines environment settings and globals.\n * @author Elan Shanker\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport globals from \"globals\";\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Get the object that has difference.\n * @param {Record<string,boolean>} current The newer object.\n * @param {Record<string,boolean>} prev The older object.\n * @returns {Record<string,boolean>} The difference object.\n */\nfunction getDiff(current, prev) {\n    const retv = {};\n\n    for (const [key, value] of Object.entries(current)) {\n        if (!Object.hasOwnProperty.call(prev, key)) {\n            retv[key] = value;\n        }\n    }\n\n    return retv;\n}\n\nconst newGlobals2015 = getDiff(globals.es2015, globals.es5); // 19 variables such as Promise, Map, ...\nconst newGlobals2017 = {\n    Atomics: false,\n    SharedArrayBuffer: false\n};\nconst newGlobals2020 = {\n    BigInt: false,\n    BigInt64Array: false,\n    BigUint64Array: false,\n    globalThis: false\n};\n\nconst newGlobals2021 = {\n    AggregateError: false,\n    FinalizationRegistry: false,\n    WeakRef: false\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/** @type {Map<string, import(\"../lib/shared/types\").Environment>} */\nexport default new Map(Object.entries({\n\n    // Language\n    builtin: {\n        globals: globals.es5\n    },\n    es6: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2015: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2016: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 7\n        }\n    },\n    es2017: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 8\n        }\n    },\n    es2018: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 9\n        }\n    },\n    es2019: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 10\n        }\n    },\n    es2020: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020 },\n        parserOptions: {\n            ecmaVersion: 11\n        }\n    },\n    es2021: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020, ...newGlobals2021 },\n        parserOptions: {\n            ecmaVersion: 12\n        }\n    },\n    es2022: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020, ...newGlobals2021 },\n        parserOptions: {\n            ecmaVersion: 13\n        }\n    },\n\n    // Platforms\n    browser: {\n        globals: globals.browser\n    },\n    node: {\n        globals: globals.node,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    \"shared-node-browser\": {\n        globals: globals[\"shared-node-browser\"]\n    },\n    worker: {\n        globals: globals.worker\n    },\n    serviceworker: {\n        globals: globals.serviceworker\n    },\n\n    // Frameworks\n    commonjs: {\n        globals: globals.commonjs,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    amd: {\n        globals: globals.amd\n    },\n    mocha: {\n        globals: globals.mocha\n    },\n    jasmine: {\n        globals: globals.jasmine\n    },\n    jest: {\n        globals: globals.jest\n    },\n    phantomjs: {\n        globals: globals.phantomjs\n    },\n    jquery: {\n        globals: globals.jquery\n    },\n    qunit: {\n        globals: globals.qunit\n    },\n    prototypejs: {\n        globals: globals.prototypejs\n    },\n    shelljs: {\n        globals: globals.shelljs\n    },\n    meteor: {\n        globals: globals.meteor\n    },\n    mongo: {\n        globals: globals.mongo\n    },\n    protractor: {\n        globals: globals.protractor\n    },\n    applescript: {\n        globals: globals.applescript\n    },\n    nashorn: {\n        globals: globals.nashorn\n    },\n    atomtest: {\n        globals: globals.atomtest\n    },\n    embertest: {\n        globals: globals.embertest\n    },\n    webextensions: {\n        globals: globals.webextensions\n    },\n    greasemonkey: {\n        globals: globals.greasemonkey\n    }\n}));\n","/**\n * @fileoverview Validates configs.\n * @author Brandon Mills\n */\n\n/* eslint class-methods-use-this: \"off\" */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport util from \"util\";\nimport * as ConfigOps from \"./config-ops.js\";\nimport { emitDeprecationWarning } from \"./deprecation-warnings.js\";\nimport ajvOrig from \"./ajv.js\";\nimport configSchema from \"../../conf/config-schema.js\";\nimport BuiltInEnvironments from \"../../conf/environments.js\";\n\nconst ajv = ajvOrig();\n\nconst ruleValidators = new WeakMap();\nconst noop = Function.prototype;\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\nlet validateSchema;\nconst severityMap = {\n    error: 2,\n    warn: 1,\n    off: 0\n};\n\nconst validated = new WeakSet();\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\nexport default class ConfigValidator {\n    constructor({ builtInRules = new Map() } = {}) {\n        this.builtInRules = builtInRules;\n    }\n\n    /**\n     * Gets a complete options schema for a rule.\n     * @param {{create: Function, schema: (Array|null)}} rule A new-style rule object\n     * @returns {Object} JSON Schema for the rule's options.\n     */\n    getRuleOptionsSchema(rule) {\n        if (!rule) {\n            return null;\n        }\n\n        const schema = rule.schema || rule.meta && rule.meta.schema;\n\n        // Given a tuple of schemas, insert warning level at the beginning\n        if (Array.isArray(schema)) {\n            if (schema.length) {\n                return {\n                    type: \"array\",\n                    items: schema,\n                    minItems: 0,\n                    maxItems: schema.length\n                };\n            }\n            return {\n                type: \"array\",\n                minItems: 0,\n                maxItems: 0\n            };\n\n        }\n\n        // Given a full schema, leave it alone\n        return schema || null;\n    }\n\n    /**\n     * Validates a rule's severity and returns the severity value. Throws an error if the severity is invalid.\n     * @param {options} options The given options for the rule.\n     * @returns {number|string} The rule's severity value\n     */\n    validateRuleSeverity(options) {\n        const severity = Array.isArray(options) ? options[0] : options;\n        const normSeverity = typeof severity === \"string\" ? severityMap[severity.toLowerCase()] : severity;\n\n        if (normSeverity === 0 || normSeverity === 1 || normSeverity === 2) {\n            return normSeverity;\n        }\n\n        throw new Error(`\\tSeverity should be one of the following: 0 = off, 1 = warn, 2 = error (you passed '${util.inspect(severity).replace(/'/gu, \"\\\"\").replace(/\\n/gu, \"\")}').\\n`);\n\n    }\n\n    /**\n     * Validates the non-severity options passed to a rule, based on its schema.\n     * @param {{create: Function}} rule The rule to validate\n     * @param {Array} localOptions The options for the rule, excluding severity\n     * @returns {void}\n     */\n    validateRuleSchema(rule, localOptions) {\n        if (!ruleValidators.has(rule)) {\n            const schema = this.getRuleOptionsSchema(rule);\n\n            if (schema) {\n                ruleValidators.set(rule, ajv.compile(schema));\n            }\n        }\n\n        const validateRule = ruleValidators.get(rule);\n\n        if (validateRule) {\n            validateRule(localOptions);\n            if (validateRule.errors) {\n                throw new Error(validateRule.errors.map(\n                    error => `\\tValue ${JSON.stringify(error.data)} ${error.message}.\\n`\n                ).join(\"\"));\n            }\n        }\n    }\n\n    /**\n     * Validates a rule's options against its schema.\n     * @param {{create: Function}|null} rule The rule that the config is being validated for\n     * @param {string} ruleId The rule's unique name.\n     * @param {Array|number} options The given options for the rule.\n     * @param {string|null} source The name of the configuration source to report in any errors. If null or undefined,\n     * no source is prepended to the message.\n     * @returns {void}\n     */\n    validateRuleOptions(rule, ruleId, options, source = null) {\n        try {\n            const severity = this.validateRuleSeverity(options);\n\n            if (severity !== 0) {\n                this.validateRuleSchema(rule, Array.isArray(options) ? options.slice(1) : []);\n            }\n        } catch (err) {\n            const enhancedMessage = `Configuration for rule \"${ruleId}\" is invalid:\\n${err.message}`;\n\n            if (typeof source === \"string\") {\n                throw new Error(`${source}:\\n\\t${enhancedMessage}`);\n            } else {\n                throw new Error(enhancedMessage);\n            }\n        }\n    }\n\n    /**\n     * Validates an environment object\n     * @param {Object} environment The environment config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @param {function(envId:string): Object} [getAdditionalEnv] A map from strings to loaded environments.\n     * @returns {void}\n     */\n    validateEnvironment(\n        environment,\n        source,\n        getAdditionalEnv = noop\n    ) {\n\n        // not having an environment is ok\n        if (!environment) {\n            return;\n        }\n\n        Object.keys(environment).forEach(id => {\n            const env = getAdditionalEnv(id) || BuiltInEnvironments.get(id) || null;\n\n            if (!env) {\n                const message = `${source}:\\n\\tEnvironment key \"${id}\" is unknown\\n`;\n\n                throw new Error(message);\n            }\n        });\n    }\n\n    /**\n     * Validates a rules config object\n     * @param {Object} rulesConfig The rules config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @param {function(ruleId:string): Object} getAdditionalRule A map from strings to loaded rules\n     * @returns {void}\n     */\n    validateRules(\n        rulesConfig,\n        source,\n        getAdditionalRule = noop\n    ) {\n        if (!rulesConfig) {\n            return;\n        }\n\n        Object.keys(rulesConfig).forEach(id => {\n            const rule = getAdditionalRule(id) || this.builtInRules.get(id) || null;\n\n            this.validateRuleOptions(rule, id, rulesConfig[id], source);\n        });\n    }\n\n    /**\n     * Validates a `globals` section of a config file\n     * @param {Object} globalsConfig The `globals` section\n     * @param {string|null} source The name of the configuration source to report in the event of an error.\n     * @returns {void}\n     */\n    validateGlobals(globalsConfig, source = null) {\n        if (!globalsConfig) {\n            return;\n        }\n\n        Object.entries(globalsConfig)\n            .forEach(([configuredGlobal, configuredValue]) => {\n                try {\n                    ConfigOps.normalizeConfigGlobal(configuredValue);\n                } catch (err) {\n                    throw new Error(`ESLint configuration of global '${configuredGlobal}' in ${source} is invalid:\\n${err.message}`);\n                }\n            });\n    }\n\n    /**\n     * Validate `processor` configuration.\n     * @param {string|undefined} processorName The processor name.\n     * @param {string} source The name of config file.\n     * @param {function(id:string): Processor} getProcessor The getter of defined processors.\n     * @returns {void}\n     */\n    validateProcessor(processorName, source, getProcessor) {\n        if (processorName && !getProcessor(processorName)) {\n            throw new Error(`ESLint configuration of processor in '${source}' is invalid: '${processorName}' was not found.`);\n        }\n    }\n\n    /**\n     * Formats an array of schema validation errors.\n     * @param {Array} errors An array of error messages to format.\n     * @returns {string} Formatted error message\n     */\n    formatErrors(errors) {\n        return errors.map(error => {\n            if (error.keyword === \"additionalProperties\") {\n                const formattedPropertyPath = error.dataPath.length ? `${error.dataPath.slice(1)}.${error.params.additionalProperty}` : error.params.additionalProperty;\n\n                return `Unexpected top-level property \"${formattedPropertyPath}\"`;\n            }\n            if (error.keyword === \"type\") {\n                const formattedField = error.dataPath.slice(1);\n                const formattedExpectedType = Array.isArray(error.schema) ? error.schema.join(\"/\") : error.schema;\n                const formattedValue = JSON.stringify(error.data);\n\n                return `Property \"${formattedField}\" is the wrong type (expected ${formattedExpectedType} but got \\`${formattedValue}\\`)`;\n            }\n\n            const field = error.dataPath[0] === \".\" ? error.dataPath.slice(1) : error.dataPath;\n\n            return `\"${field}\" ${error.message}. Value: ${JSON.stringify(error.data)}`;\n        }).map(message => `\\t- ${message}.\\n`).join(\"\");\n    }\n\n    /**\n     * Validates the top level properties of the config object.\n     * @param {Object} config The config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @returns {void}\n     */\n    validateConfigSchema(config, source = null) {\n        validateSchema = validateSchema || ajv.compile(configSchema);\n\n        if (!validateSchema(config)) {\n            throw new Error(`ESLint configuration in ${source} is invalid:\\n${this.formatErrors(validateSchema.errors)}`);\n        }\n\n        if (Object.hasOwnProperty.call(config, \"ecmaFeatures\")) {\n            emitDeprecationWarning(source, \"ESLINT_LEGACY_ECMAFEATURES\");\n        }\n    }\n\n    /**\n     * Validates an entire config object.\n     * @param {Object} config The config object to validate.\n     * @param {string} source The name of the configuration source to report in any errors.\n     * @param {function(ruleId:string): Object} [getAdditionalRule] A map from strings to loaded rules.\n     * @param {function(envId:string): Object} [getAdditionalEnv] A map from strings to loaded envs.\n     * @returns {void}\n     */\n    validate(config, source, getAdditionalRule, getAdditionalEnv) {\n        this.validateConfigSchema(config, source);\n        this.validateRules(config.rules, source, getAdditionalRule);\n        this.validateEnvironment(config.env, source, getAdditionalEnv);\n        this.validateGlobals(config.globals, source);\n\n        for (const override of config.overrides || []) {\n            this.validateRules(override.rules, source, getAdditionalRule);\n            this.validateEnvironment(override.env, source, getAdditionalEnv);\n            this.validateGlobals(config.globals, source);\n        }\n    }\n\n    /**\n     * Validate config array object.\n     * @param {ConfigArray} configArray The config array to validate.\n     * @returns {void}\n     */\n    validateConfigArray(configArray) {\n        const getPluginEnv = Map.prototype.get.bind(configArray.pluginEnvironments);\n        const getPluginProcessor = Map.prototype.get.bind(configArray.pluginProcessors);\n        const getPluginRule = Map.prototype.get.bind(configArray.pluginRules);\n\n        // Validate.\n        for (const element of configArray) {\n            if (validated.has(element)) {\n                continue;\n            }\n            validated.add(element);\n\n            this.validateEnvironment(element.env, element.name, getPluginEnv);\n            this.validateGlobals(element.globals, element.name);\n            this.validateProcessor(element.processor, element.name, getPluginProcessor);\n            this.validateRules(element.rules, element.name, getPluginRule);\n        }\n    }\n\n}\n","/**\n * @fileoverview Common helpers for naming of plugins, formatters and configs\n */\n\nconst NAMESPACE_REGEX = /^@.*\\//iu;\n\n/**\n * Brings package name to correct format based on prefix\n * @param {string} name The name of the package.\n * @param {string} prefix Can be either \"eslint-plugin\", \"eslint-config\" or \"eslint-formatter\"\n * @returns {string} Normalized name of the package\n * @private\n */\nfunction normalizePackageName(name, prefix) {\n    let normalizedName = name;\n\n    /**\n     * On Windows, name can come in with Windows slashes instead of Unix slashes.\n     * Normalize to Unix first to avoid errors later on.\n     * https://github.com/eslint/eslint/issues/5644\n     */\n    if (normalizedName.includes(\"\\\\\")) {\n        normalizedName = normalizedName.replace(/\\\\/gu, \"/\");\n    }\n\n    if (normalizedName.charAt(0) === \"@\") {\n\n        /**\n         * it's a scoped package\n         * package name is the prefix, or just a username\n         */\n        const scopedPackageShortcutRegex = new RegExp(`^(@[^/]+)(?:/(?:${prefix})?)?$`, \"u\"),\n            scopedPackageNameRegex = new RegExp(`^${prefix}(-|$)`, \"u\");\n\n        if (scopedPackageShortcutRegex.test(normalizedName)) {\n            normalizedName = normalizedName.replace(scopedPackageShortcutRegex, `$1/${prefix}`);\n        } else if (!scopedPackageNameRegex.test(normalizedName.split(\"/\")[1])) {\n\n            /**\n             * for scoped packages, insert the prefix after the first / unless\n             * the path is already @scope/eslint or @scope/eslint-xxx-yyy\n             */\n            normalizedName = normalizedName.replace(/^@([^/]+)\\/(.*)$/u, `@$1/${prefix}-$2`);\n        }\n    } else if (!normalizedName.startsWith(`${prefix}-`)) {\n        normalizedName = `${prefix}-${normalizedName}`;\n    }\n\n    return normalizedName;\n}\n\n/**\n * Removes the prefix from a fullname.\n * @param {string} fullname The term which may have the prefix.\n * @param {string} prefix The prefix to remove.\n * @returns {string} The term without prefix.\n */\nfunction getShorthandName(fullname, prefix) {\n    if (fullname[0] === \"@\") {\n        let matchResult = new RegExp(`^(@[^/]+)/${prefix}$`, \"u\").exec(fullname);\n\n        if (matchResult) {\n            return matchResult[1];\n        }\n\n        matchResult = new RegExp(`^(@[^/]+)/${prefix}-(.+)$`, \"u\").exec(fullname);\n        if (matchResult) {\n            return `${matchResult[1]}/${matchResult[2]}`;\n        }\n    } else if (fullname.startsWith(`${prefix}-`)) {\n        return fullname.slice(prefix.length + 1);\n    }\n\n    return fullname;\n}\n\n/**\n * Gets the scope (namespace) of a term.\n * @param {string} term The term which may have the namespace.\n * @returns {string} The namespace of the term if it has one.\n */\nfunction getNamespaceFromTerm(term) {\n    const match = term.match(NAMESPACE_REGEX);\n\n    return match ? match[0] : \"\";\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport {\n    normalizePackageName,\n    getShorthandName,\n    getNamespaceFromTerm\n};\n","/**\n * @fileoverview Package exports for @eslint/eslintrc\n * @author Nicholas C. Zakas\n */\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport * as ConfigOps from \"./shared/config-ops.js\";\nimport ConfigValidator from \"./shared/config-validator.js\";\nimport * as naming from \"./shared/naming.js\";\nimport environments from \"../conf/environments.js\";\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\nconst Legacy = {\n    environments,\n\n    // shared\n    ConfigOps,\n    ConfigValidator,\n    naming\n};\n\nexport {\n    Legacy\n};\n"],"names":["path","Ajv","globals","util","BuiltInEnvironments","ConfigOps.normalizeConfigGlobal"],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/index.js":{"lineLengths":[61,13,0,62,0,114,0,58,0,3,59,59,45,40,3,48,35,0,29,22,8,22,53,49,0,62,35,29,21,13,9,19,0,16,1,0,3,37,58,124,55,3,49,18,29,0,41,26,12,31,53,5,0,27,45,31,27,9,28,5,0,15,1,0,3,39,43,71,3,25,61,1,0,3,53,63,55,3,20,26,1,0,3,70,45,46,84,3,51,63,1,0,3,54,45,60,3,30,50,1,0,3,53,45,59,3,30,49,1,0,3,57,45,63,3,34,49,1,0,3,53,45,59,3,30,49,1,0,3,68,45,74,3,37,49,1,0,3,67,45,73,3,37,49,1,0,3,71,45,77,3,39,49,1,0,3,70,45,76,3,39,49,1,0,3,62,45,68,3,37,49,1,0,3,61,45,67,3,37,49,1,0,3,55,45,61,3,32,60,1,0,45,45,53,45,59,59,63,63,59,59,49,0,3,48,49,73,30,3,52,18,64,61,1,0,3,61,49,73,69,3,52,31,21,19,0,50,78,0,37,33,15,37,45,44,7,33,66,12,31,66,5,0,12,28,24,5,1,0,46,0,20,37,20,37,14,39,16,39,16,13,0,35,13,16,22,17,24,25,18,19,15,20,29,20,29,17,23,23,19,19,21,21,20,19,16,24,15,14,15,14,17,17,21,19,18,16,18,17,14,17,17,22,22,21,28,20,19,18,18,7,2,28,5,22,58,16,13,19,18,27,18,27,15,17,14,22,43,32,52,15,24,21,26,24,15,23,18,28,24,24,20,22,19,17,15,15,28,29,19,19,22,17,45,2,33,18,29,16,3,0,3,31,44,63,3,46,19,78,59,16,20,9,37,5,15,1,0,3,40,46,65,3,33,50,37,1,0,3,47,56,77,83,3,51,25,0,47,40,0,34,37,58,81,35,27,13,46,16,71,34,27,13,42,9,5,0,20,1,0,34,41,71,60,6,0,46,36,60,9,19,6,0,41,42,71,29,23,9,0,62,64,44,36,26,92,26,92,27,64,27,64,25,62,26,63,25,62,26,63,26,63,26,63,27,64,25,62,25,62,25,62,25,62,25,62,26,71,25,62,25,62,25,62,0,29,13,9,0,19,6,0,40,39,68,0,27,57,71,31,17,80,37,24,47,58,23,67,21,64,35,37,22,0,43,54,58,68,75,25,72,53,25,21,17,20,73,37,64,67,21,46,48,55,21,52,49,21,17,13,9,0,19,6,0,47,62,27,29,64,63,9,19,6,0,45,61,6,0,36,35,62,0,32,16,35,45,50,45,15,61,13,0,25,65,45,20,33,50,74,53,19,71,17,13,9,19,6,0,19,72,80,77,23,9,36,6,0,43,62,27,16,75,76,62,15,27,13,0,68,32,28,13,9,0,19,6,0,42,57,23,9,66,29,77,59,13,76,0,78,62,13,9,19,6,0,41,74,33,46,9,19,6,0,39,66,68,0,45,38,40,51,13,9,0,19,6,0,42,26,0,53,51,51,31,17,55,33,33,18,80,51,31,17,48,23,56,66,15,49,42,33,18,39,31,17,54,20,27,13,9,0,32,6,0,44,67,50,6,0,50,60,45,35,25,10,0,49,35,73,68,0,38,63,13,9,0,19,6,0,41,77,34,52,58,40,57,13,28,9,19,6,0,41,41,29,23,9,39,39,9,0,65,26,36,25,48,25,91,25,48,25,48,30,54,0,29,13,9,0,19,6,3,0,3,56,38,77,104,3,46,76,56,5,15,1,0,3,89,38,267,125,3,57,73,0,24,54,5,0,41,39,5,0,38,30,45,9,48,5,0,15,1,0,3,56,38,197,104,3,52,9,50,22,19,5,1,0,3,73,38,242,59,3,57,70,65,25,63,9,26,30,9,5,0,57,47,1,0,3,73,38,267,56,3,46,24,32,32,71,13,61,27,13,37,0,24,32,34,32,66,13,46,45,13,56,27,13,32,0,21,5,0,15,1,0,3,52,52,101,60,3,38,52,31,22,79,25,68,30,70,0,17,46,28,34,9,54,35,9,5,21,29,5,25,33,5,0,13,42,44,32,9,36,34,43,34,16,34,9,36,30,12,54,33,9,32,5,0,13,64,54,47,16,49,23,41,36,63,46,48,17,13,9,25,41,15,47,20,39,7,43,15,50,51,22,41,7,45,5,0,27,1,0,46,13,13,13,12,13,12,13,13,13,14,12,12,12,12,12,12,12,12,13,7,2,76,0,3,54,37,56,3,20,76,1,0,30,40,44,34,0,51,61,13,0,66,10,0,52,34,0,71,40,0,43,50,28,46,70,27,39,25,21,27,36,60,19,31,17,13,0,24,10,0,35,24,10,32,23,10,27,23,10,54,16,57,61,79,15,27,13,66,10,26,23,10,30,24,10,28,23,10,54,42,27,13,16,57,32,48,15,27,13,66,10,54,16,57,32,43,15,27,13,66,10,25,23,10,46,16,57,32,43,15,27,13,66,10,56,16,57,32,43,15,27,13,66,10,53,45,27,13,16,57,60,48,15,27,13,66,10,28,23,10,27,23,10,7,2,0,3,57,38,57,47,131,155,120,67,3,23,9,15,77,3,26,13,60,43,5,1,0,3,67,34,44,71,71,3,49,31,0,26,30,29,80,48,34,40,17,13,23,0,32,39,48,32,40,17,13,23,0,27,30,39,58,13,23,0,32,41,58,13,23,0,31,47,58,13,23,0,29,41,58,13,23,0,16,23,5,1,0,3,54,51,44,71,74,3,3,54,44,71,58,3,25,16,21,23,3,65,42,32,32,40,28,72,9,12,18,27,38,5,0,8,23,88,74,7,20,5,0,44,8,67,68,13,33,34,46,47,51,68,19,5,0,22,1,0,3,57,55,3,0,49,0,72,31,0,3,53,43,64,57,3,32,24,72,27,5,18,1,0,3,45,55,49,78,41,3,46,22,18,0,34,21,0,7,43,45,7,28,22,22,26,22,31,22,48,22,63,22,39,33,35,17,26,13,9,5,0,41,51,64,46,5,34,0,26,1,0,3,45,55,49,82,41,3,42,22,18,0,47,51,73,46,5,34,0,26,1,0,3,62,3,22,7,31,52,54,7,52,43,73,9,43,66,9,0,28,63,38,11,5,0,7,42,46,103,7,19,56,25,26,0,30,53,58,46,28,46,13,9,5,0,7,60,47,72,7,15,37,30,24,5,0,7,30,53,165,45,7,37,45,51,59,5,1,0,75,54,0,28,28,38,26,0,50,0,3,53,52,57,3,37,12,27,37,52,5,1,0,3,83,77,38,59,3,30,31,0,36,37,74,33,23,34,77,31,23,0,16,24,5,1,0,3,25,3,24,7,31,51,45,129,130,7,16,20,9,28,75,15,7,32,39,25,60,5,0,7,50,46,118,7,40,50,47,31,59,0,45,24,13,0,51,25,21,29,21,14,9,0,51,28,59,0,45,24,13,0,51,25,21,25,22,14,9,5,0,7,50,46,118,7,37,75,63,53,24,13,0,47,31,0,37,23,25,25,31,45,18,13,77,9,5,0,7,44,46,118,7,37,51,0,46,70,24,13,47,0,43,24,13,52,36,0,37,75,13,0,55,62,61,47,31,33,51,39,55,26,21,17,20,58,55,61,34,29,27,42,52,72,56,22,0,30,34,28,50,76,32,58,52,31,45,29,25,21,17,13,9,5,0,7,51,74,47,46,75,118,7,73,52,18,9,42,13,58,42,28,17,50,0,53,75,17,77,13,19,37,9,5,0,7,51,58,47,46,118,7,41,59,28,37,31,9,0,35,49,41,52,57,26,17,0,80,51,41,27,37,29,35,49,22,17,55,27,25,33,18,13,18,9,47,59,79,13,18,9,46,64,23,33,25,36,46,18,13,18,9,53,40,79,79,13,18,9,50,40,79,13,18,9,51,39,77,13,9,5,0,7,55,72,47,46,118,7,57,48,73,35,55,29,25,29,26,18,13,18,9,51,60,54,0,57,28,17,0,50,51,41,27,39,39,35,49,22,17,50,35,29,33,18,13,18,9,55,80,9,5,0,7,63,82,47,46,118,7,62,40,0,78,23,49,31,50,38,22,13,0,76,47,37,23,40,25,31,45,18,13,51,68,21,29,22,14,0,18,9,0,50,51,68,21,25,22,14,18,9,0,41,49,38,22,13,0,76,47,37,23,40,25,31,45,18,13,9,5,1,0,29,29,39,27,0,3,49,36,47,46,3,37,47,1,0,13,9,14,8,17,28,28,22,20,19,24,18,17,24,26,24,17,17,19,20,27,29,27,20,20,22,27,29,27,24,24,26,24,20,21,19,9,21,2,0,20,30,18,40,20,44,24,36,58,58,46,42,40,50,38,36,50,54,50,36,36,40,42,56,60,56,42,42,46,56,60,56,50,50,54,50,42,44,33,0],"data":{"version":3,"file":"index.js","sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/get-innermost-scope.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/find-variable.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/token-predicate.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/get-function-head-location.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/get-static-value.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/get-string-if-constant.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/get-property-name.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/get-function-name-with-kind.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/has-side-effect.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/is-parenthesized.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/pattern-matcher.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/reference-tracker.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-utils/src/index.js"],"sourcesContent":["/**\n * Get the innermost scope which contains a given location.\n * @param {Scope} initialScope The initial scope to search.\n * @param {Node} node The location to search.\n * @returns {Scope} The innermost scope.\n */\nexport function getInnermostScope(initialScope, node) {\n    const location = node.range[0]\n\n    let scope = initialScope\n    let found = false\n    do {\n        found = false\n        for (const childScope of scope.childScopes) {\n            const range = childScope.block.range\n\n            if (range[0] <= location && location < range[1]) {\n                scope = childScope\n                found = true\n                break\n            }\n        }\n    } while (found)\n\n    return scope\n}\n","import { getInnermostScope } from \"./get-innermost-scope\"\n\n/**\n * Find the variable of a given name.\n * @param {Scope} initialScope The scope to start finding.\n * @param {string|Node} nameOrNode The variable name to find. If this is a Node object then it should be an Identifier node.\n * @returns {Variable|null} The found variable or null.\n */\nexport function findVariable(initialScope, nameOrNode) {\n    let name = \"\"\n    let scope = initialScope\n\n    if (typeof nameOrNode === \"string\") {\n        name = nameOrNode\n    } else {\n        name = nameOrNode.name\n        scope = getInnermostScope(scope, nameOrNode)\n    }\n\n    while (scope != null) {\n        const variable = scope.set.get(name)\n        if (variable != null) {\n            return variable\n        }\n        scope = scope.upper\n    }\n\n    return null\n}\n","/**\n * Negate the result of `this` calling.\n * @param {Token} token The token to check.\n * @returns {boolean} `true` if the result of `this(token)` is `false`.\n */\nfunction negate0(token) {\n    return !this(token) //eslint-disable-line no-invalid-this\n}\n\n/**\n * Creates the negate function of the given function.\n * @param {function(Token):boolean} f - The function to negate.\n * @returns {function(Token):boolean} Negated function.\n */\nfunction negate(f) {\n    return negate0.bind(f)\n}\n\n/**\n * Checks if the given token is a PunctuatorToken with the given value\n * @param {Token} token - The token to check.\n * @param {string} value - The value to check.\n * @returns {boolean} `true` if the token is a PunctuatorToken with the given value.\n */\nfunction isPunctuatorTokenWithValue(token, value) {\n    return token.type === \"Punctuator\" && token.value === value\n}\n\n/**\n * Checks if the given token is an arrow token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an arrow token.\n */\nexport function isArrowToken(token) {\n    return isPunctuatorTokenWithValue(token, \"=>\")\n}\n\n/**\n * Checks if the given token is a comma token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a comma token.\n */\nexport function isCommaToken(token) {\n    return isPunctuatorTokenWithValue(token, \",\")\n}\n\n/**\n * Checks if the given token is a semicolon token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a semicolon token.\n */\nexport function isSemicolonToken(token) {\n    return isPunctuatorTokenWithValue(token, \";\")\n}\n\n/**\n * Checks if the given token is a colon token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a colon token.\n */\nexport function isColonToken(token) {\n    return isPunctuatorTokenWithValue(token, \":\")\n}\n\n/**\n * Checks if the given token is an opening parenthesis token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an opening parenthesis token.\n */\nexport function isOpeningParenToken(token) {\n    return isPunctuatorTokenWithValue(token, \"(\")\n}\n\n/**\n * Checks if the given token is a closing parenthesis token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a closing parenthesis token.\n */\nexport function isClosingParenToken(token) {\n    return isPunctuatorTokenWithValue(token, \")\")\n}\n\n/**\n * Checks if the given token is an opening square bracket token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an opening square bracket token.\n */\nexport function isOpeningBracketToken(token) {\n    return isPunctuatorTokenWithValue(token, \"[\")\n}\n\n/**\n * Checks if the given token is a closing square bracket token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a closing square bracket token.\n */\nexport function isClosingBracketToken(token) {\n    return isPunctuatorTokenWithValue(token, \"]\")\n}\n\n/**\n * Checks if the given token is an opening brace token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an opening brace token.\n */\nexport function isOpeningBraceToken(token) {\n    return isPunctuatorTokenWithValue(token, \"{\")\n}\n\n/**\n * Checks if the given token is a closing brace token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a closing brace token.\n */\nexport function isClosingBraceToken(token) {\n    return isPunctuatorTokenWithValue(token, \"}\")\n}\n\n/**\n * Checks if the given token is a comment token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a comment token.\n */\nexport function isCommentToken(token) {\n    return [\"Block\", \"Line\", \"Shebang\"].includes(token.type)\n}\n\nexport const isNotArrowToken = negate(isArrowToken)\nexport const isNotCommaToken = negate(isCommaToken)\nexport const isNotSemicolonToken = negate(isSemicolonToken)\nexport const isNotColonToken = negate(isColonToken)\nexport const isNotOpeningParenToken = negate(isOpeningParenToken)\nexport const isNotClosingParenToken = negate(isClosingParenToken)\nexport const isNotOpeningBracketToken = negate(isOpeningBracketToken)\nexport const isNotClosingBracketToken = negate(isClosingBracketToken)\nexport const isNotOpeningBraceToken = negate(isOpeningBraceToken)\nexport const isNotClosingBraceToken = negate(isClosingBraceToken)\nexport const isNotCommentToken = negate(isCommentToken)\n","import { isArrowToken, isOpeningParenToken } from \"./token-predicate\"\n\n/**\n * Get the `(` token of the given function node.\n * @param {Node} node - The function node to get.\n * @param {SourceCode} sourceCode - The source code object to get tokens.\n * @returns {Token} `(` token.\n */\nfunction getOpeningParenOfParams(node, sourceCode) {\n    return node.id\n        ? sourceCode.getTokenAfter(node.id, isOpeningParenToken)\n        : sourceCode.getFirstToken(node, isOpeningParenToken)\n}\n\n/**\n * Get the location of the given function node for reporting.\n * @param {Node} node - The function node to get.\n * @param {SourceCode} sourceCode - The source code object to get tokens.\n * @returns {string} The location of the function node for reporting.\n */\nexport function getFunctionHeadLocation(node, sourceCode) {\n    const parent = node.parent\n    let start = null\n    let end = null\n\n    if (node.type === \"ArrowFunctionExpression\") {\n        const arrowToken = sourceCode.getTokenBefore(node.body, isArrowToken)\n\n        start = arrowToken.loc.start\n        end = arrowToken.loc.end\n    } else if (\n        parent.type === \"Property\" ||\n        parent.type === \"MethodDefinition\" ||\n        parent.type === \"PropertyDefinition\"\n    ) {\n        start = parent.loc.start\n        end = getOpeningParenOfParams(node, sourceCode).loc.start\n    } else {\n        start = node.loc.start\n        end = getOpeningParenOfParams(node, sourceCode).loc.start\n    }\n\n    return {\n        start: { ...start },\n        end: { ...end },\n    }\n}\n","/* globals globalThis, global, self, window */\n\nimport { findVariable } from \"./find-variable\"\n\nconst globalObject =\n    typeof globalThis !== \"undefined\"\n        ? globalThis\n        : typeof self !== \"undefined\"\n        ? self\n        : typeof window !== \"undefined\"\n        ? window\n        : typeof global !== \"undefined\"\n        ? global\n        : {}\n\nconst builtinNames = Object.freeze(\n    new Set([\n        \"Array\",\n        \"ArrayBuffer\",\n        \"BigInt\",\n        \"BigInt64Array\",\n        \"BigUint64Array\",\n        \"Boolean\",\n        \"DataView\",\n        \"Date\",\n        \"decodeURI\",\n        \"decodeURIComponent\",\n        \"encodeURI\",\n        \"encodeURIComponent\",\n        \"escape\",\n        \"Float32Array\",\n        \"Float64Array\",\n        \"Function\",\n        \"Infinity\",\n        \"Int16Array\",\n        \"Int32Array\",\n        \"Int8Array\",\n        \"isFinite\",\n        \"isNaN\",\n        \"isPrototypeOf\",\n        \"JSON\",\n        \"Map\",\n        \"Math\",\n        \"NaN\",\n        \"Number\",\n        \"Object\",\n        \"parseFloat\",\n        \"parseInt\",\n        \"Promise\",\n        \"Proxy\",\n        \"Reflect\",\n        \"RegExp\",\n        \"Set\",\n        \"String\",\n        \"Symbol\",\n        \"Uint16Array\",\n        \"Uint32Array\",\n        \"Uint8Array\",\n        \"Uint8ClampedArray\",\n        \"undefined\",\n        \"unescape\",\n        \"WeakMap\",\n        \"WeakSet\",\n    ]),\n)\nconst callAllowed = new Set(\n    [\n        Array.isArray,\n        typeof BigInt === \"function\" ? BigInt : undefined,\n        Boolean,\n        Date,\n        Date.parse,\n        decodeURI,\n        decodeURIComponent,\n        encodeURI,\n        encodeURIComponent,\n        escape,\n        isFinite,\n        isNaN,\n        isPrototypeOf,\n        ...Object.getOwnPropertyNames(Math)\n            .map((k) => Math[k])\n            .filter((f) => typeof f === \"function\"),\n        Number,\n        Number.isFinite,\n        Number.isNaN,\n        Number.parseFloat,\n        Number.parseInt,\n        Object,\n        Object.entries,\n        Object.is,\n        Object.isExtensible,\n        Object.isFrozen,\n        Object.isSealed,\n        Object.keys,\n        Object.values,\n        parseFloat,\n        parseInt,\n        RegExp,\n        String,\n        String.fromCharCode,\n        String.fromCodePoint,\n        String.raw,\n        Symbol.for,\n        Symbol.keyFor,\n        unescape,\n    ].filter((f) => typeof f === \"function\"),\n)\nconst callPassThrough = new Set([\n    Object.freeze,\n    Object.preventExtensions,\n    Object.seal,\n])\n\n/**\n * Get the property descriptor.\n * @param {object} object The object to get.\n * @param {string|number|symbol} name The property name to get.\n */\nfunction getPropertyDescriptor(object, name) {\n    let x = object\n    while ((typeof x === \"object\" || typeof x === \"function\") && x !== null) {\n        const d = Object.getOwnPropertyDescriptor(x, name)\n        if (d) {\n            return d\n        }\n        x = Object.getPrototypeOf(x)\n    }\n    return null\n}\n\n/**\n * Check if a property is getter or not.\n * @param {object} object The object to check.\n * @param {string|number|symbol} name The property name to check.\n */\nfunction isGetter(object, name) {\n    const d = getPropertyDescriptor(object, name)\n    return d != null && d.get != null\n}\n\n/**\n * Get the element values of a given node list.\n * @param {Node[]} nodeList The node list to get values.\n * @param {Scope|undefined} initialScope The initial scope to find variables.\n * @returns {any[]|null} The value list if all nodes are constant. Otherwise, null.\n */\nfunction getElementValues(nodeList, initialScope) {\n    const valueList = []\n\n    for (let i = 0; i < nodeList.length; ++i) {\n        const elementNode = nodeList[i]\n\n        if (elementNode == null) {\n            valueList.length = i + 1\n        } else if (elementNode.type === \"SpreadElement\") {\n            const argument = getStaticValueR(elementNode.argument, initialScope)\n            if (argument == null) {\n                return null\n            }\n            valueList.push(...argument.value)\n        } else {\n            const element = getStaticValueR(elementNode, initialScope)\n            if (element == null) {\n                return null\n            }\n            valueList.push(element.value)\n        }\n    }\n\n    return valueList\n}\n\nconst operations = Object.freeze({\n    ArrayExpression(node, initialScope) {\n        const elements = getElementValues(node.elements, initialScope)\n        return elements != null ? { value: elements } : null\n    },\n\n    AssignmentExpression(node, initialScope) {\n        if (node.operator === \"=\") {\n            return getStaticValueR(node.right, initialScope)\n        }\n        return null\n    },\n\n    //eslint-disable-next-line complexity\n    BinaryExpression(node, initialScope) {\n        if (node.operator === \"in\" || node.operator === \"instanceof\") {\n            // Not supported.\n            return null\n        }\n\n        const left = getStaticValueR(node.left, initialScope)\n        const right = getStaticValueR(node.right, initialScope)\n        if (left != null && right != null) {\n            switch (node.operator) {\n                case \"==\":\n                    return { value: left.value == right.value } //eslint-disable-line eqeqeq\n                case \"!=\":\n                    return { value: left.value != right.value } //eslint-disable-line eqeqeq\n                case \"===\":\n                    return { value: left.value === right.value }\n                case \"!==\":\n                    return { value: left.value !== right.value }\n                case \"<\":\n                    return { value: left.value < right.value }\n                case \"<=\":\n                    return { value: left.value <= right.value }\n                case \">\":\n                    return { value: left.value > right.value }\n                case \">=\":\n                    return { value: left.value >= right.value }\n                case \"<<\":\n                    return { value: left.value << right.value }\n                case \">>\":\n                    return { value: left.value >> right.value }\n                case \">>>\":\n                    return { value: left.value >>> right.value }\n                case \"+\":\n                    return { value: left.value + right.value }\n                case \"-\":\n                    return { value: left.value - right.value }\n                case \"*\":\n                    return { value: left.value * right.value }\n                case \"/\":\n                    return { value: left.value / right.value }\n                case \"%\":\n                    return { value: left.value % right.value }\n                case \"**\":\n                    return { value: Math.pow(left.value, right.value) }\n                case \"|\":\n                    return { value: left.value | right.value }\n                case \"^\":\n                    return { value: left.value ^ right.value }\n                case \"&\":\n                    return { value: left.value & right.value }\n\n                // no default\n            }\n        }\n\n        return null\n    },\n\n    CallExpression(node, initialScope) {\n        const calleeNode = node.callee\n        const args = getElementValues(node.arguments, initialScope)\n\n        if (args != null) {\n            if (calleeNode.type === \"MemberExpression\") {\n                if (calleeNode.property.type === \"PrivateIdentifier\") {\n                    return null\n                }\n                const object = getStaticValueR(calleeNode.object, initialScope)\n                if (object != null) {\n                    if (\n                        object.value == null &&\n                        (object.optional || node.optional)\n                    ) {\n                        return { value: undefined, optional: true }\n                    }\n                    const property = getStaticPropertyNameValue(\n                        calleeNode,\n                        initialScope,\n                    )\n\n                    if (property != null) {\n                        const receiver = object.value\n                        const methodName = property.value\n                        if (callAllowed.has(receiver[methodName])) {\n                            return { value: receiver[methodName](...args) }\n                        }\n                        if (callPassThrough.has(receiver[methodName])) {\n                            return { value: args[0] }\n                        }\n                    }\n                }\n            } else {\n                const callee = getStaticValueR(calleeNode, initialScope)\n                if (callee != null) {\n                    if (callee.value == null && node.optional) {\n                        return { value: undefined, optional: true }\n                    }\n                    const func = callee.value\n                    if (callAllowed.has(func)) {\n                        return { value: func(...args) }\n                    }\n                    if (callPassThrough.has(func)) {\n                        return { value: args[0] }\n                    }\n                }\n            }\n        }\n\n        return null\n    },\n\n    ConditionalExpression(node, initialScope) {\n        const test = getStaticValueR(node.test, initialScope)\n        if (test != null) {\n            return test.value\n                ? getStaticValueR(node.consequent, initialScope)\n                : getStaticValueR(node.alternate, initialScope)\n        }\n        return null\n    },\n\n    ExpressionStatement(node, initialScope) {\n        return getStaticValueR(node.expression, initialScope)\n    },\n\n    Identifier(node, initialScope) {\n        if (initialScope != null) {\n            const variable = findVariable(initialScope, node)\n\n            // Built-in globals.\n            if (\n                variable != null &&\n                variable.defs.length === 0 &&\n                builtinNames.has(variable.name) &&\n                variable.name in globalObject\n            ) {\n                return { value: globalObject[variable.name] }\n            }\n\n            // Constants.\n            if (variable != null && variable.defs.length === 1) {\n                const def = variable.defs[0]\n                if (\n                    def.parent &&\n                    def.parent.kind === \"const\" &&\n                    // TODO(mysticatea): don't support destructuring here.\n                    def.node.id.type === \"Identifier\"\n                ) {\n                    return getStaticValueR(def.node.init, initialScope)\n                }\n            }\n        }\n        return null\n    },\n\n    Literal(node) {\n        //istanbul ignore if : this is implementation-specific behavior.\n        if ((node.regex != null || node.bigint != null) && node.value == null) {\n            // It was a RegExp/BigInt literal, but Node.js didn't support it.\n            return null\n        }\n        return { value: node.value }\n    },\n\n    LogicalExpression(node, initialScope) {\n        const left = getStaticValueR(node.left, initialScope)\n        if (left != null) {\n            if (\n                (node.operator === \"||\" && Boolean(left.value) === true) ||\n                (node.operator === \"&&\" && Boolean(left.value) === false) ||\n                (node.operator === \"??\" && left.value != null)\n            ) {\n                return left\n            }\n\n            const right = getStaticValueR(node.right, initialScope)\n            if (right != null) {\n                return right\n            }\n        }\n\n        return null\n    },\n\n    MemberExpression(node, initialScope) {\n        if (node.property.type === \"PrivateIdentifier\") {\n            return null\n        }\n        const object = getStaticValueR(node.object, initialScope)\n        if (object != null) {\n            if (object.value == null && (object.optional || node.optional)) {\n                return { value: undefined, optional: true }\n            }\n            const property = getStaticPropertyNameValue(node, initialScope)\n\n            if (property != null && !isGetter(object.value, property.value)) {\n                return { value: object.value[property.value] }\n            }\n        }\n        return null\n    },\n\n    ChainExpression(node, initialScope) {\n        const expression = getStaticValueR(node.expression, initialScope)\n        if (expression != null) {\n            return { value: expression.value }\n        }\n        return null\n    },\n\n    NewExpression(node, initialScope) {\n        const callee = getStaticValueR(node.callee, initialScope)\n        const args = getElementValues(node.arguments, initialScope)\n\n        if (callee != null && args != null) {\n            const Func = callee.value\n            if (callAllowed.has(Func)) {\n                return { value: new Func(...args) }\n            }\n        }\n\n        return null\n    },\n\n    ObjectExpression(node, initialScope) {\n        const object = {}\n\n        for (const propertyNode of node.properties) {\n            if (propertyNode.type === \"Property\") {\n                if (propertyNode.kind !== \"init\") {\n                    return null\n                }\n                const key = getStaticPropertyNameValue(\n                    propertyNode,\n                    initialScope,\n                )\n                const value = getStaticValueR(propertyNode.value, initialScope)\n                if (key == null || value == null) {\n                    return null\n                }\n                object[key.value] = value.value\n            } else if (\n                propertyNode.type === \"SpreadElement\" ||\n                propertyNode.type === \"ExperimentalSpreadProperty\"\n            ) {\n                const argument = getStaticValueR(\n                    propertyNode.argument,\n                    initialScope,\n                )\n                if (argument == null) {\n                    return null\n                }\n                Object.assign(object, argument.value)\n            } else {\n                return null\n            }\n        }\n\n        return { value: object }\n    },\n\n    SequenceExpression(node, initialScope) {\n        const last = node.expressions[node.expressions.length - 1]\n        return getStaticValueR(last, initialScope)\n    },\n\n    TaggedTemplateExpression(node, initialScope) {\n        const tag = getStaticValueR(node.tag, initialScope)\n        const expressions = getElementValues(\n            node.quasi.expressions,\n            initialScope,\n        )\n\n        if (tag != null && expressions != null) {\n            const func = tag.value\n            const strings = node.quasi.quasis.map((q) => q.value.cooked)\n            strings.raw = node.quasi.quasis.map((q) => q.value.raw)\n\n            if (func === String.raw) {\n                return { value: func(strings, ...expressions) }\n            }\n        }\n\n        return null\n    },\n\n    TemplateLiteral(node, initialScope) {\n        const expressions = getElementValues(node.expressions, initialScope)\n        if (expressions != null) {\n            let value = node.quasis[0].value.cooked\n            for (let i = 0; i < expressions.length; ++i) {\n                value += expressions[i]\n                value += node.quasis[i + 1].value.cooked\n            }\n            return { value }\n        }\n        return null\n    },\n\n    UnaryExpression(node, initialScope) {\n        if (node.operator === \"delete\") {\n            // Not supported.\n            return null\n        }\n        if (node.operator === \"void\") {\n            return { value: undefined }\n        }\n\n        const arg = getStaticValueR(node.argument, initialScope)\n        if (arg != null) {\n            switch (node.operator) {\n                case \"-\":\n                    return { value: -arg.value }\n                case \"+\":\n                    return { value: +arg.value } //eslint-disable-line no-implicit-coercion\n                case \"!\":\n                    return { value: !arg.value }\n                case \"~\":\n                    return { value: ~arg.value }\n                case \"typeof\":\n                    return { value: typeof arg.value }\n\n                // no default\n            }\n        }\n\n        return null\n    },\n})\n\n/**\n * Get the value of a given node if it's a static value.\n * @param {Node} node The node to get.\n * @param {Scope|undefined} initialScope The scope to start finding variable.\n * @returns {{value:any}|{value:undefined,optional?:true}|null} The static value of the node, or `null`.\n */\nfunction getStaticValueR(node, initialScope) {\n    if (node != null && Object.hasOwnProperty.call(operations, node.type)) {\n        return operations[node.type](node, initialScope)\n    }\n    return null\n}\n\n/**\n * Get the static value of property name from a MemberExpression node or a Property node.\n * @param {Node} node The node to get.\n * @param {Scope} [initialScope] The scope to start finding variable. Optional. If the node is a computed property node and this scope was given, this checks the computed property name by the `getStringIfConstant` function with the scope, and returns the value of it.\n * @returns {{value:any}|{value:undefined,optional?:true}|null} The static value of the property name of the node, or `null`.\n */\nfunction getStaticPropertyNameValue(node, initialScope) {\n    const nameNode = node.type === \"Property\" ? node.key : node.property\n\n    if (node.computed) {\n        return getStaticValueR(nameNode, initialScope)\n    }\n\n    if (nameNode.type === \"Identifier\") {\n        return { value: nameNode.name }\n    }\n\n    if (nameNode.type === \"Literal\") {\n        if (nameNode.bigint) {\n            return { value: nameNode.bigint }\n        }\n        return { value: String(nameNode.value) }\n    }\n\n    return null\n}\n\n/**\n * Get the value of a given node if it's a static value.\n * @param {Node} node The node to get.\n * @param {Scope} [initialScope] The scope to start finding variable. Optional. If this scope was given, this tries to resolve identifier references which are in the given node as much as possible.\n * @returns {{value:any}|{value:undefined,optional?:true}|null} The static value of the node, or `null`.\n */\nexport function getStaticValue(node, initialScope = null) {\n    try {\n        return getStaticValueR(node, initialScope)\n    } catch (_error) {\n        return null\n    }\n}\n","import { getStaticValue } from \"./get-static-value\"\n\n/**\n * Get the value of a given node if it's a literal or a template literal.\n * @param {Node} node The node to get.\n * @param {Scope} [initialScope] The scope to start finding variable. Optional. If the node is an Identifier node and this scope was given, this checks the variable of the identifier, and returns the value of it if the variable is a constant.\n * @returns {string|null} The value of the node, or `null`.\n */\nexport function getStringIfConstant(node, initialScope = null) {\n    // Handle the literals that the platform doesn't support natively.\n    if (node && node.type === \"Literal\" && node.value === null) {\n        if (node.regex) {\n            return `/${node.regex.pattern}/${node.regex.flags}`\n        }\n        if (node.bigint) {\n            return node.bigint\n        }\n    }\n\n    const evaluated = getStaticValue(node, initialScope)\n    return evaluated && String(evaluated.value)\n}\n","import { getStringIfConstant } from \"./get-string-if-constant\"\n\n/**\n * Get the property name from a MemberExpression node or a Property node.\n * @param {Node} node The node to get.\n * @param {Scope} [initialScope] The scope to start finding variable. Optional. If the node is a computed property node and this scope was given, this checks the computed property name by the `getStringIfConstant` function with the scope, and returns the value of it.\n * @returns {string|null} The property name of the node.\n */\nexport function getPropertyName(node, initialScope) {\n    switch (node.type) {\n        case \"MemberExpression\":\n            if (node.computed) {\n                return getStringIfConstant(node.property, initialScope)\n            }\n            if (node.property.type === \"PrivateIdentifier\") {\n                return null\n            }\n            return node.property.name\n\n        case \"Property\":\n        case \"MethodDefinition\":\n        case \"PropertyDefinition\":\n            if (node.computed) {\n                return getStringIfConstant(node.key, initialScope)\n            }\n            if (node.key.type === \"Literal\") {\n                return String(node.key.value)\n            }\n            if (node.key.type === \"PrivateIdentifier\") {\n                return null\n            }\n            return node.key.name\n\n        // no default\n    }\n\n    return null\n}\n","import { getPropertyName } from \"./get-property-name\"\n\n/**\n * Get the name and kind of the given function node.\n * @param {ASTNode} node - The function node to get.\n * @param {SourceCode} [sourceCode] The source code object to get the code of computed property keys.\n * @returns {string} The name and kind of the function node.\n */\n// eslint-disable-next-line complexity\nexport function getFunctionNameWithKind(node, sourceCode) {\n    const parent = node.parent\n    const tokens = []\n    const isObjectMethod = parent.type === \"Property\" && parent.value === node\n    const isClassMethod =\n        parent.type === \"MethodDefinition\" && parent.value === node\n    const isClassFieldMethod =\n        parent.type === \"PropertyDefinition\" && parent.value === node\n\n    // Modifiers.\n    if (isClassMethod || isClassFieldMethod) {\n        if (parent.static) {\n            tokens.push(\"static\")\n        }\n        if (parent.key.type === \"PrivateIdentifier\") {\n            tokens.push(\"private\")\n        }\n    }\n    if (node.async) {\n        tokens.push(\"async\")\n    }\n    if (node.generator) {\n        tokens.push(\"generator\")\n    }\n\n    // Kinds.\n    if (isObjectMethod || isClassMethod) {\n        if (parent.kind === \"constructor\") {\n            return \"constructor\"\n        }\n        if (parent.kind === \"get\") {\n            tokens.push(\"getter\")\n        } else if (parent.kind === \"set\") {\n            tokens.push(\"setter\")\n        } else {\n            tokens.push(\"method\")\n        }\n    } else if (isClassFieldMethod) {\n        tokens.push(\"method\")\n    } else {\n        if (node.type === \"ArrowFunctionExpression\") {\n            tokens.push(\"arrow\")\n        }\n        tokens.push(\"function\")\n    }\n\n    // Names.\n    if (isObjectMethod || isClassMethod || isClassFieldMethod) {\n        if (parent.key.type === \"PrivateIdentifier\") {\n            tokens.push(`#${parent.key.name}`)\n        } else {\n            const name = getPropertyName(parent)\n            if (name) {\n                tokens.push(`'${name}'`)\n            } else if (sourceCode) {\n                const keyText = sourceCode.getText(parent.key)\n                if (!keyText.includes(\"\\n\")) {\n                    tokens.push(`[${keyText}]`)\n                }\n            }\n        }\n    } else if (node.id) {\n        tokens.push(`'${node.id.name}'`)\n    } else if (\n        parent.type === \"VariableDeclarator\" &&\n        parent.id &&\n        parent.id.type === \"Identifier\"\n    ) {\n        tokens.push(`'${parent.id.name}'`)\n    } else if (\n        (parent.type === \"AssignmentExpression\" ||\n            parent.type === \"AssignmentPattern\") &&\n        parent.left &&\n        parent.left.type === \"Identifier\"\n    ) {\n        tokens.push(`'${parent.left.name}'`)\n    }\n\n    return tokens.join(\" \")\n}\n","import evk from \"eslint-visitor-keys\"\n\nconst typeConversionBinaryOps = Object.freeze(\n    new Set([\n        \"==\",\n        \"!=\",\n        \"<\",\n        \"<=\",\n        \">\",\n        \">=\",\n        \"<<\",\n        \">>\",\n        \">>>\",\n        \"+\",\n        \"-\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \"|\",\n        \"^\",\n        \"&\",\n        \"in\",\n    ]),\n)\nconst typeConversionUnaryOps = Object.freeze(new Set([\"-\", \"+\", \"!\", \"~\"]))\n\n/**\n * Check whether the given value is an ASTNode or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an ASTNode.\n */\nfunction isNode(x) {\n    return x !== null && typeof x === \"object\" && typeof x.type === \"string\"\n}\n\nconst visitor = Object.freeze(\n    Object.assign(Object.create(null), {\n        $visit(node, options, visitorKeys) {\n            const { type } = node\n\n            if (typeof this[type] === \"function\") {\n                return this[type](node, options, visitorKeys)\n            }\n\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n\n        $visitChildren(node, options, visitorKeys) {\n            const { type } = node\n\n            for (const key of visitorKeys[type] || evk.getKeys(node)) {\n                const value = node[key]\n\n                if (Array.isArray(value)) {\n                    for (const element of value) {\n                        if (\n                            isNode(element) &&\n                            this.$visit(element, options, visitorKeys)\n                        ) {\n                            return true\n                        }\n                    }\n                } else if (\n                    isNode(value) &&\n                    this.$visit(value, options, visitorKeys)\n                ) {\n                    return true\n                }\n            }\n\n            return false\n        },\n\n        ArrowFunctionExpression() {\n            return false\n        },\n        AssignmentExpression() {\n            return true\n        },\n        AwaitExpression() {\n            return true\n        },\n        BinaryExpression(node, options, visitorKeys) {\n            if (\n                options.considerImplicitTypeConversion &&\n                typeConversionBinaryOps.has(node.operator) &&\n                (node.left.type !== \"Literal\" || node.right.type !== \"Literal\")\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        CallExpression() {\n            return true\n        },\n        FunctionExpression() {\n            return false\n        },\n        ImportExpression() {\n            return true\n        },\n        MemberExpression(node, options, visitorKeys) {\n            if (options.considerGetters) {\n                return true\n            }\n            if (\n                options.considerImplicitTypeConversion &&\n                node.computed &&\n                node.property.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        MethodDefinition(node, options, visitorKeys) {\n            if (\n                options.considerImplicitTypeConversion &&\n                node.computed &&\n                node.key.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        NewExpression() {\n            return true\n        },\n        Property(node, options, visitorKeys) {\n            if (\n                options.considerImplicitTypeConversion &&\n                node.computed &&\n                node.key.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        PropertyDefinition(node, options, visitorKeys) {\n            if (\n                options.considerImplicitTypeConversion &&\n                node.computed &&\n                node.key.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        UnaryExpression(node, options, visitorKeys) {\n            if (node.operator === \"delete\") {\n                return true\n            }\n            if (\n                options.considerImplicitTypeConversion &&\n                typeConversionUnaryOps.has(node.operator) &&\n                node.argument.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        UpdateExpression() {\n            return true\n        },\n        YieldExpression() {\n            return true\n        },\n    }),\n)\n\n/**\n * Check whether a given node has any side effect or not.\n * @param {Node} node The node to get.\n * @param {SourceCode} sourceCode The source code object.\n * @param {object} [options] The option object.\n * @param {boolean} [options.considerGetters=false] If `true` then it considers member accesses as the node which has side effects.\n * @param {boolean} [options.considerImplicitTypeConversion=false] If `true` then it considers implicit type conversion as the node which has side effects.\n * @param {object} [options.visitorKeys=evk.KEYS] The keys to traverse nodes. Use `context.getSourceCode().visitorKeys`.\n * @returns {boolean} `true` if the node has a certain side effect.\n */\nexport function hasSideEffect(\n    node,\n    sourceCode,\n    { considerGetters = false, considerImplicitTypeConversion = false } = {},\n) {\n    return visitor.$visit(\n        node,\n        { considerGetters, considerImplicitTypeConversion },\n        sourceCode.visitorKeys || evk.KEYS,\n    )\n}\n","import { isClosingParenToken, isOpeningParenToken } from \"./token-predicate\"\n\n/**\n * Get the left parenthesis of the parent node syntax if it exists.\n * E.g., `if (a) {}` then the `(`.\n * @param {Node} node The AST node to check.\n * @param {SourceCode} sourceCode The source code object to get tokens.\n * @returns {Token|null} The left parenthesis of the parent node syntax\n */\nfunction getParentSyntaxParen(node, sourceCode) {\n    const parent = node.parent\n\n    switch (parent.type) {\n        case \"CallExpression\":\n        case \"NewExpression\":\n            if (parent.arguments.length === 1 && parent.arguments[0] === node) {\n                return sourceCode.getTokenAfter(\n                    parent.callee,\n                    isOpeningParenToken,\n                )\n            }\n            return null\n\n        case \"DoWhileStatement\":\n            if (parent.test === node) {\n                return sourceCode.getTokenAfter(\n                    parent.body,\n                    isOpeningParenToken,\n                )\n            }\n            return null\n\n        case \"IfStatement\":\n        case \"WhileStatement\":\n            if (parent.test === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        case \"ImportExpression\":\n            if (parent.source === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        case \"SwitchStatement\":\n            if (parent.discriminant === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        case \"WithStatement\":\n            if (parent.object === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        default:\n            return null\n    }\n}\n\n/**\n * Check whether a given node is parenthesized or not.\n * @param {number} times The number of parantheses.\n * @param {Node} node The AST node to check.\n * @param {SourceCode} sourceCode The source code object to get tokens.\n * @returns {boolean} `true` if the node is parenthesized the given times.\n */\n/**\n * Check whether a given node is parenthesized or not.\n * @param {Node} node The AST node to check.\n * @param {SourceCode} sourceCode The source code object to get tokens.\n * @returns {boolean} `true` if the node is parenthesized.\n */\nexport function isParenthesized(\n    timesOrNode,\n    nodeOrSourceCode,\n    optionalSourceCode,\n) {\n    let times, node, sourceCode, maybeLeftParen, maybeRightParen\n    if (typeof timesOrNode === \"number\") {\n        times = timesOrNode | 0\n        node = nodeOrSourceCode\n        sourceCode = optionalSourceCode\n        if (!(times >= 1)) {\n            throw new TypeError(\"'times' should be a positive integer.\")\n        }\n    } else {\n        times = 1\n        node = timesOrNode\n        sourceCode = nodeOrSourceCode\n    }\n\n    if (\n        node == null ||\n        // `CatchClause.param` can't be parenthesized, example `try {} catch (error) {}`\n        (node.parent.type === \"CatchClause\" && node.parent.param === node)\n    ) {\n        return false\n    }\n\n    maybeLeftParen = maybeRightParen = node\n    do {\n        maybeLeftParen = sourceCode.getTokenBefore(maybeLeftParen)\n        maybeRightParen = sourceCode.getTokenAfter(maybeRightParen)\n    } while (\n        maybeLeftParen != null &&\n        maybeRightParen != null &&\n        isOpeningParenToken(maybeLeftParen) &&\n        isClosingParenToken(maybeRightParen) &&\n        // Avoid false positive such as `if (a) {}`\n        maybeLeftParen !== getParentSyntaxParen(node, sourceCode) &&\n        --times > 0\n    )\n\n    return times === 0\n}\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\nconst placeholder = /\\$(?:[$&`']|[1-9][0-9]?)/gu\n\n/** @type {WeakMap<PatternMatcher, {pattern:RegExp,escaped:boolean}>} */\nconst internal = new WeakMap()\n\n/**\n * Check whether a given character is escaped or not.\n * @param {string} str The string to check.\n * @param {number} index The location of the character to check.\n * @returns {boolean} `true` if the character is escaped.\n */\nfunction isEscaped(str, index) {\n    let escaped = false\n    for (let i = index - 1; i >= 0 && str.charCodeAt(i) === 0x5c; --i) {\n        escaped = !escaped\n    }\n    return escaped\n}\n\n/**\n * Replace a given string by a given matcher.\n * @param {PatternMatcher} matcher The pattern matcher.\n * @param {string} str The string to be replaced.\n * @param {string} replacement The new substring to replace each matched part.\n * @returns {string} The replaced string.\n */\nfunction replaceS(matcher, str, replacement) {\n    const chunks = []\n    let index = 0\n\n    /** @type {RegExpExecArray} */\n    let match = null\n\n    /**\n     * @param {string} key The placeholder.\n     * @returns {string} The replaced string.\n     */\n    function replacer(key) {\n        switch (key) {\n            case \"$$\":\n                return \"$\"\n            case \"$&\":\n                return match[0]\n            case \"$`\":\n                return str.slice(0, match.index)\n            case \"$'\":\n                return str.slice(match.index + match[0].length)\n            default: {\n                const i = key.slice(1)\n                if (i in match) {\n                    return match[i]\n                }\n                return key\n            }\n        }\n    }\n\n    for (match of matcher.execAll(str)) {\n        chunks.push(str.slice(index, match.index))\n        chunks.push(replacement.replace(placeholder, replacer))\n        index = match.index + match[0].length\n    }\n    chunks.push(str.slice(index))\n\n    return chunks.join(\"\")\n}\n\n/**\n * Replace a given string by a given matcher.\n * @param {PatternMatcher} matcher The pattern matcher.\n * @param {string} str The string to be replaced.\n * @param {(...strs[])=>string} replace The function to replace each matched part.\n * @returns {string} The replaced string.\n */\nfunction replaceF(matcher, str, replace) {\n    const chunks = []\n    let index = 0\n\n    for (const match of matcher.execAll(str)) {\n        chunks.push(str.slice(index, match.index))\n        chunks.push(String(replace(...match, match.index, match.input)))\n        index = match.index + match[0].length\n    }\n    chunks.push(str.slice(index))\n\n    return chunks.join(\"\")\n}\n\n/**\n * The class to find patterns as considering escape sequences.\n */\nexport class PatternMatcher {\n    /**\n     * Initialize this matcher.\n     * @param {RegExp} pattern The pattern to match.\n     * @param {{escaped:boolean}} options The options.\n     */\n    constructor(pattern, { escaped = false } = {}) {\n        if (!(pattern instanceof RegExp)) {\n            throw new TypeError(\"'pattern' should be a RegExp instance.\")\n        }\n        if (!pattern.flags.includes(\"g\")) {\n            throw new Error(\"'pattern' should contains 'g' flag.\")\n        }\n\n        internal.set(this, {\n            pattern: new RegExp(pattern.source, pattern.flags),\n            escaped: Boolean(escaped),\n        })\n    }\n\n    /**\n     * Find the pattern in a given string.\n     * @param {string} str The string to find.\n     * @returns {IterableIterator<RegExpExecArray>} The iterator which iterate the matched information.\n     */\n    *execAll(str) {\n        const { pattern, escaped } = internal.get(this)\n        let match = null\n        let lastIndex = 0\n\n        pattern.lastIndex = 0\n        while ((match = pattern.exec(str)) != null) {\n            if (escaped || !isEscaped(str, match.index)) {\n                lastIndex = pattern.lastIndex\n                yield match\n                pattern.lastIndex = lastIndex\n            }\n        }\n    }\n\n    /**\n     * Check whether the pattern is found in a given string.\n     * @param {string} str The string to check.\n     * @returns {boolean} `true` if the pattern was found in the string.\n     */\n    test(str) {\n        const it = this.execAll(str)\n        const ret = it.next()\n        return !ret.done\n    }\n\n    /**\n     * Replace a given string.\n     * @param {string} str The string to be replaced.\n     * @param {(string|((...strs:string[])=>string))} replacer The string or function to replace. This is the same as the 2nd argument of `String.prototype.replace`.\n     * @returns {string} The replaced string.\n     */\n    [Symbol.replace](str, replacer) {\n        return typeof replacer === \"function\"\n            ? replaceF(this, String(str), replacer)\n            : replaceS(this, String(str), String(replacer))\n    }\n}\n","import { findVariable } from \"./find-variable\"\nimport { getPropertyName } from \"./get-property-name\"\nimport { getStringIfConstant } from \"./get-string-if-constant\"\n\nconst IMPORT_TYPE = /^(?:Import|Export(?:All|Default|Named))Declaration$/u\nconst has = Function.call.bind(Object.hasOwnProperty)\n\nexport const READ = Symbol(\"read\")\nexport const CALL = Symbol(\"call\")\nexport const CONSTRUCT = Symbol(\"construct\")\nexport const ESM = Symbol(\"esm\")\n\nconst requireCall = { require: { [CALL]: true } }\n\n/**\n * Check whether a given variable is modified or not.\n * @param {Variable} variable The variable to check.\n * @returns {boolean} `true` if the variable is modified.\n */\nfunction isModifiedGlobal(variable) {\n    return (\n        variable == null ||\n        variable.defs.length !== 0 ||\n        variable.references.some((r) => r.isWrite())\n    )\n}\n\n/**\n * Check if the value of a given node is passed through to the parent syntax as-is.\n * For example, `a` and `b` in (`a || b` and `c ? a : b`) are passed through.\n * @param {Node} node A node to check.\n * @returns {boolean} `true` if the node is passed through.\n */\nfunction isPassThrough(node) {\n    const parent = node.parent\n\n    switch (parent && parent.type) {\n        case \"ConditionalExpression\":\n            return parent.consequent === node || parent.alternate === node\n        case \"LogicalExpression\":\n            return true\n        case \"SequenceExpression\":\n            return parent.expressions[parent.expressions.length - 1] === node\n        case \"ChainExpression\":\n            return true\n\n        default:\n            return false\n    }\n}\n\n/**\n * The reference tracker.\n */\nexport class ReferenceTracker {\n    /**\n     * Initialize this tracker.\n     * @param {Scope} globalScope The global scope.\n     * @param {object} [options] The options.\n     * @param {\"legacy\"|\"strict\"} [options.mode=\"strict\"] The mode to determine the ImportDeclaration's behavior for CJS modules.\n     * @param {string[]} [options.globalObjectNames=[\"global\",\"globalThis\",\"self\",\"window\"]] The variable names for Global Object.\n     */\n    constructor(\n        globalScope,\n        {\n            mode = \"strict\",\n            globalObjectNames = [\"global\", \"globalThis\", \"self\", \"window\"],\n        } = {},\n    ) {\n        this.variableStack = []\n        this.globalScope = globalScope\n        this.mode = mode\n        this.globalObjectNames = globalObjectNames.slice(0)\n    }\n\n    /**\n     * Iterate the references of global variables.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *iterateGlobalReferences(traceMap) {\n        for (const key of Object.keys(traceMap)) {\n            const nextTraceMap = traceMap[key]\n            const path = [key]\n            const variable = this.globalScope.set.get(key)\n\n            if (isModifiedGlobal(variable)) {\n                continue\n            }\n\n            yield* this._iterateVariableReferences(\n                variable,\n                path,\n                nextTraceMap,\n                true,\n            )\n        }\n\n        for (const key of this.globalObjectNames) {\n            const path = []\n            const variable = this.globalScope.set.get(key)\n\n            if (isModifiedGlobal(variable)) {\n                continue\n            }\n\n            yield* this._iterateVariableReferences(\n                variable,\n                path,\n                traceMap,\n                false,\n            )\n        }\n    }\n\n    /**\n     * Iterate the references of CommonJS modules.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *iterateCjsReferences(traceMap) {\n        for (const { node } of this.iterateGlobalReferences(requireCall)) {\n            const key = getStringIfConstant(node.arguments[0])\n            if (key == null || !has(traceMap, key)) {\n                continue\n            }\n\n            const nextTraceMap = traceMap[key]\n            const path = [key]\n\n            if (nextTraceMap[READ]) {\n                yield {\n                    node,\n                    path,\n                    type: READ,\n                    info: nextTraceMap[READ],\n                }\n            }\n            yield* this._iteratePropertyReferences(node, path, nextTraceMap)\n        }\n    }\n\n    /**\n     * Iterate the references of ES modules.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *iterateEsmReferences(traceMap) {\n        const programNode = this.globalScope.block\n\n        for (const node of programNode.body) {\n            if (!IMPORT_TYPE.test(node.type) || node.source == null) {\n                continue\n            }\n            const moduleId = node.source.value\n\n            if (!has(traceMap, moduleId)) {\n                continue\n            }\n            const nextTraceMap = traceMap[moduleId]\n            const path = [moduleId]\n\n            if (nextTraceMap[READ]) {\n                yield { node, path, type: READ, info: nextTraceMap[READ] }\n            }\n\n            if (node.type === \"ExportAllDeclaration\") {\n                for (const key of Object.keys(nextTraceMap)) {\n                    const exportTraceMap = nextTraceMap[key]\n                    if (exportTraceMap[READ]) {\n                        yield {\n                            node,\n                            path: path.concat(key),\n                            type: READ,\n                            info: exportTraceMap[READ],\n                        }\n                    }\n                }\n            } else {\n                for (const specifier of node.specifiers) {\n                    const esm = has(nextTraceMap, ESM)\n                    const it = this._iterateImportReferences(\n                        specifier,\n                        path,\n                        esm\n                            ? nextTraceMap\n                            : this.mode === \"legacy\"\n                            ? { default: nextTraceMap, ...nextTraceMap }\n                            : { default: nextTraceMap },\n                    )\n\n                    if (esm) {\n                        yield* it\n                    } else {\n                        for (const report of it) {\n                            report.path = report.path.filter(exceptDefault)\n                            if (\n                                report.path.length >= 2 ||\n                                report.type !== READ\n                            ) {\n                                yield report\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Iterate the references for a given variable.\n     * @param {Variable} variable The variable to iterate that references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @param {boolean} shouldReport = The flag to report those references.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *_iterateVariableReferences(variable, path, traceMap, shouldReport) {\n        if (this.variableStack.includes(variable)) {\n            return\n        }\n        this.variableStack.push(variable)\n        try {\n            for (const reference of variable.references) {\n                if (!reference.isRead()) {\n                    continue\n                }\n                const node = reference.identifier\n\n                if (shouldReport && traceMap[READ]) {\n                    yield { node, path, type: READ, info: traceMap[READ] }\n                }\n                yield* this._iteratePropertyReferences(node, path, traceMap)\n            }\n        } finally {\n            this.variableStack.pop()\n        }\n    }\n\n    /**\n     * Iterate the references for a given AST node.\n     * @param rootNode The AST node to iterate references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    //eslint-disable-next-line complexity\n    *_iteratePropertyReferences(rootNode, path, traceMap) {\n        let node = rootNode\n        while (isPassThrough(node)) {\n            node = node.parent\n        }\n\n        const parent = node.parent\n        if (parent.type === \"MemberExpression\") {\n            if (parent.object === node) {\n                const key = getPropertyName(parent)\n                if (key == null || !has(traceMap, key)) {\n                    return\n                }\n\n                path = path.concat(key) //eslint-disable-line no-param-reassign\n                const nextTraceMap = traceMap[key]\n                if (nextTraceMap[READ]) {\n                    yield {\n                        node: parent,\n                        path,\n                        type: READ,\n                        info: nextTraceMap[READ],\n                    }\n                }\n                yield* this._iteratePropertyReferences(\n                    parent,\n                    path,\n                    nextTraceMap,\n                )\n            }\n            return\n        }\n        if (parent.type === \"CallExpression\") {\n            if (parent.callee === node && traceMap[CALL]) {\n                yield { node: parent, path, type: CALL, info: traceMap[CALL] }\n            }\n            return\n        }\n        if (parent.type === \"NewExpression\") {\n            if (parent.callee === node && traceMap[CONSTRUCT]) {\n                yield {\n                    node: parent,\n                    path,\n                    type: CONSTRUCT,\n                    info: traceMap[CONSTRUCT],\n                }\n            }\n            return\n        }\n        if (parent.type === \"AssignmentExpression\") {\n            if (parent.right === node) {\n                yield* this._iterateLhsReferences(parent.left, path, traceMap)\n                yield* this._iteratePropertyReferences(parent, path, traceMap)\n            }\n            return\n        }\n        if (parent.type === \"AssignmentPattern\") {\n            if (parent.right === node) {\n                yield* this._iterateLhsReferences(parent.left, path, traceMap)\n            }\n            return\n        }\n        if (parent.type === \"VariableDeclarator\") {\n            if (parent.init === node) {\n                yield* this._iterateLhsReferences(parent.id, path, traceMap)\n            }\n        }\n    }\n\n    /**\n     * Iterate the references for a given Pattern node.\n     * @param {Node} patternNode The Pattern node to iterate references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *_iterateLhsReferences(patternNode, path, traceMap) {\n        if (patternNode.type === \"Identifier\") {\n            const variable = findVariable(this.globalScope, patternNode)\n            if (variable != null) {\n                yield* this._iterateVariableReferences(\n                    variable,\n                    path,\n                    traceMap,\n                    false,\n                )\n            }\n            return\n        }\n        if (patternNode.type === \"ObjectPattern\") {\n            for (const property of patternNode.properties) {\n                const key = getPropertyName(property)\n\n                if (key == null || !has(traceMap, key)) {\n                    continue\n                }\n\n                const nextPath = path.concat(key)\n                const nextTraceMap = traceMap[key]\n                if (nextTraceMap[READ]) {\n                    yield {\n                        node: property,\n                        path: nextPath,\n                        type: READ,\n                        info: nextTraceMap[READ],\n                    }\n                }\n                yield* this._iterateLhsReferences(\n                    property.value,\n                    nextPath,\n                    nextTraceMap,\n                )\n            }\n            return\n        }\n        if (patternNode.type === \"AssignmentPattern\") {\n            yield* this._iterateLhsReferences(patternNode.left, path, traceMap)\n        }\n    }\n\n    /**\n     * Iterate the references for a given ModuleSpecifier node.\n     * @param {Node} specifierNode The ModuleSpecifier node to iterate references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *_iterateImportReferences(specifierNode, path, traceMap) {\n        const type = specifierNode.type\n\n        if (type === \"ImportSpecifier\" || type === \"ImportDefaultSpecifier\") {\n            const key =\n                type === \"ImportDefaultSpecifier\"\n                    ? \"default\"\n                    : specifierNode.imported.name\n            if (!has(traceMap, key)) {\n                return\n            }\n\n            path = path.concat(key) //eslint-disable-line no-param-reassign\n            const nextTraceMap = traceMap[key]\n            if (nextTraceMap[READ]) {\n                yield {\n                    node: specifierNode,\n                    path,\n                    type: READ,\n                    info: nextTraceMap[READ],\n                }\n            }\n            yield* this._iterateVariableReferences(\n                findVariable(this.globalScope, specifierNode.local),\n                path,\n                nextTraceMap,\n                false,\n            )\n\n            return\n        }\n\n        if (type === \"ImportNamespaceSpecifier\") {\n            yield* this._iterateVariableReferences(\n                findVariable(this.globalScope, specifierNode.local),\n                path,\n                traceMap,\n                false,\n            )\n            return\n        }\n\n        if (type === \"ExportSpecifier\") {\n            const key = specifierNode.local.name\n            if (!has(traceMap, key)) {\n                return\n            }\n\n            path = path.concat(key) //eslint-disable-line no-param-reassign\n            const nextTraceMap = traceMap[key]\n            if (nextTraceMap[READ]) {\n                yield {\n                    node: specifierNode,\n                    path,\n                    type: READ,\n                    info: nextTraceMap[READ],\n                }\n            }\n        }\n    }\n}\n\nReferenceTracker.READ = READ\nReferenceTracker.CALL = CALL\nReferenceTracker.CONSTRUCT = CONSTRUCT\nReferenceTracker.ESM = ESM\n\n/**\n * This is a predicate function for Array#filter.\n * @param {string} name A name part.\n * @param {number} index The index of the name.\n * @returns {boolean} `false` if it's default.\n */\nfunction exceptDefault(name, index) {\n    return !(index === 1 && name === \"default\")\n}\n","import { findVariable } from \"./find-variable\"\nimport { getFunctionHeadLocation } from \"./get-function-head-location\"\nimport { getFunctionNameWithKind } from \"./get-function-name-with-kind\"\nimport { getInnermostScope } from \"./get-innermost-scope\"\nimport { getPropertyName } from \"./get-property-name\"\nimport { getStaticValue } from \"./get-static-value\"\nimport { getStringIfConstant } from \"./get-string-if-constant\"\nimport { hasSideEffect } from \"./has-side-effect\"\nimport { isParenthesized } from \"./is-parenthesized\"\nimport { PatternMatcher } from \"./pattern-matcher\"\nimport {\n    CALL,\n    CONSTRUCT,\n    ESM,\n    READ,\n    ReferenceTracker,\n} from \"./reference-tracker\"\nimport {\n    isArrowToken,\n    isClosingBraceToken,\n    isClosingBracketToken,\n    isClosingParenToken,\n    isColonToken,\n    isCommaToken,\n    isCommentToken,\n    isNotArrowToken,\n    isNotClosingBraceToken,\n    isNotClosingBracketToken,\n    isNotClosingParenToken,\n    isNotColonToken,\n    isNotCommaToken,\n    isNotCommentToken,\n    isNotOpeningBraceToken,\n    isNotOpeningBracketToken,\n    isNotOpeningParenToken,\n    isNotSemicolonToken,\n    isOpeningBraceToken,\n    isOpeningBracketToken,\n    isOpeningParenToken,\n    isSemicolonToken,\n} from \"./token-predicate\"\n\nexport default {\n    CALL,\n    CONSTRUCT,\n    ESM,\n    findVariable,\n    getFunctionHeadLocation,\n    getFunctionNameWithKind,\n    getInnermostScope,\n    getPropertyName,\n    getStaticValue,\n    getStringIfConstant,\n    hasSideEffect,\n    isArrowToken,\n    isClosingBraceToken,\n    isClosingBracketToken,\n    isClosingParenToken,\n    isColonToken,\n    isCommaToken,\n    isCommentToken,\n    isNotArrowToken,\n    isNotClosingBraceToken,\n    isNotClosingBracketToken,\n    isNotClosingParenToken,\n    isNotColonToken,\n    isNotCommaToken,\n    isNotCommentToken,\n    isNotOpeningBraceToken,\n    isNotOpeningBracketToken,\n    isNotOpeningParenToken,\n    isNotSemicolonToken,\n    isOpeningBraceToken,\n    isOpeningBracketToken,\n    isOpeningParenToken,\n    isParenthesized,\n    isSemicolonToken,\n    PatternMatcher,\n    READ,\n    ReferenceTracker,\n}\nexport {\n    CALL,\n    CONSTRUCT,\n    ESM,\n    findVariable,\n    getFunctionHeadLocation,\n    getFunctionNameWithKind,\n    getInnermostScope,\n    getPropertyName,\n    getStaticValue,\n    getStringIfConstant,\n    hasSideEffect,\n    isArrowToken,\n    isClosingBraceToken,\n    isClosingBracketToken,\n    isClosingParenToken,\n    isColonToken,\n    isCommaToken,\n    isCommentToken,\n    isNotArrowToken,\n    isNotClosingBraceToken,\n    isNotClosingBracketToken,\n    isNotClosingParenToken,\n    isNotColonToken,\n    isNotCommaToken,\n    isNotCommentToken,\n    isNotOpeningBraceToken,\n    isNotOpeningBracketToken,\n    isNotOpeningParenToken,\n    isNotSemicolonToken,\n    isOpeningBraceToken,\n    isOpeningBracketToken,\n    isOpeningParenToken,\n    isParenthesized,\n    isSemicolonToken,\n    PatternMatcher,\n    READ,\n    ReferenceTracker,\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/esquery/dist/esquery.min.js":{"lineLengths":[34995,39,0],"data":{"version":3,"file":"esquery.min.js","sources":["file:///home/runner/work/deluge/deluge/node_modules/esquery/node_modules/estraverse/estraverse.js","file:///home/runner/work/deluge/deluge/node_modules/esquery/parser.js","file:///home/runner/work/deluge/deluge/node_modules/esquery/esquery.js"],"sourcesContent":["/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  }\n})(this, function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(ss) {\n            return ss.length === 1 ? ss[0] : { type: 'matches', selectors: ss };\n          },\n        peg$c1 = function() { return void 0; },\n        peg$c2 = \" \",\n        peg$c3 = peg$literalExpectation(\" \", false),\n        peg$c4 = /^[^ [\\],():#!=><~+.]/,\n        peg$c5 = peg$classExpectation([\" \", \"[\", \"]\", \",\", \"(\", \")\", \":\", \"#\", \"!\", \"=\", \">\", \"<\", \"~\", \"+\", \".\"], true, false),\n        peg$c6 = function(i) { return i.join(''); },\n        peg$c7 = \">\",\n        peg$c8 = peg$literalExpectation(\">\", false),\n        peg$c9 = function() { return 'child'; },\n        peg$c10 = \"~\",\n        peg$c11 = peg$literalExpectation(\"~\", false),\n        peg$c12 = function() { return 'sibling'; },\n        peg$c13 = \"+\",\n        peg$c14 = peg$literalExpectation(\"+\", false),\n        peg$c15 = function() { return 'adjacent'; },\n        peg$c16 = function() { return 'descendant'; },\n        peg$c17 = \",\",\n        peg$c18 = peg$literalExpectation(\",\", false),\n        peg$c19 = function(s, ss) {\n          return [s].concat(ss.map(function (s) { return s[3]; }));\n        },\n        peg$c20 = function(a, ops) {\n            return ops.reduce(function (memo, rhs) {\n              return { type: rhs[0], left: memo, right: rhs[1] };\n            }, a);\n          },\n        peg$c21 = \"!\",\n        peg$c22 = peg$literalExpectation(\"!\", false),\n        peg$c23 = function(subject, as) {\n            const b = as.length === 1 ? as[0] : { type: 'compound', selectors: as };\n            if(subject) b.subject = true;\n            return b;\n          },\n        peg$c24 = \"*\",\n        peg$c25 = peg$literalExpectation(\"*\", false),\n        peg$c26 = function(a) { return { type: 'wildcard', value: a }; },\n        peg$c27 = \"#\",\n        peg$c28 = peg$literalExpectation(\"#\", false),\n        peg$c29 = function(i) { return { type: 'identifier', value: i }; },\n        peg$c30 = \"[\",\n        peg$c31 = peg$literalExpectation(\"[\", false),\n        peg$c32 = \"]\",\n        peg$c33 = peg$literalExpectation(\"]\", false),\n        peg$c34 = function(v) { return v; },\n        peg$c35 = /^[><!]/,\n        peg$c36 = peg$classExpectation([\">\", \"<\", \"!\"], false, false),\n        peg$c37 = \"=\",\n        peg$c38 = peg$literalExpectation(\"=\", false),\n        peg$c39 = function(a) { return (a || '') + '='; },\n        peg$c40 = /^[><]/,\n        peg$c41 = peg$classExpectation([\">\", \"<\"], false, false),\n        peg$c42 = \".\",\n        peg$c43 = peg$literalExpectation(\".\", false),\n        peg$c44 = function(a, as) {\n            return [].concat.apply([a], as).join('');\n          },\n        peg$c45 = function(name, op, value) {\n              return { type: 'attribute', name: name, operator: op, value: value };\n            },\n        peg$c46 = function(name) { return { type: 'attribute', name: name }; },\n        peg$c47 = \"\\\"\",\n        peg$c48 = peg$literalExpectation(\"\\\"\", false),\n        peg$c49 = /^[^\\\\\"]/,\n        peg$c50 = peg$classExpectation([\"\\\\\", \"\\\"\"], true, false),\n        peg$c51 = \"\\\\\",\n        peg$c52 = peg$literalExpectation(\"\\\\\", false),\n        peg$c53 = peg$anyExpectation(),\n        peg$c54 = function(a, b) { return a + b; },\n        peg$c55 = function(d) {\n                return { type: 'literal', value: strUnescape(d.join('')) };\n              },\n        peg$c56 = \"'\",\n        peg$c57 = peg$literalExpectation(\"'\", false),\n        peg$c58 = /^[^\\\\']/,\n        peg$c59 = peg$classExpectation([\"\\\\\", \"'\"], true, false),\n        peg$c60 = /^[0-9]/,\n        peg$c61 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c62 = function(a, b) {\n                // Can use `a.flat().join('')` once supported\n                const leadingDecimals = a ? [].concat.apply([], a).join('') : '';\n                return { type: 'literal', value: parseFloat(leadingDecimals + b.join('')) };\n              },\n        peg$c63 = function(i) { return { type: 'literal', value: i }; },\n        peg$c64 = \"type(\",\n        peg$c65 = peg$literalExpectation(\"type(\", false),\n        peg$c66 = /^[^ )]/,\n        peg$c67 = peg$classExpectation([\" \", \")\"], true, false),\n        peg$c68 = \")\",\n        peg$c69 = peg$literalExpectation(\")\", false),\n        peg$c70 = function(t) { return { type: 'type', value: t.join('') }; },\n        peg$c71 = /^[imsu]/,\n        peg$c72 = peg$classExpectation([\"i\", \"m\", \"s\", \"u\"], false, false),\n        peg$c73 = \"/\",\n        peg$c74 = peg$literalExpectation(\"/\", false),\n        peg$c75 = /^[^\\/]/,\n        peg$c76 = peg$classExpectation([\"/\"], true, false),\n        peg$c77 = function(d, flgs) { return {\n              type: 'regexp', value: new RegExp(d.join(''), flgs ? flgs.join('') : '') };\n            },\n        peg$c78 = function(i, is) {\n          return { type: 'field', name: is.reduce(function(memo, p){ return memo + p[0] + p[1]; }, i)};\n        },\n        peg$c79 = \":not(\",\n        peg$c80 = peg$literalExpectation(\":not(\", false),\n        peg$c81 = function(ss) { return { type: 'not', selectors: ss }; },\n        peg$c82 = \":matches(\",\n        peg$c83 = peg$literalExpectation(\":matches(\", false),\n        peg$c84 = function(ss) { return { type: 'matches', selectors: ss }; },\n        peg$c85 = \":has(\",\n        peg$c86 = peg$literalExpectation(\":has(\", false),\n        peg$c87 = function(ss) { return { type: 'has', selectors: ss }; },\n        peg$c88 = \":first-child\",\n        peg$c89 = peg$literalExpectation(\":first-child\", false),\n        peg$c90 = function() { return nth(1); },\n        peg$c91 = \":last-child\",\n        peg$c92 = peg$literalExpectation(\":last-child\", false),\n        peg$c93 = function() { return nthLast(1); },\n        peg$c94 = \":nth-child(\",\n        peg$c95 = peg$literalExpectation(\":nth-child(\", false),\n        peg$c96 = function(n) { return nth(parseInt(n.join(''), 10)); },\n        peg$c97 = \":nth-last-child(\",\n        peg$c98 = peg$literalExpectation(\":nth-last-child(\", false),\n        peg$c99 = function(n) { return nthLast(parseInt(n.join(''), 10)); },\n        peg$c100 = \":\",\n        peg$c101 = peg$literalExpectation(\":\", false),\n        peg$c102 = \"statement\",\n        peg$c103 = peg$literalExpectation(\"statement\", true),\n        peg$c104 = \"expression\",\n        peg$c105 = peg$literalExpectation(\"expression\", true),\n        peg$c106 = \"declaration\",\n        peg$c107 = peg$literalExpectation(\"declaration\", true),\n        peg$c108 = \"function\",\n        peg$c109 = peg$literalExpectation(\"function\", true),\n        peg$c110 = \"pattern\",\n        peg$c111 = peg$literalExpectation(\"pattern\", true),\n        peg$c112 = function(c) {\n          return { type: 'class', name: c };\n        },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$resultsCache = {},\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 0,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselectors();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1();\n        }\n        s0 = s1;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 1,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c3); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c2;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifierName() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 2,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c4.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c4.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c6(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsebinaryOp() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 3,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s2 = peg$c7;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c9();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 126) {\n            s2 = peg$c10;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c12();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s2 = peg$c13;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s1 = peg$c2;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c16();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselectors() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 30 + 4,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseselector();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c17;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseselector();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseselector();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c19(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 5,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsesequence();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsebinaryOp();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsesequence();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsebinaryOp();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesequence();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesequence() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 6,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseatom();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseatom();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c23(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseatom() {\n      var s0;\n\n      var key    = peg$currPos * 30 + 7,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$parsewildcard();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseidentifier();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseattr();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsefield();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsenegation();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsematches();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsehas();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsefirstChild();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parselastChild();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parsenthChild();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsenthLastChild();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseclass();\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsewildcard() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 8,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s1 = peg$c24;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c26(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 9,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 10,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c30;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrValue();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c32;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c33); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 11,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (peg$c35.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrEqOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 12,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrName() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 13,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c42;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseidentifierName();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c42;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseidentifierName();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrValue() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 14,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseattrName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrEqOps();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsetype();\n              if (s5 === peg$FAILED) {\n                s5 = peg$parseregex();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c45(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseattrName();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrOps();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsestring();\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parsenumber();\n                  if (s5 === peg$FAILED) {\n                    s5 = peg$parsepath();\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c45(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseattrName();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c46(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 15,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s4 = peg$c51;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c53); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c54(s4, s5);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c47;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c56;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c57); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          if (peg$c58.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c59); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c58.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c59); }\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s3 = peg$c56;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c55(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 16,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c60.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c61); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s3 = peg$c42;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c61); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c62(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsepath() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 17,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c63(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetype() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 18,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c64) {\n        s1 = peg$c64;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c66.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c66.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c67); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c70(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseflags() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 19,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (peg$c71.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c71.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseregex() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 30 + 20,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c75.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c75.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c76); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c73;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseflags();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c77(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefield() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 30 + 21,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c42;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c42;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseidentifierName();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseidentifierName();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c78(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenegation() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 22,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c79) {\n        s1 = peg$c79;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c81(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsematches() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 23,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 9) === peg$c82) {\n        s1 = peg$c82;\n        peg$currPos += 9;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c84(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsehas() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 24,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c85) {\n        s1 = peg$c85;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefirstChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 25,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 12) === peg$c88) {\n        s1 = peg$c88;\n        peg$currPos += 12;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parselastChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 26,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c91) {\n        s1 = peg$c91;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c93();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 27,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c94) {\n        s1 = peg$c94;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c96(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthLastChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 28,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 16) === peg$c97) {\n        s1 = peg$c97;\n        peg$currPos += 16;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c99(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseclass() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 29,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c100;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c101); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 9).toLowerCase() === peg$c102) {\n          s2 = input.substr(peg$currPos, 9);\n          peg$currPos += 9;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c103); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 10).toLowerCase() === peg$c104) {\n            s2 = input.substr(peg$currPos, 10);\n            peg$currPos += 10;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c105); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 11).toLowerCase() === peg$c106) {\n              s2 = input.substr(peg$currPos, 11);\n              peg$currPos += 11;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c107); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8).toLowerCase() === peg$c108) {\n                s2 = input.substr(peg$currPos, 8);\n                peg$currPos += 8;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c109); }\n              }\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7).toLowerCase() === peg$c110) {\n                  s2 = input.substr(peg$currPos, 7);\n                  peg$currPos += 7;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c111); }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c112(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n\n      function nth(n) { return { type: 'nth-child', index: { type: 'literal', value: n } }; }\n      function nthLast(n) { return { type: 'nth-last-child', index: { type: 'literal', value: n } }; }\n      function strUnescape(s) {\n        return s.replace(/\\\\(.)/g, function(match, ch) {\n          switch(ch) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            default: return ch;\n          }\n        });\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n});\n","/* vim: set sw=4 sts=4 : */\nimport estraverse from 'estraverse';\nimport parser from './parser.js';\n\n/**\n* @typedef {\"LEFT_SIDE\"|\"RIGHT_SIDE\"} Side\n*/\n\nconst LEFT_SIDE = 'LEFT_SIDE';\nconst RIGHT_SIDE = 'RIGHT_SIDE';\n\n/**\n * @external AST\n * @see https://esprima.readthedocs.io/en/latest/syntax-tree-format.html\n */\n\n/**\n * One of the rules of `grammar.pegjs`\n * @typedef {PlainObject} SelectorAST\n * @see grammar.pegjs\n*/\n\n/**\n * The `sequence` production of `grammar.pegjs`\n * @typedef {PlainObject} SelectorSequenceAST\n*/\n\n/**\n * Get the value of a property which may be multiple levels down\n * in the object.\n * @param {?PlainObject} obj\n * @param {string} key\n * @returns {undefined|boolean|string|number|external:AST}\n */\nfunction getPath(obj, key) {\n    const keys = key.split('.');\n    for (const key of keys) {\n        if (obj == null) { return obj; }\n        obj = obj[key];\n    }\n    return obj;\n}\n\n/**\n * Determine whether `node` can be reached by following `path`,\n * starting at `ancestor`.\n * @param {?external:AST} node\n * @param {?external:AST} ancestor\n * @param {string[]} path\n * @returns {boolean}\n */\nfunction inPath(node, ancestor, path) {\n    if (path.length === 0) { return node === ancestor; }\n    if (ancestor == null) { return false; }\n    const field = ancestor[path[0]];\n    const remainingPath = path.slice(1);\n    if (Array.isArray(field)) {\n        for (const component of field) {\n            if (inPath(node, component, remainingPath)) { return true; }\n        }\n        return false;\n    } else {\n        return inPath(node, field, remainingPath);\n    }\n}\n\n/**\n * @callback TraverseOptionFallback\n * @param {external:AST} node The given node.\n * @returns {string[]} An array of visitor keys for the given node.\n */\n/**\n * @typedef {object} ESQueryOptions\n * @property { { [nodeType: string]: string[] } } [visitorKeys] By passing `visitorKeys` mapping, we can extend the properties of the nodes that traverse the node.\n * @property {TraverseOptionFallback} [fallback] By passing `fallback` option, we can control the properties of traversing nodes when encountering unknown nodes.\n */\n\n/**\n * Given a `node` and its ancestors, determine if `node` is matched\n * by `selector`.\n * @param {?external:AST} node\n * @param {?SelectorAST} selector\n * @param {external:AST[]} [ancestry=[]]\n * @param {ESQueryOptions} [options]\n * @throws {Error} Unknowns (operator, class name, selector type, or\n * selector value type)\n * @returns {boolean}\n */\nfunction matches(node, selector, ancestry, options) {\n    if (!selector) { return true; }\n    if (!node) { return false; }\n    if (!ancestry) { ancestry = []; }\n\n    switch(selector.type) {\n        case 'wildcard':\n            return true;\n\n        case 'identifier':\n            return selector.value.toLowerCase() === node.type.toLowerCase();\n\n        case 'field': {\n            const path = selector.name.split('.');\n            const ancestor = ancestry[path.length - 1];\n            return inPath(node, ancestor, path);\n\n        }\n        case 'matches':\n            for (const sel of selector.selectors) {\n                if (matches(node, sel, ancestry, options)) { return true; }\n            }\n            return false;\n\n        case 'compound':\n            for (const sel of selector.selectors) {\n                if (!matches(node, sel, ancestry, options)) { return false; }\n            }\n            return true;\n\n        case 'not':\n            for (const sel of selector.selectors) {\n                if (matches(node, sel, ancestry, options)) { return false; }\n            }\n            return true;\n\n        case 'has': {\n            const collector = [];\n            for (const sel of selector.selectors) {\n                const a = [];\n                estraverse.traverse(node, {\n                    enter (node, parent) {\n                        if (parent != null) { a.unshift(parent); }\n                        if (matches(node, sel, a, options)) {\n                            collector.push(node);\n                        }\n                    },\n                    leave () { a.shift(); },\n                    keys: options && options.visitorKeys,\n                    fallback: options && options.fallback || 'iteration'\n                });\n            }\n            return collector.length !== 0;\n\n        }\n        case 'child':\n            if (matches(node, selector.right, ancestry, options)) {\n                return matches(ancestry[0], selector.left, ancestry.slice(1), options);\n            }\n            return false;\n\n        case 'descendant':\n            if (matches(node, selector.right, ancestry, options)) {\n                for (let i = 0, l = ancestry.length; i < l; ++i) {\n                    if (matches(ancestry[i], selector.left, ancestry.slice(i + 1), options)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n\n        case 'attribute': {\n            const p = getPath(node, selector.name);\n            switch (selector.operator) {\n                case void 0:\n                    return p != null;\n                case '=':\n                    switch (selector.value.type) {\n                        case 'regexp': return typeof p === 'string' && selector.value.value.test(p);\n                        case 'literal': return `${selector.value.value}` === `${p}`;\n                        case 'type': return selector.value.value === typeof p;\n                    }\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\n                case '!=':\n                    switch (selector.value.type) {\n                        case 'regexp': return !selector.value.value.test(p);\n                        case 'literal': return `${selector.value.value}` !== `${p}`;\n                        case 'type': return selector.value.value !== typeof p;\n                    }\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\n                case '<=': return p <= selector.value.value;\n                case '<': return p < selector.value.value;\n                case '>': return p > selector.value.value;\n                case '>=': return p >= selector.value.value;\n            }\n            throw new Error(`Unknown operator: ${selector.operator}`);\n        }\n        case 'sibling':\n            return matches(node, selector.right, ancestry, options) &&\n                sibling(node, selector.left, ancestry, LEFT_SIDE, options) ||\n                selector.left.subject &&\n                matches(node, selector.left, ancestry, options) &&\n                sibling(node, selector.right, ancestry, RIGHT_SIDE, options);\n        case 'adjacent':\n            return matches(node, selector.right, ancestry, options) &&\n                adjacent(node, selector.left, ancestry, LEFT_SIDE, options) ||\n                selector.right.subject &&\n                matches(node, selector.left, ancestry, options) &&\n                adjacent(node, selector.right, ancestry, RIGHT_SIDE, options);\n\n        case 'nth-child':\n            return matches(node, selector.right, ancestry, options) &&\n                nthChild(node, ancestry, function () {\n                    return selector.index.value - 1;\n                }, options);\n\n        case 'nth-last-child':\n            return matches(node, selector.right, ancestry, options) &&\n                nthChild(node, ancestry, function (length) {\n                    return length - selector.index.value;\n                }, options);\n\n        case 'class':\n            switch(selector.name.toLowerCase()){\n                case 'statement':\n                    if(node.type.slice(-9) === 'Statement') return true;\n                    // fallthrough: interface Declaration <: Statement { }\n                case 'declaration':\n                    return node.type.slice(-11) === 'Declaration';\n                case 'pattern':\n                    if(node.type.slice(-7) === 'Pattern') return true;\n                    // fallthrough: interface Expression <: Node, Pattern { }\n                case 'expression':\n                    return node.type.slice(-10) === 'Expression' ||\n                        node.type.slice(-7) === 'Literal' ||\n                        (\n                            node.type === 'Identifier' &&\n                            (ancestry.length === 0 || ancestry[0].type !== 'MetaProperty')\n                        ) ||\n                        node.type === 'MetaProperty';\n                case 'function':\n                    return node.type === 'FunctionDeclaration' ||\n                        node.type === 'FunctionExpression' ||\n                        node.type === 'ArrowFunctionExpression';\n            }\n            throw new Error(`Unknown class name: ${selector.name}`);\n    }\n\n    throw new Error(`Unknown selector type: ${selector.type}`);\n}\n\n/**\n * Get visitor keys of a given node.\n * @param {external:AST} node The AST node to get keys.\n * @param {ESQueryOptions|undefined} options\n * @returns {string[]} Visitor keys of the node.\n */\nfunction getVisitorKeys(node, options) {\n    const nodeType = node.type;\n    if (options && options.visitorKeys && options.visitorKeys[nodeType]) {\n        return options.visitorKeys[nodeType];\n    }\n    if (estraverse.VisitorKeys[nodeType]) {\n        return estraverse.VisitorKeys[nodeType];\n    }\n    if (options && typeof options.fallback === 'function') {\n        return options.fallback(node);\n    }\n    // 'iteration' fallback\n    return Object.keys(node).filter(function (key) {\n        return key !== 'type';\n    });\n}\n\n\n/**\n * Check whether the given value is an ASTNode or not.\n * @param {any} node The value to check.\n * @returns {boolean} `true` if the value is an ASTNode.\n */\nfunction isNode(node) {\n    return node !== null && typeof node === 'object' && typeof node.type === 'string';\n}\n\n/**\n * Determines if the given node has a sibling that matches the\n * given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction sibling(node, selector, ancestry, side, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const startIndex = listProp.indexOf(node);\n            if (startIndex < 0) { continue; }\n            let lowerBound, upperBound;\n            if (side === LEFT_SIDE) {\n                lowerBound = 0;\n                upperBound = startIndex;\n            } else {\n                lowerBound = startIndex + 1;\n                upperBound = listProp.length;\n            }\n            for (let k = lowerBound; k < upperBound; ++k) {\n                if (isNode(listProp[k]) && matches(listProp[k], selector, ancestry, options)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * Determines if the given node has an adjacent sibling that matches\n * the given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction adjacent(node, selector, ancestry, side, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const idx = listProp.indexOf(node);\n            if (idx < 0) { continue; }\n            if (side === LEFT_SIDE && idx > 0 && isNode(listProp[idx - 1]) && matches(listProp[idx - 1], selector, ancestry, options)) {\n                return true;\n            }\n            if (side === RIGHT_SIDE && idx < listProp.length - 1 && isNode(listProp[idx + 1]) &&  matches(listProp[idx + 1], selector, ancestry, options)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n* @callback IndexFunction\n* @param {Integer} len Containing list's length\n* @returns {Integer}\n*/\n\n/**\n * Determines if the given node is the nth child, determined by\n * `idxFn`, which is given the containing list's length.\n * @param {external:AST} node\n * @param {external:AST[]} ancestry\n * @param {IndexFunction} idxFn\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction nthChild(node, ancestry, idxFn, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const idx = listProp.indexOf(node);\n            if (idx >= 0 && idx === idxFn(listProp.length)) { return true; }\n        }\n    }\n    return false;\n}\n\n/**\n * For each selector node marked as a subject, find the portion of the\n * selector that the subject must match.\n * @param {SelectorAST} selector\n * @param {SelectorAST} [ancestor] Defaults to `selector`\n * @returns {SelectorAST[]}\n */\nfunction subjects(selector, ancestor) {\n    if (selector == null || typeof selector != 'object') { return []; }\n    if (ancestor == null) { ancestor = selector; }\n    const results = selector.subject ? [ancestor] : [];\n    for (const [p, sel] of Object.entries(selector)) {\n        results.push(...subjects(sel, p === 'left' ? sel : ancestor));\n    }\n    return results;\n}\n\n/**\n* @callback TraverseVisitor\n* @param {?external:AST} node\n* @param {?external:AST} parent\n* @param {external:AST[]} ancestry\n*/\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {TraverseVisitor} visitor\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction traverse(ast, selector, visitor, options) {\n    if (!selector) { return; }\n    const ancestry = [];\n    const altSubjects = subjects(selector);\n    estraverse.traverse(ast, {\n        enter (node, parent) {\n            if (parent != null) { ancestry.unshift(parent); }\n            if (matches(node, selector, ancestry, options)) {\n                if (altSubjects.length) {\n                    for (let i = 0, l = altSubjects.length; i < l; ++i) {\n                        if (matches(node, altSubjects[i], ancestry, options)) {\n                            visitor(node, parent, ancestry);\n                        }\n                        for (let k = 0, m = ancestry.length; k < m; ++k) {\n                            const succeedingAncestry = ancestry.slice(k + 1);\n                            if (matches(ancestry[k], altSubjects[i], succeedingAncestry, options)) {\n                                visitor(ancestry[k], parent, succeedingAncestry);\n                            }\n                        }\n                    }\n                } else {\n                    visitor(node, parent, ancestry);\n                }\n            }\n        },\n        leave () { ancestry.shift(); },\n        keys: options && options.visitorKeys,\n        fallback: options && options.fallback || 'iteration'\n    });\n}\n\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction match(ast, selector, options) {\n    const results = [];\n    traverse(ast, selector, function (node) {\n        results.push(node);\n    }, options);\n    return results;\n}\n\n/**\n * Parse a selector string and return its AST.\n * @param {string} selector\n * @returns {SelectorAST}\n */\nfunction parse(selector) {\n    return parser.parse(selector);\n}\n\n/**\n * Query the code AST using the selector string.\n * @param {external:AST} ast\n * @param {string} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction query(ast, selector, options) {\n    return match(ast, parse(selector), options);\n}\n\nquery.parse = parse;\nquery.match = match;\nquery.traverse = traverse;\nquery.matches = matches;\nquery.query = query;\n\nexport default query;\n"],"names":["clone","exports","Syntax","VisitorOption","VisitorKeys","BREAK","SKIP","REMOVE","deepCopy","obj","key","val","ret","hasOwnProperty","Reference","parent","Element","node","path","wrap","ref","Controller","isNode","type","isProperty","nodeType","ObjectExpression","ObjectPattern","candidateExistsInLeaveList","leavelist","candidate","i","length","traverse","root","visitor","extendCommentRange","comment","tokens","target","array","func","diff","len","current","upperBound","token","range","extendedRange","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ChainExpression","ClassBody","ClassDeclaration","ClassExpression","ComprehensionBlock","ComprehensionExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","GeneratorExpression","Identifier","IfStatement","ImportExpression","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","ModuleSpecifier","NewExpression","Program","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchStatement","SwitchCase","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Break","Skip","Remove","prototype","replace","this","remove","Array","isArray","splice","iz","j","jz","result","addToPath","push","__current","__leavelist","parents","__execute","callback","element","previous","undefined","__state","call","notify","flag","skip","__initialize","__worklist","__fallback","fallback","Object","keys","__keys","assign","create","worklist","current2","candidates","sentinel","pop","enter","Error","leave","outer","removeElem","nextElem","attachComments","tree","providedComments","cursor","comments","leadingComments","trailingComments","cloneEnvironment","module","peg$SyntaxError","message","expected","found","location","name","captureStackTrace","child","ctor","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","descriptions","sort","slice","join","describeExpected","describeFound","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","peg$literalExpectation","peg$c4","peg$c5","peg$classExpectation","peg$c8","peg$c11","peg$c14","peg$c18","peg$c22","peg$c25","peg$c28","peg$c31","peg$c33","peg$c35","peg$c36","peg$c38","peg$c39","a","peg$c40","peg$c41","peg$c43","peg$c45","op","value","operator","peg$c48","peg$c49","peg$c50","peg$c52","peg$c53","peg$c54","b","peg$c55","d","match","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c65","peg$c66","peg$c67","peg$c69","peg$c71","peg$c72","peg$c74","peg$c75","peg$c76","peg$c80","peg$c83","peg$c86","peg$c89","peg$c92","peg$c95","peg$c98","peg$c101","peg$c103","peg$c105","peg$c107","peg$c109","peg$c111","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","s0","s1","s2","ss","cached","peg$resultsCache","nextPos","peg$parse_","peg$parseselectors","selectors","peg$c1","peg$parseidentifierName","test","charAt","peg$parsebinaryOp","s3","s4","s5","s6","s7","peg$parseselector","concat","map","peg$parsesequence","reduce","memo","rhs","left","right","subject","as","peg$parseatom","peg$parsewildcard","peg$parseidentifier","peg$parseattrName","peg$parseattrEqOps","substr","peg$parsetype","flgs","peg$parseflags","RegExp","peg$parseregex","peg$parseattrOps","peg$parsestring","leadingDecimals","apply","parseFloat","peg$parsenumber","peg$parsepath","peg$parseattrValue","peg$parseattr","peg$parsefield","peg$parsenegation","peg$parsematches","peg$parsehas","nth","peg$parsefirstChild","nthLast","peg$parselastChild","parseInt","peg$parsenthChild","peg$parsenthLastChild","toLowerCase","peg$parseclass","n","index","factory","matches","selector","ancestry","split","ancestor","inPath","field","remainingPath","sel","collector","estraverse","unshift","shift","visitorKeys","l","getPath","sibling","adjacent","nthChild","getVisitorKeys","filter","_typeof","side","listProp","startIndex","indexOf","lowerBound","k","idx","idxFn","subjects","results","_objectEntries","ast","altSubjects","m","succeedingAncestry","parser","query"],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/index.js":{"lineLengths":[104,52,36,40,44,50,38,62,46,64,64,52,66,78,0,54,42,58,64,78,80,60,0,48,38,52,36,58,78,58,60,74,36,66,68,60,56,62,48,66,74,74,74,0,11,50,0,19,52,0,32,54,0,0,33,50,0,40,44,0,45,42,0,54,38,52,44,50,6660],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/index.js"],"names":["rules","require","configs"],"mappings":"2EAAO,IAAMA,wBAAQ;AACnB,mBAAiBC,QAAQ,uBAAR,CADE;AAEnB,WAASA,QAAQ,eAAR,CAFU;AAGnB,aAAWA,QAAQ,iBAAR,CAHQ;AAInB,eAAaA,QAAQ,mBAAR,CAJM;AAKnB,kBAAgBA,QAAQ,sBAAR,CALG;AAMnB,YAAUA,QAAQ,gBAAR,CANS;AAOnB,wBAAsBA,QAAQ,4BAAR,CAPH;AAQnB,gBAAcA,QAAQ,oBAAR,CARK;AASnB,yBAAuBA,QAAQ,6BAAR,CATJ;AAUnB,yBAAuBA,QAAQ,6BAAR,CAVJ;AAWnB,mBAAiBA,QAAQ,uBAAR,CAXE;AAYnB,0BAAwBA,QAAQ,8BAAR,CAZL;AAanB,gCAA8BA,QAAQ,oCAAR,CAbX;;AAenB,oBAAkBA,QAAQ,wBAAR,CAfC;AAgBnB,cAAYA,QAAQ,kBAAR,CAhBO;AAiBnB,sBAAoBA,QAAQ,0BAAR,CAjBD;AAkBnB,yBAAuBA,QAAQ,6BAAR,CAlBJ;AAmBnB,gCAA8BA,QAAQ,oCAAR,CAnBX;AAoBnB,iCAA+BA,QAAQ,qCAAR,CApBZ;AAqBnB,uBAAqBA,QAAQ,2BAAR,CArBF;;AAuBnB,iBAAeA,QAAQ,qBAAR,CAvBI;AAwBnB,YAAUA,QAAQ,gBAAR,CAxBS;AAyBnB,mBAAiBA,QAAQ,uBAAR,CAzBE;AA0BnB,WAASA,QAAQ,eAAR,CA1BU;AA2BnB,sBAAoBA,QAAQ,0BAAR,CA3BD;AA4BnB,gCAA8BA,QAAQ,oCAAR,CA5BX;AA6BnB,sBAAoBA,QAAQ,0BAAR,CA7BD;AA8BnB,uBAAqBA,QAAQ,2BAAR,CA9BF;AA+BnB,8BAA4BA,QAAQ,kCAAR,CA/BT;AAgCnB,WAASA,QAAQ,eAAR,CAhCU;AAiCnB,0BAAwBA,QAAQ,8BAAR,CAjCL;AAkCnB,2BAAyBA,QAAQ,+BAAR,CAlCN;AAmCnB,uBAAqBA,QAAQ,2BAAR,CAnCF;AAoCnB,qBAAmBA,QAAQ,yBAAR,CApCA;AAqCnB,wBAAsBA,QAAQ,4BAAR,CArCH;AAsCnB,iBAAeA,QAAQ,qBAAR,CAtCI;AAuCnB,0BAAwBA,QAAQ,8BAAR,CAvCL;AAwCnB,8BAA4BA,QAAQ,kCAAR,CAxCT;AAyCnB,8BAA4BA,QAAQ,kCAAR,CAzCT;AA0CnB,8BAA4BA,QAAQ,kCAAR,CA1CT;;AA4CnB;AACA,kBAAgBA,QAAQ,sBAAR,CA7CG;;AA+CnB;AACA,mBAAiBA,QAAQ,uBAAR,CAhDE;;AAkDnB;AACA,mBAAiBA,QAAQ,uBAAR,CAnDE,EAAd;;;AAsDA,IAAMC,4BAAU;AACrB,iBAAeD,QAAQ,uBAAR,CADM;;AAGrB,YAAUA,QAAQ,kBAAR,CAHW;AAIrB,cAAYA,QAAQ,oBAAR,CAJS;;AAMrB;AACA,aAAWA,QAAQ,mBAAR,CAPU;;AASrB;AACA,WAASA,QAAQ,iBAAR,CAVY;AAWrB,kBAAgBA,QAAQ,wBAAR,CAXK;AAYrB,cAAYA,QAAQ,oBAAR,CAZS;AAarB,gBAAcA,QAAQ,sBAAR,CAbO,EAAhB","file":"index.js","sourcesContent":["export const rules = {\n  'no-unresolved': require('./rules/no-unresolved'),\n  'named': require('./rules/named'),\n  'default': require('./rules/default'),\n  'namespace': require('./rules/namespace'),\n  'no-namespace': require('./rules/no-namespace'),\n  'export': require('./rules/export'),\n  'no-mutable-exports': require('./rules/no-mutable-exports'),\n  'extensions': require('./rules/extensions'),\n  'no-restricted-paths': require('./rules/no-restricted-paths'),\n  'no-internal-modules': require('./rules/no-internal-modules'),\n  'group-exports': require('./rules/group-exports'),\n  'no-relative-packages': require('./rules/no-relative-packages'),\n  'no-relative-parent-imports': require('./rules/no-relative-parent-imports'),\n\n  'no-self-import': require('./rules/no-self-import'),\n  'no-cycle': require('./rules/no-cycle'),\n  'no-named-default': require('./rules/no-named-default'),\n  'no-named-as-default': require('./rules/no-named-as-default'),\n  'no-named-as-default-member': require('./rules/no-named-as-default-member'),\n  'no-anonymous-default-export': require('./rules/no-anonymous-default-export'),\n  'no-unused-modules': require('./rules/no-unused-modules'),\n\n  'no-commonjs': require('./rules/no-commonjs'),\n  'no-amd': require('./rules/no-amd'),\n  'no-duplicates': require('./rules/no-duplicates'),\n  'first': require('./rules/first'),\n  'max-dependencies': require('./rules/max-dependencies'),\n  'no-extraneous-dependencies': require('./rules/no-extraneous-dependencies'),\n  'no-absolute-path': require('./rules/no-absolute-path'),\n  'no-nodejs-modules': require('./rules/no-nodejs-modules'),\n  'no-webpack-loader-syntax': require('./rules/no-webpack-loader-syntax'),\n  'order': require('./rules/order'),\n  'newline-after-import': require('./rules/newline-after-import'),\n  'prefer-default-export': require('./rules/prefer-default-export'),\n  'no-default-export': require('./rules/no-default-export'),\n  'no-named-export': require('./rules/no-named-export'),\n  'no-dynamic-require': require('./rules/no-dynamic-require'),\n  'unambiguous': require('./rules/unambiguous'),\n  'no-unassigned-import': require('./rules/no-unassigned-import'),\n  'no-useless-path-segments': require('./rules/no-useless-path-segments'),\n  'dynamic-import-chunkname': require('./rules/dynamic-import-chunkname'),\n  'no-import-module-exports': require('./rules/no-import-module-exports'),\n\n  // export\n  'exports-last': require('./rules/exports-last'),\n\n  // metadata-based\n  'no-deprecated': require('./rules/no-deprecated'),\n\n  // deprecated aliases to rules\n  'imports-first': require('./rules/imports-first'),\n};\n\nexport const configs = {\n  'recommended': require('../config/recommended'),\n\n  'errors': require('../config/errors'),\n  'warnings': require('../config/warnings'),\n\n  // shhhh... work in progress \"secret\" rules\n  'stage-0': require('../config/stage-0'),\n\n  // useful stuff for folks using various environments\n  'react': require('../config/react'),\n  'react-native': require('../config/react-native'),\n  'electron': require('../config/electron'),\n  'typescript': require('../config/typescript'),\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-unresolved.js":{"lineLengths":[13,0,0,0,0,103,119,127,185,260,203,211,20,11,56,0,0,13,43,58,71,0,0,0,0,49,45,0,47,35,41,17,9,0,91,93,0,76,0,41,25,65,33,0,58,85,104,27,42,74,0,11,9,7,0,72,25,4368],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-unresolved.js"],"names":["module","exports","meta","type","docs","url","schema","caseSensitive","caseSensitiveStrict","create","context","options","checkSourceValue","source","node","importKind","CASE_SENSITIVE_FS","resolvedPath","value","undefined","report","cacheSettings","ModuleCache","getSettings","settings"],"mappings":";;;;;AAKA,sD;AACA,8D;AACA,kE;AACA,qC,iJARA;;;yLAUAA,OAAOC,OAAP,GAAiB,EACfC,MAAM;AACJC,UAAM,SADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,eAAR,CADD,EAFF;;;AAMJC,YAAQ;AACN,0CAAkB;AAChBC,qBAAe,EAAEJ,MAAM,SAAR,EAAmB,WAAS,IAA5B,EADC;AAEhBK,2BAAqB,EAAEL,MAAM,SAAR,EAAmB,WAAS,KAA5B,EAFL,EAAlB,CADM,CANJ,EADS;;;;;AAefM,QAfe,+BAeRC,OAfQ,EAeC;AACd,UAAMC,UAAUD,QAAQC,OAAR,CAAgB,CAAhB,KAAsB,EAAtC;;AAEA,eAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;AACtC;AACA,YAAIA,KAAKC,UAAL,KAAoB,MAAxB,EAAgC;AAC9B;AACD;;AAED,YAAMR,gBAAgB,CAACS,0BAAD,IAAsBL,QAAQJ,aAAR,KAA0B,KAAtE;AACA,YAAMC,sBAAsB,CAACQ,0BAAD,IAAsBL,QAAQH,mBAA1D;;AAEA,YAAMS,eAAe,0BAAQJ,OAAOK,KAAf,EAAsBR,OAAtB,CAArB;;AAEA,YAAIO,iBAAiBE,SAArB,EAAgC;AAC9BT,kBAAQU,MAAR;AACEP,gBADF;AAEuCA,iBAAOK,KAF9C;;AAID,SALD,MAKO,IAAIX,iBAAiBC,mBAArB,EAA0C;AAC/C,cAAMa,gBAAgBC,yBAAYC,WAAZ,CAAwBb,QAAQc,QAAhC,CAAtB;AACA,cAAI,CAAC,qCAAuBP,YAAvB,EAAqCI,aAArC,EAAoDb,mBAApD,CAAL,EAA+E;AAC7EE,oBAAQU,MAAR;AACEP,kBADF;AAEeA,mBAAOK,KAFtB;;AAID;AACF;AACF;;AAED,aAAO,gCAAcN,gBAAd,EAAgCD,OAAhC,CAAP;AACD,KA9Cc,mBAAjB","file":"no-unresolved.js","sourcesContent":["/**\n * @fileOverview Ensures that an imported path exists, given resolution rules.\n * @author Ben Mosher\n */\n\nimport resolve, { CASE_SENSITIVE_FS, fileExistsWithCaseSync } from 'eslint-module-utils/resolve';\nimport ModuleCache from 'eslint-module-utils/ModuleCache';\nimport moduleVisitor, { makeOptionsSchema } from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('no-unresolved'),\n    },\n\n    schema: [\n      makeOptionsSchema({\n        caseSensitive: { type: 'boolean', default: true },\n        caseSensitiveStrict: { type: 'boolean', default: false },\n      }),\n    ],\n  },\n\n  create(context) {\n    const options = context.options[0] || {};\n\n    function checkSourceValue(source, node) {\n      // ignore type-only imports\n      if (node.importKind === 'type') {\n        return;\n      }\n\n      const caseSensitive = !CASE_SENSITIVE_FS && options.caseSensitive !== false;\n      const caseSensitiveStrict = !CASE_SENSITIVE_FS && options.caseSensitiveStrict;\n\n      const resolvedPath = resolve(source.value, context);\n\n      if (resolvedPath === undefined) {\n        context.report(\n          source,\n          `Unable to resolve path to module '${source.value}'.`,\n        );\n      } else if (caseSensitive || caseSensitiveStrict) {\n        const cacheSettings = ModuleCache.getSettings(context.settings);\n        if (!fileExistsWithCaseSync(resolvedPath, cacheSettings, caseSensitiveStrict)) {\n          context.report(\n            source,\n            `Casing of ${source.value} does not match the underlying filesystem.`,\n          );\n        }\n      }\n    }\n\n    return moduleVisitor(checkSourceValue, options);\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/docsUrl.js":{"lineLengths":[95,0,0,0,415,92,1,852],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/docsUrl.js"],"names":["docsUrl","repoUrl","ruleName","commitish","pkg","version"],"mappings":";;;;AAIwBA,O,CAJxB,0C,gJAEA,IAAMC,UAAU,mDAAhB,CAEe,SAASD,OAAT,CAAiBE,QAAjB,EAA0D,KAA/BC,SAA+B,oFAAfC,qBAAIC,OAAW;AACvE,SAAUJ,OAAV,qBAA0BE,SAA1B,4BAAkDD,QAAlD;AACD","file":"docsUrl.js","sourcesContent":["import pkg from '../package.json';\n\nconst repoUrl = 'https://github.com/import-js/eslint-plugin-import';\n\nexport default function docsUrl(ruleName, commitish = `v${pkg.version}`) {\n  return `${repoUrl}/blob/${commitish}/docs/rules/${ruleName}.md`;\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/named.js":{"lineLengths":[715,94,440,0,18,9,20,11,48,0,13,5,21,19,19,30,0,0,39,0,0,0,0,49,45,0,49,56,12,30,37,39,35,9,17,9,0,78,45,9,0,77,67,17,9,0,36,46,17,9,0,47,14,26,32,68,11,19,11,0,51,0,49,0,34,45,45,163,27,0,91,20,92,13,11,11,7,0,35,12,28,42,87,90,66,61,9,17,9,0,66,55,49,80,0,12,58,106,45,39,34,50,9,17,9,0,44,54,17,9,0,47,82,19,11,0,64,0,34,45,45,101,27,0,97,20,93,13,11,11,7,0,14,85,0,87,0,43,0,25,11344],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/named.js"],"names":["path","module","exports","meta","type","docs","url","schema","properties","commonjs","additionalProperties","create","context","options","checkSpecifiers","key","node","source","importKind","exportKind","specifiers","some","im","imports","Exports","get","value","parseGoal","errors","length","reportErrors","forEach","name","deepLookup","hasDeep","found","deepPath","map","relative","dirname","getPhysicalFilename","getFilename","i","join","report","checkRequire","id","init","call","arguments","variableImports","variableExports","callee","ImportDeclaration","bind","ExportNamedDeclaration","VariableDeclarator"],"mappings":"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","file":"named.js","sourcesContent":["import * as path from 'path';\nimport Exports from '../ExportMap';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('named'),\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          commonjs: {\n            type: 'boolean',\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const options = context.options[0] || {};\n\n    function checkSpecifiers(key, type, node) {\n      // ignore local exports and type imports/exports\n      if (\n        node.source == null\n        || node.importKind === 'type'\n        || node.importKind === 'typeof'\n        || node.exportKind === 'type'\n      ) {\n        return;\n      }\n\n      if (!node.specifiers.some((im) => im.type === type)) {\n        return; // no named imports/exports\n      }\n\n      const imports = Exports.get(node.source.value, context);\n      if (imports == null || imports.parseGoal === 'ambiguous') {\n        return;\n      }\n\n      if (imports.errors.length) {\n        imports.reportErrors(context, node);\n        return;\n      }\n\n      node.specifiers.forEach(function (im) {\n        if (\n          im.type !== type\n          // ignore type imports\n          || im.importKind === 'type' || im.importKind === 'typeof'\n        ) {\n          return;\n        }\n\n        const name = im[key].name || im[key].value;\n\n        const deepLookup = imports.hasDeep(name);\n\n        if (!deepLookup.found) {\n          if (deepLookup.path.length > 1) {\n            const deepPath = deepLookup.path\n              .map(i => path.relative(path.dirname(context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename()), i.path))\n              .join(' -> ');\n\n            context.report(im[key], `${name} not found via ${deepPath}`);\n          } else {\n            context.report(im[key], name + ' not found in \\'' + node.source.value + '\\'');\n          }\n        }\n      });\n    }\n\n    function checkRequire(node) {\n      if (\n        !options.commonjs\n        || node.type !== 'VariableDeclarator'\n        // return if it's not an object destructure or it's an empty object destructure\n        || !node.id || node.id.type !== 'ObjectPattern' || node.id.properties.length === 0\n        // return if there is no call expression on the right side\n        || !node.init || node.init.type !== 'CallExpression'\n      ) {\n        return;\n      }\n\n      const call = node.init;\n      const [source] = call.arguments;\n      const variableImports = node.id.properties;\n      const variableExports = Exports.get(source.value, context);\n\n      if (\n        // return if it's not a commonjs require statement\n        call.callee.type !== 'Identifier' || call.callee.name !== 'require' || call.arguments.length !== 1\n        // return if it's not a string source\n        || source.type !== 'Literal'\n        || variableExports == null\n        || variableExports.parseGoal === 'ambiguous'\n      ) {\n        return;\n      }\n\n      if (variableExports.errors.length) {\n        variableExports.reportErrors(context, node);\n        return;\n      }\n\n      variableImports.forEach(function (im) {\n        if (im.type !== 'Property' || !im.key || im.key.type !== 'Identifier') {\n          return;\n        }\n\n        const deepLookup = variableExports.hasDeep(im.key.name);\n\n        if (!deepLookup.found) {\n          if (deepLookup.path.length > 1) {\n            const deepPath = deepLookup.path\n              .map(i => path.relative(path.dirname(context.getFilename()), i.path))\n              .join(' -> ');\n\n            context.report(im.key, `${im.key.name} not found via ${deepPath}`);\n          } else {\n            context.report(im.key, im.key.name + ' not found in \\'' + source.value + '\\'');\n          }\n        }\n      });\n    }\n\n    return {\n      ImportDeclaration: checkSpecifiers.bind(null, 'imported', 'ImportSpecifier'),\n\n      ExportNamedDeclaration: checkSpecifiers.bind(null, 'local', 'ExportSpecifier'),\n\n      VariableDeclarator: checkRequire,\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/ExportMap.js":{"lineLengths":[632,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1916,35,47,65,69,132,108,115,155,187,259,262,226,209,247,368,375,323,364,344,370,613,119,250,444,66,726,94,183,385,66,720,201,178,535,212,107,163,243,259,464,497,490,489,531,65,197,232,276,191,683,127,99,35,130,257,263,471,482,779,1578,57,519,816,269,923,77,139,59,376,415,168,786,850,145,71,62,383,44,200,420,150,49,67,58,67,125,124,98,175,229,200,199,202,189,282,569,634,810,862,893,67,62,60904],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/ExportMap.js"],"names":["recursivePatternCapture","unambiguous","ts","log","exportCache","Map","tsConfigCache","ExportMap","path","namespace","reexports","dependencies","Set","imports","errors","parseGoal","name","has","dep","innerMap","found","get","imported","getImport","local","deep","hasDeep","unshift","innerValue","undefined","callback","thisArg","forEach","v","n","call","reexported","d","context","declaration","report","node","source","message","value","map","e","lineNumber","column","join","size","captureDoc","docStyleParsers","metadata","nodes","some","leadingComments","range","getCommentsBefore","length","doc","err","availableDocStyleParsers","jsdoc","captureJsDoc","tomdoc","captureTomDoc","comments","comment","type","doctrine","parse","unwrap","lines","i","match","push","trim","statusMatch","description","tags","title","toLowerCase","supportedImportTypes","childContext","cacheKey","digest","exportMap","stats","fs","statSync","mtime","set","content","readFileSync","encoding","test","m","isEsModuleInteropTrue","isEsModuleInterop","ast","visitorKeys","result","hasDynamicImports","processDynamicImport","p","remotePath","importedSpecifiers","add","getter","thunkFor","declarations","loc","ImportExpression","CallExpression","callee","arguments","unambiguouslyESM","isModule","docstyle","settings","style","c","t","namespaces","resolve","relative","resolveImport","rp","getNamespace","identifier","addNamespace","object","nsfn","Object","defineProperty","processSpecifier","s","nsource","exportMeta","exported","captureDependency","isOnlyImportingTypes","declarationMetadata","existing","makeSourceCode","readTsConfig","tsConfigInfo","cwd","parserOptions","tsconfigRootDir","process","getEnv","key","env","tsConfigPath","require","configFile","readConfigFile","sys","readFile","parseJsonConfigFileContent","config","tsConfig","options","esModuleInterop","body","exportKind","declarationIsType","importKind","specifiersOnlyImportingTypes","specifiers","specifier","ns","find","id","exports","exportedName","expression","declTypes","exportedDecls","filter","decl","moduleBlockNode","namespaceDecl","pattern","properties","argument","elements","element","left","parserPath","text","SourceCode"],"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","file":"ExportMap.js","sourcesContent":["import fs from 'fs';\nimport { dirname } from 'path';\n\nimport doctrine from 'doctrine';\n\nimport debug from 'debug';\n\nimport { SourceCode } from 'eslint';\n\nimport parse from 'eslint-module-utils/parse';\nimport visit from 'eslint-module-utils/visit';\nimport resolve from 'eslint-module-utils/resolve';\nimport isIgnored, { hasValidExtension } from 'eslint-module-utils/ignore';\n\nimport { hashObject } from 'eslint-module-utils/hash';\nimport * as unambiguous from 'eslint-module-utils/unambiguous';\n\nimport { tsConfigLoader } from 'tsconfig-paths/lib/tsconfig-loader';\n\nimport includes from 'array-includes';\n\nlet ts;\n\nconst log = debug('eslint-plugin-import:ExportMap');\n\nconst exportCache = new Map();\nconst tsConfigCache = new Map();\n\nexport default class ExportMap {\n  constructor(path) {\n    this.path = path;\n    this.namespace = new Map();\n    // todo: restructure to key on path, value is resolver + map of names\n    this.reexports = new Map();\n    /**\n     * star-exports\n     * @type {Set} of () => ExportMap\n     */\n    this.dependencies = new Set();\n    /**\n     * dependencies of this module that are not explicitly re-exported\n     * @type {Map} from path = () => ExportMap\n     */\n    this.imports = new Map();\n    this.errors = [];\n    /**\n     * type {'ambiguous' | 'Module' | 'Script'}\n     */\n    this.parseGoal = 'ambiguous';\n  }\n\n  get hasDefault() { return this.get('default') != null; } // stronger than this.has\n\n  get size() {\n    let size = this.namespace.size + this.reexports.size;\n    this.dependencies.forEach(dep => {\n      const d = dep();\n      // CJS / ignored dependencies won't exist (#717)\n      if (d == null) return;\n      size += d.size;\n    });\n    return size;\n  }\n\n  /**\n   * Note that this does not check explicitly re-exported names for existence\n   * in the base namespace, but it will expand all `export * from '...'` exports\n   * if not found in the explicit namespace.\n   * @param  {string}  name\n   * @return {Boolean} true if `name` is exported by this module.\n   */\n  has(name) {\n    if (this.namespace.has(name)) return true;\n    if (this.reexports.has(name)) return true;\n\n    // default exports must be explicitly re-exported (#328)\n    if (name !== 'default') {\n      for (const dep of this.dependencies) {\n        const innerMap = dep();\n\n        // todo: report as unresolved?\n        if (!innerMap) continue;\n\n        if (innerMap.has(name)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * ensure that imported name fully resolves.\n   * @param  {string} name\n   * @return {{ found: boolean, path: ExportMap[] }}\n   */\n  hasDeep(name) {\n    if (this.namespace.has(name)) return { found: true, path: [this] };\n\n    if (this.reexports.has(name)) {\n      const reexports = this.reexports.get(name);\n      const imported = reexports.getImport();\n\n      // if import is ignored, return explicit 'null'\n      if (imported == null) return { found: true, path: [this] };\n\n      // safeguard against cycles, only if name matches\n      if (imported.path === this.path && reexports.local === name) {\n        return { found: false, path: [this] };\n      }\n\n      const deep = imported.hasDeep(reexports.local);\n      deep.path.unshift(this);\n\n      return deep;\n    }\n\n\n    // default exports must be explicitly re-exported (#328)\n    if (name !== 'default') {\n      for (const dep of this.dependencies) {\n        const innerMap = dep();\n        if (innerMap == null) return { found: true, path: [this] };\n        // todo: report as unresolved?\n        if (!innerMap) continue;\n\n        // safeguard against cycles\n        if (innerMap.path === this.path) continue;\n\n        const innerValue = innerMap.hasDeep(name);\n        if (innerValue.found) {\n          innerValue.path.unshift(this);\n          return innerValue;\n        }\n      }\n    }\n\n    return { found: false, path: [this] };\n  }\n\n  get(name) {\n    if (this.namespace.has(name)) return this.namespace.get(name);\n\n    if (this.reexports.has(name)) {\n      const reexports = this.reexports.get(name);\n      const imported = reexports.getImport();\n\n      // if import is ignored, return explicit 'null'\n      if (imported == null) return null;\n\n      // safeguard against cycles, only if name matches\n      if (imported.path === this.path && reexports.local === name) return undefined;\n\n      return imported.get(reexports.local);\n    }\n\n    // default exports must be explicitly re-exported (#328)\n    if (name !== 'default') {\n      for (const dep of this.dependencies) {\n        const innerMap = dep();\n        // todo: report as unresolved?\n        if (!innerMap) continue;\n\n        // safeguard against cycles\n        if (innerMap.path === this.path) continue;\n\n        const innerValue = innerMap.get(name);\n        if (innerValue !== undefined) return innerValue;\n      }\n    }\n\n    return undefined;\n  }\n\n  forEach(callback, thisArg) {\n    this.namespace.forEach((v, n) =>\n      callback.call(thisArg, v, n, this));\n\n    this.reexports.forEach((reexports, name) => {\n      const reexported = reexports.getImport();\n      // can't look up meta for ignored re-exports (#348)\n      callback.call(thisArg, reexported && reexported.get(reexports.local), name, this);\n    });\n\n    this.dependencies.forEach(dep => {\n      const d = dep();\n      // CJS / ignored dependencies won't exist (#717)\n      if (d == null) return;\n\n      d.forEach((v, n) =>\n        n !== 'default' && callback.call(thisArg, v, n, this));\n    });\n  }\n\n  // todo: keys, values, entries?\n\n  reportErrors(context, declaration) {\n    context.report({\n      node: declaration.source,\n      message: `Parse errors in imported module '${declaration.source.value}': ` +\n                  `${this.errors\n                    .map(e => `${e.message} (${e.lineNumber}:${e.column})`)\n                    .join(', ')}`,\n    });\n  }\n}\n\n/**\n * parse docs from the first node that has leading comments\n */\nfunction captureDoc(source, docStyleParsers, ...nodes) {\n  const metadata = {};\n\n  // 'some' short-circuits on first 'true'\n  nodes.some(n => {\n    try {\n\n      let leadingComments;\n\n      // n.leadingComments is legacy `attachComments` behavior\n      if ('leadingComments' in n) {\n        leadingComments = n.leadingComments;\n      } else if (n.range) {\n        leadingComments = source.getCommentsBefore(n);\n      }\n\n      if (!leadingComments || leadingComments.length === 0) return false;\n\n      for (const name in docStyleParsers) {\n        const doc = docStyleParsers[name](leadingComments);\n        if (doc) {\n          metadata.doc = doc;\n        }\n      }\n\n      return true;\n    } catch (err) {\n      return false;\n    }\n  });\n\n  return metadata;\n}\n\nconst availableDocStyleParsers = {\n  jsdoc: captureJsDoc,\n  tomdoc: captureTomDoc,\n};\n\n/**\n * parse JSDoc from leading comments\n * @param {object[]} comments\n * @return {{ doc: object }}\n */\nfunction captureJsDoc(comments) {\n  let doc;\n\n  // capture XSDoc\n  comments.forEach(comment => {\n    // skip non-block comments\n    if (comment.type !== 'Block') return;\n    try {\n      doc = doctrine.parse(comment.value, { unwrap: true });\n    } catch (err) {\n      /* don't care, for now? maybe add to `errors?` */\n    }\n  });\n\n  return doc;\n}\n\n/**\n  * parse TomDoc section from comments\n  */\nfunction captureTomDoc(comments) {\n  // collect lines up to first paragraph break\n  const lines = [];\n  for (let i = 0; i < comments.length; i++) {\n    const comment = comments[i];\n    if (comment.value.match(/^\\s*$/)) break;\n    lines.push(comment.value.trim());\n  }\n\n  // return doctrine-like object\n  const statusMatch = lines.join(' ').match(/^(Public|Internal|Deprecated):\\s*(.+)/);\n  if (statusMatch) {\n    return {\n      description: statusMatch[2],\n      tags: [{\n        title: statusMatch[1].toLowerCase(),\n        description: statusMatch[2],\n      }],\n    };\n  }\n}\n\nconst supportedImportTypes = new Set(['ImportDefaultSpecifier', 'ImportNamespaceSpecifier']);\n\nExportMap.get = function (source, context) {\n  const path = resolve(source, context);\n  if (path == null) return null;\n\n  return ExportMap.for(childContext(path, context));\n};\n\nExportMap.for = function (context) {\n  const { path } = context;\n\n  const cacheKey = hashObject(context).digest('hex');\n  let exportMap = exportCache.get(cacheKey);\n\n  // return cached ignore\n  if (exportMap === null) return null;\n\n  const stats = fs.statSync(path);\n  if (exportMap != null) {\n    // date equality check\n    if (exportMap.mtime - stats.mtime === 0) {\n      return exportMap;\n    }\n    // future: check content equality?\n  }\n\n  // check valid extensions first\n  if (!hasValidExtension(path, context)) {\n    exportCache.set(cacheKey, null);\n    return null;\n  }\n\n  // check for and cache ignore\n  if (isIgnored(path, context)) {\n    log('ignored path due to ignore settings:', path);\n    exportCache.set(cacheKey, null);\n    return null;\n  }\n\n  const content = fs.readFileSync(path, { encoding: 'utf8' });\n\n  // check for and cache unambiguous modules\n  if (!unambiguous.test(content)) {\n    log('ignored path due to unambiguous regex:', path);\n    exportCache.set(cacheKey, null);\n    return null;\n  }\n\n  log('cache miss', cacheKey, 'for path', path);\n  exportMap = ExportMap.parse(path, content, context);\n\n  // ambiguous modules return null\n  if (exportMap == null) return null;\n\n  exportMap.mtime = stats.mtime;\n\n  exportCache.set(cacheKey, exportMap);\n  return exportMap;\n};\n\n\nExportMap.parse = function (path, content, context) {\n  const m = new ExportMap(path);\n  const isEsModuleInteropTrue = isEsModuleInterop();\n\n  let ast;\n  let visitorKeys;\n  try {\n    const result = parse(path, content, context);\n    ast = result.ast;\n    visitorKeys = result.visitorKeys;\n  } catch (err) {\n    m.errors.push(err);\n    return m; // can't continue\n  }\n\n  m.visitorKeys = visitorKeys;\n\n  let hasDynamicImports = false;\n\n  function processDynamicImport(source) {\n    hasDynamicImports = true;\n    if (source.type !== 'Literal') {\n      return null;\n    }\n    const p = remotePath(source.value);\n    if (p == null) {\n      return null;\n    }\n    const importedSpecifiers = new Set();\n    importedSpecifiers.add('ImportNamespaceSpecifier');\n    const getter = thunkFor(p, context);\n    m.imports.set(p, {\n      getter,\n      declarations: new Set([{\n        source: {\n        // capturing actual node reference holds full AST in memory!\n          value: source.value,\n          loc: source.loc,\n        },\n        importedSpecifiers,\n      }]),\n    });\n  }\n\n  visit(ast, visitorKeys, {\n    ImportExpression(node) {\n      processDynamicImport(node.source);\n    },\n    CallExpression(node) {\n      if (node.callee.type === 'Import') {\n        processDynamicImport(node.arguments[0]);\n      }\n    },\n  });\n\n  const unambiguouslyESM = unambiguous.isModule(ast);\n  if (!unambiguouslyESM && !hasDynamicImports) return null;\n\n  const docstyle = (context.settings && context.settings['import/docstyle']) || ['jsdoc'];\n  const docStyleParsers = {};\n  docstyle.forEach(style => {\n    docStyleParsers[style] = availableDocStyleParsers[style];\n  });\n\n  // attempt to collect module doc\n  if (ast.comments) {\n    ast.comments.some(c => {\n      if (c.type !== 'Block') return false;\n      try {\n        const doc = doctrine.parse(c.value, { unwrap: true });\n        if (doc.tags.some(t => t.title === 'module')) {\n          m.doc = doc;\n          return true;\n        }\n      } catch (err) { /* ignore */ }\n      return false;\n    });\n  }\n\n  const namespaces = new Map();\n\n  function remotePath(value) {\n    return resolve.relative(value, path, context.settings);\n  }\n\n  function resolveImport(value) {\n    const rp = remotePath(value);\n    if (rp == null) return null;\n    return ExportMap.for(childContext(rp, context));\n  }\n\n  function getNamespace(identifier) {\n    if (!namespaces.has(identifier.name)) return;\n\n    return function () {\n      return resolveImport(namespaces.get(identifier.name));\n    };\n  }\n\n  function addNamespace(object, identifier) {\n    const nsfn = getNamespace(identifier);\n    if (nsfn) {\n      Object.defineProperty(object, 'namespace', { get: nsfn });\n    }\n\n    return object;\n  }\n\n  function processSpecifier(s, n, m) {\n    const nsource = n.source && n.source.value;\n    const exportMeta = {};\n    let local;\n\n    switch (s.type) {\n    case 'ExportDefaultSpecifier':\n      if (!nsource) return;\n      local = 'default';\n      break;\n    case 'ExportNamespaceSpecifier':\n      m.namespace.set(s.exported.name, Object.defineProperty(exportMeta, 'namespace', {\n        get() { return resolveImport(nsource); },\n      }));\n      return;\n    case 'ExportAllDeclaration':\n      m.namespace.set(s.exported.name || s.exported.value, addNamespace(exportMeta, s.source.value));\n      return;\n    case 'ExportSpecifier':\n      if (!n.source) {\n        m.namespace.set(s.exported.name || s.exported.value, addNamespace(exportMeta, s.local));\n        return;\n      }\n      // else falls through\n    default:\n      local = s.local.name;\n      break;\n    }\n\n    // todo: JSDoc\n    m.reexports.set(s.exported.name, { local, getImport: () => resolveImport(nsource) });\n  }\n\n  function captureDependency({ source }, isOnlyImportingTypes, importedSpecifiers = new Set()) {\n    if (source == null) return null;\n\n    const p = remotePath(source.value);\n    if (p == null) return null;\n\n    const declarationMetadata = {\n      // capturing actual node reference holds full AST in memory!\n      source: { value: source.value, loc: source.loc },\n      isOnlyImportingTypes,\n      importedSpecifiers,\n    };\n\n    const existing = m.imports.get(p);\n    if (existing != null) {\n      existing.declarations.add(declarationMetadata);\n      return existing.getter;\n    }\n\n    const getter = thunkFor(p, context);\n    m.imports.set(p, { getter, declarations: new Set([declarationMetadata]) });\n    return getter;\n  }\n\n  const source = makeSourceCode(content, ast);\n\n  function readTsConfig() {\n    const tsConfigInfo = tsConfigLoader({\n      cwd:\n        (context.parserOptions && context.parserOptions.tsconfigRootDir) ||\n        process.cwd(),\n      getEnv: (key) => process.env[key],\n    });\n    try {\n      if (tsConfigInfo.tsConfigPath !== undefined) {\n        // Projects not using TypeScript won't have `typescript` installed.\n        if (!ts) { ts = require('typescript'); }\n  \n        const configFile = ts.readConfigFile(tsConfigInfo.tsConfigPath, ts.sys.readFile);\n        return ts.parseJsonConfigFileContent(\n          configFile.config,\n          ts.sys,\n          dirname(tsConfigInfo.tsConfigPath),\n        );\n      }\n    } catch (e) {\n      // Catch any errors\n    }\n\n    return null;\n  }\n\n  function isEsModuleInterop() {\n    const cacheKey = hashObject({\n      tsconfigRootDir: context.parserOptions && context.parserOptions.tsconfigRootDir,\n    }).digest('hex');\n    let tsConfig = tsConfigCache.get(cacheKey);\n    if (typeof tsConfig === 'undefined') {\n      tsConfig = readTsConfig(context);\n      tsConfigCache.set(cacheKey, tsConfig);\n    }\n\n    return tsConfig && tsConfig.options ? tsConfig.options.esModuleInterop : false;\n  }\n\n  ast.body.forEach(function (n) {\n    if (n.type === 'ExportDefaultDeclaration') {\n      const exportMeta = captureDoc(source, docStyleParsers, n);\n      if (n.declaration.type === 'Identifier') {\n        addNamespace(exportMeta, n.declaration);\n      }\n      m.namespace.set('default', exportMeta);\n      return;\n    }\n\n    if (n.type === 'ExportAllDeclaration') {\n      const getter = captureDependency(n, n.exportKind === 'type');\n      if (getter) m.dependencies.add(getter);\n      if (n.exported) {\n        processSpecifier(n, n.exported, m);\n      }\n      return;\n    }\n\n    // capture namespaces in case of later export\n    if (n.type === 'ImportDeclaration') {\n      // import type { Foo } (TS and Flow)\n      const declarationIsType = n.importKind === 'type';\n      // import './foo' or import {} from './foo' (both 0 specifiers) is a side effect and\n      // shouldn't be considered to be just importing types\n      let specifiersOnlyImportingTypes = n.specifiers.length;\n      const importedSpecifiers = new Set();\n      n.specifiers.forEach(specifier => {\n        if (supportedImportTypes.has(specifier.type)) {\n          importedSpecifiers.add(specifier.type);\n        }\n        if (specifier.type === 'ImportSpecifier') {\n          importedSpecifiers.add(specifier.imported.name || specifier.imported.value);\n        }\n\n        // import { type Foo } (Flow)\n        specifiersOnlyImportingTypes =\n          specifiersOnlyImportingTypes && specifier.importKind === 'type';\n      });\n      captureDependency(n, declarationIsType || specifiersOnlyImportingTypes, importedSpecifiers);\n\n      const ns = n.specifiers.find(s => s.type === 'ImportNamespaceSpecifier');\n      if (ns) {\n        namespaces.set(ns.local.name, n.source.value);\n      }\n      return;\n    }\n\n    if (n.type === 'ExportNamedDeclaration') {\n      // capture declaration\n      if (n.declaration != null) {\n        switch (n.declaration.type) {\n        case 'FunctionDeclaration':\n        case 'ClassDeclaration':\n        case 'TypeAlias': // flowtype with babel-eslint parser\n        case 'InterfaceDeclaration':\n        case 'DeclareFunction':\n        case 'TSDeclareFunction':\n        case 'TSEnumDeclaration':\n        case 'TSTypeAliasDeclaration':\n        case 'TSInterfaceDeclaration':\n        case 'TSAbstractClassDeclaration':\n        case 'TSModuleDeclaration':\n          m.namespace.set(n.declaration.id.name, captureDoc(source, docStyleParsers, n));\n          break;\n        case 'VariableDeclaration':\n          n.declaration.declarations.forEach((d) =>\n            recursivePatternCapture(d.id,\n              id => m.namespace.set(id.name, captureDoc(source, docStyleParsers, d, n))));\n          break;\n        }\n      }\n\n      n.specifiers.forEach((s) => processSpecifier(s, n, m));\n    }\n\n    const exports = ['TSExportAssignment'];\n    if (isEsModuleInteropTrue) {\n      exports.push('TSNamespaceExportDeclaration');\n    }\n\n    // This doesn't declare anything, but changes what's being exported.\n    if (includes(exports, n.type)) {\n      const exportedName = n.type === 'TSNamespaceExportDeclaration'\n        ? (n.id || n.name).name\n        : (n.expression && n.expression.name || (n.expression.id && n.expression.id.name) || null);\n      const declTypes = [\n        'VariableDeclaration',\n        'ClassDeclaration',\n        'TSDeclareFunction',\n        'TSEnumDeclaration',\n        'TSTypeAliasDeclaration',\n        'TSInterfaceDeclaration',\n        'TSAbstractClassDeclaration',\n        'TSModuleDeclaration',\n      ];\n      const exportedDecls = ast.body.filter(({ type, id, declarations }) => includes(declTypes, type) && (\n        (id && id.name === exportedName) || (declarations && declarations.find((d) => d.id.name === exportedName))\n      ));\n      if (exportedDecls.length === 0) {\n        // Export is not referencing any local declaration, must be re-exporting\n        m.namespace.set('default', captureDoc(source, docStyleParsers, n));\n        return;\n      }\n      if (\n        isEsModuleInteropTrue // esModuleInterop is on in tsconfig\n        && !m.namespace.has('default') // and default isn't added already\n      ) {\n        m.namespace.set('default', {}); // add default export\n      }\n      exportedDecls.forEach((decl) => {\n        if (decl.type === 'TSModuleDeclaration') {\n          if (decl.body && decl.body.type === 'TSModuleDeclaration') {\n            m.namespace.set(decl.body.id.name, captureDoc(source, docStyleParsers, decl.body));\n          } else if (decl.body && decl.body.body) {\n            decl.body.body.forEach((moduleBlockNode) => {\n              // Export-assignment exports all members in the namespace,\n              // explicitly exported or not.\n              const namespaceDecl = moduleBlockNode.type === 'ExportNamedDeclaration' ?\n                moduleBlockNode.declaration :\n                moduleBlockNode;\n\n              if (!namespaceDecl) {\n                // TypeScript can check this for us; we needn't\n              } else if (namespaceDecl.type === 'VariableDeclaration') {\n                namespaceDecl.declarations.forEach((d) =>\n                  recursivePatternCapture(d.id, (id) => m.namespace.set(\n                    id.name,\n                    captureDoc(source, docStyleParsers, decl, namespaceDecl, moduleBlockNode),\n                  )),\n                );\n              } else {\n                m.namespace.set(\n                  namespaceDecl.id.name,\n                  captureDoc(source, docStyleParsers, moduleBlockNode));\n              }\n            });\n          }\n        } else {\n          // Export as default\n          m.namespace.set('default', captureDoc(source, docStyleParsers, decl));\n        }\n      });\n    }\n  });\n\n  if (\n    isEsModuleInteropTrue // esModuleInterop is on in tsconfig\n    && m.namespace.size > 0 // anything is exported\n    && !m.namespace.has('default') // and default isn't added already\n  ) {\n    m.namespace.set('default', {}); // add default export\n  }\n\n  if (unambiguouslyESM) {\n    m.parseGoal = 'Module';\n  }\n  return m;\n};\n\n/**\n * The creation of this closure is isolated from other scopes\n * to avoid over-retention of unrelated variables, which has\n * caused memory leaks. See #1266.\n */\nfunction thunkFor(p, context) {\n  return () => ExportMap.for(childContext(p, context));\n}\n\n\n/**\n * Traverse a pattern/identifier node, calling 'callback'\n * for each leaf identifier.\n * @param  {node}   pattern\n * @param  {Function} callback\n * @return {void}\n */\nexport function recursivePatternCapture(pattern, callback) {\n  switch (pattern.type) {\n  case 'Identifier': // base case\n    callback(pattern);\n    break;\n\n  case 'ObjectPattern':\n    pattern.properties.forEach(p => {\n      if (p.type === 'ExperimentalRestProperty' || p.type === 'RestElement') {\n        callback(p.argument);\n        return;\n      }\n      recursivePatternCapture(p.value, callback);\n    });\n    break;\n\n  case 'ArrayPattern':\n    pattern.elements.forEach((element) => {\n      if (element == null) return;\n      if (element.type === 'ExperimentalRestProperty' || element.type === 'RestElement') {\n        callback(element.argument);\n        return;\n      }\n      recursivePatternCapture(element, callback);\n    });\n    break;\n\n  case 'AssignmentPattern':\n    callback(pattern.left);\n    break;\n  }\n}\n\n/**\n * don't hold full context object in memory, just grab what we need.\n */\nfunction childContext(path, context) {\n  const { settings, parserOptions, parserPath } = context;\n  return {\n    settings,\n    parserOptions,\n    parserPath,\n    path,\n  };\n}\n\n\n/**\n * sometimes legacy support isn't _that_ hard... right?\n */\nfunction makeSourceCode(text, ast) {\n  if (SourceCode.length > 1) {\n    // ESLint 3\n    return new SourceCode(text, ast);\n  } else {\n    // ESLint 4, 5\n    return new SourceCode({ text, ast });\n  }\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/tsconfig-paths/lib/tsconfig-loader.js":{"lineLengths":[13,55,45,62,29,76,28,9,17,6,43,2,62,81,27,23,36,29,36,29,108,52,52,74,66,69,22,1,40,50,95,54,22,16,36,31,29,10,5,42,12,33,27,81,80,6,1,43,19,63,55,42,28,5,36,33,5,50,77,1,49,62,61,33,26,5,54,28,40,25,5,56,1,42,65,62,71,49,8,38,25,5,52,45,42,40,25,49,53,38,9,54,71,49,49,46,87,9,84,74,91,67,58,95,9,153,5,18,1,36,43],"data":{"version":3,"file":"tsconfig-loader.js","sourceRoot":"","sources":["file:///home/runner/work/deluge/deluge/node_modules/tsconfig-paths/src/tsconfig-loader.ts"],"names":[],"mappings":"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"},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/default.js":{"lineLengths":[107,181,0,18,9,20,11,50,0,17,0,0,49,0,50,0,52,73,0,0,38,77,36,0,36,46,58,26,35,106,0,9,7,0,14,79,86,0,25,3128],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/default.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","checkDefault","specifierType","node","defaultSpecifier","specifiers","find","specifier","imports","Exports","get","source","value","errors","length","reportErrors","undefined","report","message","bind"],"mappings":"aAAA,yC;AACA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,SADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,SAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;;AAEd,eAASC,YAAT,CAAsBC,aAAtB,EAAqCC,IAArC,EAA2C;;AAEzC,YAAMC,mBAAmBD,KAAKE,UAAL,CAAgBC,IAAhB;AACvB,qCAAaC,UAAUZ,IAAV,KAAmBO,aAAhC,EADuB,CAAzB;;;AAIA,YAAI,CAACE,gBAAL,EAAuB;AACvB,YAAMI,UAAUC,uBAAQC,GAAR,CAAYP,KAAKQ,MAAL,CAAYC,KAAxB,EAA+BZ,OAA/B,CAAhB;AACA,YAAIQ,WAAW,IAAf,EAAqB;;AAErB,YAAIA,QAAQK,MAAR,CAAeC,MAAnB,EAA2B;AACzBN,kBAAQO,YAAR,CAAqBf,OAArB,EAA8BG,IAA9B;AACD,SAFD,MAEO,IAAIK,QAAQE,GAAR,CAAY,SAAZ,MAA2BM,SAA/B,EAA0C;AAC/ChB,kBAAQiB,MAAR,CAAe;AACbd,kBAAMC,gBADO;AAEbc,6EAAwDf,KAAKQ,MAAL,CAAYC,KAApE,QAFa,EAAf;;AAID;AACF;;AAED,aAAO;AACL,6BAAqBX,aAAakB,IAAb,CAAkB,IAAlB,EAAwB,wBAAxB,CADhB;AAEL,kCAA0BlB,aAAakB,IAAb,CAAkB,IAAlB,EAAwB,wBAAxB,CAFrB,EAAP;;AAID,KAnCc,mBAAjB","file":"default.js","sourcesContent":["import Exports from '../ExportMap';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('default'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n\n    function checkDefault(specifierType, node) {\n\n      const defaultSpecifier = node.specifiers.find(\n        specifier => specifier.type === specifierType,\n      );\n\n      if (!defaultSpecifier) return;\n      const imports = Exports.get(node.source.value, context);\n      if (imports == null) return;\n\n      if (imports.errors.length) {\n        imports.reportErrors(context, node);\n      } else if (imports.get('default') === undefined) {\n        context.report({\n          node: defaultSpecifier,\n          message: `No default export found in imported module \"${node.source.value}\".`,\n        });\n      }\n    }\n\n    return {\n      'ImportDeclaration': checkDefault.bind(null, 'ImportDefaultSpecifier'),\n      'ExportNamedDeclaration': checkDefault.bind(null, 'ExportDefaultSpecifier'),\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/namespace.js":{"lineLengths":[140,94,126,181,0,65,55,0,50,0,78,35,0,34,47,11,3,0,55,29,38,28,25,69,45,0,9,54,14,36,30,33,77,96,0,48,63,16,10,0,5,1,0,18,9,20,11,52,0,0,13,5,21,19,24,115,26,31,0,0,39,0,0,0,0,56,0,21,16,0,149,0,33,0,44,165,7,0,14,79,77,94,30,0,61,93,75,0,88,45,0,40,57,21,13,0,32,29,73,49,0,13,47,0,48,0,79,65,65,103,0,112,29,82,48,0,13,0,22,68,53,91,108,41,37,33,114,52,0,17,23,15,0,62,31,37,61,0,22,15,0,70,43,0,30,55,45,47,13,39,0,113,37,51,51,0,60,89,0,44,141,73,0,162,0,209,22,65,52,32,19,29,19,0,59,36,37,70,0,29,19,0,58,36,37,66,0,29,19,0,47,77,60,53,81,19,29,232,13,0,51,41,0,131,53,56,48,30,31,65,0,13,44,0,32,17104],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/namespace.js"],"names":["processBodyStatement","context","namespaces","declaration","type","specifiers","length","imports","Exports","get","source","value","errors","reportErrors","forEach","specifier","size","report","set","local","name","meta","imported","namespace","module","exports","docs","url","schema","properties","allowComputed","description","additionalProperties","create","namespaceRule","options","Map","makeMessage","last","namepath","join","Program","body","x","ExportNamespaceSpecifier","MemberExpression","dereference","object","has","parent","left","computed","property","exported","push","VariableDeclarator","id","init","testKey","pattern","path","key","node","message","dependencyExportMap","pop","JSXMemberExpression"],"mappings":"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","file":"namespace.js","sourcesContent":["import declaredScope from 'eslint-module-utils/declaredScope';\nimport Exports from '../ExportMap';\nimport importDeclaration from '../importDeclaration';\nimport docsUrl from '../docsUrl';\n\nfunction processBodyStatement(context, namespaces, declaration) {\n  if (declaration.type !== 'ImportDeclaration') return;\n\n  if (declaration.specifiers.length === 0) return;\n\n  const imports = Exports.get(declaration.source.value, context);\n  if (imports == null) return null;\n\n  if (imports.errors.length > 0) {\n    imports.reportErrors(context, declaration);\n    return;\n  }\n\n  declaration.specifiers.forEach((specifier) => {\n    switch (specifier.type) {\n    case 'ImportNamespaceSpecifier':\n      if (!imports.size) {\n        context.report(\n          specifier,\n          `No exported names found in module '${declaration.source.value}'.`,\n        );\n      }\n      namespaces.set(specifier.local.name, imports);\n      break;\n    case 'ImportDefaultSpecifier':\n    case 'ImportSpecifier': {\n      const meta = imports.get(\n        // default to 'default' for default https://i.imgur.com/nj6qAWy.jpg\n        specifier.imported ? (specifier.imported.name || specifier.imported.value) : 'default',\n      );\n      if (!meta || !meta.namespace) { break; }\n      namespaces.set(specifier.local.name, meta.namespace);\n      break;\n    }\n    }\n  });\n}\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('namespace'),\n    },\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          allowComputed: {\n            description: 'If `false`, will report computed (and thus, un-lintable) references to namespace members.',\n            type: 'boolean',\n            default: false,\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create: function namespaceRule(context) {\n\n    // read options\n    const {\n      allowComputed = false,\n    } = context.options[0] || {};\n\n    const namespaces = new Map();\n\n    function makeMessage(last, namepath) {\n      return `'${last.name}' not found in ${namepath.length > 1 ? 'deeply ' : ''}imported namespace '${namepath.join('.')}'.`;\n    }\n\n    return {\n      // pick up all imports at body entry time, to properly respect hoisting\n      Program({ body }) {\n        body.forEach(x => processBodyStatement(context, namespaces, x));\n      },\n\n      // same as above, but does not add names to local map\n      ExportNamespaceSpecifier(namespace) {\n        const declaration = importDeclaration(context);\n\n        const imports = Exports.get(declaration.source.value, context);\n        if (imports == null) return null;\n\n        if (imports.errors.length) {\n          imports.reportErrors(context, declaration);\n          return;\n        }\n\n        if (!imports.size) {\n          context.report(\n            namespace,\n            `No exported names found in module '${declaration.source.value}'.`,\n          );\n        }\n      },\n\n      // todo: check for possible redefinition\n\n      MemberExpression(dereference) {\n        if (dereference.object.type !== 'Identifier') return;\n        if (!namespaces.has(dereference.object.name)) return;\n        if (declaredScope(context, dereference.object.name) !== 'module') return;\n\n        if (dereference.parent.type === 'AssignmentExpression' && dereference.parent.left === dereference) {\n          context.report(\n            dereference.parent,\n            `Assignment to member of namespace '${dereference.object.name}'.`,\n          );\n        }\n\n        // go deep\n        let namespace = namespaces.get(dereference.object.name);\n        const namepath = [dereference.object.name];\n        // while property is namespace and parent is member expression, keep validating\n        while (namespace instanceof Exports && dereference.type === 'MemberExpression') {\n          if (dereference.computed) {\n            if (!allowComputed) {\n              context.report(\n                dereference.property,\n                `Unable to validate computed reference to imported namespace '${dereference.object.name}'.`,\n              );\n            }\n            return;\n          }\n\n          if (!namespace.has(dereference.property.name)) {\n            context.report(\n              dereference.property,\n              makeMessage(dereference.property, namepath),\n            );\n            break;\n          }\n\n          const exported = namespace.get(dereference.property.name);\n          if (exported == null) return;\n\n          // stash and pop\n          namepath.push(dereference.property.name);\n          namespace = exported.namespace;\n          dereference = dereference.parent;\n        }\n      },\n\n      VariableDeclarator({ id, init }) {\n        if (init == null) return;\n        if (init.type !== 'Identifier') return;\n        if (!namespaces.has(init.name)) return;\n\n        // check for redefinition in intermediate scopes\n        if (declaredScope(context, init.name) !== 'module') return;\n\n        // DFS traverse child namespaces\n        function testKey(pattern, namespace, path = [init.name]) {\n          if (!(namespace instanceof Exports)) return;\n\n          if (pattern.type !== 'ObjectPattern') return;\n\n          for (const property of pattern.properties) {\n            if (\n              property.type === 'ExperimentalRestProperty'\n              || property.type === 'RestElement'\n              || !property.key\n            ) {\n              continue;\n            }\n\n            if (property.key.type !== 'Identifier') {\n              context.report({\n                node: property,\n                message: 'Only destructure top-level names.',\n              });\n              continue;\n            }\n\n            if (!namespace.has(property.key.name)) {\n              context.report({\n                node: property,\n                message: makeMessage(property.key, path),\n              });\n              continue;\n            }\n\n            path.push(property.key.name);\n            const dependencyExportMap = namespace.get(property.key.name);\n            // could be null when ignored or ambiguous\n            if (dependencyExportMap !== null) {\n              testKey(property.value, dependencyExportMap.namespace, path);\n            }\n            path.pop();\n          }\n        }\n\n        testKey(id, namespaces.get(init.name));\n      },\n\n      JSXMemberExpression({ object, property }) {\n        if (!namespaces.has(object.name)) return;\n        const namespace = namespaces.get(object.name);\n        if (!namespace.has(property.name)) {\n          context.report({\n            node: property,\n            message: makeMessage(property, [object.name]),\n          });\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/importDeclaration.js":{"lineLengths":[151,41,41,1,696],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/importDeclaration.js"],"names":["importDeclaration","context","ancestors","getAncestors","length"],"mappings":"gGAAwBA,iB,CAAT,SAASA,iBAAT,CAA2BC,OAA3B,EAAoC;AACjD,MAAMC,YAAYD,QAAQE,YAAR,EAAlB;AACA,SAAOD,UAAUA,UAAUE,MAAV,GAAmB,CAA7B,CAAP;AACD","file":"importDeclaration.js","sourcesContent":["export default function importDeclaration(context) {\n  const ancestors = context.getAncestors();\n  return ancestors[ancestors.length - 1];\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-namespace.js":{"lineLengths":[13,0,0,0,0,91,371,418,391,452,18,80,0,18,9,23,11,55,0,20,14,21,19,17,24,18,29,0,37,0,0,0,0,0,49,49,43,0,14,88,158,21,13,0,62,118,67,116,105,0,28,25,54,47,72,31,0,102,99,45,68,49,69,67,87,59,71,28,108,21,19,19,0,51,67,58,28,36,40,0,0,87,91,65,40,84,0,108,0,99,68,49,69,67,88,19,19,0,29,19,0,49,0,25,0,0,3,71,119,29,54,60,35,0,40,12,55,84,0,5,1,0,3,47,101,5,50,58,34,34,1,0,3,39,26,26,5,54,25,48,25,37,52,3,46,88,76,0,1,0,3,4,21,29,29,5,66,22,33,27,41,23,86,61,12,42,101,83,16,9,7,5,33,5,20,1,14652],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-namespace.js"],"names":["module","exports","meta","type","docs","url","fixable","schema","properties","ignore","items","uniqueItems","create","context","firstOption","options","ignoreGlobs","ImportNamespaceSpecifier","node","find","parent","source","value","glob","matchBase","scopeVariables","getScope","variables","namespaceVariable","variable","defs","namespaceReferences","references","namespaceIdentifiers","map","reference","identifier","canFix","length","usesNamespaceAsObject","report","message","fix","scopeManager","getSourceCode","fixes","importNameConflicts","forEach","importName","getMemberPropertyName","localConflicts","getVariableNamesInScope","c","add","importNames","Object","keys","importLocalNames","generateLocalNames","name","namedImportSpecifiers","push","fixer","replaceText","join","every","property","memberExpression","currentNode","scope","acquire","Set","upper","names","nameConflicts","namespaceName","localNames","localName","has","i","Infinity"],"mappings":"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","file":"no-namespace.js","sourcesContent":["/**\n * @fileoverview Rule to disallow namespace import\n * @author Radek Benkel\n */\n\nimport minimatch from 'minimatch';\nimport docsUrl from '../docsUrl';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-namespace'),\n    },\n    fixable: 'code',\n    schema: [{\n      type: 'object',\n      properties: {\n        ignore: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n          uniqueItems: true,\n        },\n      },\n    }],\n  },\n\n  create(context) {\n    const firstOption = context.options[0] || {};\n    const ignoreGlobs = firstOption.ignore;\n\n    return {\n      ImportNamespaceSpecifier(node) {\n        if (ignoreGlobs && ignoreGlobs.find(glob => minimatch(node.parent.source.value, glob, { matchBase: true }))) {\n          return;\n        }\n\n        const scopeVariables = context.getScope().variables;\n        const namespaceVariable = scopeVariables.find((variable) => variable.defs[0].node === node);\n        const namespaceReferences = namespaceVariable.references;\n        const namespaceIdentifiers = namespaceReferences.map(reference => reference.identifier);\n        const canFix = namespaceIdentifiers.length > 0 && !usesNamespaceAsObject(namespaceIdentifiers);\n\n        context.report({\n          node,\n          message: `Unexpected namespace import.`,\n          fix: canFix && (fixer => {\n            const scopeManager = context.getSourceCode().scopeManager;\n            const fixes = [];\n\n            // Pass 1: Collect variable names that are already in scope for each reference we want\n            // to transform, so that we can be sure that we choose non-conflicting import names\n            const importNameConflicts = {};\n            namespaceIdentifiers.forEach((identifier) => {\n              const parent = identifier.parent;\n              if (parent && parent.type === 'MemberExpression') {\n                const importName = getMemberPropertyName(parent);\n                const localConflicts = getVariableNamesInScope(scopeManager, parent);\n                if (!importNameConflicts[importName]) {\n                  importNameConflicts[importName] = localConflicts;\n                } else {\n                  localConflicts.forEach((c) => importNameConflicts[importName].add(c));\n                }\n              }\n            });\n\n            // Choose new names for each import\n            const importNames = Object.keys(importNameConflicts);\n            const importLocalNames = generateLocalNames(\n              importNames,\n              importNameConflicts,\n              namespaceVariable.name,\n            );\n\n            // Replace the ImportNamespaceSpecifier with a list of ImportSpecifiers\n            const namedImportSpecifiers = importNames.map((importName) => (\n              importName === importLocalNames[importName]\n                ? importName\n                : `${importName} as ${importLocalNames[importName]}`\n            ));\n            fixes.push(fixer.replaceText(node, `{ ${namedImportSpecifiers.join(', ')} }`));\n\n            // Pass 2: Replace references to the namespace with references to the named imports\n            namespaceIdentifiers.forEach((identifier) => {\n              const parent = identifier.parent;\n              if (parent && parent.type === 'MemberExpression') {\n                const importName = getMemberPropertyName(parent);\n                fixes.push(fixer.replaceText(parent, importLocalNames[importName]));\n              }\n            });\n\n            return fixes;\n          }),\n        });\n      },\n    };\n  },\n};\n\n/**\n * @param {Identifier[]} namespaceIdentifiers\n * @returns {boolean} `true` if the namespace variable is more than just a glorified constant\n */\nfunction usesNamespaceAsObject(namespaceIdentifiers) {\n  return !namespaceIdentifiers.every((identifier) => {\n    const parent = identifier.parent;\n\n    // `namespace.x` or `namespace['x']`\n    return (\n      parent && parent.type === 'MemberExpression' &&\n      (parent.property.type === 'Identifier' || parent.property.type === 'Literal')\n    );\n  });\n}\n\n/**\n * @param {MemberExpression} memberExpression\n * @returns {string} the name of the member in the object expression, e.g. the `x` in `namespace.x`\n */\nfunction getMemberPropertyName(memberExpression) {\n  return memberExpression.property.type === 'Identifier'\n    ? memberExpression.property.name\n    : memberExpression.property.value;\n}\n\n/**\n * @param {ScopeManager} scopeManager\n * @param {ASTNode} node\n * @return {Set<string>}\n */\nfunction getVariableNamesInScope(scopeManager, node) {\n  let currentNode = node;\n  let scope = scopeManager.acquire(currentNode);\n  while (scope == null) {\n    currentNode = currentNode.parent;\n    scope = scopeManager.acquire(currentNode, true);\n  }\n  return new Set([\n    ...scope.variables.map(variable => variable.name),\n    ...scope.upper.variables.map(variable => variable.name),\n  ]);\n}\n\n/**\n *\n * @param {*} names\n * @param {*} nameConflicts\n * @param {*} namespaceName\n */\nfunction generateLocalNames(names, nameConflicts, namespaceName) {\n  const localNames = {};\n  names.forEach((name) => {\n    let localName;\n    if (!nameConflicts[name].has(name)) {\n      localName = name;\n    } else if (!nameConflicts[name].has(`${namespaceName}_${name}`)) {\n      localName = `${namespaceName}_${name}`;\n    } else {\n      for (let i = 1; i < Infinity; i++) {\n        if (!nameConflicts[name].has(`${namespaceName}_${name}_${i}`)) {\n          localName = `${namespaceName}_${name}_${i}`;\n          break;\n        }\n      }\n    }\n    localNames[name] = localName;\n  });\n  return localNames;\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/export.js":{"lineLengths":[739,86,203,0,2,259,204,224,257,263,204,222,237,234,258,251,204,223,240,247,232,206,0,25,27,0,3,62,36,62,62,82,34,57,49,31,47,85,44,0,21,56,0,1,0,3,70,10,25,29,8,31,23,5,46,85,120,0,46,0,18,27,96,88,34,125,0,1,0,3,81,10,25,27,29,8,25,31,23,5,53,85,0,48,49,0,35,34,37,34,0,1,0,18,9,20,11,49,0,17,0,0,49,58,0,53,37,43,9,42,0,67,35,0,28,28,32,9,0,24,7,0,32,66,36,9,0,84,44,27,7,0,14,88,55,47,0,70,21,54,26,36,0,38,0,84,49,0,41,50,70,0,46,51,39,40,39,86,22,100,15,13,0,159,223,96,74,232,13,45,0,80,77,0,60,60,0,87,46,0,46,56,21,13,0,41,0,28,54,39,48,45,15,15,0,23,29,74,42,0,13,43,0,167,364,280,50,0,216,0,205,81,0,49,76,32,41,71,67,0,25,245,241,237,36,0,25,16532],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/export.js"],"names":["rootProgram","tsTypePrefix","isTypescriptFunctionOverloads","nodes","types","Set","Array","from","node","parent","type","has","size","isTypescriptNamespaceMerging","noNamespaceNodes","filter","length","shouldSkipTypescriptNamespace","module","exports","meta","docs","url","schema","create","context","namespace","Map","addNamed","name","isType","set","named","get","key","add","getParent","ExportDefaultDeclaration","ExportSpecifier","exported","value","ExportNamedDeclaration","declaration","isTypeVariableDecl","kind","id","declarations","v","ExportAllDeclaration","source","remoteExports","ExportMap","errors","reportErrors","any","forEach","report","replace"],"mappings":"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","file":"export.js","sourcesContent":["import ExportMap, { recursivePatternCapture } from '../ExportMap';\nimport docsUrl from '../docsUrl';\nimport includes from 'array-includes';\n\n/*\nNotes on TypeScript namespaces aka TSModuleDeclaration:\n\nThere are two forms:\n- active namespaces: namespace Foo {} / module Foo {}\n- ambient modules; declare module \"eslint-plugin-import\" {}\n\nactive namespaces:\n- cannot contain a default export\n- cannot contain an export all\n- cannot contain a multi name export (export { a, b })\n- can have active namespaces nested within them\n\nambient namespaces:\n- can only be defined in .d.ts files\n- cannot be nested within active namespaces\n- have no other restrictions\n*/\n\nconst rootProgram = 'root';\nconst tsTypePrefix = 'type:';\n\n/**\n * Detect function overloads like:\n * ```ts\n * export function foo(a: number);\n * export function foo(a: string);\n * export function foo(a: number|string) { return a; }\n * ```\n * @param {Set<Object>} nodes\n * @returns {boolean}\n */\nfunction isTypescriptFunctionOverloads(nodes) {\n  const types = new Set(Array.from(nodes, node => node.parent.type));\n  return types.has('TSDeclareFunction')\n    && (\n      types.size === 1\n      || (types.size === 2 && types.has('FunctionDeclaration'))\n    );\n}\n\n/**\n * Detect merging Namespaces with Classes, Functions, or Enums like:\n * ```ts\n * export class Foo { }\n * export namespace Foo { }\n * ```\n * @param {Set<Object>} nodes\n * @returns {boolean}\n */\nfunction isTypescriptNamespaceMerging(nodes) {\n  const types = new Set(Array.from(nodes, node => node.parent.type));\n  const noNamespaceNodes = Array.from(nodes).filter((node) => node.parent.type !== 'TSModuleDeclaration');\n\n  return types.has('TSModuleDeclaration')\n    && (\n      types.size === 1\n      // Merging with functions\n      || (types.size === 2 && (types.has('FunctionDeclaration') || types.has('TSDeclareFunction')))\n      || (types.size === 3 && types.has('FunctionDeclaration') && types.has('TSDeclareFunction'))\n      // Merging with classes or enums\n      || (types.size === 2 && (types.has('ClassDeclaration') || types.has('TSEnumDeclaration')) && noNamespaceNodes.length === 1)\n    );\n}\n\n/**\n * Detect if a typescript namespace node should be reported as multiple export:\n * ```ts\n * export class Foo { }\n * export function Foo();\n * export namespace Foo { }\n * ```\n * @param {Object} node\n * @param {Set<Object>} nodes\n * @returns {boolean}\n */\nfunction shouldSkipTypescriptNamespace(node, nodes) {\n  const types = new Set(Array.from(nodes, node => node.parent.type));\n\n  return !isTypescriptNamespaceMerging(nodes)\n    && node.parent.type === 'TSModuleDeclaration'\n    && (\n      types.has('TSEnumDeclaration')\n      || types.has('ClassDeclaration')\n      || types.has('FunctionDeclaration')\n      || types.has('TSDeclareFunction')\n    );\n}\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('export'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    const namespace = new Map([[rootProgram, new Map()]]);\n\n    function addNamed(name, node, parent, isType) {\n      if (!namespace.has(parent)) {\n        namespace.set(parent, new Map());\n      }\n      const named = namespace.get(parent);\n\n      const key = isType ? `${tsTypePrefix}${name}` : name;\n      let nodes = named.get(key);\n\n      if (nodes == null) {\n        nodes = new Set();\n        named.set(key, nodes);\n      }\n\n      nodes.add(node);\n    }\n\n    function getParent(node) {\n      if (node.parent && node.parent.type === 'TSModuleBlock') {\n        return node.parent.parent;\n      }\n\n      // just in case somehow a non-ts namespace export declaration isn't directly\n      // parented to the root Program node\n      return rootProgram;\n    }\n\n    return {\n      ExportDefaultDeclaration(node) {\n        addNamed('default', node, getParent(node));\n      },\n\n      ExportSpecifier(node) {\n        addNamed(\n          node.exported.name || node.exported.value,\n          node.exported,\n          getParent(node.parent),\n        );\n      },\n\n      ExportNamedDeclaration(node) {\n        if (node.declaration == null) return;\n\n        const parent = getParent(node);\n        // support for old TypeScript versions\n        const isTypeVariableDecl = node.declaration.kind === 'type';\n\n        if (node.declaration.id != null) {\n          if (includes([\n            'TSTypeAliasDeclaration',\n            'TSInterfaceDeclaration',\n          ], node.declaration.type)) {\n            addNamed(node.declaration.id.name, node.declaration.id, parent, true);\n          } else {\n            addNamed(node.declaration.id.name, node.declaration.id, parent, isTypeVariableDecl);\n          }\n        }\n\n        if (node.declaration.declarations != null) {\n          for (const declaration of node.declaration.declarations) {\n            recursivePatternCapture(declaration.id, v =>\n              addNamed(v.name, v, parent, isTypeVariableDecl));\n          }\n        }\n      },\n\n      ExportAllDeclaration(node) {\n        if (node.source == null) return; // not sure if this is ever true\n\n        // `export * as X from 'path'` does not conflict\n        if (node.exported && node.exported.name) return;\n\n        const remoteExports = ExportMap.get(node.source.value, context);\n        if (remoteExports == null) return;\n\n        if (remoteExports.errors.length) {\n          remoteExports.reportErrors(context, node);\n          return;\n        }\n\n        const parent = getParent(node);\n\n        let any = false;\n        remoteExports.forEach((v, name) => {\n          if (name !== 'default') {\n            any = true; // poor man's filter\n            addNamed(name, node, parent);\n          }\n        });\n\n        if (!any) {\n          context.report(\n            node.source,\n            `No named exports found in module '${node.source.value}'.`,\n          );\n        }\n      },\n\n      'Program:exit': function () {\n        for (const [, named] of namespace) {\n          for (const [name, nodes] of named) {\n            if (nodes.size <= 1) continue;\n\n            if (isTypescriptFunctionOverloads(nodes) || isTypescriptNamespaceMerging(nodes)) continue;\n\n            for (const node of nodes) {\n              if (shouldSkipTypescriptNamespace(node, nodes)) continue;\n\n              if (name === 'default') {\n                context.report(node, 'Multiple default exports.');\n              } else {\n                context.report(\n                  node,\n                  `Multiple exports of name '${name.replace(tsTypePrefix, '')}'.`,\n                );\n              }\n            }\n          }\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-mutable-exports.js":{"lineLengths":[194,0,18,9,23,11,61,0,17,0,0,49,42,25,47,109,9,7,0,187,194,147,206,62,49,19,239,13,226,7,0,42,39,0,36,65,9,7,0,40,39,0,31,45,140,210,68,235,9,7,0,14,56,54,0,25,4204],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-mutable-exports.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","checkDeclaration","node","kind","report","checkDeclarationsInScope","name","variables","variable","defs","def","parent","handleExportDefault","scope","getScope","declaration","handleExportNamed","source","specifiers","specifier","local"],"mappings":"aAAA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,oBAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd,eAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACtBC,YADsB,GACbD,IADa,CACtBC,IADsB;AAE9B,YAAIA,SAAS,KAAT,IAAkBA,SAAS,KAA/B,EAAsC;AACpCH,kBAAQI,MAAR,CAAeF,IAAf,kCAA2CC,IAA3C;AACD;AACF;;AAED,eAASE,wBAAT,OAAiDC,IAAjD,EAAuD,KAAnBC,SAAmB,QAAnBA,SAAmB;AACrD,+BAAuBA,SAAvB,8HAAkC,KAAvBC,QAAuB;AAChC,gBAAIA,SAASF,IAAT,KAAkBA,IAAtB,EAA4B;AAC1B,sCAAkBE,SAASC,IAA3B,mIAAiC,KAAtBC,GAAsB;AAC/B,sBAAIA,IAAIf,IAAJ,KAAa,UAAb,IAA2Be,IAAIC,MAAnC,EAA2C;AACzCV,qCAAiBS,IAAIC,MAArB;AACD;AACF,iBALyB;AAM3B;AACF,WAToD;AAUtD;;AAED,eAASC,mBAAT,CAA6BV,IAA7B,EAAmC;AACjC,YAAMW,QAAQb,QAAQc,QAAR,EAAd;;AAEA,YAAIZ,KAAKa,WAAL,CAAiBT,IAArB,EAA2B;AACzBD,mCAAyBQ,KAAzB,EAAgCX,KAAKa,WAAL,CAAiBT,IAAjD;AACD;AACF;;AAED,eAASU,iBAAT,CAA2Bd,IAA3B,EAAiC;AAC/B,YAAMW,QAAQb,QAAQc,QAAR,EAAd;;AAEA,YAAIZ,KAAKa,WAAT,EAAuB;AACrBd,2BAAiBC,KAAKa,WAAtB;AACD,SAFD,MAEO,IAAI,CAACb,KAAKe,MAAV,EAAkB;AACvB,kCAAwBf,KAAKgB,UAA7B,mIAAyC,KAA9BC,SAA8B;AACvCd,uCAAyBQ,KAAzB,EAAgCM,UAAUC,KAAV,CAAgBd,IAAhD;AACD,aAHsB;AAIxB;AACF;;AAED,aAAO;AACL,oCAA4BM,mBADvB;AAEL,kCAA0BI,iBAFrB,EAAP;;AAID,KArDc,mBAAjB","file":"no-mutable-exports.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-mutable-exports'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    function checkDeclaration(node) {\n      const { kind } = node;\n      if (kind === 'var' || kind === 'let') {\n        context.report(node, `Exporting mutable '${kind}' binding, use 'const' instead.`);\n      }\n    }\n\n    function checkDeclarationsInScope({ variables }, name) {\n      for (const variable of variables) {\n        if (variable.name === name) {\n          for (const def of variable.defs) {\n            if (def.type === 'Variable' && def.parent) {\n              checkDeclaration(def.parent);\n            }\n          }\n        }\n      }\n    }\n\n    function handleExportDefault(node) {\n      const scope = context.getScope();\n\n      if (node.declaration.name) {\n        checkDeclarationsInScope(scope, node.declaration.name);\n      }\n    }\n\n    function handleExportNamed(node) {\n      const scope = context.getScope();\n\n      if (node.declaration)  {\n        checkDeclaration(node.declaration);\n      } else if (!node.source) {\n        for (const specifier of node.specifiers) {\n          checkDeclarationsInScope(scope, specifier.local.name);\n        }\n      }\n    }\n\n    return {\n      'ExportDefaultDeclaration': handleExportDefault,\n      'ExportNamedDeclaration': handleExportNamed,\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/extensions.js":{"lineLengths":[84,0,103,48,127,181,0,67,25,17,44,0,18,17,15,33,46,0,0,0,35,0,16,27,16,28,0,0,42,0,58,34,33,13,5,0,77,72,41,13,5,0,49,36,49,5,0,59,43,49,5,5,0,50,36,33,3,0,16,1,0,18,9,23,11,53,0,0,13,14,7,22,28,33,0,7,22,16,19,20,0,33,0,7,22,28,33,0,7,22,35,33,0,7,22,16,19,27,0,38,0,0,0,0,0,49,0,43,0,39,63,7,0,63,92,7,0,53,50,7,0,51,56,68,100,0,89,7,0,43,52,0,42,76,21,7,0,49,131,45,0,53,0,45,92,0,74,0,85,49,53,0,74,0,57,44,91,0,40,58,19,55,19,46,0,74,37,49,81,72,57,28,27,52,118,0,11,31,97,28,27,137,0,11,9,7,0,85,25,13612],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/extensions.js"],"names":["enumValues","patternProperties","type","properties","buildProperties","context","result","defaultConfig","pattern","ignorePackages","options","forEach","obj","undefined","Object","assign","module","exports","meta","docs","url","schema","anyOf","items","additionalItems","create","props","getModifier","extension","isUseOfExtensionRequired","isPackage","isUseOfExtensionForbidden","isResolvableWithoutExtension","file","path","extname","fileWithoutExtension","slice","length","resolvedFileWithoutExtension","isExternalRootModule","slashCount","split","checkFileExtension","source","node","value","importPathWithQueryString","settings","importPath","replace","resolvedPath","substring","endsWith","importKind","extensionRequired","extensionForbidden","report","message","commonjs"],"mappings":"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","file":"extensions.js","sourcesContent":["import path from 'path';\n\nimport resolve from 'eslint-module-utils/resolve';\nimport { isBuiltIn, isExternalModule, isScoped } from '../core/importType';\nimport moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nconst enumValues = { enum: [ 'always', 'ignorePackages', 'never' ] };\nconst patternProperties = {\n  type: 'object',\n  patternProperties: { '.*': enumValues },\n};\nconst properties = {\n  type: 'object',\n  properties: {\n    'pattern': patternProperties,\n    'ignorePackages': { type: 'boolean' },\n  },\n};\n\nfunction buildProperties(context) {\n\n  const result = {\n    defaultConfig: 'never',\n    pattern: {},\n    ignorePackages: false,\n  };\n\n  context.options.forEach(obj => {\n\n    // If this is a string, set defaultConfig to its value\n    if (typeof obj === 'string') {\n      result.defaultConfig = obj;\n      return;\n    }\n\n    // If this is not the new structure, transfer all props to result.pattern\n    if (obj.pattern === undefined && obj.ignorePackages === undefined) {\n      Object.assign(result.pattern, obj);\n      return;\n    }\n\n    // If pattern is provided, transfer all props\n    if (obj.pattern !== undefined) {\n      Object.assign(result.pattern, obj.pattern);\n    }\n\n    // If ignorePackages is provided, transfer it to result\n    if (obj.ignorePackages !== undefined) {\n      result.ignorePackages = obj.ignorePackages;\n    }\n  });\n\n  if (result.defaultConfig === 'ignorePackages') {\n    result.defaultConfig = 'always';\n    result.ignorePackages = true;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('extensions'),\n    },\n\n    schema: {\n      anyOf: [\n        {\n          type: 'array',\n          items: [enumValues],\n          additionalItems: false,\n        },\n        {\n          type: 'array',\n          items: [\n            enumValues,\n            properties,\n          ],\n          additionalItems: false,\n        },\n        {\n          type: 'array',\n          items: [properties],\n          additionalItems: false,\n        },\n        {\n          type: 'array',\n          items: [patternProperties],\n          additionalItems: false,\n        },\n        {\n          type: 'array',\n          items: [\n            enumValues,\n            patternProperties,\n          ],\n          additionalItems: false,\n        },\n      ],\n    },\n  },\n\n  create(context) {\n\n    const props = buildProperties(context);\n\n    function getModifier(extension) {\n      return props.pattern[extension] || props.defaultConfig;\n    }\n\n    function isUseOfExtensionRequired(extension, isPackage) {\n      return getModifier(extension) === 'always' && (!props.ignorePackages || !isPackage);\n    }\n\n    function isUseOfExtensionForbidden(extension) {\n      return getModifier(extension) === 'never';\n    }\n\n    function isResolvableWithoutExtension(file) {\n      const extension = path.extname(file);\n      const fileWithoutExtension = file.slice(0, -extension.length);\n      const resolvedFileWithoutExtension = resolve(fileWithoutExtension, context);\n\n      return resolvedFileWithoutExtension === resolve(file, context);\n    }\n\n    function isExternalRootModule(file) {\n      const slashCount = file.split('/').length - 1;\n\n      if (slashCount === 0)  return true;\n      if (isScoped(file) && slashCount <= 1) return true;\n      return false;\n    }\n\n    function checkFileExtension(source, node) {\n      // bail if the declaration doesn't have a source, e.g. \"export { foo };\", or if it's only partially typed like in an editor\n      if (!source || !source.value) return;\n      \n      const importPathWithQueryString = source.value;\n\n      // don't enforce anything on builtins\n      if (isBuiltIn(importPathWithQueryString, context.settings)) return;\n\n      const importPath = importPathWithQueryString.replace(/\\?(.*)$/, '');\n\n      // don't enforce in root external packages as they may have names with `.js`.\n      // Like `import Decimal from decimal.js`)\n      if (isExternalRootModule(importPath)) return;\n\n      const resolvedPath = resolve(importPath, context);\n\n      // get extension from resolved path, if possible.\n      // for unresolved, use source value.\n      const extension = path.extname(resolvedPath || importPath).substring(1);\n\n      // determine if this is a module\n      const isPackage = isExternalModule(\n        importPath,\n        resolve(importPath, context),\n        context,\n      ) || isScoped(importPath);\n\n      if (!extension || !importPath.endsWith(`.${extension}`)) {\n        // ignore type-only imports\n        if (node.importKind === 'type') return;\n        const extensionRequired = isUseOfExtensionRequired(extension, isPackage);\n        const extensionForbidden = isUseOfExtensionForbidden(extension);\n        if (extensionRequired && !extensionForbidden) {\n          context.report({\n            node: source,\n            message:\n              `Missing file extension ${extension ? `\"${extension}\" ` : ''}for \"${importPathWithQueryString}\"`,\n          });\n        }\n      } else if (extension) {\n        if (isUseOfExtensionForbidden(extension) && isResolvableWithoutExtension(importPath)) {\n          context.report({\n            node: source,\n            message: `Unexpected use of file extension \"${extension}\" for \"${importPathWithQueryString}\"`,\n          });\n        }\n      }\n    }\n\n    return moduleVisitor(checkFileExtension, { commonjs: true });\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/core/importType.js":{"lineLengths":[715,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,30,0,0,0,0,0,0,44,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1065,2938,1,12372],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/core/importType.js"],"names":["isAbsolute","isBuiltIn","isExternalModule","isExternalModuleMain","isScoped","isScopedMain","resolveImportType","baseModule","name","split","scope","pkg","isInternalRegexMatch","settings","internalScope","RegExp","test","path","base","extras","indexOf","context","arguments","length","TypeError","isModule","typeTest","isModuleMain","moduleRegExp","moduleMainRegExp","scopedRegExp","scopedMainRegExp","isRelativeToParent","indexFiles","isIndex","isRelativeToSibling","isExternalPath","packagePath","startsWith","folders","some","folder","folderPath","relativePath","isInternalPath","isExternalLookingName"],"mappings":"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","file":"importType.js","sourcesContent":["import { isAbsolute as nodeIsAbsolute, relative, resolve as nodeResolve } from 'path';\nimport isCoreModule from 'is-core-module';\n\nimport resolve from 'eslint-module-utils/resolve';\nimport { getContextPackagePath } from './packagePath';\n\nfunction baseModule(name) {\n  if (isScoped(name)) {\n    const [scope, pkg] = name.split('/');\n    return `${scope}/${pkg}`;\n  }\n  const [pkg] = name.split('/');\n  return pkg;\n}\n\nfunction isInternalRegexMatch(name, settings) {\n  const internalScope = (settings && settings['import/internal-regex']);\n  return internalScope && new RegExp(internalScope).test(name);\n}\n\nexport function isAbsolute(name) {\n  return typeof name === 'string' && nodeIsAbsolute(name);\n}\n\n// path is defined only when a resolver resolves to a non-standard path\nexport function isBuiltIn(name, settings, path) {\n  if (path || !name) return false;\n  const base = baseModule(name);\n  const extras = (settings && settings['import/core-modules']) || [];\n  return isCoreModule(base) || extras.indexOf(base) > -1;\n}\n\nexport function isExternalModule(name, path, context) {\n  if (arguments.length < 3) {                                                                                                                                                                              \n    throw new TypeError('isExternalModule: name, path, and context are all required');\n  }\n  return (isModule(name) || isScoped(name)) && typeTest(name, context, path) === 'external';\n}\n\nexport function isExternalModuleMain(name, path, context) {\n  if (arguments.length < 3) {                                                                                                                                                                              \n    throw new TypeError('isExternalModule: name, path, and context are all required');\n  }\n  return isModuleMain(name) && typeTest(name, context, path) === 'external';\n}\n\nconst moduleRegExp = /^\\w/;\nfunction isModule(name) {\n  return name && moduleRegExp.test(name);\n}\n\nconst moduleMainRegExp = /^[\\w]((?!\\/).)*$/;\nfunction isModuleMain(name) {\n  return name && moduleMainRegExp.test(name);\n}\n\nconst scopedRegExp = /^@[^/]+\\/?[^/]+/;\nexport function isScoped(name) {\n  return name && scopedRegExp.test(name);\n}\n\nconst scopedMainRegExp = /^@[^/]+\\/?[^/]+$/;\nexport function isScopedMain(name) {\n  return name && scopedMainRegExp.test(name);\n}\n\nfunction isRelativeToParent(name) {\n  return /^\\.\\.$|^\\.\\.[\\\\/]/.test(name);\n}\n\nconst indexFiles = ['.', './', './index', './index.js'];\nfunction isIndex(name) {\n  return indexFiles.indexOf(name) !== -1;\n}\n\nfunction isRelativeToSibling(name) {\n  return /^\\.[\\\\/]/.test(name);\n}\n\nfunction isExternalPath(path, context) {\n  if (!path) {\n    return false;\n  }\n\n  const { settings } = context;\n  const packagePath = getContextPackagePath(context);\n\n  if (relative(packagePath, path).startsWith('..')) {\n    return true;\n  }\n\n  const folders = (settings && settings['import/external-module-folders']) || ['node_modules'];\n  return folders.some((folder) => {\n    const folderPath = nodeResolve(packagePath, folder);\n    const relativePath = relative(folderPath, path);\n    return !relativePath.startsWith('..');\n  });\n}\n\nfunction isInternalPath(path, context) {\n  if (!path) {\n    return false;\n  }\n  const packagePath = getContextPackagePath(context);\n  return !relative(packagePath, path).startsWith('../');\n}\n\nfunction isExternalLookingName(name) {\n  return isModule(name) || isScoped(name);\n}\n\nfunction typeTest(name, context, path ) {\n  const { settings } = context;\n  if (isInternalRegexMatch(name, settings)) { return 'internal'; }\n  if (isAbsolute(name, settings, path)) { return 'absolute'; }\n  if (isBuiltIn(name, settings, path)) { return 'builtin'; }\n  if (isRelativeToParent(name, settings, path)) { return 'parent'; }\n  if (isIndex(name, settings, path)) { return 'index'; }\n  if (isRelativeToSibling(name, settings, path)) { return 'sibling'; }\n  if (isExternalPath(path, context)) { return 'external'; }\n  if (isInternalPath(path, context)) { return 'internal'; }\n  if (isExternalLookingName(name)) { return 'external'; }\n  return 'unknown';\n}\n\nexport default function resolveImportType(name, context) {\n  return typeTest(name, context, resolve(name, context));\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/core/packagePath.js":{"lineLengths":[83,0,0,0,0,54,0,0,0,48,0,0,0,0,701,111,12,76,88,3,14,1,2236],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/core/packagePath.js"],"names":["getContextPackagePath","getFilePackagePath","getFilePackageName","context","getPhysicalFilename","getFilename","filePath","fp","cwd","normalize","pkg","path","name"],"mappings":";;;;;AAKgBA,qB,GAAAA,qB;;;;AAIAC,kB,GAAAA,kB;;;;;AAKAC,kB,GAAAA,kB,CAdhB,4BACA,kD,6CACA,2D,qJAGO,SAASF,qBAAT,CAA+BG,OAA/B,EAAwC,CAC7C,OAAOF,mBAAmBE,QAAQC,mBAAR,GAA8BD,QAAQC,mBAAR,EAA9B,GAA8DD,QAAQE,WAAR,EAAjF,CAAP,CACD,CAEM,SAASJ,kBAAT,CAA4BK,QAA5B,EAAsC,CAC3C,IAAMC,KAAK,wBAAM,EAAEC,KAAKF,QAAP,EAAN,CAAX,CACA,OAAO,mBAAQC,EAAR,CAAP,CACD,CAEM,SAASL,kBAAT,CAA4BI,QAA5B,EAAsC;AACrB,8BAAU,EAAEE,KAAKF,QAAP,EAAiBG,WAAW,KAA5B,EAAV,CADqB,CACnCC,GADmC,cACnCA,GADmC,CAC9BC,IAD8B,cAC9BA,IAD8B;AAE3C,MAAID,GAAJ,EAAS;AACP;AACA,WAAOA,IAAIE,IAAJ,IAAYV,mBAAmB,mBAAQ,mBAAQS,IAAR,CAAR,CAAnB,CAAnB;AACD;AACD,SAAO,IAAP;AACD","file":"packagePath.js","sourcesContent":["import { dirname } from 'path';\nimport pkgUp from 'eslint-module-utils/pkgUp';\nimport readPkgUp from 'eslint-module-utils/readPkgUp';\n\n\nexport function getContextPackagePath(context) {\n  return getFilePackagePath(context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename());\n}\n\nexport function getFilePackagePath(filePath) {\n  const fp = pkgUp({ cwd: filePath });\n  return dirname(fp);\n}\n\nexport function getFilePackageName(filePath) {\n  const { pkg, path } = readPkgUp({ cwd: filePath, normalize: false });\n  if (pkg) {\n    // recursion in case of intermediate esm package.json without name found\n    return pkg.name || getFilePackageName(dirname(dirname(path)));\n  }\n  return null;\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-restricted-paths.js":{"lineLengths":[84,0,103,127,80,91,86,198,0,60,62,55,2,0,18,9,20,11,62,0,0,13,5,21,19,16,24,22,18,27,25,41,39,23,30,24,35,0,36,0,44,0,44,0,0,39,0,39,0,0,0,0,60,45,48,55,112,66,74,0,51,74,9,0,57,9,0,78,104,0,89,7,0,49,24,21,116,0,7,0,49,24,21,102,0,7,0,169,75,65,40,42,39,46,0,30,60,156,0,71,0,37,110,198,13,0,64,18,174,0,52,107,56,120,0,37,126,146,0,13,0,64,11,0,18,47,51,45,61,0,38,0,26,0,63,80,0,34,17,9,0,54,35,74,34,0,0,0,0,0,0,258,0,54,19,11,0,36,41,19,11,0,67,31,19,11,0,26,23,136,48,0,11,7,0,64,59,29,36,14368],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-restricted-paths.js"],"names":["containsPath","filepath","target","relative","path","startsWith","module","exports","meta","type","docs","url","schema","properties","zones","minItems","items","from","except","uniqueItems","message","additionalProperties","basePath","create","noRestrictedPaths","context","options","restrictedPaths","process","cwd","currentFilename","getPhysicalFilename","getFilename","matchingZones","filter","zone","targetPath","resolve","isValidExceptionPath","absoluteFromPath","absoluteExceptionPath","relativeExceptionPath","reportInvalidExceptionPath","node","report","reportInvalidExceptionGlob","makePathValidator","zoneFrom","zoneExcept","absoluteFrom","isGlobPattern","isPathRestricted","hasValidExceptions","isPathException","reportInvalidException","mm","Minimatch","absoluteImportPath","match","every","isGlob","exceptionsMm","map","some","absoluteExceptionPaths","exceptionPath","validators","checkForRestrictedImportPath","importPath","forEach","index","pathIsExcepted","data","source","value","commonjs"],"mappings":"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","file":"no-restricted-paths.js","sourcesContent":["import path from 'path';\n\nimport resolve from 'eslint-module-utils/resolve';\nimport moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport isGlob from 'is-glob';\nimport { Minimatch, default as minimatch } from 'minimatch';\nimport docsUrl from '../docsUrl';\nimport importType from '../core/importType';\n\nconst containsPath = (filepath, target) => {\n  const relative = path.relative(target, filepath);\n  return relative === '' || !relative.startsWith('..');\n};\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('no-restricted-paths'),\n    },\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          zones: {\n            type: 'array',\n            minItems: 1,\n            items: {\n              type: 'object',\n              properties: {\n                target: { type: 'string' },\n                from: { type: 'string' },\n                except: {\n                  type: 'array',\n                  items: {\n                    type: 'string',\n                  },\n                  uniqueItems: true,\n                },\n                message: { type: 'string' },\n              },\n              additionalProperties: false,\n            },\n          },\n          basePath: { type: 'string' },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create: function noRestrictedPaths(context) {\n    const options = context.options[0] || {};\n    const restrictedPaths = options.zones || [];\n    const basePath = options.basePath || process.cwd();\n    const currentFilename = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n    const matchingZones = restrictedPaths.filter((zone) => {\n      const targetPath = path.resolve(basePath, zone.target);\n\n      if (isGlob(targetPath)) {\n        return minimatch(currentFilename, targetPath);\n      }\n\n      return containsPath(currentFilename, targetPath);\n    });\n\n    function isValidExceptionPath(absoluteFromPath, absoluteExceptionPath) {\n      const relativeExceptionPath = path.relative(absoluteFromPath, absoluteExceptionPath);\n\n      return importType(relativeExceptionPath, context) !== 'parent';\n    }\n\n    function reportInvalidExceptionPath(node) {\n      context.report({\n        node,\n        message: 'Restricted path exceptions must be descendants of the configured `from` path for that zone.',\n      });\n    }\n\n    function reportInvalidExceptionGlob(node) {\n      context.report({\n        node,\n        message: 'Restricted path exceptions must be glob patterns when`from` is a glob pattern',\n      });\n    }\n\n    const makePathValidator = (zoneFrom, zoneExcept = []) => {\n      const absoluteFrom = path.resolve(basePath, zoneFrom);\n      const isGlobPattern = isGlob(zoneFrom);\n      let isPathRestricted;\n      let hasValidExceptions;\n      let isPathException;\n      let reportInvalidException;\n\n      if (isGlobPattern) {\n        const mm = new Minimatch(absoluteFrom);\n        isPathRestricted = (absoluteImportPath) => mm.match(absoluteImportPath);\n\n        hasValidExceptions = zoneExcept.every(isGlob);\n\n        if (hasValidExceptions) {\n          const exceptionsMm = zoneExcept.map((except) => new Minimatch(except));\n          isPathException = (absoluteImportPath) => exceptionsMm.some((mm) => mm.match(absoluteImportPath));\n        }\n\n        reportInvalidException = reportInvalidExceptionGlob;\n      } else {\n        isPathRestricted = (absoluteImportPath) => containsPath(absoluteImportPath, absoluteFrom);\n\n        const absoluteExceptionPaths = zoneExcept\n          .map((exceptionPath) => path.resolve(absoluteFrom, exceptionPath));\n        hasValidExceptions = absoluteExceptionPaths\n          .every((absoluteExceptionPath) => isValidExceptionPath(absoluteFrom, absoluteExceptionPath));\n\n        if (hasValidExceptions) {\n          isPathException = (absoluteImportPath) => absoluteExceptionPaths.some(\n            (absoluteExceptionPath) => containsPath(absoluteImportPath, absoluteExceptionPath),\n          );\n        }\n\n        reportInvalidException = reportInvalidExceptionPath;\n      }\n\n      return {\n        isPathRestricted,\n        hasValidExceptions,\n        isPathException,\n        reportInvalidException,\n      };\n    };\n\n    const validators = [];\n\n    function checkForRestrictedImportPath(importPath, node) {\n      const absoluteImportPath = resolve(importPath, context);\n\n      if (!absoluteImportPath) {\n        return;\n      }\n\n      matchingZones.forEach((zone, index) => {\n        if (!validators[index]) {\n          validators[index] = makePathValidator(zone.from, zone.except);\n        }\n\n        const {\n          isPathRestricted,\n          hasValidExceptions,\n          isPathException,\n          reportInvalidException,\n        } = validators[index];\n\n        if (!isPathRestricted(absoluteImportPath)) {\n          return;\n        }\n\n        if (!hasValidExceptions) {\n          reportInvalidException(node);\n          return;\n        }\n\n        const pathIsExcepted = isPathException(absoluteImportPath);\n        if (pathIsExcepted) {\n          return;\n        }\n\n        context.report({\n          node,\n          message: `Unexpected path \"{{importPath}}\" imported in restricted zone.${zone.message ? ` ${zone.message}` : ''}`,\n          data: { importPath },\n        });\n      });\n    }\n\n    return moduleVisitor((source) => {\n      checkForRestrictedImportPath(source.value, source);\n    }, { commonjs: true });\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-internal-modules.js":{"lineLengths":[104,0,103,103,127,181,0,18,9,23,11,62,0,0,13,5,14,7,23,21,18,26,20,35,0,0,0,38,0,7,23,21,19,26,20,35,0,0,0,44,0,0,0,0,0,0,59,45,108,110,0,78,55,39,46,7,0,34,38,19,37,38,23,37,36,18,36,11,15,7,0,56,44,78,7,0,58,46,79,7,0,45,40,0,92,52,0,73,56,40,97,0,75,52,70,79,0,72,31,20,7,0,46,40,0,73,57,40,0,100,0,75,52,70,79,0,88,21,7,0,76,83,0,57,93,104,37,9,26,23,83,0,9,7,0,64,53,29,35,11048],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-internal-modules.js"],"names":["module","exports","meta","type","docs","url","schema","oneOf","properties","allow","items","additionalProperties","forbid","create","noReachingInside","context","options","allowRegexps","map","minimatch","makeRe","p","forbidRegexps","normalizeSep","somePath","split","join","toSteps","reduce","acc","step","slice","concat","reachingAllowed","importPath","some","re","test","reachingForbidden","isAllowViolation","steps","nonScopeSteps","filter","indexOf","length","justSteps","resolved","isForbidViolation","isReachViolation","checkImportForReaching","node","potentialViolationTypes","report","message","source","value","commonjs"],"mappings":"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","file":"no-internal-modules.js","sourcesContent":["import minimatch from 'minimatch';\n\nimport resolve from 'eslint-module-utils/resolve';\nimport importType from '../core/importType';\nimport moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-internal-modules'),\n    },\n\n    schema: [\n      {\n        oneOf: [\n          {\n            type: 'object',\n            properties: {\n              allow: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n            },\n            additionalProperties: false,\n          },\n          {\n            type: 'object',\n            properties: {\n              forbid: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n            },\n            additionalProperties: false,\n          },\n        ],\n      },\n    ],\n  },\n\n  create: function noReachingInside(context) {\n    const options = context.options[0] || {};\n    const allowRegexps = (options.allow || []).map(p => minimatch.makeRe(p));\n    const forbidRegexps = (options.forbid || []).map(p => minimatch.makeRe(p));\n\n    // minimatch patterns are expected to use / path separators, like import\n    // statements, so normalize paths to use the same\n    function normalizeSep(somePath) {\n      return somePath.split('\\\\').join('/');\n    }\n\n    function toSteps(somePath) {\n      return  normalizeSep(somePath)\n        .split('/')\n        .reduce((acc, step) => {\n          if (!step || step === '.') {\n            return acc;\n          } else if (step === '..') {\n            return acc.slice(0, -1);\n          } else {\n            return acc.concat(step);\n          }\n        }, []);\n    }\n\n    // test if reaching to this destination is allowed\n    function reachingAllowed(importPath) {\n      return allowRegexps.some(re => re.test(importPath));\n    }\n\n    // test if reaching to this destination is forbidden\n    function reachingForbidden(importPath) {\n      return forbidRegexps.some(re => re.test(importPath));\n    }\n\n    function isAllowViolation(importPath) {\n      const steps = toSteps(importPath);\n\n      const nonScopeSteps = steps.filter(step => step.indexOf('@') !== 0);\n      if (nonScopeSteps.length <= 1) return false;\n\n      // before trying to resolve, see if the raw import (with relative\n      // segments resolved) matches an allowed pattern\n      const justSteps = steps.join('/');\n      if (reachingAllowed(justSteps) || reachingAllowed(`/${justSteps}`)) return false;\n\n      // if the import statement doesn't match directly, try to match the\n      // resolved path if the import is resolvable\n      const resolved = resolve(importPath, context);\n      if (!resolved || reachingAllowed(normalizeSep(resolved))) return false;\n\n      // this import was not allowed by the allowed paths, and reaches\n      // so it is a violation\n      return true;\n    }\n\n    function isForbidViolation(importPath) {\n      const steps = toSteps(importPath);\n\n      // before trying to resolve, see if the raw import (with relative\n      // segments resolved) matches a forbidden pattern\n      const justSteps = steps.join('/');\n\n      if (reachingForbidden(justSteps) || reachingForbidden(`/${justSteps}`)) return true;\n\n      // if the import statement doesn't match directly, try to match the\n      // resolved path if the import is resolvable\n      const resolved = resolve(importPath, context);\n      if (resolved && reachingForbidden(normalizeSep(resolved))) return true;\n\n      // this import was not forbidden by the forbidden paths so it is not a violation\n      return false;\n    }\n\n    // find a directory that is being reached into, but which shouldn't be\n    const isReachViolation = options.forbid ? isForbidViolation : isAllowViolation;\n\n    function checkImportForReaching(importPath, node) {\n      const potentialViolationTypes = ['parent', 'index', 'sibling', 'external', 'internal'];\n      if (potentialViolationTypes.indexOf(importType(importPath, context)) !== -1 &&\n        isReachViolation(importPath)\n      ) {\n        context.report({\n          node,\n          message: `Reaching to \"${importPath}\" is not allowed.`,\n        });\n      }\n    }\n\n    return moduleVisitor((source) => {\n      checkImportForReaching(source.value, source);\n    }, { commonjs: true });\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/group-exports.js":{"lineLengths":[99,86,212,0,12,21,9,56,0,0,28,14,127,124,0,27,0,3,125,30,39,30,77,100,30,87,102,39,31,30,17,0,6,38,0,44,38,12,5,0,23,45,0,15,1,0,26,15,14,21,20,0,12,21,20,0,15,25,0,0,0,10,80,78,27,31,70,55,16,53,9,41,0,76,52,17,9,0,45,0,40,94,63,83,39,17,9,0,49,59,39,17,9,39,0,52,65,41,53,28,25,44,0,13,9,0,85,89,115,33,26,23,42,0,11,0,75,39,51,28,25,44,0,13,9,0,95,87,115,33,26,23,42,0,11,0,66,42,54,28,25,44,0,13,9,27,0,1,0,18,13,19,10508],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/group-exports.js"],"names":["meta","type","docs","url","errors","ExportNamedDeclaration","AssignmentExpression","accessorChain","node","chain","unshift","property","name","object","create","context","nodes","modules","set","Set","sources","types","commonjs","target","exportKind","source","add","Array","isArray","value","push","left","length","onExit","size","forEach","report","message","filter","nodesWithSource","module","exports"],"mappings":"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","file":"group-exports.js","sourcesContent":["import docsUrl from '../docsUrl';\nimport values from 'object.values';\nimport flat from 'array.prototype.flat';\n\nconst meta = {\n  type: 'suggestion',\n  docs: {\n    url: docsUrl('group-exports'),\n  },\n};\n/* eslint-disable max-len */\nconst errors = {\n  ExportNamedDeclaration: 'Multiple named export declarations; consolidate all named exports into a single export declaration',\n  AssignmentExpression: 'Multiple CommonJS exports; consolidate all exports into a single assignment to `module.exports`',\n};\n/* eslint-enable max-len */\n\n/**\n * Returns an array with names of the properties in the accessor chain for MemberExpression nodes\n *\n * Example:\n *\n * `module.exports = {}` => ['module', 'exports']\n * `module.exports.property = true` => ['module', 'exports', 'property']\n *\n * @param     {Node}    node    AST Node (MemberExpression)\n * @return    {Array}           Array with the property names in the chain\n * @private\n */\nfunction accessorChain(node) {\n  const chain = [];\n\n  do {\n    chain.unshift(node.property.name);\n\n    if (node.object.type === 'Identifier') {\n      chain.unshift(node.object.name);\n      break;\n    }\n\n    node = node.object;\n  } while (node.type === 'MemberExpression');\n\n  return chain;\n}\n\nfunction create(context) {\n  const nodes = {\n    modules: {\n      set: new Set(),\n      sources: {},\n    },\n    types: {\n      set: new Set(),\n      sources: {},\n    },\n    commonjs: {\n      set: new Set(),\n    },\n  };\n\n  return {\n    ExportNamedDeclaration(node) {\n      const target = node.exportKind === 'type' ? nodes.types : nodes.modules;\n      if (!node.source) {\n        target.set.add(node);\n      } else if (Array.isArray(target.sources[node.source.value])) {\n        target.sources[node.source.value].push(node);\n      } else {\n        target.sources[node.source.value] = [node];\n      }\n    },\n\n    AssignmentExpression(node) {\n      if (node.left.type !== 'MemberExpression') {\n        return;\n      }\n\n      const chain = accessorChain(node.left);\n\n      // Assignments to module.exports\n      // Deeper assignments are ignored since they just modify what's already being exported\n      // (ie. module.exports.exported.prop = true is ignored)\n      if (chain[0] === 'module' && chain[1] === 'exports' && chain.length <= 3) {\n        nodes.commonjs.set.add(node);\n        return;\n      }\n\n      // Assignments to exports (exports.* = *)\n      if (chain[0] === 'exports' && chain.length === 2) {\n        nodes.commonjs.set.add(node);\n        return;\n      }\n    },\n\n    'Program:exit': function onExit() {\n      // Report multiple `export` declarations (ES2015 modules)\n      if (nodes.modules.set.size > 1) {\n        nodes.modules.set.forEach(node => {\n          context.report({\n            node,\n            message: errors[node.type],\n          });\n        });\n      }\n\n      // Report multiple `aggregated exports` from the same module (ES2015 modules)\n      flat(values(nodes.modules.sources)\n        .filter(nodesWithSource => Array.isArray(nodesWithSource) && nodesWithSource.length > 1))\n        .forEach((node) => {\n          context.report({\n            node,\n            message: errors[node.type],\n          });\n        });\n\n      // Report multiple `export type` declarations (FLOW ES2015 modules)\n      if (nodes.types.set.size > 1) {\n        nodes.types.set.forEach(node => {\n          context.report({\n            node,\n            message: errors[node.type],\n          });\n        });\n      }\n\n      // Report multiple `aggregated type exports` from the same module (FLOW ES2015 modules)\n      flat(values(nodes.types.sources)\n        .filter(nodesWithSource => Array.isArray(nodesWithSource) && nodesWithSource.length > 1))\n        .forEach((node) => {\n          context.report({\n            node,\n            message: errors[node.type],\n          });\n        });\n\n      // Report multiple `module.exports` assignments (CommonJS)\n      if (nodes.commonjs.set.size > 1) {\n        nodes.commonjs.set.forEach(node => {\n          context.report({\n            node,\n            message: errors[node.type],\n          });\n        });\n      }\n    },\n  };\n}\n\nmodule.exports = {\n  meta,\n  create,\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-relative-packages.js":{"lineLengths":[84,111,0,103,127,103,181,0,31,32,38,1,0,37,61,37,73,3,15,1,0,67,63,98,11,3,0,70,108,0,44,11,3,0,51,53,0,86,64,63,76,46,23,42,85,0,20,17,145,138,0,0,3,1,0,18,9,23,11,63,0,20,56,0,0,49,155,25,6500],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-relative-packages.js"],"names":["toPosixPath","filePath","replace","findNamedPackage","found","cwd","pkg","name","path","join","checkImportForRelativePackage","context","importPath","node","potentialViolationTypes","indexOf","resolvedImport","resolvedContext","getPhysicalFilename","getFilename","importPkg","contextPkg","importBaseName","basename","importRoot","dirname","properPath","relative","properImport","report","message","fix","fixer","replaceText","JSON","stringify","module","exports","meta","type","docs","url","fixable","schema","create","source","value","options"],"mappings":"aAAA,4B;AACA,0D;;AAEA,sD;AACA,kE;AACA,gD;AACA,qC;;AAEA;AACA,SAASA,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,SAAOA,SAASC,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0BF,QAA1B,EAAoC;AAClC,MAAMG,QAAQ,4BAAU,EAAEC,KAAKJ,QAAP,EAAV,CAAd;AACA,MAAIG,MAAME,GAAN,IAAa,CAACF,MAAME,GAAN,CAAUC,IAA5B,EAAkC;AAChC,WAAOJ,iBAAiBK,kBAAKC,IAAL,CAAUL,MAAMI,IAAhB,EAAsB,OAAtB,CAAjB,CAAP;AACD;AACD,SAAOJ,KAAP;AACD;;AAED,SAASM,6BAAT,CAAuCC,OAAvC,EAAgDC,UAAhD,EAA4DC,IAA5D,EAAkE;AAChE,MAAMC,0BAA0B,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,CAAhC;AACA,MAAIA,wBAAwBC,OAAxB,CAAgC,6BAAWH,UAAX,EAAuBD,OAAvB,CAAhC,MAAqE,CAAC,CAA1E,EAA6E;AAC3E;AACD;;AAED,MAAMK,iBAAiB,0BAAQJ,UAAR,EAAoBD,OAApB,CAAvB;AACA,MAAMM,kBAAkBN,QAAQO,mBAAR,GAA8BP,QAAQO,mBAAR,EAA9B,GAA8DP,QAAQQ,WAAR,EAAtF;;AAEA,MAAI,CAACH,cAAD,IAAmB,CAACC,eAAxB,EAAyC;AACvC;AACD;;AAED,MAAMG,YAAYjB,iBAAiBa,cAAjB,CAAlB;AACA,MAAMK,aAAalB,iBAAiBc,eAAjB,CAAnB;;AAEA,MAAIG,UAAUd,GAAV,IAAiBe,WAAWf,GAA5B,IAAmCc,UAAUd,GAAV,CAAcC,IAAd,KAAuBc,WAAWf,GAAX,CAAeC,IAA7E,EAAmF;AACjF,QAAMe,iBAAiBd,kBAAKe,QAAL,CAAcX,UAAd,CAAvB;AACA,QAAMY,aAAahB,kBAAKiB,OAAL,CAAaL,UAAUZ,IAAvB,CAAnB;AACA,QAAMkB,aAAalB,kBAAKmB,QAAL,CAAcH,UAAd,EAA0BR,cAA1B,CAAnB;AACA,QAAMY,eAAepB,kBAAKC,IAAL;AACnBW,cAAUd,GAAV,CAAcC,IADK;AAEnBC,sBAAKiB,OAAL,CAAaC,UAAb,CAFmB;AAGnBJ,uBAAmBd,kBAAKe,QAAL,CAAcC,UAAd,CAAnB,GAA+C,EAA/C,GAAoDF,cAHjC,CAArB;;AAKAX,YAAQkB,MAAR,CAAe;AACbhB,gBADa;AAEbiB,qFAAuEF,YAAvE,8BAAsGhB,UAAtG,OAFa;AAGbmB,wBAAK,4BAASC,MAAMC,WAAN,CAAkBpB,IAAlB,EAAwBqB,KAAKC,SAAL,CAAenC,YAAY4B,YAAZ,CAAf,CAAxB,CAAT,EAAL,cAHa,EAAf;;;AAMD;AACF;;AAEDQ,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,sBAAR,CADD,EAFF;;AAKJC,aAAS,MALL;AAMJC,YAAQ,CAAC,uCAAD,CANJ,EADS;;;AAUfC,QAVe,+BAURjC,OAVQ,EAUC;AACd,aAAO,gCAAc,UAACkC,MAAD,UAAYnC,8BAA8BC,OAA9B,EAAuCkC,OAAOC,KAA9C,EAAqDD,MAArD,CAAZ,EAAd,EAAwFlC,QAAQoC,OAAR,CAAgB,CAAhB,CAAxF,CAAP;AACD,KAZc,mBAAjB","file":"no-relative-packages.js","sourcesContent":["import path from 'path';\nimport readPkgUp from 'eslint-module-utils/readPkgUp';\n\nimport resolve from 'eslint-module-utils/resolve';\nimport moduleVisitor, { makeOptionsSchema } from 'eslint-module-utils/moduleVisitor';\nimport importType from '../core/importType';\nimport docsUrl from '../docsUrl';\n\n/** @param {string} filePath */\nfunction toPosixPath(filePath) {\n  return filePath.replace(/\\\\/g, '/');\n}\n\nfunction findNamedPackage(filePath) {\n  const found = readPkgUp({ cwd: filePath });\n  if (found.pkg && !found.pkg.name) {\n    return findNamedPackage(path.join(found.path, '../..'));\n  }\n  return found;\n}\n\nfunction checkImportForRelativePackage(context, importPath, node) {\n  const potentialViolationTypes = ['parent', 'index', 'sibling'];\n  if (potentialViolationTypes.indexOf(importType(importPath, context)) === -1) {\n    return;\n  }\n\n  const resolvedImport = resolve(importPath, context);\n  const resolvedContext = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n\n  if (!resolvedImport || !resolvedContext) {\n    return;\n  }\n\n  const importPkg = findNamedPackage(resolvedImport);\n  const contextPkg = findNamedPackage(resolvedContext);\n\n  if (importPkg.pkg && contextPkg.pkg && importPkg.pkg.name !== contextPkg.pkg.name) {\n    const importBaseName = path.basename(importPath);\n    const importRoot = path.dirname(importPkg.path);\n    const properPath = path.relative(importRoot, resolvedImport);\n    const properImport = path.join(\n      importPkg.pkg.name,\n      path.dirname(properPath),\n      importBaseName === path.basename(importRoot) ? '' : importBaseName,\n    );\n    context.report({\n      node,\n      message: `Relative import from another package is not allowed. Use \\`${properImport}\\` instead of \\`${importPath}\\``,\n      fix: fixer => fixer.replaceText(node, JSON.stringify(toPosixPath(properImport)))\n      ,\n    });\n  }\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-relative-packages'),\n    },\n    fixable: 'code',\n    schema: [makeOptionsSchema()],\n  },\n\n  create(context) {\n    return moduleVisitor((source) => checkImportForRelativePackage(context, source.value, source), context.options[0]);\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-relative-parent-imports.js":{"lineLengths":[140,86,28,103,0,198,0,18,9,23,11,69,0,56,0,0,61,103,67,0,45,39,0,94,17,9,0,69,0,51,17,9,0,85,0,77,26,29,193,0,86,87,0,9,7,0,83,37,3988],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-relative-parent-imports.js"],"names":["module","exports","meta","type","docs","url","schema","create","noRelativePackages","context","myPath","getPhysicalFilename","getFilename","checkSourceValue","sourceNode","depPath","value","absDepPath","relDepPath","report","node","message","options"],"mappings":"aAAA,kE;AACA,qC;AACA;AACA,sD;;AAEA,gD;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,4BAAR,CADD,EAFF;;AAKJC,YAAQ,CAAC,uCAAD,CALJ,EADS;;;AASfC,uBAAQ,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AAC3C,UAAMC,SAASD,QAAQE,mBAAR,GAA8BF,QAAQE,mBAAR,EAA9B,GAA8DF,QAAQG,WAAR,EAA7E;AACA,UAAIF,WAAW,QAAf,EAAyB,OAAO,EAAP,CAFkB,CAEP;;AAEpC,eAASG,gBAAT,CAA0BC,UAA1B,EAAsC;AACpC,YAAMC,UAAUD,WAAWE,KAA3B;;AAEA,YAAI,6BAAWD,OAAX,EAAoBN,OAApB,MAAiC,UAArC,EAAiD,CAAE;AACjD;AACD;;AAED,YAAMQ,aAAa,0BAAQF,OAAR,EAAiBN,OAAjB,CAAnB;;AAEA,YAAI,CAACQ,UAAL,EAAiB,CAAE;AACjB;AACD;;AAED,YAAMC,aAAa,oBAAS,mBAAQR,MAAR,CAAT,EAA0BO,UAA1B,CAAnB;;AAEA,YAAI,6BAAWC,UAAX,EAAuBT,OAAvB,MAAoC,QAAxC,EAAkD;AAChDA,kBAAQU,MAAR,CAAe;AACbC,kBAAMN,UADO;AAEbO,qBAAS;;AAE2B,gCAASX,MAAT,CAF3B;AAGWK,mBAHX,sCAG6CA,OAH7C,mBAFI,EAAf;;AAOD;AACF;;AAED,aAAO,gCAAcF,gBAAd,EAAgCJ,QAAQa,OAAR,CAAgB,CAAhB,CAAhC,CAAP;AACD,KA/BD,OAAiBd,kBAAjB,IATe,EAAjB","file":"no-relative-parent-imports.js","sourcesContent":["import moduleVisitor, { makeOptionsSchema } from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\nimport { basename, dirname, relative } from 'path';\nimport resolve from 'eslint-module-utils/resolve';\n\nimport importType from '../core/importType';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-relative-parent-imports'),\n    },\n    schema: [makeOptionsSchema()],\n  },\n\n  create: function noRelativePackages(context) {\n    const myPath = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n    if (myPath === '<text>') return {}; // can't check a non-file\n\n    function checkSourceValue(sourceNode) {\n      const depPath = sourceNode.value;\n\n      if (importType(depPath, context) === 'external') { // ignore packages\n        return;\n      }\n\n      const absDepPath = resolve(depPath, context);\n\n      if (!absDepPath) { // unable to resolve path\n        return;\n      }\n\n      const relDepPath = relative(dirname(myPath), absDepPath);\n\n      if (importType(relDepPath, context) === 'parent') {\n        context.report({\n          node: sourceNode,\n          message: 'Relative imports from parent directories are not allowed. ' +\n            `Please either pass what you're importing through at runtime ` +\n            `(dependency injection), move \\`${basename(myPath)}\\` to same ` +\n            `directory as \\`${depPath}\\` or consider making \\`${depPath}\\` a package.`,\n        });\n      }\n    }\n\n    return moduleVisitor(checkSourceValue, context.options[0]);\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-self-import.js":{"lineLengths":[13,0,0,0,0,103,127,181,0,54,101,0,53,94,20,17,43,0,3,5,57,25,31,20,11,59,24,57,0,0,17,0,49,70,53,29,25,2808],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-self-import.js"],"names":["isImportingSelf","context","node","requireName","filePath","getPhysicalFilename","getFilename","report","message","module","exports","meta","type","docs","description","recommended","url","schema","create","source","value","commonjs"],"mappings":";;;;;AAKA,sD;AACA,kE;AACA,qC;;AAEA,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,IAAlC,EAAwCC,WAAxC,EAAqD;AACnD,MAAMC,WAAWH,QAAQI,mBAAR,GAA8BJ,QAAQI,mBAAR,EAA9B,GAA8DJ,QAAQK,WAAR,EAA/E;;AAEA;AACA,MAAIF,aAAa,QAAb,IAAyBA,aAAa,0BAAQD,WAAR,EAAqBF,OAArB,CAA1C,EAAyE;AACvEA,YAAQM,MAAR,CAAe;AACbL,gBADa;AAEbM,eAAS,wBAFI,EAAf;;AAID;AACF,C,CAnBD;;;KAqBAC,OAAOC,OAAP,GAAiB,EACfC,MAAM;AACJC,UAAM,SADF;AAEJC,UAAM;AACJC,mBAAa,uCADT;AAEJC,mBAAa,IAFT;AAGJC,WAAK,0BAAQ,gBAAR,CAHD,EAFF;;;AAQJC,YAAQ,EARJ,EADS;;AAWfC,QAXe,+BAWRjB,OAXQ,EAWC;AACd,aAAO,gCAAc,UAACkB,MAAD,EAASjB,IAAT,EAAkB;AACrCF,wBAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BiB,OAAOC,KAAtC;AACD,OAFM,EAEJ,EAAEC,UAAU,IAAZ,EAFI,CAAP;AAGD,KAfc,mBAAjB","file":"no-self-import.js","sourcesContent":["/**\n * @fileOverview Forbids a module from importing itself\n * @author Gio d'Amelio\n */\n\nimport resolve from 'eslint-module-utils/resolve';\nimport moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nfunction isImportingSelf(context, node, requireName) {\n  const filePath = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n\n  // If the input is from stdin, this test can't fail\n  if (filePath !== '<text>' && filePath === resolve(requireName, context)) {\n    context.report({\n      node,\n      message: 'Module imports itself.',\n    });\n  }\n}\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Forbid a module from importing itself',\n      recommended: true,\n      url: docsUrl('no-self-import'),\n    },\n\n    schema: [],\n  },\n  create(context) {\n    return moduleVisitor((source, node) => {\n      isImportingSelf(context, node, source.value);\n    }, { commonjs: true });\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-cycle.js":{"lineLengths":[649,721,667,649,0,103,94,48,127,367,0,71,18,9,23,57,52,17,16,9,62,26,23,0,9,24,30,0,0,0,23,47,24,33,0,0,0,0,49,103,73,0,45,88,134,15,51,44,0,0,55,45,44,9,0,12,50,44,41,37,117,0,9,40,9,0,77,0,31,44,9,0,39,45,9,0,112,34,79,25,32,44,135,0,338,48,184,48,45,44,0,16,127,67,51,107,51,75,47,0,0,72,154,233,84,241,15,228,9,0,40,49,34,83,38,41,46,19,11,9,7,0,83,25,0,0,29,103,1,10292],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-cycle.js"],"names":["module","exports","meta","type","docs","url","schema","maxDepth","oneOf","description","minimum","ignoreExternal","create","context","myPath","getPhysicalFilename","getFilename","options","Infinity","ignoreModule","name","checkSourceValue","sourceNode","importer","value","importKind","specifiers","every","imported","Exports","get","path","untraversed","mget","route","traversed","Set","detectCycle","m","has","add","imports","getter","declarations","toTraverse","filter","source","isOnlyImportingTypes","length","push","concat","next","shift","message","routeString","report","map","s","loc","start","line","join"],"mappings":"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","file":"no-cycle.js","sourcesContent":["/**\n * @fileOverview Ensures that no imported module imports the linted module.\n * @author Ben Mosher\n */\n\nimport resolve from 'eslint-module-utils/resolve';\nimport Exports from '../ExportMap';\nimport { isExternalModule } from '../core/importType';\nimport moduleVisitor, { makeOptionsSchema } from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\n// todo: cache cycles / deep relationships for faster repeat evaluation\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: { url: docsUrl('no-cycle') },\n    schema: [makeOptionsSchema({\n      maxDepth: {\n        oneOf: [\n          {\n            description: 'maximum dependency depth to traverse',\n            type: 'integer',\n            minimum: 1,\n          },\n          {\n            enum: ['∞'],\n            type: 'string',\n          },\n        ],\n      },\n      ignoreExternal: {\n        description: 'ignore external modules',\n        type: 'boolean',\n        default: false,\n      },\n    })],\n  },\n\n  create(context) {\n    const myPath = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n    if (myPath === '<text>') return {}; // can't cycle-check a non-file\n\n    const options = context.options[0] || {};\n    const maxDepth = typeof options.maxDepth === 'number' ? options.maxDepth : Infinity;\n    const ignoreModule = (name) => options.ignoreExternal && isExternalModule(\n      name,\n      resolve(name, context),\n      context,\n    );\n\n    function checkSourceValue(sourceNode, importer) {\n      if (ignoreModule(sourceNode.value)) {\n        return; // ignore external modules\n      }\n\n      if (\n        importer.type === 'ImportDeclaration' && (\n          // import type { Foo } (TS and Flow)\n          importer.importKind === 'type' ||\n          // import { type Foo } (Flow)\n          importer.specifiers.every(({ importKind }) => importKind === 'type')\n        )\n      ) {\n        return; // ignore type imports\n      }\n\n      const imported = Exports.get(sourceNode.value, context);\n\n      if (imported == null) {\n        return;  // no-unresolved territory\n      }\n\n      if (imported.path === myPath) {\n        return;  // no-self-import territory\n      }\n\n      const untraversed = [{ mget: () => imported, route:[] }];\n      const traversed = new Set();\n      function detectCycle({ mget, route }) {\n        const m = mget();\n        if (m == null) return;\n        if (traversed.has(m.path)) return;\n        traversed.add(m.path);\n\n        for (const [path, { getter, declarations }] of m.imports) {\n          if (traversed.has(path)) continue;\n          const toTraverse = [...declarations].filter(({ source, isOnlyImportingTypes }) =>\n            !ignoreModule(source.value) &&\n            // Ignore only type imports\n            !isOnlyImportingTypes,\n          );\n          /*\n          Only report as a cycle if there are any import declarations that are considered by\n          the rule. For example:\n\n          a.ts:\n          import { foo } from './b' // should not be reported as a cycle\n\n          b.ts:\n          import type { Bar } from './a'\n          */\n          if (path === myPath && toTraverse.length > 0) return true;\n          if (route.length + 1 < maxDepth) {\n            for (const { source } of toTraverse) {\n              untraversed.push({ mget: getter, route: route.concat(source) });\n            }\n          }\n        }\n      }\n\n      while (untraversed.length > 0) {\n        const next = untraversed.shift(); // bfs!\n        if (detectCycle(next)) {\n          const message = (next.route.length > 0\n            ? `Dependency cycle via ${routeString(next.route)}`\n            : 'Dependency cycle detected.');\n          context.report(importer, message);\n          return;\n        }\n      }\n    }\n\n    return moduleVisitor(checkSourceValue, context.options[0]);\n  },\n};\n\nfunction routeString(route) {\n  return route.map(s => `${s.value}:${s.loc.start.line}`).join('=>');\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-default.js":{"lineLengths":[194,0,18,9,23,11,59,0,17,0,0,49,14,76,51,75,23,15,0,107,32,33,103,15,15,42,0,25,2248],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-named-default.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","node","specifiers","forEach","im","importKind","imported","name","value","report","local","message"],"mappings":"aAAA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,kBAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd,aAAO;AACL,0CAAqB,2BAAUC,IAAV,EAAgB;AACnCA,iBAAKC,UAAL,CAAgBC,OAAhB,CAAwB,UAAUC,EAAV,EAAc;AACpC,kBAAIA,GAAGC,UAAH,KAAkB,MAAlB,IAA4BD,GAAGC,UAAH,KAAkB,QAAlD,EAA4D;AAC1D;AACD;;AAED,kBAAID,GAAGT,IAAH,KAAY,iBAAZ,IAAiC,CAACS,GAAGE,QAAH,CAAYC,IAAZ,IAAoBH,GAAGE,QAAH,CAAYE,KAAjC,MAA4C,SAAjF,EAA4F;AAC1FR,wBAAQS,MAAR,CAAe;AACbR,wBAAMG,GAAGM,KADI;AAEbC,6EAAiDP,GAAGM,KAAH,CAASH,IAA1D,SAFa,EAAf;AAGD;AACF,aAVD;AAWD,WAZD,4BADK,EAAP;;AAeD,KAzBc,mBAAjB","file":"no-named-default.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-named-default'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      'ImportDeclaration': function (node) {\n        node.specifiers.forEach(function (im) {\n          if (im.importKind === 'type' || im.importKind === 'typeof') {\n            return;\n          }\n\n          if (im.type === 'ImportSpecifier' && (im.imported.name || im.imported.value) === 'default') {\n            context.report({\n              node: im.local,\n              message: `Use default import syntax to import '${im.local.name}'.` });\n          }\n        });\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-as-default.js":{"lineLengths":[107,126,181,0,18,9,20,11,62,0,17,0,0,49,56,45,65,0,71,0,84,36,0,36,53,17,9,0,37,54,0,42,69,50,0,9,7,14,67,72,0,25,3304],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-named-as-default.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","checkDefault","nameKey","defaultSpecifier","name","declaration","imports","Exports","get","source","value","errors","length","reportErrors","has","report","bind"],"mappings":"aAAA,yC;AACA,yD;AACA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,SADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,qBAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd,eAASC,YAAT,CAAsBC,OAAtB,EAA+BC,gBAA/B,EAAiD;AAC/C;AACA,YAAIA,iBAAiBD,OAAjB,EAA0BE,IAA1B,KAAmC,SAAvC,EAAkD;;AAElD,YAAMC,cAAc,oCAAkBL,OAAlB,CAApB;;AAEA,YAAMM,UAAUC,uBAAQC,GAAR,CAAYH,YAAYI,MAAZ,CAAmBC,KAA/B,EAAsCV,OAAtC,CAAhB;AACA,YAAIM,WAAW,IAAf,EAAqB;;AAErB,YAAIA,QAAQK,MAAR,CAAeC,MAAnB,EAA2B;AACzBN,kBAAQO,YAAR,CAAqBb,OAArB,EAA8BK,WAA9B;AACA;AACD;;AAED,YAAIC,QAAQQ,GAAR,CAAY,SAAZ;AACAR,gBAAQQ,GAAR,CAAYX,iBAAiBD,OAAjB,EAA0BE,IAAtC,CADJ,EACiD;;AAE/CJ,kBAAQe,MAAR,CAAeZ,gBAAf;AACE,qCAA2BA,iBAAiBD,OAAjB,EAA0BE,IAArD;AACA,gDAFF;;AAID;AACF;AACD,aAAO;AACL,kCAA0BH,aAAae,IAAb,CAAkB,IAAlB,EAAwB,OAAxB,CADrB;AAEL,kCAA0Bf,aAAae,IAAb,CAAkB,IAAlB,EAAwB,UAAxB,CAFrB,EAAP;;AAID,KArCc,mBAAjB","file":"no-named-as-default.js","sourcesContent":["import Exports from '../ExportMap';\nimport importDeclaration from '../importDeclaration';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('no-named-as-default'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    function checkDefault(nameKey, defaultSpecifier) {\n      // #566: default is a valid specifier\n      if (defaultSpecifier[nameKey].name === 'default') return;\n\n      const declaration = importDeclaration(context);\n\n      const imports = Exports.get(declaration.source.value, context);\n      if (imports == null) return;\n\n      if (imports.errors.length) {\n        imports.reportErrors(context, declaration);\n        return;\n      }\n\n      if (imports.has('default') &&\n          imports.has(defaultSpecifier[nameKey].name)) {\n\n        context.report(defaultSpecifier,\n          'Using exported name \\'' + defaultSpecifier[nameKey].name +\n          '\\' as identifier for default export.');\n\n      }\n    }\n    return {\n      'ImportDefaultSpecifier': checkDefault.bind(null, 'local'),\n      'ExportDefaultSpecifier': checkDefault.bind(null, 'exported'),\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-as-default-member.js":{"lineLengths":[13,0,0,0,0,0,94,126,181,0,80,18,80,0,18,9,23,11,69,0,17,0,0,49,0,34,41,0,42,71,86,38,0,38,55,17,9,0,42,31,50,0,7,0,64,63,57,52,7,0,39,42,42,56,7,0,52,27,43,28,40,0,35,0,143,218,66,59,226,7,0,36,67,55,147,0,246,65,51,74,0,30,27,24,97,87,83,30,0,0,235,11,7,0,14,54,45,60,44,0,29,102,50,80,76,29,8096],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-named-as-default-member.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","fileImports","Map","allPropertyLookups","handleImportDefault","node","declaration","exportMap","Exports","get","source","value","errors","length","reportErrors","set","local","name","sourcePath","storePropertyLookup","objectName","propName","lookups","push","handlePropLookup","object","property","handleDestructuringAssignment","isDestructure","id","init","properties","key","handleProgramExit","forEach","fileImport","namespace","has","report","message"],"mappings":"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","file":"no-named-as-default-member.js","sourcesContent":["/**\n * @fileoverview Rule to warn about potentially confused use of name exports\n * @author Desmond Brand\n * @copyright 2016 Desmond Brand. All rights reserved.\n * See LICENSE in root directory for full license.\n */\nimport Exports from '../ExportMap';\nimport importDeclaration from '../importDeclaration';\nimport docsUrl from '../docsUrl';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-named-as-default-member'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n\n    const fileImports = new Map();\n    const allPropertyLookups = new Map();\n\n    function handleImportDefault(node) {\n      const declaration = importDeclaration(context);\n      const exportMap = Exports.get(declaration.source.value, context);\n      if (exportMap == null) return;\n\n      if (exportMap.errors.length) {\n        exportMap.reportErrors(context, declaration);\n        return;\n      }\n\n      fileImports.set(node.local.name, {\n        exportMap,\n        sourcePath: declaration.source.value,\n      });\n    }\n\n    function storePropertyLookup(objectName, propName, node) {\n      const lookups = allPropertyLookups.get(objectName) || [];\n      lookups.push({ node, propName });\n      allPropertyLookups.set(objectName, lookups);\n    }\n\n    function handlePropLookup(node) {\n      const objectName = node.object.name;\n      const propName = node.property.name;\n      storePropertyLookup(objectName, propName, node);\n    }\n\n    function handleDestructuringAssignment(node) {\n      const isDestructure = (\n        node.id.type === 'ObjectPattern' &&\n        node.init != null &&\n        node.init.type === 'Identifier'\n      );\n      if (!isDestructure) return;\n\n      const objectName = node.init.name;\n      for (const { key } of node.id.properties) {\n        if (key == null) continue;  // true for rest properties\n        storePropertyLookup(objectName, key.name, key);\n      }\n    }\n\n    function handleProgramExit() {\n      allPropertyLookups.forEach((lookups, objectName) => {\n        const fileImport = fileImports.get(objectName);\n        if (fileImport == null) return;\n\n        for (const { propName, node } of lookups) {\n          // the default import can have a \"default\" property\n          if (propName === 'default') continue;\n          if (!fileImport.exportMap.namespace.has(propName)) continue;\n\n          context.report({\n            node,\n            message: (\n              `Caution: \\`${objectName}\\` also has a named export ` +\n              `\\`${propName}\\`. Check if you meant to write ` +\n              `\\`import {${propName}} from '${fileImport.sourcePath}'\\` ` +\n              'instead.'\n            ),\n          });\n        }\n      });\n    }\n\n    return {\n      'ImportDefaultSpecifier': handleImportDefault,\n      'MemberExpression': handlePropLookup,\n      'VariableDeclarator': handleDestructuringAssignment,\n      'Program:exit': handleProgramExit,\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-anonymous-default-export.js":{"lineLengths":[13,0,0,0,0,86,166,223,188,197,25,70,79,0,28,33,79,88,0,19,34,77,83,22,0,21,34,80,60,97,0,24,37,83,63,97,0,12,27,71,81,0,21,26,82,80,0,20,27,71,83,0,0,0,41,40,28,21,33,22,0,0,13,7,0,33,40,28,83,13,7,0,18,9,23,11,70,0,0,13,5,21,35,41,0,0,0,0,49,68,0,14,90,50,0,65,80,83,67,13,49,0,25,7824],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-anonymous-default-export.js"],"names":["defs","ArrayExpression","option","description","message","ArrowFunctionExpression","CallExpression","ClassDeclaration","forbid","node","declaration","id","FunctionDeclaration","Literal","ObjectExpression","TemplateLiteral","schemaProperties","Object","keys","map","key","reduce","acc","def","type","defaults","module","exports","meta","docs","url","schema","properties","create","context","options","assign","report"],"mappings":";;;;;AAKA,qC;AACA,0B,yIANA;;;sKAQA,IAAMA,OAAO,EACXC,iBAAiB;AACfC,YAAQ,YADO;AAEfC,iBAAa,oDAFE;AAGfC,aAAS,+DAHM,EADN;;AAMXC,2BAAyB;AACvBH,YAAQ,oBADe;AAEvBC,iBAAa,6DAFU;AAGvBC,aAAS,wEAHc,EANd;;AAWXE,kBAAgB;AACdJ,YAAQ,qBADM;AAEdC,iBAAa,2DAFC;AAGdC,aAAS,qEAHK;AAId,eAAS,IAJK,EAXL;;AAiBXG,oBAAkB;AAChBL,YAAQ,qBADQ;AAEhBC,iBAAa,8DAFG;AAGhBC,aAAS,8CAHO;AAIhBI,yBAAQ,gBAACC,IAAD,UAAU,CAACA,KAAKC,WAAL,CAAiBC,EAA5B,EAAR,iBAJgB,EAjBP;;AAuBXC,uBAAqB;AACnBV,YAAQ,wBADW;AAEnBC,iBAAa,iEAFM;AAGnBC,aAAS,iDAHU;AAInBI,yBAAQ,gBAACC,IAAD,UAAU,CAACA,KAAKC,WAAL,CAAiBC,EAA5B,EAAR,iBAJmB,EAvBV;;AA6BXE,WAAS;AACPX,YAAQ,cADD;AAEPC,iBAAa,qDAFN;AAGPC,aAAS,iEAHF,EA7BE;;AAkCXU,oBAAkB;AAChBZ,YAAQ,aADQ;AAEhBC,iBAAa,gEAFG;AAGhBC,aAAS,gEAHO,EAlCP;;AAuCXW,mBAAiB;AACfb,YAAQ,cADO;AAEfC,iBAAa,qDAFE;AAGfC,aAAS,iEAHM,EAvCN,EAAb;;;;AA8CA,IAAMY,mBAAmBC,OAAOC,IAAP,CAAYlB,IAAZ;AACtBmB,GADsB,CAClB,UAACC,GAAD,UAASpB,KAAKoB,GAAL,CAAT,EADkB;AAEtBC,MAFsB,CAEf,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpBD,MAAIC,IAAIrB,MAAR,IAAkB;AAChBC,iBAAaoB,IAAIpB,WADD;AAEhBqB,UAAM,SAFU,EAAlB;;;AAKA,SAAOF,GAAP;AACD,CATsB,EASpB,EAToB,CAAzB;;AAWA,IAAMG,WAAWR,OAAOC,IAAP,CAAYlB,IAAZ;AACdmB,GADc,CACV,UAACC,GAAD,UAASpB,KAAKoB,GAAL,CAAT,EADU;AAEdC,MAFc,CAEP,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpBD,MAAIC,IAAIrB,MAAR,IAAkB,sBAAIqB,GAAJ,EAAS,SAAT,IAAsBA,cAAtB,GAAoC,KAAtD;AACA,SAAOD,GAAP;AACD,CALc,EAKZ,EALY,CAAjB;;AAOAI,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJJ,UAAM,YADF;AAEJK,UAAM;AACJC,WAAK,0BAAQ,6BAAR,CADD,EAFF;;;AAMJC,YAAQ;AACN;AACEP,YAAM,QADR;AAEEQ,kBAAYhB,gBAFd;AAGE,8BAAwB,KAH1B,EADM,CANJ,EADS;;;;;AAgBfiB,QAhBe,+BAgBRC,OAhBQ,EAgBC;AACd,UAAMC,UAAUlB,OAAOmB,MAAP,CAAc,EAAd,EAAkBX,QAAlB,EAA4BS,QAAQC,OAAR,CAAgB,CAAhB,CAA5B,CAAhB;;AAEA,aAAO;AACL,iDAA4B,kCAAC1B,IAAD,EAAU;AACpC,gBAAMc,MAAMvB,KAAKS,KAAKC,WAAL,CAAiBc,IAAtB,CAAZ;;AAEA;AACA;AACA,gBAAID,OAAO,CAACY,QAAQZ,IAAIrB,MAAZ,CAAR,KAAgC,CAACqB,IAAIf,MAAL,IAAee,IAAIf,MAAJ,CAAWC,IAAX,CAA/C,CAAJ,EAAsE;AACpEyB,sBAAQG,MAAR,CAAe,EAAE5B,UAAF,EAAQL,SAASmB,IAAInB,OAArB,EAAf;AACD;AACF,WARD,mCADK,EAAP;;AAWD,KA9Bc,mBAAjB","file":"no-anonymous-default-export.js","sourcesContent":["/**\n * @fileoverview Rule to disallow anonymous default exports.\n * @author Duncan Beevers\n */\n\nimport docsUrl from '../docsUrl';\nimport has from 'has';\n\nconst defs = {\n  ArrayExpression: {\n    option: 'allowArray',\n    description: 'If `false`, will report default export of an array',\n    message: 'Assign array to a variable before exporting as module default',\n  },\n  ArrowFunctionExpression: {\n    option: 'allowArrowFunction',\n    description: 'If `false`, will report default export of an arrow function',\n    message: 'Assign arrow function to a variable before exporting as module default',\n  },\n  CallExpression: {\n    option: 'allowCallExpression',\n    description: 'If `false`, will report default export of a function call',\n    message: 'Assign call result to a variable before exporting as module default',\n    default: true,\n  },\n  ClassDeclaration: {\n    option: 'allowAnonymousClass',\n    description: 'If `false`, will report default export of an anonymous class',\n    message: 'Unexpected default export of anonymous class',\n    forbid: (node) => !node.declaration.id,\n  },\n  FunctionDeclaration: {\n    option: 'allowAnonymousFunction',\n    description: 'If `false`, will report default export of an anonymous function',\n    message: 'Unexpected default export of anonymous function',\n    forbid: (node) => !node.declaration.id,\n  },\n  Literal: {\n    option: 'allowLiteral',\n    description: 'If `false`, will report default export of a literal',\n    message: 'Assign literal to a variable before exporting as module default',\n  },\n  ObjectExpression: {\n    option: 'allowObject',\n    description: 'If `false`, will report default export of an object expression',\n    message: 'Assign object to a variable before exporting as module default',\n  },\n  TemplateLiteral: {\n    option: 'allowLiteral',\n    description: 'If `false`, will report default export of a literal',\n    message: 'Assign literal to a variable before exporting as module default',\n  },\n};\n\nconst schemaProperties = Object.keys(defs)\n  .map((key) => defs[key])\n  .reduce((acc, def) => {\n    acc[def.option] = {\n      description: def.description,\n      type: 'boolean',\n    };\n\n    return acc;\n  }, {});\n\nconst defaults = Object.keys(defs)\n  .map((key) => defs[key])\n  .reduce((acc, def) => {\n    acc[def.option] = has(def, 'default') ? def.default : false;\n    return acc;\n  }, {});\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-anonymous-default-export'),\n    },\n\n    schema: [\n      {\n        type: 'object',\n        properties: schemaProperties,\n        'additionalProperties': false,\n      },\n    ],\n  },\n\n  create(context) {\n    const options = Object.assign({}, defaults, context.options[0]);\n\n    return {\n      'ExportDefaultDeclaration': (node) => {\n        const def = defs[node.declaration.type];\n\n        // Recognized node type and allowed by configuration,\n        //   and has no forbid check, or forbid check return value is truthy\n        if (def && !options[def.option] && (!def.forbid || def.forbid(node))) {\n          context.report({ node, message: def.message });\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-unused-modules.js":{"lineLengths":[278,0,0,0,0,0,94,52,103,95,86,28,113,86,393,454,435,413,453,19,82,13,22,0,125,59,9,96,118,0,92,87,85,73,48,36,0,8,32,102,0,73,61,67,105,14,24,0,53,8,5,3,1,0,21,69,32,32,0,0,120,25,32,0,4,1,0,60,56,52,45,60,56,49,49,43,30,37,56,57,46,24,0,56,20,8,48,45,52,53,45,5,30,59,75,41,74,46,31,13,13,16,22,9,9,5,3,1,0,3,30,4,80,72,77,78,74,4,60,4,37,4,51,4,59,4,50,5,27,0,3,56,30,107,98,106,107,105,40,30,108,30,50,47,30,87,30,63,30,77,30,100,30,71,31,27,0,30,0,29,32,0,48,43,2,0,3,67,5,93,6,71,80,0,27,56,0,34,71,112,0,73,159,27,5,18,2,0,3,92,6,85,28,36,28,28,67,28,0,20,0,0,0,0,190,0,43,39,39,53,41,34,17,9,0,46,9,44,0,47,30,74,16,53,9,41,24,17,9,53,34,38,50,16,37,9,49,92,16,48,9,48,9,0,53,32,17,9,56,111,102,0,38,9,36,0,58,35,15,7,47,30,74,16,53,9,9,5,66,70,34,5,43,34,47,27,71,41,7,7,5,2,0,3,84,33,6,48,52,45,40,43,48,33,61,51,66,49,18,38,11,49,57,60,52,37,63,13,11,11,7,7,5,2,0,35,12,15,3,25,2,0,3,89,35,6,22,28,73,35,28,48,87,0,38,11,3,0,21,21,23,26,0,63,46,19,30,2,0,86,109,0,82,107,0,62,89,42,0,68,55,18,5,4,0,68,124,63,18,5,4,0,56,39,43,5,0,91,43,5,4,0,32,17,3,0,16,33,18,5,3,0,20,37,18,5,3,0,17,40,18,5,3,0,15,2,0,18,9,23,66,14,19,14,78,24,22,18,27,29,0,0,24,22,96,24,22,18,27,29,0,0,25,60,28,0,24,58,30,0,0,12,21,45,50,0,0,15,14,23,50,0,0,39,7,14,23,51,0,0,38,7,21,46,0,38,7,21,47,0,45,0,0,0,0,60,0,0,0,0,0,240,0,26,51,7,0,101,0,81,32,19,11,0,39,19,11,0,49,66,77,0,56,60,37,100,27,83,11,61,72,40,0,78,31,19,11,0,39,19,11,0,34,19,11,0,42,19,11,0,68,36,73,38,40,21,13,11,0,41,0,40,62,95,47,21,13,11,0,43,73,56,54,21,13,11,0,100,96,0,56,0,85,0,55,53,29,47,58,0,13,18,27,45,56,0,11,31,0,9,75,34,82,35,77,39,19,11,0,45,0,55,45,47,32,11,0,37,47,0,134,54,65,13,52,42,57,43,98,19,19,15,73,47,17,13,13,0,96,49,48,41,13,13,0,68,55,36,60,13,13,0,57,62,73,0,56,56,11,0,60,71,43,38,0,9,82,41,89,42,77,31,19,11,0,52,54,39,11,0,46,46,0,39,39,0,44,44,0,37,37,56,52,36,13,56,43,13,54,41,13,42,55,49,41,15,15,13,0,49,44,26,13,69,28,26,13,39,11,0,66,77,51,43,73,53,59,17,44,0,0,48,38,0,57,60,35,108,65,75,41,56,26,55,19,19,15,13,0,58,106,45,13,0,54,106,34,23,15,0,47,23,15,0,65,54,15,0,63,52,15,0,63,66,64,25,17,98,17,13,13,0,49,43,54,51,36,15,50,49,0,51,41,52,69,22,37,48,15,0,57,50,22,42,36,79,15,13,13,0,49,43,54,56,0,52,53,74,59,58,17,15,13,13,0,54,48,54,51,36,15,52,49,0,52,41,53,72,22,38,49,15,0,57,50,22,42,36,82,15,13,13,0,54,48,54,58,0,52,53,76,59,58,17,15,13,13,0,56,50,54,51,36,15,54,49,0,52,41,53,74,22,38,49,15,0,57,50,22,42,36,84,15,13,13,0,56,50,54,60,0,52,53,78,59,58,17,15,13,13,0,52,39,54,51,36,15,31,49,0,52,41,53,51,22,38,49,15,0,57,50,22,42,36,61,15,13,13,0,52,39,54,37,0,52,53,55,59,58,17,15,13,13,38,0,14,65,36,36,38,34,90,55,47,86,58,84,15,76,37,15,47,0,25,72492],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-unused-modules.js"],"names":["FileEnumerator","listFilesToProcess","require","e","originalListFilesToProcess","src","extensions","patterns","reduce","carry","pattern","concat","map","extension","test","slice","Array","from","iterateFiles","filePath","ignored","filename","EXPORT_DEFAULT_DECLARATION","EXPORT_NAMED_DECLARATION","EXPORT_ALL_DECLARATION","IMPORT_DECLARATION","IMPORT_NAMESPACE_SPECIFIER","IMPORT_DEFAULT_SPECIFIER","VARIABLE_DECLARATION","FUNCTION_DECLARATION","CLASS_DECLARATION","IDENTIFIER","OBJECT_PATTERN","TS_INTERFACE_DECLARATION","TS_TYPE_ALIAS_DECLARATION","TS_ENUM_DECLARATION","DEFAULT","forEachDeclarationIdentifier","declaration","cb","type","id","name","declarations","forEach","importList","Map","exportList","visitorKeyMap","ignoredFiles","Set","filesOutsideSrc","isNodeModule","path","resolveFiles","ignoreExports","context","settings","srcFiles","srcFileList","ignoredFilesList","add","filter","prepareImportsAndExports","exportAll","exports","imports","currentExports","Exports","get","file","dependencies","reexports","localImportList","namespace","visitorKeys","set","currentExportAll","dependency","getDependency","value","key","whereUsed","reexport","getImport","localImport","currentValue","local","importedSpecifiers","specifier","has","val","currentExport","determineUsage","listValue","listKey","currentImport","exportStatement","getSrc","process","cwd","lastPrepareKey","doPreparation","prepareKey","JSON","stringify","sort","clear","newNamespaceImportExists","specifiers","some","newDefaultImportExists","fileIsInPkg","pkg","basePath","checkPkgFieldString","pkgField","checkPkgFieldObject","pkgFieldFiles","checkPkgField","bin","browser","main","module","meta","docs","url","schema","properties","description","minItems","items","minLength","missingExports","unusedExports","not","anyOf","required","create","options","getPhysicalFilename","getFilename","checkExportPresence","exportCount","namespaceImports","size","report","node","body","checkUsage","exportedValue","exportsKey","updateExportUsage","newExports","newExportIdentifiers","length","exported","updateImportUsage","oldImportPaths","oldNamespaceImports","newNamespaceImports","oldExportAll","newExportAll","oldDefaultImports","newDefaultImports","oldImports","newImports","processDynamicImport","source","p","ImportExpression","child","CallExpression","callee","arguments","resolvedPath","astNode","raw","replace","imported"],"mappings":"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","file":"no-unused-modules.js","sourcesContent":["/**\n * @fileOverview Ensures that modules contain exports and/or all\n * modules are consumed within other modules.\n * @author René Fermann\n */\n\nimport Exports, { recursivePatternCapture } from '../ExportMap';\nimport { getFileExtensions } from 'eslint-module-utils/ignore';\nimport resolve from 'eslint-module-utils/resolve';\nimport visit from 'eslint-module-utils/visit';\nimport docsUrl from '../docsUrl';\nimport { dirname, join } from 'path';\nimport readPkgUp from 'eslint-module-utils/readPkgUp';\nimport values from 'object.values';\nimport includes from 'array-includes';\n\nlet FileEnumerator;\nlet listFilesToProcess;\n\ntry {\n  ({ FileEnumerator } = require('eslint/use-at-your-own-risk'));\n} catch (e) {\n  try {\n    // has been moved to eslint/lib/cli-engine/file-enumerator in version 6\n    ({ FileEnumerator } = require('eslint/lib/cli-engine/file-enumerator'));\n  } catch (e) {\n    try {\n      // eslint/lib/util/glob-util has been moved to eslint/lib/util/glob-utils with version 5.3\n      const { listFilesToProcess: originalListFilesToProcess } = require('eslint/lib/util/glob-utils');\n\n      // Prevent passing invalid options (extensions array) to old versions of the function.\n      // https://github.com/eslint/eslint/blob/v5.16.0/lib/util/glob-utils.js#L178-L280\n      // https://github.com/eslint/eslint/blob/v5.2.0/lib/util/glob-util.js#L174-L269\n      listFilesToProcess = function (src, extensions) {\n        return originalListFilesToProcess(src, {\n          extensions,\n        });\n      };\n    } catch (e) {\n      const { listFilesToProcess: originalListFilesToProcess } = require('eslint/lib/util/glob-util');\n      \n      listFilesToProcess = function (src, extensions) {\n        const patterns = src.reduce((carry, pattern) => {\n          return carry.concat(extensions.map((extension) => {\n            return /\\*\\*|\\*\\./.test(pattern) ? pattern : `${pattern}/**/*${extension}`;\n          }));\n        }, src.slice());\n    \n        return originalListFilesToProcess(patterns);\n      };\n    }\n  }\n}\n\nif (FileEnumerator) {\n  listFilesToProcess = function (src, extensions) {\n    const e = new FileEnumerator({\n      extensions,\n    });\n\n    return Array.from(e.iterateFiles(src), ({ filePath, ignored }) => ({\n      ignored,\n      filename: filePath,\n    }));\n  };\n}\n\nconst EXPORT_DEFAULT_DECLARATION = 'ExportDefaultDeclaration';\nconst EXPORT_NAMED_DECLARATION = 'ExportNamedDeclaration';\nconst EXPORT_ALL_DECLARATION = 'ExportAllDeclaration';\nconst IMPORT_DECLARATION = 'ImportDeclaration';\nconst IMPORT_NAMESPACE_SPECIFIER = 'ImportNamespaceSpecifier';\nconst IMPORT_DEFAULT_SPECIFIER = 'ImportDefaultSpecifier';\nconst VARIABLE_DECLARATION = 'VariableDeclaration';\nconst FUNCTION_DECLARATION = 'FunctionDeclaration';\nconst CLASS_DECLARATION = 'ClassDeclaration';\nconst IDENTIFIER = 'Identifier';\nconst OBJECT_PATTERN = 'ObjectPattern';\nconst TS_INTERFACE_DECLARATION = 'TSInterfaceDeclaration';\nconst TS_TYPE_ALIAS_DECLARATION = 'TSTypeAliasDeclaration';\nconst TS_ENUM_DECLARATION = 'TSEnumDeclaration';\nconst DEFAULT = 'default';\n\nfunction forEachDeclarationIdentifier(declaration, cb) {\n  if (declaration) {\n    if (\n      declaration.type === FUNCTION_DECLARATION ||\n      declaration.type === CLASS_DECLARATION ||\n      declaration.type === TS_INTERFACE_DECLARATION ||\n      declaration.type === TS_TYPE_ALIAS_DECLARATION ||\n      declaration.type === TS_ENUM_DECLARATION\n    ) {\n      cb(declaration.id.name);\n    } else if (declaration.type === VARIABLE_DECLARATION) {\n      declaration.declarations.forEach(({ id }) => {\n        if (id.type === OBJECT_PATTERN) {\n          recursivePatternCapture(id, (pattern) => {\n            if (pattern.type === IDENTIFIER) {\n              cb(pattern.name);\n            }\n          });\n        } else {\n          cb(id.name);\n        }\n      });\n    }\n  }\n}\n\n/**\n * List of imports per file.\n *\n * Represented by a two-level Map to a Set of identifiers. The upper-level Map\n * keys are the paths to the modules containing the imports, while the\n * lower-level Map keys are the paths to the files which are being imported\n * from. Lastly, the Set of identifiers contains either names being imported\n * or a special AST node name listed above (e.g ImportDefaultSpecifier).\n *\n * For example, if we have a file named foo.js containing:\n *\n *   import { o2 } from './bar.js';\n *\n * Then we will have a structure that looks like:\n *\n *   Map { 'foo.js' => Map { 'bar.js' => Set { 'o2' } } }\n *\n * @type {Map<string, Map<string, Set<string>>>}\n */\nconst importList = new Map();\n\n/**\n * List of exports per file.\n *\n * Represented by a two-level Map to an object of metadata. The upper-level Map\n * keys are the paths to the modules containing the exports, while the\n * lower-level Map keys are the specific identifiers or special AST node names\n * being exported. The leaf-level metadata object at the moment only contains a\n * `whereUsed` property, which contains a Set of paths to modules that import\n * the name.\n *\n * For example, if we have a file named bar.js containing the following exports:\n *\n *   const o2 = 'bar';\n *   export { o2 };\n *\n * And a file named foo.js containing the following import:\n *\n *   import { o2 } from './bar.js';\n *\n * Then we will have a structure that looks like:\n *\n *   Map { 'bar.js' => Map { 'o2' => { whereUsed: Set { 'foo.js' } } } }\n *\n * @type {Map<string, Map<string, object>>}\n */\nconst exportList = new Map();\n\nconst visitorKeyMap = new Map();\n\nconst ignoredFiles = new Set();\nconst filesOutsideSrc = new Set();\n\nconst isNodeModule = path => {\n  return /\\/(node_modules)\\//.test(path);\n};\n\n/**\n * read all files matching the patterns in src and ignoreExports\n *\n * return all files matching src pattern, which are not matching the ignoreExports pattern\n */\nconst resolveFiles = (src, ignoreExports, context) => {\n  const extensions = Array.from(getFileExtensions(context.settings));\n\n  const srcFiles = new Set();\n  const srcFileList = listFilesToProcess(src, extensions);\n\n  // prepare list of ignored files\n  const ignoredFilesList =  listFilesToProcess(ignoreExports, extensions);\n  ignoredFilesList.forEach(({ filename }) => ignoredFiles.add(filename));\n\n  // prepare list of source files, don't consider files from node_modules\n  srcFileList.filter(({ filename }) => !isNodeModule(filename)).forEach(({ filename }) => {\n    srcFiles.add(filename);\n  });\n  return srcFiles;\n};\n\n/**\n * parse all source files and build up 2 maps containing the existing imports and exports\n */\nconst prepareImportsAndExports = (srcFiles, context) => {\n  const exportAll = new Map();\n  srcFiles.forEach(file => {\n    const exports = new Map();\n    const imports = new Map();\n    const currentExports = Exports.get(file, context);\n    if (currentExports) {\n      const {\n        dependencies,\n        reexports,\n        imports: localImportList,\n        namespace,\n        visitorKeys,\n      } = currentExports;\n\n      visitorKeyMap.set(file, visitorKeys);\n      // dependencies === export * from\n      const currentExportAll = new Set();\n      dependencies.forEach(getDependency => {\n        const dependency = getDependency();\n        if (dependency === null) {\n          return;\n        }\n\n        currentExportAll.add(dependency.path);\n      });\n      exportAll.set(file, currentExportAll);\n\n      reexports.forEach((value, key) => {\n        if (key === DEFAULT) {\n          exports.set(IMPORT_DEFAULT_SPECIFIER, { whereUsed: new Set() });\n        } else {\n          exports.set(key, { whereUsed: new Set() });\n        }\n        const reexport =  value.getImport();\n        if (!reexport) {\n          return;\n        }\n        let localImport = imports.get(reexport.path);\n        let currentValue;\n        if (value.local === DEFAULT) {\n          currentValue = IMPORT_DEFAULT_SPECIFIER;\n        } else {\n          currentValue = value.local;\n        }\n        if (typeof localImport !== 'undefined') {\n          localImport = new Set([...localImport, currentValue]);\n        } else {\n          localImport = new Set([currentValue]);\n        }\n        imports.set(reexport.path, localImport);\n      });\n\n      localImportList.forEach((value, key) => {\n        if (isNodeModule(key)) {\n          return;\n        }\n        const localImport = imports.get(key) || new Set();\n        value.declarations.forEach(({ importedSpecifiers }) =>\n          importedSpecifiers.forEach(specifier => localImport.add(specifier)),\n        );\n        imports.set(key, localImport);\n      });\n      importList.set(file, imports);\n\n      // build up export list only, if file is not ignored\n      if (ignoredFiles.has(file)) {\n        return;\n      }\n      namespace.forEach((value, key) => {\n        if (key === DEFAULT) {\n          exports.set(IMPORT_DEFAULT_SPECIFIER, { whereUsed: new Set() });\n        } else {\n          exports.set(key, { whereUsed: new Set() });\n        }\n      });\n    }\n    exports.set(EXPORT_ALL_DECLARATION, { whereUsed: new Set() });\n    exports.set(IMPORT_NAMESPACE_SPECIFIER, { whereUsed: new Set() });\n    exportList.set(file, exports);\n  });\n  exportAll.forEach((value, key) => {\n    value.forEach(val => {\n      const currentExports = exportList.get(val);\n      if (currentExports) {\n        const currentExport = currentExports.get(EXPORT_ALL_DECLARATION);\n        currentExport.whereUsed.add(key);\n      }\n    });\n  });\n};\n\n/**\n * traverse through all imports and add the respective path to the whereUsed-list\n * of the corresponding export\n */\nconst determineUsage = () => {\n  importList.forEach((listValue, listKey) => {\n    listValue.forEach((value, key) => {\n      const exports = exportList.get(key);\n      if (typeof exports !== 'undefined') {\n        value.forEach(currentImport => {\n          let specifier;\n          if (currentImport === IMPORT_NAMESPACE_SPECIFIER) {\n            specifier = IMPORT_NAMESPACE_SPECIFIER;\n          } else if (currentImport === IMPORT_DEFAULT_SPECIFIER) {\n            specifier = IMPORT_DEFAULT_SPECIFIER;\n          } else {\n            specifier = currentImport;\n          }\n          if (typeof specifier !== 'undefined') {\n            const exportStatement = exports.get(specifier);\n            if (typeof exportStatement !== 'undefined') {\n              const { whereUsed } = exportStatement;\n              whereUsed.add(listKey);\n              exports.set(specifier, { whereUsed });\n            }\n          }\n        });\n      }\n    });\n  });\n};\n\nconst getSrc = src => {\n  if (src) {\n    return src;\n  }\n  return [process.cwd()];\n};\n\n/**\n * prepare the lists of existing imports and exports - should only be executed once at\n * the start of a new eslint run\n */\nlet srcFiles;\nlet lastPrepareKey;\nconst doPreparation = (src, ignoreExports, context) => {\n  const prepareKey = JSON.stringify({\n    src: (src || []).sort(),\n    ignoreExports: (ignoreExports || []).sort(),\n    extensions: Array.from(getFileExtensions(context.settings)).sort(),\n  });\n  if (prepareKey === lastPrepareKey) {\n    return;\n  }\n\n  importList.clear();\n  exportList.clear();\n  ignoredFiles.clear();\n  filesOutsideSrc.clear();\n\n  srcFiles = resolveFiles(getSrc(src), ignoreExports, context);\n  prepareImportsAndExports(srcFiles, context);\n  determineUsage();\n  lastPrepareKey = prepareKey;\n};\n\nconst newNamespaceImportExists = specifiers =>\n  specifiers.some(({ type }) => type === IMPORT_NAMESPACE_SPECIFIER);\n\nconst newDefaultImportExists = specifiers =>\n  specifiers.some(({ type }) => type === IMPORT_DEFAULT_SPECIFIER);\n\nconst fileIsInPkg = file => {\n  const { path, pkg } = readPkgUp({ cwd: file });\n  const basePath = dirname(path);\n\n  const checkPkgFieldString = pkgField => {\n    if (join(basePath, pkgField) === file) {\n      return true;\n    }\n  };\n\n  const checkPkgFieldObject = pkgField => {\n    const pkgFieldFiles = values(pkgField).map(value => join(basePath, value));\n    if (includes(pkgFieldFiles, file)) {\n      return true;\n    }\n  };\n\n  const checkPkgField = pkgField => {\n    if (typeof pkgField === 'string') {\n      return checkPkgFieldString(pkgField);\n    }\n\n    if (typeof pkgField === 'object') {\n      return checkPkgFieldObject(pkgField);\n    }\n  };\n\n  if (pkg.private === true) {\n    return false;\n  }\n\n  if (pkg.bin) {\n    if (checkPkgField(pkg.bin)) {\n      return true;\n    }\n  }\n\n  if (pkg.browser) {\n    if (checkPkgField(pkg.browser)) {\n      return true;\n    }\n  }\n\n  if (pkg.main) {\n    if (checkPkgFieldString(pkg.main)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: { url: docsUrl('no-unused-modules') },\n    schema: [{\n      properties: {\n        src: {\n          description: 'files/paths to be analyzed (only for unused exports)',\n          type: 'array',\n          minItems: 1,\n          items: {\n            type: 'string',\n            minLength: 1,\n          },\n        },\n        ignoreExports: {\n          description:\n            'files/paths for which unused exports will not be reported (e.g module entry points)',\n          type: 'array',\n          minItems: 1,\n          items: {\n            type: 'string',\n            minLength: 1,\n          },\n        },\n        missingExports: {\n          description: 'report modules without any exports',\n          type: 'boolean',\n        },\n        unusedExports: {\n          description: 'report exports without any usage',\n          type: 'boolean',\n        },\n      },\n      not: {\n        properties: {\n          unusedExports: { enum: [false] },\n          missingExports: { enum: [false] },\n        },\n      },\n      anyOf:[{\n        not: {\n          properties: {\n            unusedExports: { enum: [true] },\n          },\n        },\n        required: ['missingExports'],\n      }, {\n        not: {\n          properties: {\n            missingExports: { enum: [true] },\n          },\n        },\n        required: ['unusedExports'],\n      }, {\n        properties: {\n          unusedExports: { enum: [true] },\n        },\n        required: ['unusedExports'],\n      }, {\n        properties: {\n          missingExports: { enum: [true] },\n        },\n        required: ['missingExports'],\n      }],\n    }],\n  },\n\n  create: context => {\n    const {\n      src,\n      ignoreExports = [],\n      missingExports,\n      unusedExports,\n    } = context.options[0] || {};\n\n    if (unusedExports) {\n      doPreparation(src, ignoreExports, context);\n    }\n\n    const file = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n\n    const checkExportPresence = node => {\n      if (!missingExports) {\n        return;\n      }\n\n      if (ignoredFiles.has(file)) {\n        return;\n      }\n\n      const exportCount = exportList.get(file);\n      const exportAll = exportCount.get(EXPORT_ALL_DECLARATION);\n      const namespaceImports = exportCount.get(IMPORT_NAMESPACE_SPECIFIER);\n\n      exportCount.delete(EXPORT_ALL_DECLARATION);\n      exportCount.delete(IMPORT_NAMESPACE_SPECIFIER);\n      if (exportCount.size < 1) {\n        // node.body[0] === 'undefined' only happens, if everything is commented out in the file\n        // being linted\n        context.report(node.body[0] ? node.body[0] : node, 'No exports found');\n      }\n      exportCount.set(EXPORT_ALL_DECLARATION, exportAll);\n      exportCount.set(IMPORT_NAMESPACE_SPECIFIER, namespaceImports);\n    };\n\n    const checkUsage = (node, exportedValue) => {\n      if (!unusedExports) {\n        return;\n      }\n\n      if (ignoredFiles.has(file)) {\n        return;\n      }\n\n      if (fileIsInPkg(file)) {\n        return;\n      }\n\n      if (filesOutsideSrc.has(file)) {\n        return;\n      }\n\n      // make sure file to be linted is included in source files\n      if (!srcFiles.has(file)) {\n        srcFiles = resolveFiles(getSrc(src), ignoreExports, context);\n        if (!srcFiles.has(file)) {\n          filesOutsideSrc.add(file);\n          return;\n        }\n      }\n\n      exports = exportList.get(file);\n\n      // special case: export * from\n      const exportAll = exports.get(EXPORT_ALL_DECLARATION);\n      if (typeof exportAll !== 'undefined' && exportedValue !== IMPORT_DEFAULT_SPECIFIER) {\n        if (exportAll.whereUsed.size > 0) {\n          return;\n        }\n      }\n\n      // special case: namespace import\n      const namespaceImports = exports.get(IMPORT_NAMESPACE_SPECIFIER);\n      if (typeof namespaceImports !== 'undefined') {\n        if (namespaceImports.whereUsed.size > 0) {\n          return;\n        }\n      }\n\n      // exportsList will always map any imported value of 'default' to 'ImportDefaultSpecifier'\n      const exportsKey = exportedValue === DEFAULT ? IMPORT_DEFAULT_SPECIFIER : exportedValue;\n\n      const exportStatement = exports.get(exportsKey);\n\n      const value = exportsKey === IMPORT_DEFAULT_SPECIFIER ? DEFAULT : exportsKey;\n\n      if (typeof exportStatement !== 'undefined') {\n        if (exportStatement.whereUsed.size < 1) {\n          context.report(\n            node,\n            `exported declaration '${value}' not used within other modules`,\n          );\n        }\n      } else {\n        context.report(\n          node,\n          `exported declaration '${value}' not used within other modules`,\n        );\n      }\n    };\n\n    /**\n     * only useful for tools like vscode-eslint\n     *\n     * update lists of existing exports during runtime\n     */\n    const updateExportUsage = node => {\n      if (ignoredFiles.has(file)) {\n        return;\n      }\n\n      let exports = exportList.get(file);\n\n      // new module has been created during runtime\n      // include it in further processing\n      if (typeof exports === 'undefined') {\n        exports = new Map();\n      }\n\n      const newExports = new Map();\n      const newExportIdentifiers = new Set();\n\n      node.body.forEach(({ type, declaration, specifiers }) => {\n        if (type === EXPORT_DEFAULT_DECLARATION) {\n          newExportIdentifiers.add(IMPORT_DEFAULT_SPECIFIER);\n        }\n        if (type === EXPORT_NAMED_DECLARATION) {\n          if (specifiers.length > 0) {\n            specifiers.forEach(specifier => {\n              if (specifier.exported) {\n                newExportIdentifiers.add(specifier.exported.name || specifier.exported.value);\n              }\n            });\n          }\n          forEachDeclarationIdentifier(declaration, (name) => {\n            newExportIdentifiers.add(name);\n          });\n        }\n      });\n\n      // old exports exist within list of new exports identifiers: add to map of new exports\n      exports.forEach((value, key) => {\n        if (newExportIdentifiers.has(key)) {\n          newExports.set(key, value);\n        }\n      });\n\n      // new export identifiers added: add to map of new exports\n      newExportIdentifiers.forEach(key => {\n        if (!exports.has(key)) {\n          newExports.set(key, { whereUsed: new Set() });\n        }\n      });\n\n      // preserve information about namespace imports\n      const exportAll = exports.get(EXPORT_ALL_DECLARATION);\n      let namespaceImports = exports.get(IMPORT_NAMESPACE_SPECIFIER);\n\n      if (typeof namespaceImports === 'undefined') {\n        namespaceImports = { whereUsed: new Set() };\n      }\n\n      newExports.set(EXPORT_ALL_DECLARATION, exportAll);\n      newExports.set(IMPORT_NAMESPACE_SPECIFIER, namespaceImports);\n      exportList.set(file, newExports);\n    };\n\n    /**\n     * only useful for tools like vscode-eslint\n     *\n     * update lists of existing imports during runtime\n     */\n    const updateImportUsage = node => {\n      if (!unusedExports) {\n        return;\n      }\n\n      let oldImportPaths = importList.get(file);\n      if (typeof oldImportPaths === 'undefined') {\n        oldImportPaths = new Map();\n      }\n\n      const oldNamespaceImports = new Set();\n      const newNamespaceImports = new Set();\n\n      const oldExportAll = new Set();\n      const newExportAll = new Set();\n\n      const oldDefaultImports = new Set();\n      const newDefaultImports = new Set();\n\n      const oldImports = new Map();\n      const newImports = new Map();\n      oldImportPaths.forEach((value, key) => {\n        if (value.has(EXPORT_ALL_DECLARATION)) {\n          oldExportAll.add(key);\n        }\n        if (value.has(IMPORT_NAMESPACE_SPECIFIER)) {\n          oldNamespaceImports.add(key);\n        }\n        if (value.has(IMPORT_DEFAULT_SPECIFIER)) {\n          oldDefaultImports.add(key);\n        }\n        value.forEach(val => {\n          if (val !== IMPORT_NAMESPACE_SPECIFIER &&\n              val !== IMPORT_DEFAULT_SPECIFIER) {\n            oldImports.set(val, key);\n          }\n        });\n      });\n\n      function processDynamicImport(source) {\n        if (source.type !== 'Literal') {\n          return null;\n        }\n        const p = resolve(source.value, context);\n        if (p == null) {\n          return null;\n        }\n        newNamespaceImports.add(p);\n      }\n\n      visit(node, visitorKeyMap.get(file), {\n        ImportExpression(child) {\n          processDynamicImport(child.source);\n        },\n        CallExpression(child) {\n          if (child.callee.type === 'Import') {\n            processDynamicImport(child.arguments[0]);\n          }\n        },\n      });\n\n      node.body.forEach(astNode => {\n        let resolvedPath;\n\n        // support for export { value } from 'module'\n        if (astNode.type === EXPORT_NAMED_DECLARATION) {\n          if (astNode.source) {\n            resolvedPath = resolve(astNode.source.raw.replace(/('|\")/g, ''), context);\n            astNode.specifiers.forEach(specifier => {\n              const name = specifier.local.name || specifier.local.value;\n              if (name === DEFAULT) {\n                newDefaultImports.add(resolvedPath);\n              } else {\n                newImports.set(name, resolvedPath);\n              }\n            });\n          }\n        }\n\n        if (astNode.type === EXPORT_ALL_DECLARATION) {\n          resolvedPath = resolve(astNode.source.raw.replace(/('|\")/g, ''), context);\n          newExportAll.add(resolvedPath);\n        }\n\n        if (astNode.type === IMPORT_DECLARATION) {\n          resolvedPath = resolve(astNode.source.raw.replace(/('|\")/g, ''), context);\n          if (!resolvedPath) {\n            return;\n          }\n\n          if (isNodeModule(resolvedPath)) {\n            return;\n          }\n\n          if (newNamespaceImportExists(astNode.specifiers)) {\n            newNamespaceImports.add(resolvedPath);\n          }\n\n          if (newDefaultImportExists(astNode.specifiers)) {\n            newDefaultImports.add(resolvedPath);\n          }\n\n          astNode.specifiers.forEach(specifier => {\n            if (specifier.type === IMPORT_DEFAULT_SPECIFIER ||\n                specifier.type === IMPORT_NAMESPACE_SPECIFIER) {\n              return;\n            }\n            newImports.set(specifier.imported.name || specifier.imported.value, resolvedPath);\n          });\n        }\n      });\n\n      newExportAll.forEach(value => {\n        if (!oldExportAll.has(value)) {\n          let imports = oldImportPaths.get(value);\n          if (typeof imports === 'undefined') {\n            imports = new Set();\n          }\n          imports.add(EXPORT_ALL_DECLARATION);\n          oldImportPaths.set(value, imports);\n\n          let exports = exportList.get(value);\n          let currentExport;\n          if (typeof exports !== 'undefined') {\n            currentExport = exports.get(EXPORT_ALL_DECLARATION);\n          } else {\n            exports = new Map();\n            exportList.set(value, exports);\n          }\n\n          if (typeof currentExport !== 'undefined') {\n            currentExport.whereUsed.add(file);\n          } else {\n            const whereUsed = new Set();\n            whereUsed.add(file);\n            exports.set(EXPORT_ALL_DECLARATION, { whereUsed });\n          }\n        }\n      });\n\n      oldExportAll.forEach(value => {\n        if (!newExportAll.has(value)) {\n          const imports = oldImportPaths.get(value);\n          imports.delete(EXPORT_ALL_DECLARATION);\n\n          const exports = exportList.get(value);\n          if (typeof exports !== 'undefined') {\n            const currentExport = exports.get(EXPORT_ALL_DECLARATION);\n            if (typeof currentExport !== 'undefined') {\n              currentExport.whereUsed.delete(file);\n            }\n          }\n        }\n      });\n\n      newDefaultImports.forEach(value => {\n        if (!oldDefaultImports.has(value)) {\n          let imports = oldImportPaths.get(value);\n          if (typeof imports === 'undefined') {\n            imports = new Set();\n          }\n          imports.add(IMPORT_DEFAULT_SPECIFIER);\n          oldImportPaths.set(value, imports);\n\n          let exports = exportList.get(value);\n          let currentExport;\n          if (typeof exports !== 'undefined') {\n            currentExport = exports.get(IMPORT_DEFAULT_SPECIFIER);\n          } else {\n            exports = new Map();\n            exportList.set(value, exports);\n          }\n\n          if (typeof currentExport !== 'undefined') {\n            currentExport.whereUsed.add(file);\n          } else {\n            const whereUsed = new Set();\n            whereUsed.add(file);\n            exports.set(IMPORT_DEFAULT_SPECIFIER, { whereUsed });\n          }\n        }\n      });\n\n      oldDefaultImports.forEach(value => {\n        if (!newDefaultImports.has(value)) {\n          const imports = oldImportPaths.get(value);\n          imports.delete(IMPORT_DEFAULT_SPECIFIER);\n\n          const exports = exportList.get(value);\n          if (typeof exports !== 'undefined') {\n            const currentExport = exports.get(IMPORT_DEFAULT_SPECIFIER);\n            if (typeof currentExport !== 'undefined') {\n              currentExport.whereUsed.delete(file);\n            }\n          }\n        }\n      });\n\n      newNamespaceImports.forEach(value => {\n        if (!oldNamespaceImports.has(value)) {\n          let imports = oldImportPaths.get(value);\n          if (typeof imports === 'undefined') {\n            imports = new Set();\n          }\n          imports.add(IMPORT_NAMESPACE_SPECIFIER);\n          oldImportPaths.set(value, imports);\n\n          let exports = exportList.get(value);\n          let currentExport;\n          if (typeof exports !== 'undefined') {\n            currentExport = exports.get(IMPORT_NAMESPACE_SPECIFIER);\n          } else {\n            exports = new Map();\n            exportList.set(value, exports);\n          }\n\n          if (typeof currentExport !== 'undefined') {\n            currentExport.whereUsed.add(file);\n          } else {\n            const whereUsed = new Set();\n            whereUsed.add(file);\n            exports.set(IMPORT_NAMESPACE_SPECIFIER, { whereUsed });\n          }\n        }\n      });\n\n      oldNamespaceImports.forEach(value => {\n        if (!newNamespaceImports.has(value)) {\n          const imports = oldImportPaths.get(value);\n          imports.delete(IMPORT_NAMESPACE_SPECIFIER);\n\n          const exports = exportList.get(value);\n          if (typeof exports !== 'undefined') {\n            const currentExport = exports.get(IMPORT_NAMESPACE_SPECIFIER);\n            if (typeof currentExport !== 'undefined') {\n              currentExport.whereUsed.delete(file);\n            }\n          }\n        }\n      });\n\n      newImports.forEach((value, key) => {\n        if (!oldImports.has(key)) {\n          let imports = oldImportPaths.get(value);\n          if (typeof imports === 'undefined') {\n            imports = new Set();\n          }\n          imports.add(key);\n          oldImportPaths.set(value, imports);\n\n          let exports = exportList.get(value);\n          let currentExport;\n          if (typeof exports !== 'undefined') {\n            currentExport = exports.get(key);\n          } else {\n            exports = new Map();\n            exportList.set(value, exports);\n          }\n\n          if (typeof currentExport !== 'undefined') {\n            currentExport.whereUsed.add(file);\n          } else {\n            const whereUsed = new Set();\n            whereUsed.add(file);\n            exports.set(key, { whereUsed });\n          }\n        }\n      });\n\n      oldImports.forEach((value, key) => {\n        if (!newImports.has(key)) {\n          const imports = oldImportPaths.get(value);\n          imports.delete(key);\n\n          const exports = exportList.get(value);\n          if (typeof exports !== 'undefined') {\n            const currentExport = exports.get(key);\n            if (typeof currentExport !== 'undefined') {\n              currentExport.whereUsed.delete(file);\n            }\n          }\n        }\n      });\n    };\n\n    return {\n      'Program:exit': node => {\n        updateExportUsage(node);\n        updateImportUsage(node);\n        checkExportPresence(node);\n      },\n      'ExportDefaultDeclaration': node => {\n        checkUsage(node, IMPORT_DEFAULT_SPECIFIER);\n      },\n      'ExportNamedDeclaration': node => {\n        node.specifiers.forEach(specifier => {\n          checkUsage(node, specifier.exported.name || specifier.exported.value);\n        });\n        forEachDeclarationIdentifier(node.declaration, (name) => {\n          checkUsage(node, name);\n        });\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-commonjs.js":{"lineLengths":[13,0,0,0,0,181,0,65,104,88,171,56,43,3,26,1,0,40,51,64,55,1,0,38,30,1,0,49,51,1,0,31,47,1,0,52,30,6,32,33,38,40,14,53,15,1,0,32,69,67,1,0,80,18,80,0,59,20,17,15,49,40,53,0,32,0,0,18,9,23,11,54,0,0,13,14,7,22,30,33,0,7,22,30,38,0,0,0,0,0,49,60,0,14,0,74,0,29,84,56,70,13,0,23,49,49,24,78,31,72,15,13,0,39,70,59,0,58,55,0,52,60,0,52,0,93,0,79,28,32,41,0,39,0,0,25,9892],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-commonjs.js"],"names":["EXPORT_MESSAGE","IMPORT_MESSAGE","normalizeLegacyOptions","options","indexOf","allowPrimitiveModules","allowPrimitive","node","parent","type","right","allowRequire","allowConditionalRequire","validateScope","scope","variableScope","isConditional","isLiteralString","value","expressions","length","schemaString","schemaObject","properties","additionalProperties","module","exports","meta","docs","url","schema","anyOf","items","additionalItems","create","context","object","name","property","report","message","isInScope","getScope","variables","some","variable","call","callee","arguments"],"mappings":"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","file":"no-commonjs.js","sourcesContent":["/**\n * @fileoverview Rule to prefer ES6 to CJS\n * @author Jamund Ferguson\n */\n\nimport docsUrl from '../docsUrl';\n\nconst EXPORT_MESSAGE = 'Expected \"export\" or \"export default\"';\nconst IMPORT_MESSAGE = 'Expected \"import\" instead of \"require()\"';\n\nfunction normalizeLegacyOptions(options) {\n  if (options.indexOf('allow-primitive-modules') >= 0) {\n    return { allowPrimitiveModules: true };\n  }\n  return options[0] || {};\n}\n\nfunction allowPrimitive(node, options) {\n  if (!options.allowPrimitiveModules) return false;\n  if (node.parent.type !== 'AssignmentExpression') return false;\n  return (node.parent.right.type !== 'ObjectExpression');\n}\n\nfunction allowRequire(node, options) {\n  return options.allowRequire;\n}\n\nfunction allowConditionalRequire(node, options) {\n  return options.allowConditionalRequire !== false;\n}\n\nfunction validateScope(scope) {\n  return scope.variableScope.type === 'module';\n}\n\n// https://github.com/estree/estree/blob/HEAD/es5.md\nfunction isConditional(node) {\n  if (\n    node.type === 'IfStatement'\n    || node.type === 'TryStatement'\n    || node.type === 'LogicalExpression'\n    || node.type === 'ConditionalExpression'\n  ) return true;\n  if (node.parent) return isConditional(node.parent);\n  return false;\n}\n\nfunction isLiteralString(node) {\n  return (node.type === 'Literal' && typeof node.value === 'string') ||\n    (node.type === 'TemplateLiteral' && node.expressions.length === 0);\n}\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nconst schemaString = { enum: ['allow-primitive-modules'] };\nconst schemaObject = {\n  type: 'object',\n  properties: {\n    allowPrimitiveModules: { 'type': 'boolean' },\n    allowRequire: { 'type': 'boolean' },\n    allowConditionalRequire: { 'type': 'boolean' },\n  },\n  additionalProperties: false,\n};\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-commonjs'),\n    },\n\n    schema: {\n      anyOf: [\n        {\n          type: 'array',\n          items: [schemaString],\n          additionalItems: false,\n        },\n        {\n          type: 'array',\n          items: [schemaObject],\n          additionalItems: false,\n        },\n      ],\n    },\n  },\n\n  create(context) {\n    const options = normalizeLegacyOptions(context.options);\n\n    return {\n\n      'MemberExpression': function (node) {\n\n        // module.exports\n        if (node.object.name === 'module' && node.property.name === 'exports') {\n          if (allowPrimitive(node, options)) return;\n          context.report({ node, message: EXPORT_MESSAGE });\n        }\n\n        // exports.\n        if (node.object.name === 'exports') {\n          const isInScope = context.getScope()\n            .variables\n            .some(variable => variable.name === 'exports');\n          if (! isInScope) {\n            context.report({ node, message: EXPORT_MESSAGE });\n          }\n        }\n\n      },\n      'CallExpression': function (call) {\n        if (!validateScope(context.getScope())) return;\n\n        if (call.callee.type !== 'Identifier') return;\n        if (call.callee.name !== 'require') return;\n\n        if (call.arguments.length !== 1) return;\n        if (!isLiteralString(call.arguments[0])) return;\n\n        if (allowRequire(call, options)) return;\n\n        if (allowConditionalRequire(call, options) && isConditional(call.parent)) return;\n\n        // keeping it simple: all 1-string-arg `require` calls are reported\n        context.report({\n          node: call.callee,\n          message: IMPORT_MESSAGE,\n        });\n      },\n    };\n\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-amd.js":{"lineLengths":[13,0,0,0,0,181,0,80,18,80,0,18,9,23,11,49,0,17,0,0,49,14,70,61,0,58,49,50,0,75,52,0,44,59,0,68,0,104,39,0,0,29,72,52,29,2872],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-amd.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","node","getScope","callee","name","arguments","length","modules","report"],"mappings":";;;;;AAKA,qC;;AAEA;AACA;AACA;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,QAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd,aAAO;AACL,uCAAkB,wBAAUC,IAAV,EAAgB;AAChC,gBAAID,QAAQE,QAAR,GAAmBP,IAAnB,KAA4B,QAAhC,EAA0C;;AAE1C,gBAAIM,KAAKE,MAAL,CAAYR,IAAZ,KAAqB,YAAzB,EAAuC;AACvC,gBAAIM,KAAKE,MAAL,CAAYC,IAAZ,KAAqB,SAArB;AACAH,iBAAKE,MAAL,CAAYC,IAAZ,KAAqB,QADzB,EACmC;;AAEnC;AACA,gBAAIH,KAAKI,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;;AAEjC,gBAAMC,UAAUN,KAAKI,SAAL,CAAe,CAAf,CAAhB;AACA,gBAAIE,QAAQZ,IAAR,KAAiB,iBAArB,EAAwC;;AAExC;;AAEAK,oBAAQQ,MAAR,CAAeP,IAAf,8CAAwDA,KAAKE,MAAL,CAAYC,IAApE;AACD,WAhBD,yBADK,EAAP;;;AAoBD,KA9Bc,mBAAjB,C,CAXA","file":"no-amd.js","sourcesContent":["/**\n * @fileoverview Rule to prefer imports to AMD\n * @author Jamund Ferguson\n */\n\nimport docsUrl from '../docsUrl';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-amd'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      'CallExpression': function (node) {\n        if (context.getScope().type !== 'module') return;\n\n        if (node.callee.type !== 'Identifier') return;\n        if (node.callee.name !== 'require' &&\n            node.callee.name !== 'define') return;\n\n        // todo: capture define((require, module, exports) => {}) form?\n        if (node.arguments.length !== 2) return;\n\n        const modules = node.arguments[0];\n        if (modules.type !== 'ArrayExpression') return;\n\n        // todo: check second arg type? (identifier or callback)\n\n        context.report(node, `Expected imports instead of AMD ${node.callee.name}().`);\n      },\n    };\n\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-duplicates.js":{"lineLengths":[748,442,0,145,273,29,99,56,49,50,0,24,29,27,70,117,0,192,28,32,34,0,233,7,220,1,0,42,78,77,68,66,80,15,59,21,3,0,74,74,75,40,73,21,3,0,35,86,0,0,79,38,36,21,3,0,76,71,66,47,27,0,0,39,23,44,85,86,0,50,23,5,0,12,23,75,81,38,0,5,18,0,79,29,28,89,0,0,94,50,62,0,78,21,3,0,27,45,85,86,94,70,0,31,25,61,69,0,22,110,14,48,59,39,45,0,6,151,0,0,19,0,71,60,17,118,0,79,53,95,77,71,91,32,83,71,7,79,42,57,96,14,71,101,7,78,66,69,5,0,77,303,46,45,0,82,106,39,62,9,7,0,80,75,16,528,39,0,70,106,39,62,9,229,0,17,4,1,0,36,60,1,0,56,37,41,83,76,1,0,48,29,35,87,31,1,0,56,30,35,78,31,1,0,75,68,51,10,41,40,53,0,1,0,77,36,45,44,85,1,0,79,10,44,43,82,1,0,77,17,58,42,93,94,77,78,55,64,81,18,100,1,0,18,9,20,11,56,0,20,13,5,21,19,30,30,0,0,39,0,0,0,0,49,43,59,48,175,72,56,21,45,9,58,26,0,33,0,32,40,36,32,34,44,45,0,9,43,38,146,9,0,63,7,0,14,71,58,56,44,0,46,50,20,47,13,40,0,167,210,52,54,64,62,237,36,0,25,29876],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-duplicates.js"],"names":["checkImports","imported","context","entries","module","nodes","length","message","first","rest","sourceCode","getSourceCode","fix","getFix","report","node","source","getCommentsBefore","undefined","hasProblematicComments","hasNamespace","defaultImportNames","Set","map","getDefaultImportName","filter","Boolean","size","restWithoutComments","specifiers","tokens","getTokens","openBrace","find","isPunctuator","token","closeBrace","importNode","text","slice","range","hasTrailingComma","getTokenBefore","isEmpty","hasSpecifiers","unnecessaryImports","some","specifier","shouldAddDefault","shouldAddSpecifiers","shouldRemoveUnnecessary","firstToken","getFirstToken","defaultImportName","firstHasTrailingComma","firstIsEmpty","reduce","result","needsComma","specifiersText","fixes","push","fixer","insertTextAfter","insertTextBefore","remove","charAfterImportRange","charAfterImport","substring","removeRange","value","type","defaultSpecifier","local","name","hasCommentBefore","hasCommentAfter","hasCommentInsideNonSpecifiers","comment","loc","end","line","start","getCommentsAfter","openBraceIndex","findIndex","closeBraceIndex","someTokens","concat","exports","meta","docs","url","fixable","schema","properties","considerQueryString","additionalProperties","create","considerQueryStringOption","options","defaultResolver","sourcePath","resolver","parts","match","moduleMaps","Map","getImportMap","n","has","parent","set","nsImported","defaultTypesImported","namedTypesImported","get","importKind","ImportDeclaration","resolvedPath","importMap","values"],"mappings":"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","file":"no-duplicates.js","sourcesContent":["import resolve from 'eslint-module-utils/resolve';\nimport docsUrl from '../docsUrl';\n\nfunction checkImports(imported, context) {\n  for (const [module, nodes] of imported.entries()) {\n    if (nodes.length > 1) {\n      const message = `'${module}' imported multiple times.`;\n      const [first, ...rest] = nodes;\n      const sourceCode = context.getSourceCode();\n      const fix = getFix(first, rest, sourceCode);\n\n      context.report({\n        node: first.source,\n        message,\n        fix, // Attach the autofix (if any) to the first import.\n      });\n\n      for (const node of rest) {\n        context.report({\n          node: node.source,\n          message,\n        });\n      }\n    }\n  }\n}\n\nfunction getFix(first, rest, sourceCode) {\n  // Sorry ESLint <= 3 users, no autofix for you. Autofixing duplicate imports\n  // requires multiple `fixer.whatever()` calls in the `fix`: We both need to\n  // update the first one, and remove the rest. Support for multiple\n  // `fixer.whatever()` in a single `fix` was added in ESLint 4.1.\n  // `sourceCode.getCommentsBefore` was added in 4.0, so that's an easy thing to\n  // check for.\n  if (typeof sourceCode.getCommentsBefore !== 'function') {\n    return undefined;\n  }\n\n  // Adjusting the first import might make it multiline, which could break\n  // `eslint-disable-next-line` comments and similar, so bail if the first\n  // import has comments. Also, if the first import is `import * as ns from\n  // './foo'` there's nothing we can do.\n  if (hasProblematicComments(first, sourceCode) || hasNamespace(first)) {\n    return undefined;\n  }\n\n  const defaultImportNames = new Set(\n    [first, ...rest].map(getDefaultImportName).filter(Boolean),\n  );\n\n  // Bail if there are multiple different default import names – it's up to the\n  // user to choose which one to keep.\n  if (defaultImportNames.size > 1) {\n    return undefined;\n  }\n\n  // Leave it to the user to handle comments. Also skip `import * as ns from\n  // './foo'` imports, since they cannot be merged into another import.\n  const restWithoutComments = rest.filter(node => !(\n    hasProblematicComments(node, sourceCode) ||\n    hasNamespace(node)\n  ));\n\n  const specifiers = restWithoutComments\n    .map(node => {\n      const tokens = sourceCode.getTokens(node);\n      const openBrace = tokens.find(token => isPunctuator(token, '{'));\n      const closeBrace = tokens.find(token => isPunctuator(token, '}'));\n\n      if (openBrace == null || closeBrace == null) {\n        return undefined;\n      }\n\n      return {\n        importNode: node,\n        text: sourceCode.text.slice(openBrace.range[1], closeBrace.range[0]),\n        hasTrailingComma: isPunctuator(sourceCode.getTokenBefore(closeBrace), ','),\n        isEmpty: !hasSpecifiers(node),\n      };\n    })\n    .filter(Boolean);\n\n  const unnecessaryImports = restWithoutComments.filter(node =>\n    !hasSpecifiers(node) &&\n    !hasNamespace(node) &&\n    !specifiers.some(specifier => specifier.importNode === node),\n  );\n\n  const shouldAddDefault = getDefaultImportName(first) == null && defaultImportNames.size === 1;\n  const shouldAddSpecifiers = specifiers.length > 0;\n  const shouldRemoveUnnecessary = unnecessaryImports.length > 0;\n\n  if (!(shouldAddDefault || shouldAddSpecifiers || shouldRemoveUnnecessary)) {\n    return undefined;\n  }\n\n  return fixer => {\n    const tokens = sourceCode.getTokens(first);\n    const openBrace = tokens.find(token => isPunctuator(token, '{'));\n    const closeBrace = tokens.find(token => isPunctuator(token, '}'));\n    const firstToken = sourceCode.getFirstToken(first);\n    const [defaultImportName] = defaultImportNames;\n\n    const firstHasTrailingComma =\n      closeBrace != null &&\n      isPunctuator(sourceCode.getTokenBefore(closeBrace), ',');\n    const firstIsEmpty = !hasSpecifiers(first);\n\n    const [specifiersText] = specifiers.reduce(\n      ([result, needsComma], specifier) => {\n        return [\n          needsComma && !specifier.isEmpty\n            ? `${result},${specifier.text}`\n            : `${result}${specifier.text}`,\n          specifier.isEmpty ? needsComma : true,\n        ];\n      },\n      ['', !firstHasTrailingComma && !firstIsEmpty],\n    );\n\n    const fixes = [];\n\n    if (shouldAddDefault && openBrace == null && shouldAddSpecifiers) {\n      // `import './foo'` → `import def, {...} from './foo'`\n      fixes.push(\n        fixer.insertTextAfter(firstToken, ` ${defaultImportName}, {${specifiersText}} from`),\n      );\n    } else if (shouldAddDefault && openBrace == null && !shouldAddSpecifiers) {\n      // `import './foo'` → `import def from './foo'`\n      fixes.push(fixer.insertTextAfter(firstToken, ` ${defaultImportName} from`));\n    } else if (shouldAddDefault && openBrace != null && closeBrace != null) {\n      // `import {...} from './foo'` → `import def, {...} from './foo'`\n      fixes.push(fixer.insertTextAfter(firstToken, ` ${defaultImportName},`));\n      if (shouldAddSpecifiers) {\n        // `import def, {...} from './foo'` → `import def, {..., ...} from './foo'`\n        fixes.push(fixer.insertTextBefore(closeBrace, specifiersText));\n      }\n    } else if (!shouldAddDefault && openBrace == null && shouldAddSpecifiers) {\n      if (first.specifiers.length === 0) {\n        // `import './foo'` → `import {...} from './foo'`\n        fixes.push(fixer.insertTextAfter(firstToken, ` {${specifiersText}} from`));\n      } else {\n        // `import def from './foo'` → `import def, {...} from './foo'`\n        fixes.push(fixer.insertTextAfter(first.specifiers[0], `, {${specifiersText}}`));\n      }\n    } else if (!shouldAddDefault && openBrace != null && closeBrace != null) {\n      // `import {...} './foo'` → `import {..., ...} from './foo'`\n      fixes.push(fixer.insertTextBefore(closeBrace, specifiersText));\n    }\n\n    // Remove imports whose specifiers have been moved into the first import.\n    for (const specifier of specifiers) {\n      const importNode = specifier.importNode;\n      fixes.push(fixer.remove(importNode));\n\n      const charAfterImportRange = [importNode.range[1], importNode.range[1] + 1];\n      const charAfterImport = sourceCode.text.substring(charAfterImportRange[0], charAfterImportRange[1]);\n      if (charAfterImport === '\\n') {\n        fixes.push(fixer.removeRange(charAfterImportRange));\n      }\n    }\n\n    // Remove imports whose default import has been moved to the first import,\n    // and side-effect-only imports that are unnecessary due to the first\n    // import.\n    for (const node of unnecessaryImports) {\n      fixes.push(fixer.remove(node));\n\n      const charAfterImportRange = [node.range[1], node.range[1] + 1];\n      const charAfterImport = sourceCode.text.substring(charAfterImportRange[0], charAfterImportRange[1]);\n      if (charAfterImport === '\\n') {\n        fixes.push(fixer.removeRange(charAfterImportRange));\n      }\n    }\n\n    return fixes;\n  };\n}\n\nfunction isPunctuator(node, value) {\n  return node.type === 'Punctuator' && node.value === value;\n}\n\n// Get the name of the default import of `node`, if any.\nfunction getDefaultImportName(node) {\n  const defaultSpecifier = node.specifiers\n    .find(specifier => specifier.type === 'ImportDefaultSpecifier');\n  return defaultSpecifier != null ? defaultSpecifier.local.name : undefined;\n}\n\n// Checks whether `node` has a namespace import.\nfunction hasNamespace(node) {\n  const specifiers = node.specifiers\n    .filter(specifier => specifier.type === 'ImportNamespaceSpecifier');\n  return specifiers.length > 0;\n}\n\n// Checks whether `node` has any non-default specifiers.\nfunction hasSpecifiers(node) {\n  const specifiers = node.specifiers\n    .filter(specifier => specifier.type === 'ImportSpecifier');\n  return specifiers.length > 0;\n}\n\n// It's not obvious what the user wants to do with comments associated with\n// duplicate imports, so skip imports with comments when autofixing.\nfunction hasProblematicComments(node, sourceCode) {\n  return (\n    hasCommentBefore(node, sourceCode) ||\n    hasCommentAfter(node, sourceCode) ||\n    hasCommentInsideNonSpecifiers(node, sourceCode)\n  );\n}\n\n// Checks whether `node` has a comment (that ends) on the previous line or on\n// the same line as `node` (starts).\nfunction hasCommentBefore(node, sourceCode) {\n  return sourceCode.getCommentsBefore(node)\n    .some(comment => comment.loc.end.line >= node.loc.start.line - 1);\n}\n\n// Checks whether `node` has a comment (that starts) on the same line as `node`\n// (ends).\nfunction hasCommentAfter(node, sourceCode) {\n  return sourceCode.getCommentsAfter(node)\n    .some(comment => comment.loc.start.line === node.loc.end.line);\n}\n\n// Checks whether `node` has any comments _inside,_ except inside the `{...}`\n// part (if any).\nfunction hasCommentInsideNonSpecifiers(node, sourceCode) {\n  const tokens = sourceCode.getTokens(node);\n  const openBraceIndex = tokens.findIndex(token => isPunctuator(token, '{'));\n  const closeBraceIndex = tokens.findIndex(token => isPunctuator(token, '}'));\n  // Slice away the first token, since we're no looking for comments _before_\n  // `node` (only inside). If there's a `{...}` part, look for comments before\n  // the `{`, but not before the `}` (hence the `+1`s).\n  const someTokens = openBraceIndex >= 0 && closeBraceIndex >= 0\n    ? tokens.slice(1, openBraceIndex + 1).concat(tokens.slice(closeBraceIndex + 1))\n    : tokens.slice(1);\n  return someTokens.some(token => sourceCode.getCommentsBefore(token).length > 0);\n}\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('no-duplicates'),\n    },\n    fixable: 'code',\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          considerQueryString: {\n            type: 'boolean',\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    // Prepare the resolver from options.\n    const considerQueryStringOption = context.options[0] &&\n      context.options[0]['considerQueryString'];\n    const defaultResolver = sourcePath => resolve(sourcePath, context) || sourcePath;\n    const resolver = considerQueryStringOption ? (sourcePath => {\n      const parts = sourcePath.match(/^([^?]*)\\?(.*)$/);\n      if (!parts) {\n        return defaultResolver(sourcePath);\n      }\n      return defaultResolver(parts[1]) + '?' + parts[2];\n    }) : defaultResolver;\n\n    const moduleMaps = new Map();\n\n    function getImportMap(n) {\n      if (!moduleMaps.has(n.parent)) {\n        moduleMaps.set(n.parent, {\n          imported: new Map(),\n          nsImported: new Map(),\n          defaultTypesImported: new Map(),\n          namedTypesImported: new Map(),\n        });\n      }\n      const map = moduleMaps.get(n.parent);\n      if (n.importKind === 'type') {\n        return n.specifiers.length > 0 && n.specifiers[0].type === 'ImportDefaultSpecifier' ? map.defaultTypesImported : map.namedTypesImported;\n      }\n\n      return hasNamespace(n) ? map.nsImported : map.imported;\n    }\n\n    return {\n      ImportDeclaration(n) {\n        // resolved path will cover aliased duplicates\n        const resolvedPath = resolver(n.source.value);\n        const importMap = getImportMap(n);\n\n        if (importMap.has(resolvedPath)) {\n          importMap.get(resolvedPath).push(n);\n        } else {\n          importMap.set(resolvedPath, [n]);\n        }\n      },\n\n      'Program:exit': function () {\n        for (const map of moduleMaps.values()) {\n          checkImports(map.imported, context);\n          checkImports(map.nsImported, context);\n          checkImports(map.defaultTypesImported, context);\n          checkImports(map.namedTypesImported, context);\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/first.js":{"lineLengths":[194,0,31,44,21,40,1,0,18,9,23,11,48,0,20,13,5,21,64,0,0,0,0,49,42,53,45,50,7,0,14,53,30,24,21,13,72,70,53,56,35,39,36,36,32,34,39,49,65,23,15,0,36,0,99,36,57,39,43,36,99,90,0,19,17,144,229,45,59,152,219,80,49,36,29,249,23,236,73,35,31,72,0,24,38,17,22,33,15,15,43,60,40,27,27,35,0,47,46,57,18,56,76,46,74,63,21,82,78,70,56,0,55,51,21,42,30,41,45,38,38,82,19,46,73,68,66,62,64,89,39,21,74,18,15,36,15,32,0,25,13220],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/first.js"],"names":["getImportValue","node","type","source","value","moduleReference","expression","module","exports","meta","docs","url","fixable","schema","create","context","isPossibleDirective","n","body","absoluteFirst","options","message","sourceCode","getSourceCode","originSourceCode","getText","nonImportCount","anyExpressions","anyRelative","lastLegalImp","errorInfos","shouldSort","lastSortNodesIndex","forEach","index","test","report","getDeclaredVariables","variable","references","length","reference","identifier","range","push","errorInfo","infos","fix","fixer","insertTextAfter","sortNodes","slice","removeFixers","map","_errorInfo","removeRange","insertSourceCode","nodeSourceCode","String","prototype","apply","join","insertFixer","replaceSourceCode","trim","match","insertTextBefore","fixers","concat","computedFixer","i","text","replaceTextRange"],"mappings":"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","file":"first.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nfunction getImportValue(node) {\n  return node.type === 'ImportDeclaration'\n    ? node.source.value\n    : node.moduleReference.expression.value;\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('first'),\n    },\n    fixable: 'code',\n    schema: [\n      {\n        type: 'string',\n        enum: ['absolute-first', 'disable-absolute-first'],\n      },\n    ],\n  },\n\n  create(context) {\n    function isPossibleDirective(node) {\n      return node.type === 'ExpressionStatement' &&\n        node.expression.type === 'Literal' &&\n        typeof node.expression.value === 'string';\n    }\n\n    return {\n      'Program': function (n) {\n        const body = n.body;\n        if (!body) {\n          return;\n        }\n        const absoluteFirst = context.options[0] === 'absolute-first';\n        const message = 'Import in body of module; reorder to top.';\n        const sourceCode = context.getSourceCode();\n        const originSourceCode = sourceCode.getText();\n        let nonImportCount = 0;\n        let anyExpressions = false;\n        let anyRelative = false;\n        let lastLegalImp = null;\n        const errorInfos = [];\n        let shouldSort = true;\n        let lastSortNodesIndex = 0;\n        body.forEach(function (node, index) {\n          if (!anyExpressions && isPossibleDirective(node)) {\n            return;\n          }\n\n          anyExpressions = true;\n\n          if (node.type === 'ImportDeclaration' || node.type === 'TSImportEqualsDeclaration') {\n            if (absoluteFirst) {\n              if (/^\\./.test(getImportValue(node))) {\n                anyRelative = true;\n              } else if (anyRelative) {\n                context.report({\n                  node: node.type === 'ImportDeclaration' ? node.source : node.moduleReference,\n                  message: 'Absolute imports should come before relative imports.',\n                });\n              }\n            }\n            if (nonImportCount > 0) {\n              for (const variable of context.getDeclaredVariables(node)) {\n                if (!shouldSort) break;\n                const references = variable.references;\n                if (references.length) {\n                  for (const reference of references) {\n                    if (reference.identifier.range[0] < node.range[1]) {\n                      shouldSort = false;\n                      break;\n                    }\n                  }\n                }\n              }\n              shouldSort && (lastSortNodesIndex = errorInfos.length);\n              errorInfos.push({\n                node,\n                range: [body[index - 1].range[1], node.range[1]],\n              });\n            } else {\n              lastLegalImp = node;\n            }\n          } else {\n            nonImportCount++;\n          }\n        });\n        if (!errorInfos.length) return;\n        errorInfos.forEach(function (errorInfo, index) {\n          const node = errorInfo.node;\n          const infos = {\n            node,\n            message,\n          };\n          if (index < lastSortNodesIndex) {\n            infos.fix = function (fixer) {\n              return fixer.insertTextAfter(node, '');\n            };\n          } else if (index === lastSortNodesIndex) {\n            const sortNodes = errorInfos.slice(0, lastSortNodesIndex + 1);\n            infos.fix = function (fixer) {\n              const removeFixers = sortNodes.map(function (_errorInfo) {\n                return fixer.removeRange(_errorInfo.range);\n              });\n              const range = [0, removeFixers[removeFixers.length - 1].range[1]];\n              let insertSourceCode = sortNodes.map(function (_errorInfo) {\n                const nodeSourceCode = String.prototype.slice.apply(\n                  originSourceCode, _errorInfo.range,\n                );\n                if (/\\S/.test(nodeSourceCode[0])) {\n                  return '\\n' + nodeSourceCode;\n                }\n                return nodeSourceCode;\n              }).join('');\n              let insertFixer = null;\n              let replaceSourceCode = '';\n              if (!lastLegalImp) {\n                insertSourceCode =\n                    insertSourceCode.trim() + insertSourceCode.match(/^(\\s+)/)[0];\n              }\n              insertFixer = lastLegalImp ?\n                fixer.insertTextAfter(lastLegalImp, insertSourceCode) :\n                fixer.insertTextBefore(body[0], insertSourceCode);\n              const fixers = [insertFixer].concat(removeFixers);\n              fixers.forEach(function (computedFixer, i) {\n                replaceSourceCode += (originSourceCode.slice(\n                  fixers[i - 1] ? fixers[i - 1].range[1] : 0, computedFixer.range[0],\n                ) + computedFixer.text);\n              });\n              return fixer.replaceTextRange(range, replaceSourceCode);\n            };\n          }\n          context.report(infos);\n        });\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/max-dependencies.js":{"lineLengths":[140,181,0,21,40,25,0,95,60,0,32,95,3,2,0,18,9,23,11,59,0,0,13,5,23,21,36,53,0,41,0,0,0,0,60,0,0,189,0,65,72,0,28,61,63,36,98,63,41,9,26,30,25,4092],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/max-dependencies.js"],"names":["DEFAULT_MAX","DEFAULT_IGNORE_TYPE_IMPORTS","TYPE_IMPORT","countDependencies","dependencies","lastNode","context","options","max","size","report","module","exports","meta","type","docs","url","schema","create","ignoreTypeImports","Set","Object","assign","source","importKind","add","value","commonjs"],"mappings":"aAAA,kE;AACA,qC;;AAEA,IAAMA,cAAc,EAApB;AACA,IAAMC,8BAA8B,KAApC;AACA,IAAMC,cAAc,MAApB;;AAEA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,YAAD,EAAeC,QAAf,EAAyBC,OAAzB,EAAqC;AAC7CA,UAAQC,OAAR,CAAgB,CAAhB,KAAsB,EAAEC,KAAKR,WAAP,EADuB,CACrDQ,GADqD,QACrDA,GADqD;;AAG7D,MAAIJ,aAAaK,IAAb,GAAoBD,GAAxB,EAA6B;AAC3BF,YAAQI,MAAR,CAAeL,QAAf,8CAA4DG,GAA5D;AACD;AACF,CAND;;AAQAG,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,kBAAR,CADD,EAFF;;;AAMJC,YAAQ;AACN;AACE,cAAQ,QADV;AAEE,oBAAc;AACZ,eAAO,EAAE,QAAQ,QAAV,EADK;AAEZ,6BAAqB,EAAE,QAAQ,SAAV,EAFT,EAFhB;;AAME,8BAAwB,KAN1B,EADM,CANJ,EADS;;;;;AAmBfC,uBAAQ,yBAAW;;;AAGbZ,cAAQC,OAAR,CAAgB,CAAhB,KAAsB,EAHT,+BAEfY,iBAFe,CAEfA,iBAFe,yCAEKlB,2BAFL;;AAKjB,UAAMG,eAAe,IAAIgB,GAAJ,EAArB,CALiB,CAKe;AAChC,UAAIf,iBAAJ,CANiB,CAMH;;AAEd,aAAOgB,OAAOC,MAAP,CAAc;AACnB,qCAAgB,uBAAY;AAC1BnB,8BAAkBC,YAAlB,EAAgCC,QAAhC,EAA0CC,OAA1C;AACD,WAFD,sBADmB,EAAd;AAIJ,sCAAc,UAACiB,MAAD,SAA4B,KAAjBC,UAAiB,SAAjBA,UAAiB;AAC3C,YAAIA,eAAetB,WAAf,IAA8B,CAACiB,iBAAnC,EAAsD;AACpDf,uBAAaqB,GAAb,CAAiBF,OAAOG,KAAxB;AACD;AACDrB,mBAAWkB,MAAX;AACD,OALE,EAKA,EAAEI,UAAU,IAAZ,EALA,CAJI,CAAP;AAUD,KAlBD,iBAnBe,EAAjB","file":"max-dependencies.js","sourcesContent":["import moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nconst DEFAULT_MAX = 10;\nconst DEFAULT_IGNORE_TYPE_IMPORTS = false;\nconst TYPE_IMPORT = 'type';\n\nconst countDependencies = (dependencies, lastNode, context) => {\n  const { max } = context.options[0] || { max: DEFAULT_MAX };\n\n  if (dependencies.size > max) {\n    context.report(lastNode, `Maximum number of dependencies (${max}) exceeded.`);\n  }\n};\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('max-dependencies'),\n    },\n\n    schema: [\n      {\n        'type': 'object',\n        'properties': {\n          'max': { 'type': 'number' },\n          'ignoreTypeImports': { 'type': 'boolean' },\n        },\n        'additionalProperties': false,\n      },\n    ],\n  },\n\n  create: context => {\n    const {\n      ignoreTypeImports = DEFAULT_IGNORE_TYPE_IMPORTS,\n    } = context.options[0] || {};\n\n    const dependencies = new Set(); // keep track of dependencies\n    let lastNode; // keep track of the last node to report on\n\n    return Object.assign({\n      'Program:exit': function () {\n        countDependencies(dependencies, lastNode, context);\n      },\n    }, moduleVisitor((source, { importKind }) => {\n      if (importKind !== TYPE_IMPORT || !ignoreTypeImports) {\n        dependencies.add(source.value);\n      }\n      lastNode = source;\n    }, { commonjs: true }));\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-extraneous-dependencies.js":{"lineLengths":[716,63,111,91,103,127,103,50,181,0,30,0,101,37,1,0,37,83,1,0,32,10,41,47,57,49,94,61,96,0,1,0,47,17,7,26,23,26,31,27,32,0,0,46,39,56,14,88,7,5,0,27,45,36,74,50,43,77,0,56,9,65,72,81,0,9,12,33,20,21,23,152,0,0,5,0,10,32,35,40,36,40,20,18,5,0,26,15,50,22,61,39,0,5,61,22,75,39,0,5,0,16,3,1,0,43,123,33,1,0,42,113,1,0,42,123,0,1,0,55,113,78,1,0,38,56,1,0,75,51,20,23,23,24,29,0,0,48,44,28,67,55,36,68,38,5,5,0,66,12,81,90,95,93,22,88,0,27,1,0,66,39,6,31,31,3,11,3,0,67,11,3,0,58,26,0,54,78,0,6,31,62,64,62,68,3,11,3,0,54,94,52,65,93,0,8,33,64,66,64,70,5,13,5,3,0,67,83,11,3,0,67,83,11,3,0,82,1,0,39,63,69,18,3,20,43,49,90,0,1,0,18,9,20,11,69,0,0,13,5,23,21,60,65,61,64,56,0,41,0,0,0,0,49,45,105,86,0,25,78,83,80,88,0,0,70,72,29,25,23192],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-extraneous-dependencies.js"],"names":["depFieldCache","Map","hasKeys","obj","Object","keys","length","arrayOrKeys","arrayOrObject","Array","isArray","extractDepFields","pkg","dependencies","devDependencies","optionalDependencies","peerDependencies","bundledDependencies","bundleDependencies","getDependencies","context","packageDir","paths","packageContent","path","resolve","map","dir","forEach","packageJsonPath","join","has","depFields","JSON","parse","fs","readFileSync","set","_packageContent","get","assign","depsKey","cwd","getPhysicalFilename","getFilename","normalize","some","e","code","report","message","loc","line","column","name","SyntaxError","missingErrorMessage","packageName","devDepErrorMessage","optDepErrorMessage","getModuleOriginalName","split","first","second","startsWith","getModuleRealName","resolved","checkDependencyDeclaration","deps","declarationStatus","newDeclarationStatus","isInDeps","isInDevDeps","isInOptDeps","isInPeerDeps","isInBundledDeps","packageHierarchy","packageNameParts","namePart","index","ancestor","slice","push","reduce","result","ancestorName","undefined","indexOf","reportIfMissing","depsOptions","node","importKind","importPackageName","allowDevDeps","allowPeerDeps","allowOptDeps","allowBundledDeps","realPackageName","testConfig","config","filename","c","process","module","exports","meta","type","docs","url","schema","create","options","source","value","commonjs"],"mappings":"qoBAAA,4B;AACA,wB;AACA,0D;AACA,sC;AACA,sD;AACA,kE;AACA,gD;AACA;AACA,qC;;AAEA,IAAMA,gBAAgB,IAAIC,GAAJ,EAAtB;;AAEA,SAASC,OAAT,GAA2B,KAAVC,GAAU,uEAAJ,EAAI;AACzB,SAAOC,OAAOC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,GAA0B,CAAjC;AACD;;AAED,SAASC,WAAT,CAAqBC,aAArB,EAAoC;AAClC,SAAOC,MAAMC,OAAN,CAAcF,aAAd,IAA+BA,aAA/B,GAA+CJ,OAAOC,IAAP,CAAYG,aAAZ,CAAtD;AACD;;AAED,SAASG,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,SAAO;AACLC,kBAAcD,IAAIC,YAAJ,IAAoB,EAD7B;AAELC,qBAAiBF,IAAIE,eAAJ,IAAuB,EAFnC;AAGLC,0BAAsBH,IAAIG,oBAAJ,IAA4B,EAH7C;AAILC,sBAAkBJ,IAAII,gBAAJ,IAAwB,EAJrC;AAKL;AACA;AACAC,yBAAqBV,YAAYK,IAAIM,kBAAJ,IAA0BN,IAAIK,mBAA9B,IAAqD,EAAjE,CAPhB,EAAP;;AASD;;AAED,SAASE,eAAT,CAAyBC,OAAzB,EAAkCC,UAAlC,EAA8C;AAC5C,MAAIC,QAAQ,EAAZ;AACA,MAAI;AACF,QAAMC,iBAAiB;AACrBV,oBAAc,EADO;AAErBC,uBAAiB,EAFI;AAGrBC,4BAAsB,EAHD;AAIrBC,wBAAkB,EAJG;AAKrBC,2BAAqB,EALA,EAAvB;;;AAQA,QAAII,cAAcA,WAAWf,MAAX,GAAoB,CAAtC,EAAyC;AACvC,UAAI,CAACG,MAAMC,OAAN,CAAcW,UAAd,CAAL,EAAgC;AAC9BC,gBAAQ,CAACE,kBAAKC,OAAL,CAAaJ,UAAb,CAAD,CAAR;AACD,OAFD,MAEO;AACLC,gBAAQD,WAAWK,GAAX,CAAe,uBAAOF,kBAAKC,OAAL,CAAaE,GAAb,CAAP,EAAf,CAAR;AACD;AACF;;AAED,QAAIL,MAAMhB,MAAN,GAAe,CAAnB,EAAsB;AACpB;AACAgB,YAAMM,OAAN,CAAc,eAAO;AACnB,YAAMC,kBAAkBL,kBAAKM,IAAL,CAAUH,GAAV,EAAe,cAAf,CAAxB;AACA,YAAI,CAAC3B,cAAc+B,GAAd,CAAkBF,eAAlB,CAAL,EAAyC;AACvC,cAAMG,YAAYrB;AAChBsB,eAAKC,KAAL,CAAWC,gBAAGC,YAAH,CAAgBP,eAAhB,EAAiC,MAAjC,CAAX,CADgB,CAAlB;;AAGA7B,wBAAcqC,GAAd,CAAkBR,eAAlB,EAAmCG,SAAnC;AACD;AACD,YAAMM,kBAAkBtC,cAAcuC,GAAd,CAAkBV,eAAlB,CAAxB;AACAzB,eAAOC,IAAP,CAAYkB,cAAZ,EAA4BK,OAA5B,CAAoC;AAClCxB,mBAAOoC,MAAP,CAAcjB,eAAekB,OAAf,CAAd,EAAuCH,gBAAgBG,OAAhB,CAAvC,CADkC,GAApC;;AAGD,OAZD;AAaD,KAfD,MAeO;AACL;AACArC,aAAOoC,MAAP;AACEjB,oBADF;AAEEZ;AACE,kCAAU,EAAE+B,KAAKtB,QAAQuB,mBAAR,GAA8BvB,QAAQuB,mBAAR,EAA9B,GAA8DvB,QAAQwB,WAAR,EAArE,EAA4FC,WAAW,KAAvG,EAAV,EAA0HjC,GAD5H,CAFF;;;AAMD;;AAED,QAAI,CAAC;AACHW,mBAAeV,YADZ;AAEHU,mBAAeT,eAFZ;AAGHS,mBAAeR,oBAHZ;AAIHQ,mBAAeP,gBAJZ;AAKHO,mBAAeN,mBALZ;AAMH6B,QANG,CAME5C,OANF,CAAL,EAMiB;AACf,aAAO,IAAP;AACD;;AAED,WAAOqB,cAAP;AACD,GArDD,CAqDE,OAAOwB,CAAP,EAAU;AACV,QAAIzB,MAAMhB,MAAN,GAAe,CAAf,IAAoByC,EAAEC,IAAF,KAAW,QAAnC,EAA6C;AAC3C5B,cAAQ6B,MAAR,CAAe;AACbC,iBAAS,2CADI;AAEbC,aAAK,EAAEC,MAAM,CAAR,EAAWC,QAAQ,CAAnB,EAFQ,EAAf;;AAID;AACD,QAAIN,EAAEO,IAAF,KAAW,WAAX,IAA0BP,aAAaQ,WAA3C,EAAwD;AACtDnC,cAAQ6B,MAAR,CAAe;AACbC,iBAAS,gDAAgDH,EAAEG,OAD9C;AAEbC,aAAK,EAAEC,MAAM,CAAR,EAAWC,QAAQ,CAAnB,EAFQ,EAAf;;AAID;;AAED,WAAO,IAAP;AACD;AACF;;AAED,SAASG,mBAAT,CAA6BC,WAA7B,EAA0C;AACxC,SAAO,cAAIA,WAAJ;AACYA,aADZ,mBAAP;AAED;;AAED,SAASC,kBAAT,CAA4BD,WAA5B,EAAyC;AACvC,uBAAWA,WAAX;AACD;;AAED,SAASE,kBAAT,CAA4BF,WAA5B,EAAyC;AACvC,SAAO,cAAIA,WAAJ,wFAAP;;AAED;;AAED,SAASG,qBAAT,CAA+BN,IAA/B,EAAqC;AACXA,OAAKO,KAAL,CAAW,GAAX,CADW,+CAC5BC,KAD4B,mBACrBC,MADqB;AAEnC,SAAOD,MAAME,UAAN,CAAiB,GAAjB,WAA2BF,KAA3B,iBAAoCC,MAApC,IAA+CD,KAAtD;AACD;;AAED,SAASG,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAO,qCAAmBA,QAAnB,CAAP;AACD;;AAED,SAASC,0BAAT,CAAoCC,IAApC,EAA0CX,WAA1C,EAAuDY,iBAAvD,EAA0E;AACxE,MAAMC,uBAAuBD,qBAAqB;AAChDE,cAAU,KADsC;AAEhDC,iBAAa,KAFmC;AAGhDC,iBAAa,KAHmC;AAIhDC,kBAAc,KAJkC;AAKhDC,qBAAiB,KAL+B,EAAlD;;;AAQA;AACA;AACA,MAAMC,mBAAmB,EAAzB;AACA,MAAMC,mBAAmBpB,cAAcA,YAAYI,KAAZ,CAAkB,GAAlB,CAAd,GAAuC,EAAhE;AACAgB,mBAAiBjD,OAAjB,CAAyB,UAACkD,QAAD,EAAWC,KAAX,EAAqB;AAC5C,QAAI,CAACD,SAASd,UAAT,CAAoB,GAApB,CAAL,EAA+B;AAC7B,UAAMgB,WAAWH,iBAAiBI,KAAjB,CAAuB,CAAvB,EAA0BF,QAAQ,CAAlC,EAAqCjD,IAArC,CAA0C,GAA1C,CAAjB;AACA8C,uBAAiBM,IAAjB,CAAsBF,QAAtB;AACD;AACF,GALD;;AAOA,SAAOJ,iBAAiBO,MAAjB,CAAwB,UAACC,MAAD,EAASC,YAAT,EAA0B;AACvD,WAAO;AACLd,gBAAUa,OAAOb,QAAP,IAAmBH,KAAKvD,YAAL,CAAkBwE,YAAlB,MAAoCC,SAD5D;AAELd,mBAAaY,OAAOZ,WAAP,IAAsBJ,KAAKtD,eAAL,CAAqBuE,YAArB,MAAuCC,SAFrE;AAGLb,mBAAaW,OAAOX,WAAP,IAAsBL,KAAKrD,oBAAL,CAA0BsE,YAA1B,MAA4CC,SAH1E;AAILZ,oBAAcU,OAAOV,YAAP,IAAuBN,KAAKpD,gBAAL,CAAsBqE,YAAtB,MAAwCC,SAJxE;AAKLX;AACES,aAAOT,eAAP,IAA0BP,KAAKnD,mBAAL,CAAyBsE,OAAzB,CAAiCF,YAAjC,MAAmD,CAAC,CAN3E,EAAP;;AAQD,GATM,EASJf,oBATI,CAAP;AAUD;;AAED,SAASkB,eAAT,CAAyBpE,OAAzB,EAAkCgD,IAAlC,EAAwCqB,WAAxC,EAAqDC,IAArD,EAA2DpC,IAA3D,EAAiE;AAC/D;AACA;AACEoC,OAAKC,UAAL,KAAoB,MAApB;AACAD,OAAKC,UAAL,KAAoB,QAFtB;AAGE;AACA;AACD;;AAED,MAAI,6BAAWrC,IAAX,EAAiBlC,OAAjB,MAA8B,UAAlC,EAA8C;AAC5C;AACD;;AAED,MAAM8C,WAAW,0BAAQZ,IAAR,EAAclC,OAAd,CAAjB;AACA,MAAI,CAAC8C,QAAL,EAAe,CAAE,OAAS;;AAE1B,MAAM0B,oBAAoBhC,sBAAsBN,IAAtB,CAA1B;AACA,MAAIe,oBAAoBF,2BAA2BC,IAA3B,EAAiCwB,iBAAjC,CAAxB;;AAEA;AACEvB,oBAAkBE,QAAlB;AACCkB,cAAYI,YAAZ,IAA4BxB,kBAAkBG,WAD/C;AAECiB,cAAYK,aAAZ,IAA6BzB,kBAAkBK,YAFhD;AAGCe,cAAYM,YAAZ,IAA4B1B,kBAAkBI,WAH/C;AAICgB,cAAYO,gBAAZ,IAAgC3B,kBAAkBM,eALrD;AAME;AACA;AACD;;AAED;AACA;AACA,MAAMsB,kBAAkBhC,kBAAkBC,QAAlB,CAAxB;AACA,MAAI+B,mBAAmBA,oBAAoBL,iBAA3C,EAA8D;AAC5DvB,wBAAoBF,2BAA2BC,IAA3B,EAAiC6B,eAAjC,EAAkD5B,iBAAlD,CAApB;;AAEA;AACEA,sBAAkBE,QAAlB;AACCkB,gBAAYI,YAAZ,IAA4BxB,kBAAkBG,WAD/C;AAECiB,gBAAYK,aAAZ,IAA6BzB,kBAAkBK,YAFhD;AAGCe,gBAAYM,YAAZ,IAA4B1B,kBAAkBI,WAH/C;AAICgB,gBAAYO,gBAAZ,IAAgC3B,kBAAkBM,eALrD;AAME;AACA;AACD;AACF;;AAED,MAAIN,kBAAkBG,WAAlB,IAAiC,CAACiB,YAAYI,YAAlD,EAAgE;AAC9DzE,YAAQ6B,MAAR,CAAeyC,IAAf,EAAqBhC,mBAAmBuC,mBAAmBL,iBAAtC,CAArB;AACA;AACD;;AAED,MAAIvB,kBAAkBI,WAAlB,IAAiC,CAACgB,YAAYM,YAAlD,EAAgE;AAC9D3E,YAAQ6B,MAAR,CAAeyC,IAAf,EAAqB/B,mBAAmBsC,mBAAmBL,iBAAtC,CAArB;AACA;AACD;;AAEDxE,UAAQ6B,MAAR,CAAeyC,IAAf,EAAqBlC,oBAAoByC,mBAAmBL,iBAAvC,CAArB;AACD;;AAED,SAASM,UAAT,CAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AACpC;AACA,MAAI,OAAOD,MAAP,KAAkB,SAAlB,IAA+B,OAAOA,MAAP,KAAkB,WAArD,EAAkE;AAChE,WAAOA,MAAP;AACD;AACD;AACA,SAAOA,OAAOrD,IAAP,CAAY;AACjB,kCAAUsD,QAAV,EAAoBC,CAApB;AACA,kCAAUD,QAAV,EAAoB5E,kBAAKM,IAAL,CAAUwE,QAAQ5D,GAAR,EAAV,EAAyB2D,CAAzB,CAApB,CAFiB,GAAZ,CAAP;;AAID;;AAEDE,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,SADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,4BAAR,CADD,EAFF;;;AAMJC,YAAQ;AACN;AACE,cAAQ,QADV;AAEE,oBAAc;AACZ,2BAAmB,EAAE,QAAQ,CAAC,SAAD,EAAY,OAAZ,CAAV,EADP;AAEZ,gCAAwB,EAAE,QAAQ,CAAC,SAAD,EAAY,OAAZ,CAAV,EAFZ;AAGZ,4BAAoB,EAAE,QAAQ,CAAC,SAAD,EAAY,OAAZ,CAAV,EAHR;AAIZ,+BAAuB,EAAE,QAAQ,CAAC,SAAD,EAAY,OAAZ,CAAV,EAJX;AAKZ,sBAAc,EAAE,QAAQ,CAAC,QAAD,EAAW,OAAX,CAAV,EALF,EAFhB;;AASE,8BAAwB,KAT1B,EADM,CANJ,EADS;;;;;AAsBfC,QAtBe,+BAsBR1F,OAtBQ,EAsBC;AACd,UAAM2F,UAAU3F,QAAQ2F,OAAR,CAAgB,CAAhB,KAAsB,EAAtC;AACA,UAAMX,WAAWhF,QAAQuB,mBAAR,GAA8BvB,QAAQuB,mBAAR,EAA9B,GAA8DvB,QAAQwB,WAAR,EAA/E;AACA,UAAMwB,OAAOjD,gBAAgBC,OAAhB,EAAyB2F,QAAQ1F,UAAjC,KAAgDV,iBAAiB,EAAjB,CAA7D;;AAEA,UAAM8E,cAAc;AAClBI,sBAAcK,WAAWa,QAAQjG,eAAnB,EAAoCsF,QAApC,MAAkD,KAD9C;AAElBL,sBAAcG,WAAWa,QAAQhG,oBAAnB,EAAyCqF,QAAzC,MAAuD,KAFnD;AAGlBN,uBAAeI,WAAWa,QAAQ/F,gBAAnB,EAAqCoF,QAArC,MAAmD,KAHhD;AAIlBJ,0BAAkBE,WAAWa,QAAQ9F,mBAAnB,EAAwCmF,QAAxC,MAAsD,KAJtD,EAApB;;;AAOA,aAAO,gCAAc,UAACY,MAAD,EAAStB,IAAT,EAAkB;AACrCF,wBAAgBpE,OAAhB,EAAyBgD,IAAzB,EAA+BqB,WAA/B,EAA4CC,IAA5C,EAAkDsB,OAAOC,KAAzD;AACD,OAFM,EAEJ,EAAEC,UAAU,IAAZ,EAFI,CAAP;AAGD,KArCc,mBAAjB","file":"no-extraneous-dependencies.js","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport readPkgUp from 'eslint-module-utils/readPkgUp';\nimport minimatch from 'minimatch';\nimport resolve from 'eslint-module-utils/resolve';\nimport moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport importType from '../core/importType';\nimport { getFilePackageName } from '../core/packagePath';\nimport docsUrl from '../docsUrl';\n\nconst depFieldCache = new Map();\n\nfunction hasKeys(obj = {}) {\n  return Object.keys(obj).length > 0;\n}\n\nfunction arrayOrKeys(arrayOrObject) {\n  return Array.isArray(arrayOrObject) ? arrayOrObject : Object.keys(arrayOrObject);\n}\n\nfunction extractDepFields(pkg) {\n  return {\n    dependencies: pkg.dependencies || {},\n    devDependencies: pkg.devDependencies || {},\n    optionalDependencies: pkg.optionalDependencies || {},\n    peerDependencies: pkg.peerDependencies || {},\n    // BundledDeps should be in the form of an array, but object notation is also supported by\n    // `npm`, so we convert it to an array if it is an object\n    bundledDependencies: arrayOrKeys(pkg.bundleDependencies || pkg.bundledDependencies || []),\n  };\n}\n\nfunction getDependencies(context, packageDir) {\n  let paths = [];\n  try {\n    const packageContent = {\n      dependencies: {},\n      devDependencies: {},\n      optionalDependencies: {},\n      peerDependencies: {},\n      bundledDependencies: [],\n    };\n\n    if (packageDir && packageDir.length > 0) {\n      if (!Array.isArray(packageDir)) {\n        paths = [path.resolve(packageDir)];\n      } else {\n        paths = packageDir.map(dir => path.resolve(dir));\n      }\n    }\n\n    if (paths.length > 0) {\n      // use rule config to find package.json\n      paths.forEach(dir => {\n        const packageJsonPath = path.join(dir, 'package.json');\n        if (!depFieldCache.has(packageJsonPath)) {\n          const depFields = extractDepFields(\n            JSON.parse(fs.readFileSync(packageJsonPath, 'utf8')),\n          );\n          depFieldCache.set(packageJsonPath, depFields);\n        }\n        const _packageContent = depFieldCache.get(packageJsonPath);\n        Object.keys(packageContent).forEach(depsKey =>\n          Object.assign(packageContent[depsKey], _packageContent[depsKey]),\n        );\n      });\n    } else {\n      // use closest package.json\n      Object.assign(\n        packageContent,\n        extractDepFields(\n          readPkgUp({ cwd: context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename(), normalize: false }).pkg,\n        ),\n      );\n    }\n\n    if (![\n      packageContent.dependencies,\n      packageContent.devDependencies,\n      packageContent.optionalDependencies,\n      packageContent.peerDependencies,\n      packageContent.bundledDependencies,\n    ].some(hasKeys)) {\n      return null;\n    }\n\n    return packageContent;\n  } catch (e) {\n    if (paths.length > 0 && e.code === 'ENOENT') {\n      context.report({\n        message: 'The package.json file could not be found.',\n        loc: { line: 0, column: 0 },\n      });\n    }\n    if (e.name === 'JSONError' || e instanceof SyntaxError) {\n      context.report({\n        message: 'The package.json file could not be parsed: ' + e.message,\n        loc: { line: 0, column: 0 },\n      });\n    }\n\n    return null;\n  }\n}\n\nfunction missingErrorMessage(packageName) {\n  return `'${packageName}' should be listed in the project's dependencies. ` +\n    `Run 'npm i -S ${packageName}' to add it`;\n}\n\nfunction devDepErrorMessage(packageName) {\n  return `'${packageName}' should be listed in the project's dependencies, not devDependencies.`;\n}\n\nfunction optDepErrorMessage(packageName) {\n  return `'${packageName}' should be listed in the project's dependencies, ` +\n    `not optionalDependencies.`;\n}\n\nfunction getModuleOriginalName(name) {\n  const [first, second] = name.split('/');\n  return first.startsWith('@') ? `${first}/${second}` : first;\n}\n\nfunction getModuleRealName(resolved) {\n  return getFilePackageName(resolved);\n}\n\nfunction checkDependencyDeclaration(deps, packageName, declarationStatus) {\n  const newDeclarationStatus = declarationStatus || {\n    isInDeps: false,\n    isInDevDeps: false,\n    isInOptDeps: false,\n    isInPeerDeps: false,\n    isInBundledDeps: false,\n  };\n\n  // in case of sub package.json inside a module\n  // check the dependencies on all hierarchy\n  const packageHierarchy = [];\n  const packageNameParts = packageName ? packageName.split('/') : [];\n  packageNameParts.forEach((namePart, index) => {\n    if (!namePart.startsWith('@')) {\n      const ancestor = packageNameParts.slice(0, index + 1).join('/');\n      packageHierarchy.push(ancestor);\n    }\n  });\n\n  return packageHierarchy.reduce((result, ancestorName) => {\n    return {\n      isInDeps: result.isInDeps || deps.dependencies[ancestorName] !== undefined,\n      isInDevDeps: result.isInDevDeps || deps.devDependencies[ancestorName] !== undefined,\n      isInOptDeps: result.isInOptDeps || deps.optionalDependencies[ancestorName] !== undefined,\n      isInPeerDeps: result.isInPeerDeps || deps.peerDependencies[ancestorName] !== undefined,\n      isInBundledDeps:\n        result.isInBundledDeps || deps.bundledDependencies.indexOf(ancestorName) !== -1,\n    };\n  }, newDeclarationStatus);\n}\n\nfunction reportIfMissing(context, deps, depsOptions, node, name) {\n  // Do not report when importing types\n  if (\n    node.importKind === 'type' ||\n    node.importKind === 'typeof'\n  ) {\n    return;\n  }\n\n  if (importType(name, context) !== 'external') {\n    return;\n  }\n\n  const resolved = resolve(name, context);\n  if (!resolved) { return; }\n\n  const importPackageName = getModuleOriginalName(name);\n  let declarationStatus = checkDependencyDeclaration(deps, importPackageName);\n\n  if (\n    declarationStatus.isInDeps ||\n    (depsOptions.allowDevDeps && declarationStatus.isInDevDeps) ||\n    (depsOptions.allowPeerDeps && declarationStatus.isInPeerDeps) ||\n    (depsOptions.allowOptDeps && declarationStatus.isInOptDeps) ||\n    (depsOptions.allowBundledDeps && declarationStatus.isInBundledDeps)\n  ) {\n    return;\n  }\n\n  // test the real name from the resolved package.json\n  // if not aliased imports (alias/react for example), importPackageName can be misinterpreted\n  const realPackageName = getModuleRealName(resolved);\n  if (realPackageName && realPackageName !== importPackageName) {\n    declarationStatus = checkDependencyDeclaration(deps, realPackageName, declarationStatus);\n\n    if (\n      declarationStatus.isInDeps ||\n      (depsOptions.allowDevDeps && declarationStatus.isInDevDeps) ||\n      (depsOptions.allowPeerDeps && declarationStatus.isInPeerDeps) ||\n      (depsOptions.allowOptDeps && declarationStatus.isInOptDeps) ||\n      (depsOptions.allowBundledDeps && declarationStatus.isInBundledDeps)\n    ) {\n      return;\n    }\n  }\n\n  if (declarationStatus.isInDevDeps && !depsOptions.allowDevDeps) {\n    context.report(node, devDepErrorMessage(realPackageName || importPackageName));\n    return;\n  }\n\n  if (declarationStatus.isInOptDeps && !depsOptions.allowOptDeps) {\n    context.report(node, optDepErrorMessage(realPackageName || importPackageName));\n    return;\n  }\n\n  context.report(node, missingErrorMessage(realPackageName || importPackageName));\n}\n\nfunction testConfig(config, filename) {\n  // Simplest configuration first, either a boolean or nothing.\n  if (typeof config === 'boolean' || typeof config === 'undefined') {\n    return config;\n  }\n  // Array of globs.\n  return config.some(c => (\n    minimatch(filename, c) ||\n    minimatch(filename, path.join(process.cwd(), c))\n  ));\n}\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('no-extraneous-dependencies'),\n    },\n\n    schema: [\n      {\n        'type': 'object',\n        'properties': {\n          'devDependencies': { 'type': ['boolean', 'array'] },\n          'optionalDependencies': { 'type': ['boolean', 'array'] },\n          'peerDependencies': { 'type': ['boolean', 'array'] },\n          'bundledDependencies': { 'type': ['boolean', 'array'] },\n          'packageDir': { 'type': ['string', 'array'] },\n        },\n        'additionalProperties': false,\n      },\n    ],\n  },\n\n  create(context) {\n    const options = context.options[0] || {};\n    const filename = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n    const deps = getDependencies(context, options.packageDir) || extractDepFields({});\n\n    const depsOptions = {\n      allowDevDeps: testConfig(options.devDependencies, filename) !== false,\n      allowOptDeps: testConfig(options.optionalDependencies, filename) !== false,\n      allowPeerDeps: testConfig(options.peerDependencies, filename) !== false,\n      allowBundledDeps: testConfig(options.bundledDependencies, filename) !== false,\n    };\n\n    return moduleVisitor((source, node) => {\n      reportIfMissing(context, deps, depsOptions, node, source.value);\n    }, { commonjs: true });\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-absolute-path.js":{"lineLengths":[140,48,181,0,18,9,23,11,59,0,56,0,0,49,41,56,81,9,7,0,90,72,25,2044],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-absolute-path.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","reportIfAbsolute","source","value","report","options","Object","assign","esmodule","commonjs"],"mappings":"aAAA,kE;AACA;AACA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,kBAAR,CADD,EAFF;;AAKJC,YAAQ,CAAE,uCAAF,CALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd,eAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAChC,YAAI,4BAAWA,OAAOC,KAAlB,CAAJ,EAA8B;AAC5BH,kBAAQI,MAAR,CAAeF,MAAf,EAAuB,8CAAvB;AACD;AACF;;AAED,UAAMG,UAAUC,OAAOC,MAAP,CAAc,EAAEC,UAAU,IAAZ,EAAkBC,UAAU,IAA5B,EAAd,EAAkDT,QAAQK,OAAR,CAAgB,CAAhB,CAAlD,CAAhB;AACA,aAAO,gCAAcJ,gBAAd,EAAgCI,OAAhC,CAAP;AACD,KAlBc,mBAAjB","file":"no-absolute-path.js","sourcesContent":["import moduleVisitor, { makeOptionsSchema } from 'eslint-module-utils/moduleVisitor';\nimport { isAbsolute } from '../core/importType';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-absolute-path'),\n    },\n    schema: [ makeOptionsSchema() ],\n  },\n\n  create(context) {\n    function reportIfAbsolute(source) {\n      if (isAbsolute(source.value)) {\n        context.report(source, 'Do not import modules using an absolute path');\n      }\n    }\n\n    const options = Object.assign({ esmodule: true, commonjs: true }, context.options[0]);\n    return moduleVisitor(reportIfAbsolute, options);\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-nodejs-modules.js":{"lineLengths":[116,127,181,0,56,98,80,3,1,0,18,9,23,11,60,0,13,5,21,19,16,24,28,18,33,0,0,0,39,0,0,0,0,49,45,40,0,70,62,29,25,3124],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-nodejs-modules.js"],"names":["reportIfMissing","context","node","allowed","name","indexOf","report","module","exports","meta","type","docs","url","schema","properties","allow","uniqueItems","items","additionalProperties","create","options","source","value","commonjs"],"mappings":"aAAA,gD;AACA,kE;AACA,qC;;AAEA,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,IAAlC,EAAwCC,OAAxC,EAAiDC,IAAjD,EAAuD;AACrD,MAAID,QAAQE,OAAR,CAAgBD,IAAhB,MAA0B,CAAC,CAA3B,IAAgC,6BAAWA,IAAX,EAAiBH,OAAjB,MAA8B,SAAlE,EAA6E;AAC3EA,YAAQK,MAAR,CAAeJ,IAAf,EAAqB,2CAA2CE,IAA3C,GAAkD,GAAvE;AACD;AACF;;AAEDG,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,mBAAR,CADD,EAFF;;AAKJC,YAAQ;AACN;AACEH,YAAM,QADR;AAEEI,kBAAY;AACVC,eAAO;AACLL,gBAAM,OADD;AAELM,uBAAa,IAFR;AAGLC,iBAAO;AACLP,kBAAM,QADD,EAHF,EADG,EAFd;;;;AAWEQ,4BAAsB,KAXxB,EADM,CALJ,EADS;;;;;AAuBfC,QAvBe,+BAuBRlB,OAvBQ,EAuBC;AACd,UAAMmB,UAAUnB,QAAQmB,OAAR,CAAgB,CAAhB,KAAsB,EAAtC;AACA,UAAMjB,UAAUiB,QAAQL,KAAR,IAAiB,EAAjC;;AAEA,aAAO,gCAAc,UAACM,MAAD,EAASnB,IAAT,EAAkB;AACrCF,wBAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCkB,OAAOC,KAA/C;AACD,OAFM,EAEJ,EAAEC,UAAU,IAAZ,EAFI,CAAP;AAGD,KA9Bc,mBAAjB","file":"no-nodejs-modules.js","sourcesContent":["import importType from '../core/importType';\nimport moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nfunction reportIfMissing(context, node, allowed, name) {\n  if (allowed.indexOf(name) === -1 && importType(name, context) === 'builtin') {\n    context.report(node, 'Do not import Node.js builtin module \"' + name + '\"');\n  }\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-nodejs-modules'),\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          allow: {\n            type: 'array',\n            uniqueItems: true,\n            items: {\n              type: 'string',\n            },\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const options = context.options[0] || {};\n    const allowed = options.allow || [];\n\n    return moduleVisitor((source, node) => {\n      reportIfMissing(context, node, allowed, source.value);\n    }, { commonjs: true });\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-webpack-loader-syntax.js":{"lineLengths":[140,181,0,51,41,75,62,0,3,1,0,18,9,20,11,67,0,17,0,0,49,70,57,29,25,2032],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-webpack-loader-syntax.js"],"names":["reportIfNonStandard","context","node","name","indexOf","report","module","exports","meta","type","docs","url","schema","create","source","value","commonjs"],"mappings":"aAAA,kE;AACA,qC;;AAEA,SAASA,mBAAT,CAA6BC,OAA7B,EAAsCC,IAAtC,EAA4CC,IAA5C,EAAkD;AAChD,MAAIA,QAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAAnC,EAAsC;AACpCH,YAAQI,MAAR,CAAeH,IAAf,EAAqB,kCAAsBC,IAAtB;AACnB,4DADF;;AAGD;AACF;;AAEDG,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,SADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,0BAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRZ,OATQ,EASC;AACd,aAAO,gCAAc,UAACa,MAAD,EAASZ,IAAT,EAAkB;AACrCF,4BAAoBC,OAApB,EAA6BC,IAA7B,EAAmCY,OAAOC,KAA1C;AACD,OAFM,EAEJ,EAAEC,UAAU,IAAZ,EAFI,CAAP;AAGD,KAbc,mBAAjB","file":"no-webpack-loader-syntax.js","sourcesContent":["import moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nfunction reportIfNonStandard(context, node, name) {\n  if (name && name.indexOf('!') !== -1) {\n    context.report(node, `Unexpected '!' in '${name}'. ` +\n      'Do not use import syntax to configure webpack loaders.',\n    );\n  }\n}\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      url: docsUrl('no-webpack-loader-syntax'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    return moduleVisitor((source, node) => {\n      reportIfNonStandard(context, node, source.value);\n    }, { commonjs: true });\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/order.js":{"lineLengths":[645,0,91,103,115,181,0,74,0,23,0,25,33,51,15,1,0,60,32,18,35,79,37,12,5,36,3,16,1,0,61,32,18,35,80,37,12,5,36,3,26,1,0,60,63,18,43,31,29,12,12,5,3,16,1,0,61,64,18,48,31,29,12,12,5,3,26,1,0,35,30,14,3,36,52,57,53,39,5,15,5,1,0,29,20,63,27,3,16,1,0,54,92,50,60,16,27,62,38,21,12,5,99,12,5,19,3,16,1,0,36,86,50,47,1,0,56,93,99,29,47,68,12,5,15,3,16,1,0,37,44,17,3,39,17,3,34,27,71,22,40,29,40,32,37,44,16,1,0,36,100,1,0,36,86,1,0,41,94,1,0,49,43,3,33,35,90,171,194,51,21,7,220,14,1,0,63,43,0,47,74,70,0,49,76,72,54,0,74,45,29,3,0,151,0,27,20,28,23,47,33,42,86,0,0,33,20,28,23,47,33,42,82,0,0,3,1,0,65,37,81,44,33,46,5,1,0,50,44,27,11,3,79,43,55,49,72,11,3,60,1,0,31,38,0,64,26,0,30,20,37,19,14,19,7,0,33,30,1,0,65,69,49,34,5,46,15,9,0,47,0,63,55,100,55,0,44,43,47,5,0,47,18,78,63,119,19,7,15,9,0,58,44,115,5,1,0,12,0,64,73,246,92,51,5,3,1,0,72,23,20,45,23,99,21,10,71,3,42,97,3,36,33,3,81,16,3,0,14,1,0,83,75,20,66,3,1,0,32,15,59,39,9,66,62,3,17,3,6,43,51,44,3,34,3,1,0,107,0,42,85,84,39,63,36,22,5,40,44,79,41,7,41,98,7,29,7,15,9,0,51,42,5,0,56,30,15,17,0,55,1,0,48,17,18,0,67,64,21,37,26,25,7,32,45,27,27,7,32,5,0,64,5,0,22,0,48,43,56,68,7,53,5,0,45,39,63,5,0,10,28,92,0,1,0,57,51,47,68,0,36,37,73,3,101,1,0,75,43,51,50,23,50,53,0,84,71,3,19,1,0,79,107,66,37,43,0,0,92,4,35,0,54,88,0,46,60,82,24,36,83,65,0,62,30,62,24,36,71,83,0,7,39,22,34,71,81,0,5,0,35,5,1,0,40,46,44,61,0,60,1,0,18,9,23,11,48,0,0,20,13,5,21,19,17,26,0,40,26,0,21,24,18,27,25,24,33,0,31,33,0,22,31,32,0,25,31,48,0,0,47,0,0,29,19,19,19,37,21,0,0,22,25,23,30,30,33,0,20,48,38,0,0,40,0,34,26,31,0,0,39,0,0,0,0,58,45,75,129,54,25,0,38,181,150,17,25,37,33,37,0,23,34,16,56,50,34,0,7,32,0,38,35,34,9,35,7,0,14,70,80,76,43,27,22,15,27,28,34,33,0,20,43,45,0,13,36,78,37,31,30,36,32,21,13,76,60,34,30,20,25,82,37,13,25,20,13,25,27,39,27,0,18,41,43,0,36,68,57,21,13,46,25,21,13,47,25,20,13,25,26,32,32,0,18,35,43,0,37,64,51,56,85,15,0,51,64,15,0,54,15,0,30,39,0,34,59564],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/order.js"],"names":["defaultGroups","reverse","array","map","v","Object","assign","rank","getTokensOrCommentsAfter","sourceCode","node","count","currentNodeOrToken","result","i","getTokenOrCommentAfter","push","getTokensOrCommentsBefore","getTokenOrCommentBefore","takeTokensAfterWhile","condition","tokens","length","takeTokensBeforeWhile","findOutOfOrder","imported","maxSeenRankNode","filter","importedModule","res","findRootNode","parent","body","findEndOfLineWithComments","tokensToEndOfLine","commentOnSameLineAs","endOfTokens","range","text","token","type","loc","start","line","end","findStartOfLineWithComments","startOfTokens","isPlainRequireModule","declarations","decl","id","init","callee","name","arguments","isPlainImportModule","specifiers","isPlainImportEquals","moduleReference","expression","canCrossNodeWhileReorder","canReorderItems","firstNode","secondNode","indexOf","sort","firstIndex","secondIndex","nodesBetween","slice","nodeBetween","fixOutOfOrder","context","order","getSourceCode","firstRoot","firstRootStart","firstRootEnd","secondRoot","secondRootStart","secondRootEnd","canFix","newCode","substring","message","displayName","report","fix","fixer","replaceTextRange","reportOutOfOrder","outOfOrder","forEach","imp","found","find","hasHigherRank","importedItem","makeOutOfOrderReport","reversedImported","reversedOrder","getSorter","ascending","multiplier","importsSorter","importA","importB","mutateRanksToAlphabetize","alphabetizeOptions","groupedByRanks","reduce","acc","Array","isArray","groupRanks","keys","sorterFn","comparator","caseInsensitive","a","b","String","value","toLowerCase","groupRank","newRank","alphabetizedRanks","importKind","parseInt","computePathRank","ranks","pathGroups","path","maxPosition","l","pattern","patternOptions","group","position","nocomment","computeRank","importEntry","excludedImportTypes","impType","omittedTypes","has","groups","startsWith","registerNode","getRequireBlock","n","object","types","convertGroupsToRanks","rankObject","index","groupItem","Error","JSON","stringify","undefined","convertPathGroupsForRanks","after","before","transformed","pathGroup","positionString","groupLength","groupIndex","Math","max","key","groupNextPosition","pow","ceil","log10","fixNewLineAfterImport","previousImport","prevRoot","endOfLine","insertTextAfterRange","removeNewLineAfterImport","currentImport","currRoot","rangeToRemove","test","removeRange","makeNewlinesBetweenReport","newlinesBetweenImports","getNumberOfEmptyLinesBetween","linesBetweenImports","lines","trim","emptyLinesBetween","getAlphabetizeConfig","options","alphabetize","module","exports","meta","docs","url","fixable","schema","properties","pathGroupsExcludedImportTypes","items","required","additionalProperties","warnOnUnassignedImports","create","importOrderRule","Set","error","Program","importMap","Map","getBlockImports","set","get","ImportDeclaration","handleImports","source","TSImportEqualsDeclaration","isExport","getText","CallExpression","handleRequires","block","reportAndReset","clear"],"mappings":"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","file":"order.js","sourcesContent":["'use strict';\n\nimport minimatch from 'minimatch';\nimport importType from '../core/importType';\nimport isStaticRequire from '../core/staticRequire';\nimport docsUrl from '../docsUrl';\n\nconst defaultGroups = ['builtin', 'external', 'parent', 'sibling', 'index'];\n\n// REPORTING AND FIXING\n\nfunction reverse(array) {\n  return array.map(function (v) {\n    return Object.assign({}, v, { rank: -v.rank });\n  }).reverse();\n}\n\nfunction getTokensOrCommentsAfter(sourceCode, node, count) {\n  let currentNodeOrToken = node;\n  const result = [];\n  for (let i = 0; i < count; i++) {\n    currentNodeOrToken = sourceCode.getTokenOrCommentAfter(currentNodeOrToken);\n    if (currentNodeOrToken == null) {\n      break;\n    }\n    result.push(currentNodeOrToken);\n  }\n  return result;\n}\n\nfunction getTokensOrCommentsBefore(sourceCode, node, count) {\n  let currentNodeOrToken = node;\n  const result = [];\n  for (let i = 0; i < count; i++) {\n    currentNodeOrToken = sourceCode.getTokenOrCommentBefore(currentNodeOrToken);\n    if (currentNodeOrToken == null) {\n      break;\n    }\n    result.push(currentNodeOrToken);\n  }\n  return result.reverse();\n}\n\nfunction takeTokensAfterWhile(sourceCode, node, condition) {\n  const tokens = getTokensOrCommentsAfter(sourceCode, node, 100);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    if (condition(tokens[i])) {\n      result.push(tokens[i]);\n    } else {\n      break;\n    }\n  }\n  return result;\n}\n\nfunction takeTokensBeforeWhile(sourceCode, node, condition) {\n  const tokens = getTokensOrCommentsBefore(sourceCode, node, 100);\n  const result = [];\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    if (condition(tokens[i])) {\n      result.push(tokens[i]);\n    } else {\n      break;\n    }\n  }\n  return result.reverse();\n}\n\nfunction findOutOfOrder(imported) {\n  if (imported.length === 0) {\n    return [];\n  }\n  let maxSeenRankNode = imported[0];\n  return imported.filter(function (importedModule) {\n    const res = importedModule.rank < maxSeenRankNode.rank;\n    if (maxSeenRankNode.rank < importedModule.rank) {\n      maxSeenRankNode = importedModule;\n    }\n    return res;\n  });\n}\n\nfunction findRootNode(node) {\n  let parent = node;\n  while (parent.parent != null && parent.parent.body == null) {\n    parent = parent.parent;\n  }\n  return parent;\n}\n\nfunction findEndOfLineWithComments(sourceCode, node) {\n  const tokensToEndOfLine = takeTokensAfterWhile(sourceCode, node, commentOnSameLineAs(node));\n  const endOfTokens = tokensToEndOfLine.length > 0\n    ? tokensToEndOfLine[tokensToEndOfLine.length - 1].range[1]\n    : node.range[1];\n  let result = endOfTokens;\n  for (let i = endOfTokens; i < sourceCode.text.length; i++) {\n    if (sourceCode.text[i] === '\\n') {\n      result = i + 1;\n      break;\n    }\n    if (sourceCode.text[i] !== ' ' && sourceCode.text[i] !== '\\t' && sourceCode.text[i] !== '\\r') {\n      break;\n    }\n    result = i + 1;\n  }\n  return result;\n}\n\nfunction commentOnSameLineAs(node) {\n  return token => (token.type === 'Block' ||  token.type === 'Line') &&\n      token.loc.start.line === token.loc.end.line &&\n      token.loc.end.line === node.loc.end.line;\n}\n\nfunction findStartOfLineWithComments(sourceCode, node) {\n  const tokensToEndOfLine = takeTokensBeforeWhile(sourceCode, node, commentOnSameLineAs(node));\n  const startOfTokens = tokensToEndOfLine.length > 0 ? tokensToEndOfLine[0].range[0] : node.range[0];\n  let result = startOfTokens;\n  for (let i = startOfTokens - 1; i > 0; i--) {\n    if (sourceCode.text[i] !== ' ' && sourceCode.text[i] !== '\\t') {\n      break;\n    }\n    result = i;\n  }\n  return result;\n}\n\nfunction isPlainRequireModule(node) {\n  if (node.type !== 'VariableDeclaration') {\n    return false;\n  }\n  if (node.declarations.length !== 1) {\n    return false;\n  }\n  const decl = node.declarations[0];\n  const result = decl.id &&\n    (decl.id.type === 'Identifier' || decl.id.type === 'ObjectPattern') &&\n    decl.init != null &&\n    decl.init.type === 'CallExpression' &&\n    decl.init.callee != null &&\n    decl.init.callee.name === 'require' &&\n    decl.init.arguments != null &&\n    decl.init.arguments.length === 1 &&\n    decl.init.arguments[0].type === 'Literal';\n  return result;\n}\n\nfunction isPlainImportModule(node) {\n  return node.type === 'ImportDeclaration' && node.specifiers != null && node.specifiers.length > 0;\n}\n\nfunction isPlainImportEquals(node) {\n  return node.type === 'TSImportEqualsDeclaration' && node.moduleReference.expression;\n}\n\nfunction canCrossNodeWhileReorder(node) {\n  return isPlainRequireModule(node) || isPlainImportModule(node) || isPlainImportEquals(node);\n}\n\nfunction canReorderItems(firstNode, secondNode) {\n  const parent = firstNode.parent;\n  const [firstIndex, secondIndex] = [\n    parent.body.indexOf(firstNode),\n    parent.body.indexOf(secondNode),\n  ].sort();\n  const nodesBetween = parent.body.slice(firstIndex, secondIndex + 1);\n  for (const nodeBetween of nodesBetween) {\n    if (!canCrossNodeWhileReorder(nodeBetween)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction fixOutOfOrder(context, firstNode, secondNode, order) {\n  const sourceCode = context.getSourceCode();\n\n  const firstRoot = findRootNode(firstNode.node);\n  const firstRootStart = findStartOfLineWithComments(sourceCode, firstRoot);\n  const firstRootEnd = findEndOfLineWithComments(sourceCode, firstRoot);\n\n  const secondRoot = findRootNode(secondNode.node);\n  const secondRootStart = findStartOfLineWithComments(sourceCode, secondRoot);\n  const secondRootEnd = findEndOfLineWithComments(sourceCode, secondRoot);\n  const canFix = canReorderItems(firstRoot, secondRoot);\n\n  let newCode = sourceCode.text.substring(secondRootStart, secondRootEnd);\n  if (newCode[newCode.length - 1] !== '\\n') {\n    newCode = newCode + '\\n';\n  }\n\n  const message = `\\`${secondNode.displayName}\\` import should occur ${order} import of \\`${firstNode.displayName}\\``;\n\n  if (order === 'before') {\n    context.report({\n      node: secondNode.node,\n      message,\n      fix: canFix && (fixer =>\n        fixer.replaceTextRange(\n          [firstRootStart, secondRootEnd],\n          newCode + sourceCode.text.substring(firstRootStart, secondRootStart),\n        )),\n    });\n  } else if (order === 'after') {\n    context.report({\n      node: secondNode.node,\n      message,\n      fix: canFix && (fixer =>\n        fixer.replaceTextRange(\n          [secondRootStart, firstRootEnd],\n          sourceCode.text.substring(secondRootEnd, firstRootEnd) + newCode,\n        )),\n    });\n  }\n}\n\nfunction reportOutOfOrder(context, imported, outOfOrder, order) {\n  outOfOrder.forEach(function (imp) {\n    const found = imported.find(function hasHigherRank(importedItem) {\n      return importedItem.rank > imp.rank;\n    });\n    fixOutOfOrder(context, found, imp, order);\n  });\n}\n\nfunction makeOutOfOrderReport(context, imported) {\n  const outOfOrder = findOutOfOrder(imported);\n  if (!outOfOrder.length) {\n    return;\n  }\n  // There are things to report. Try to minimize the number of reported errors.\n  const reversedImported = reverse(imported);\n  const reversedOrder = findOutOfOrder(reversedImported);\n  if (reversedOrder.length < outOfOrder.length) {\n    reportOutOfOrder(context, reversedImported, reversedOrder, 'after');\n    return;\n  }\n  reportOutOfOrder(context, imported, outOfOrder, 'before');\n}\n\nfunction getSorter(ascending) {\n  const multiplier = ascending ? 1 : -1;\n\n  return function importsSorter(importA, importB) {\n    let result;\n\n    if (importA < importB) {\n      result = -1;\n    } else if (importA > importB) {\n      result = 1;\n    } else {\n      result = 0;\n    }\n\n    return result * multiplier;\n  };\n}\n\nfunction mutateRanksToAlphabetize(imported, alphabetizeOptions) {\n  const groupedByRanks = imported.reduce(function (acc, importedItem) {\n    if (!Array.isArray(acc[importedItem.rank])) {\n      acc[importedItem.rank] = [];\n    }\n    acc[importedItem.rank].push(importedItem);\n    return acc;\n  }, {});\n\n  const groupRanks = Object.keys(groupedByRanks);\n\n  const sorterFn = getSorter(alphabetizeOptions.order === 'asc');\n  const comparator = alphabetizeOptions.caseInsensitive\n    ? (a, b) => sorterFn(String(a.value).toLowerCase(), String(b.value).toLowerCase())\n    : (a, b) => sorterFn(a.value, b.value);\n\n  // sort imports locally within their group\n  groupRanks.forEach(function (groupRank) {\n    groupedByRanks[groupRank].sort(comparator);\n  });\n\n  // assign globally unique rank to each import\n  let newRank = 0;\n  const alphabetizedRanks = groupRanks.sort().reduce(function (acc, groupRank) {\n    groupedByRanks[groupRank].forEach(function (importedItem) {\n      acc[`${importedItem.value}|${importedItem.node.importKind}`] = parseInt(groupRank, 10) + newRank;\n      newRank += 1;\n    });\n    return acc;\n  }, {});\n\n  // mutate the original group-rank with alphabetized-rank\n  imported.forEach(function (importedItem) {\n    importedItem.rank = alphabetizedRanks[`${importedItem.value}|${importedItem.node.importKind}`];\n  });\n}\n\n// DETECTING\n\nfunction computePathRank(ranks, pathGroups, path, maxPosition) {\n  for (let i = 0, l = pathGroups.length; i < l; i++) {\n    const { pattern, patternOptions, group, position = 1 } = pathGroups[i];\n    if (minimatch(path, pattern, patternOptions || { nocomment: true })) {\n      return ranks[group] + (position / maxPosition);\n    }\n  }\n}\n\nfunction computeRank(context, ranks, importEntry, excludedImportTypes) {\n  let impType;\n  let rank;\n  if (importEntry.type === 'import:object') {\n    impType = 'object';\n  } else if (importEntry.node.importKind === 'type' && ranks.omittedTypes.indexOf('type') === -1) {\n    impType = 'type';\n  } else {\n    impType = importType(importEntry.value, context);\n  }\n  if (!excludedImportTypes.has(impType)) {\n    rank = computePathRank(ranks.groups, ranks.pathGroups, importEntry.value, ranks.maxPosition);\n  }\n  if (typeof rank === 'undefined') {\n    rank = ranks.groups[impType];\n  }\n  if (importEntry.type !== 'import' && !importEntry.type.startsWith('import:')) {\n    rank += 100;\n  }\n\n  return rank;\n}\n\nfunction registerNode(context, importEntry, ranks, imported, excludedImportTypes) {\n  const rank = computeRank(context, ranks, importEntry, excludedImportTypes);\n  if (rank !== -1) {\n    imported.push(Object.assign({}, importEntry, { rank }));\n  }\n}\n\nfunction getRequireBlock(node) {\n  let n = node;\n  // Handle cases like `const baz = require('foo').bar.baz`\n  // and `const foo = require('foo')()`\n  while (\n    (n.parent.type === 'MemberExpression' && n.parent.object === n) ||\n    (n.parent.type === 'CallExpression' && n.parent.callee === n)\n  ) {\n    n = n.parent;\n  }\n  if (\n    n.parent.type === 'VariableDeclarator' &&\n    n.parent.parent.type === 'VariableDeclaration' &&\n    n.parent.parent.parent.type === 'Program'\n  ) {\n    return n.parent.parent.parent;\n  }\n}\n\nconst types = ['builtin', 'external', 'internal', 'unknown', 'parent', 'sibling', 'index', 'object', 'type'];\n\n// Creates an object with type-rank pairs.\n// Example: { index: 0, sibling: 1, parent: 1, external: 1, builtin: 2, internal: 2 }\n// Will throw an error if it contains a type that does not exist, or has a duplicate\nfunction convertGroupsToRanks(groups) {\n  const rankObject = groups.reduce(function (res, group, index) {\n    if (typeof group === 'string') {\n      group = [group];\n    }\n    group.forEach(function (groupItem) {\n      if (types.indexOf(groupItem) === -1) {\n        throw new Error('Incorrect configuration of the rule: Unknown type `' +\n          JSON.stringify(groupItem) + '`');\n      }\n      if (res[groupItem] !== undefined) {\n        throw new Error('Incorrect configuration of the rule: `' + groupItem + '` is duplicated');\n      }\n      res[groupItem] = index;\n    });\n    return res;\n  }, {});\n\n  const omittedTypes = types.filter(function (type) {\n    return rankObject[type] === undefined;\n  });\n\n  const ranks = omittedTypes.reduce(function (res, type) {\n    res[type] = groups.length;\n    return res;\n  }, rankObject);\n\n  return { groups: ranks, omittedTypes };\n}\n\nfunction convertPathGroupsForRanks(pathGroups) {\n  const after = {};\n  const before = {};\n\n  const transformed = pathGroups.map((pathGroup, index) => {\n    const { group, position: positionString } = pathGroup;\n    let position = 0;\n    if (positionString === 'after') {\n      if (!after[group]) {\n        after[group] = 1;\n      }\n      position = after[group]++;\n    } else if (positionString === 'before') {\n      if (!before[group]) {\n        before[group] = [];\n      }\n      before[group].push(index);\n    }\n\n    return Object.assign({}, pathGroup, { position });\n  });\n\n  let maxPosition = 1;\n\n  Object.keys(before).forEach((group) => {\n    const groupLength = before[group].length;\n    before[group].forEach((groupIndex, index) => {\n      transformed[groupIndex].position = -1 * (groupLength - index);\n    });\n    maxPosition = Math.max(maxPosition, groupLength);\n  });\n\n  Object.keys(after).forEach((key) => {\n    const groupNextPosition = after[key];\n    maxPosition = Math.max(maxPosition, groupNextPosition - 1);\n  });\n\n  return {\n    pathGroups: transformed,\n    maxPosition: maxPosition > 10 ? Math.pow(10, Math.ceil(Math.log10(maxPosition))) : 10,\n  };\n}\n\nfunction fixNewLineAfterImport(context, previousImport) {\n  const prevRoot = findRootNode(previousImport.node);\n  const tokensToEndOfLine = takeTokensAfterWhile(\n    context.getSourceCode(), prevRoot, commentOnSameLineAs(prevRoot));\n\n  let endOfLine = prevRoot.range[1];\n  if (tokensToEndOfLine.length > 0) {\n    endOfLine = tokensToEndOfLine[tokensToEndOfLine.length - 1].range[1];\n  }\n  return (fixer) => fixer.insertTextAfterRange([prevRoot.range[0], endOfLine], '\\n');\n}\n\nfunction removeNewLineAfterImport(context, currentImport, previousImport) {\n  const sourceCode = context.getSourceCode();\n  const prevRoot = findRootNode(previousImport.node);\n  const currRoot = findRootNode(currentImport.node);\n  const rangeToRemove = [\n    findEndOfLineWithComments(sourceCode, prevRoot),\n    findStartOfLineWithComments(sourceCode, currRoot),\n  ];\n  if (/^\\s*$/.test(sourceCode.text.substring(rangeToRemove[0], rangeToRemove[1]))) {\n    return (fixer) => fixer.removeRange(rangeToRemove);\n  }\n  return undefined;\n}\n\nfunction makeNewlinesBetweenReport(context, imported, newlinesBetweenImports) {\n  const getNumberOfEmptyLinesBetween = (currentImport, previousImport) => {\n    const linesBetweenImports = context.getSourceCode().lines.slice(\n      previousImport.node.loc.end.line,\n      currentImport.node.loc.start.line - 1,\n    );\n\n    return linesBetweenImports.filter((line) => !line.trim().length).length;\n  };\n  let previousImport = imported[0];\n\n  imported.slice(1).forEach(function (currentImport) {\n    const emptyLinesBetween = getNumberOfEmptyLinesBetween(currentImport, previousImport);\n\n    if (newlinesBetweenImports === 'always'\n        || newlinesBetweenImports === 'always-and-inside-groups') {\n      if (currentImport.rank !== previousImport.rank && emptyLinesBetween === 0) {\n        context.report({\n          node: previousImport.node,\n          message: 'There should be at least one empty line between import groups',\n          fix: fixNewLineAfterImport(context, previousImport),\n        });\n      } else if (currentImport.rank === previousImport.rank\n        && emptyLinesBetween > 0\n        && newlinesBetweenImports !== 'always-and-inside-groups') {\n        context.report({\n          node: previousImport.node,\n          message: 'There should be no empty line within import group',\n          fix: removeNewLineAfterImport(context, currentImport, previousImport),\n        });\n      }\n    } else if (emptyLinesBetween > 0) {\n      context.report({\n        node: previousImport.node,\n        message: 'There should be no empty line between import groups',\n        fix: removeNewLineAfterImport(context, currentImport, previousImport),\n      });\n    }\n\n    previousImport = currentImport;\n  });\n}\n\nfunction getAlphabetizeConfig(options) {\n  const alphabetize = options.alphabetize || {};\n  const order = alphabetize.order || 'ignore';\n  const caseInsensitive = alphabetize.caseInsensitive || false;\n\n  return { order, caseInsensitive };\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('order'),\n    },\n\n    fixable: 'code',\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          groups: {\n            type: 'array',\n          },\n          pathGroupsExcludedImportTypes: {\n            type: 'array',\n          },\n          pathGroups: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                pattern: {\n                  type: 'string',\n                },\n                patternOptions: {\n                  type: 'object',\n                },\n                group: {\n                  type: 'string',\n                  enum: types,\n                },\n                position: {\n                  type: 'string',\n                  enum: ['after', 'before'],\n                },\n              },\n              required: ['pattern', 'group'],\n            },\n          },\n          'newlines-between': {\n            enum: [\n              'ignore',\n              'always',\n              'always-and-inside-groups',\n              'never',\n            ],\n          },\n          alphabetize: {\n            type: 'object',\n            properties: {\n              caseInsensitive: {\n                type: 'boolean',\n                default: false,\n              },\n              order: {\n                enum: ['ignore', 'asc', 'desc'],\n                default: 'ignore',\n              },\n            },\n            additionalProperties: false,\n          },\n          warnOnUnassignedImports: {\n            type: 'boolean',\n            default: false,\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create: function importOrderRule(context) {\n    const options = context.options[0] || {};\n    const newlinesBetweenImports = options['newlines-between'] || 'ignore';\n    const pathGroupsExcludedImportTypes = new Set(options['pathGroupsExcludedImportTypes'] || ['builtin', 'external', 'object']);\n    const alphabetize = getAlphabetizeConfig(options);\n    let ranks;\n\n    try {\n      const { pathGroups, maxPosition } = convertPathGroupsForRanks(options.pathGroups || []);\n      const { groups, omittedTypes } = convertGroupsToRanks(options.groups || defaultGroups);\n      ranks = {\n        groups,\n        omittedTypes,\n        pathGroups,\n        maxPosition,\n      };\n    } catch (error) {\n      // Malformed configuration\n      return {\n        Program(node) {\n          context.report(node, error.message);\n        },\n      };\n    }\n    const importMap = new Map();\n\n    function getBlockImports(node) {\n      if (!importMap.has(node)) {\n        importMap.set(node, []);\n      }\n      return importMap.get(node);\n    }\n\n    return {\n      ImportDeclaration: function handleImports(node) {\n        // Ignoring unassigned imports unless warnOnUnassignedImports is set\n        if (node.specifiers.length || options.warnOnUnassignedImports) {\n          const name = node.source.value;\n          registerNode(\n            context,\n            {\n              node,\n              value: name,\n              displayName: name,\n              type: 'import',\n            },\n            ranks,\n            getBlockImports(node.parent),\n            pathGroupsExcludedImportTypes,\n          );\n        }\n      },\n      TSImportEqualsDeclaration: function handleImports(node) {\n        let displayName;\n        let value;\n        let type;\n        // skip \"export import\"s\n        if (node.isExport) {\n          return;\n        }\n        if (node.moduleReference.type === 'TSExternalModuleReference') {\n          value = node.moduleReference.expression.value;\n          displayName = value;\n          type = 'import';\n        } else {\n          value = '';\n          displayName = context.getSourceCode().getText(node.moduleReference);\n          type = 'import:object';\n        }\n        registerNode(\n          context,\n          {\n            node,\n            value,\n            displayName,\n            type,\n          },\n          ranks,\n          getBlockImports(node.parent),\n          pathGroupsExcludedImportTypes,\n        );\n      },\n      CallExpression: function handleRequires(node) {\n        if (!isStaticRequire(node)) {\n          return;\n        }\n        const block = getRequireBlock(node);\n        if (!block) {\n          return;\n        }\n        const name = node.arguments[0].value;\n        registerNode(\n          context,\n          {\n            node,\n            value: name,\n            displayName: name,\n            type: 'require',\n          },\n          ranks,\n          getBlockImports(block),\n          pathGroupsExcludedImportTypes,\n        );\n      },\n      'Program:exit': function reportAndReset() {\n        importMap.forEach((imported) => {\n          if (newlinesBetweenImports !== 'ignore') {\n            makeNewlinesBetweenReport(context, imported, newlinesBetweenImports);\n          }\n\n          if (alphabetize.order !== 'ignore') {\n            mutateRanksToAlphabetize(imported, alphabetize);\n          }\n\n          makeOutOfOrderReport(context, imported);\n        });\n\n        importMap.clear();\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/core/staticRequire.js":{"lineLengths":[95,51,46,16,38,35,32,41,46,1,1212],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/core/staticRequire.js"],"names":["isStaticRequire","node","callee","type","name","arguments","length","value"],"mappings":";AACwBA,e,EADxB;AACe,SAASA,eAAT,CAAyBC,IAAzB,EAA+B,CAC5C,OAAOA;AACLA,OAAKC,MADA;AAELD,OAAKC,MAAL,CAAYC,IAAZ,KAAqB,YAFhB;AAGLF,OAAKC,MAAL,CAAYE,IAAZ,KAAqB,SAHhB;AAILH,OAAKI,SAAL,CAAeC,MAAf,KAA0B,CAJrB;AAKLL,OAAKI,SAAL,CAAe,CAAf,EAAkBF,IAAlB,KAA2B,SALtB;AAML,SAAOF,KAAKI,SAAL,CAAe,CAAf,EAAkBE,KAAzB,KAAmC,QANrC;AAOD","file":"staticRequire.js","sourcesContent":["// todo: merge with module visitor\nexport default function isStaticRequire(node) {\n  return node &&\n    node.callee &&\n    node.callee.type === 'Identifier' &&\n    node.callee.name === 'require' &&\n    node.arguments.length === 1 &&\n    node.arguments[0].type === 'Literal' &&\n    typeof node.arguments[0].value === 'string';\n}\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/newline-after-import.js":{"lineLengths":[13,0,0,0,0,115,86,0,170,85,0,80,18,80,3,86,23,148,0,30,47,48,16,6,0,26,47,21,3,0,14,1,0,53,89,1,0,44,53,1,0,37,87,1,0,37,98,1,0,34,0,116,1,0,18,9,19,11,63,0,26,13,5,23,21,18,28,27,0,0,41,0,0,0,49,20,28,0,54,76,47,0,48,47,11,52,44,9,0,57,63,57,0,56,45,0,58,23,11,0,26,18,38,31,0,127,79,80,21,91,0,0,9,7,0,33,16,7,33,16,7,0,37,29,53,53,0,32,73,17,9,0,136,52,9,7,0,14,39,47,68,71,38,13,37,61,124,61,41,0,57,75,59,0,69,62,60,0,102,23,15,0,36,90,0,84,15,15,34,44,43,48,39,41,34,51,50,55,46,48,43,0,25,14996],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/newline-after-import.js"],"names":["log","containsNodeOrEqual","outerNode","innerNode","range","getScopeBody","scope","block","type","body","findNodeIndexInScopeBody","nodeToFind","findIndex","node","getLineDifference","nextNode","loc","start","line","end","isClassWithDecorator","decorators","length","isExportDefaultClass","declaration","isExportNameClass","module","exports","meta","docs","url","fixable","schema","create","context","level","requireCalls","checkForNewLine","classNode","options","count","lineDifference","EXPECTED_LINE_DIFFERENCE","column","report","message","fix","fixer","insertTextAfter","repeat","incrementLevel","decrementLevel","checkImport","parent","nodePosition","indexOf","isExport","ImportDeclaration","TSImportEqualsDeclaration","CallExpression","push","getPhysicalFilename","getFilename","scopeBody","getScope","forEach","index","statementWithRequireCall","nextStatement","nextRequireCall","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression","BlockStatement","ObjectExpression","Decorator"],"mappings":"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","file":"newline-after-import.js","sourcesContent":["/**\n * @fileoverview Rule to enforce new line after import not followed by another import.\n * @author Radek Benkel\n */\n\nimport isStaticRequire from '../core/staticRequire';\nimport docsUrl from '../docsUrl';\n\nimport debug from 'debug';\nconst log = debug('eslint-plugin-import:rules:newline-after-import');\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nfunction containsNodeOrEqual(outerNode, innerNode) {\n  return outerNode.range[0] <= innerNode.range[0] && outerNode.range[1] >= innerNode.range[1];\n}\n\nfunction getScopeBody(scope) {\n  if (scope.block.type === 'SwitchStatement') {\n    log('SwitchStatement scopes not supported');\n    return null;\n  }\n\n  const { body } = scope.block;\n  if (body && body.type === 'BlockStatement') {\n    return body.body;\n  }\n\n  return body;\n}\n\nfunction findNodeIndexInScopeBody(body, nodeToFind) {\n  return body.findIndex((node) => containsNodeOrEqual(node, nodeToFind));\n}\n\nfunction getLineDifference(node, nextNode) {\n  return nextNode.loc.start.line - node.loc.end.line;\n}\n\nfunction isClassWithDecorator(node) {\n  return node.type === 'ClassDeclaration' && node.decorators && node.decorators.length;\n}\n\nfunction isExportDefaultClass(node) {\n  return node.type === 'ExportDefaultDeclaration' && node.declaration.type === 'ClassDeclaration';\n}\n\nfunction isExportNameClass(node) {\n\n  return node.type === 'ExportNamedDeclaration' && node.declaration && node.declaration.type === 'ClassDeclaration';\n}\n\nmodule.exports = {\n  meta: {\n    type: 'layout',\n    docs: {\n      url: docsUrl('newline-after-import'),\n    },\n    fixable: 'whitespace',\n    schema: [\n      {\n        'type': 'object',\n        'properties': {\n          'count': {\n            'type': 'integer',\n            'minimum': 1,\n          },\n        },\n        'additionalProperties': false,\n      },\n    ],\n  },\n  create(context) {\n    let level = 0;\n    const requireCalls = [];\n\n    function checkForNewLine(node, nextNode, type) {\n      if (isExportDefaultClass(nextNode) || isExportNameClass(nextNode)) {\n        const classNode = nextNode.declaration;\n\n        if (isClassWithDecorator(classNode)) {\n          nextNode = classNode.decorators[0];\n        }\n      } else if (isClassWithDecorator(nextNode)) {\n        nextNode = nextNode.decorators[0];\n      }\n\n      const options = context.options[0] || { count: 1 };\n      const lineDifference = getLineDifference(node, nextNode);\n      const EXPECTED_LINE_DIFFERENCE = options.count + 1;\n\n      if (lineDifference < EXPECTED_LINE_DIFFERENCE) {\n        let column = node.loc.start.column;\n\n        if (node.loc.start.line !== node.loc.end.line) {\n          column = 0;\n        }\n\n        context.report({\n          loc: {\n            line: node.loc.end.line,\n            column,\n          },\n          message: `Expected ${options.count} empty line${options.count > 1 ? 's' : ''} \\\nafter ${type} statement not followed by another ${type}.`,\n          fix: fixer => fixer.insertTextAfter(\n            node,\n            '\\n'.repeat(EXPECTED_LINE_DIFFERENCE - lineDifference),\n          ),\n        });\n      }\n    }\n\n    function incrementLevel() {\n      level++;\n    }\n    function decrementLevel() {\n      level--;\n    }\n\n    function checkImport(node) {\n      const { parent } = node;\n      const nodePosition = parent.body.indexOf(node);\n      const nextNode = parent.body[nodePosition + 1];\n\n      // skip \"export import\"s\n      if (node.type === 'TSImportEqualsDeclaration' && node.isExport) {\n        return;\n      }\n\n      if (nextNode && nextNode.type !== 'ImportDeclaration' && (nextNode.type !== 'TSImportEqualsDeclaration' || nextNode.isExport)) {\n        checkForNewLine(node, nextNode, 'import');\n      }\n    }\n\n    return {\n      ImportDeclaration: checkImport,\n      TSImportEqualsDeclaration: checkImport,\n      CallExpression(node) {\n        if (isStaticRequire(node) && level === 0) {\n          requireCalls.push(node);\n        }\n      },\n      'Program:exit': function () {\n        log('exit processing for', context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename());\n        const scopeBody = getScopeBody(context.getScope());\n        log('got scope:', scopeBody);\n\n        requireCalls.forEach(function (node, index) {\n          const nodePosition = findNodeIndexInScopeBody(scopeBody, node);\n          log('node position in scope:', nodePosition);\n\n          const statementWithRequireCall = scopeBody[nodePosition];\n          const nextStatement = scopeBody[nodePosition + 1];\n          const nextRequireCall = requireCalls[index + 1];\n\n          if (nextRequireCall && containsNodeOrEqual(statementWithRequireCall, nextRequireCall)) {\n            return;\n          }\n\n          if (nextStatement &&\n             (!nextRequireCall || !containsNodeOrEqual(nextStatement, nextRequireCall))) {\n\n            checkForNewLine(statementWithRequireCall, nextStatement, 'require');\n          }\n        });\n      },\n      FunctionDeclaration: incrementLevel,\n      FunctionExpression: incrementLevel,\n      ArrowFunctionExpression: incrementLevel,\n      BlockStatement: incrementLevel,\n      ObjectExpression: incrementLevel,\n      Decorator: incrementLevel,\n      'FunctionDeclaration:exit': decrementLevel,\n      'FunctionExpression:exit': decrementLevel,\n      'ArrowFunctionExpression:exit': decrementLevel,\n      'BlockStatement:exit': decrementLevel,\n      'ObjectExpression:exit': decrementLevel,\n      'Decorator:exit': decrementLevel,\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/prefer-default-export.js":{"lineLengths":[13,0,181,0,18,9,23,11,64,0,17,0,0,49,35,35,32,32,33,0,56,82,32,41,39,47,13,88,39,38,16,53,33,9,7,0,14,82,36,45,0,72,76,38,20,37,37,13,38,0,86,71,45,0,41,0,16,48,35,48,44,13,37,35,21,13,0,48,76,51,17,20,59,37,13,0,35,45,0,86,36,47,0,78,33,43,0,61,102,72,13,36,0,25,6444],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/prefer-default-export.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","specifierExportCount","hasDefaultExport","hasStarExport","hasTypeExport","namedExportNode","captureDeclaration","identifierOrPattern","properties","forEach","property","value","elements","node","exported","name","declaration","declarations","id","report"],"mappings":"AAAA;;AAEA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,uBAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd,UAAIC,uBAAuB,CAA3B;AACA,UAAIC,mBAAmB,KAAvB;AACA,UAAIC,gBAAgB,KAApB;AACA,UAAIC,gBAAgB,KAApB;AACA,UAAIC,kBAAkB,IAAtB;;AAEA,eAASC,kBAAT,CAA4BC,mBAA5B,EAAiD;AAC/C,YAAIA,uBAAuBA,oBAAoBZ,IAApB,KAA6B,eAAxD,EAAyE;AACvE;AACAY,8BAAoBC,UAApB;AACGC,iBADH,CACW,UAAUC,QAAV,EAAoB;AAC3BJ,+BAAmBI,SAASC,KAA5B;AACD,WAHH;AAID,SAND,MAMO,IAAIJ,uBAAuBA,oBAAoBZ,IAApB,KAA6B,cAAxD,EAAwE;AAC7EY,8BAAoBK,QAApB;AACGH,iBADH,CACWH,kBADX;AAED,SAHM,MAGC;AACR;AACEL;AACD;AACF;;AAED,aAAO;AACL,+CAA0B,kCAAY;AACpCC,+BAAmB,IAAnB;AACD,WAFD,iCADK;;AAKL,wCAAmB,yBAAUW,IAAV,EAAgB;AACjC,gBAAI,CAACA,KAAKC,QAAL,CAAcC,IAAd,IAAsBF,KAAKC,QAAL,CAAcH,KAArC,MAAgD,SAApD,EAA+D;AAC7DT,iCAAmB,IAAnB;AACD,aAFD,MAEO;AACLD;AACAI,gCAAkBQ,IAAlB;AACD;AACF,WAPD,0BALK;;AAcL,+CAA0B,gCAAUA,IAAV,EAAgB;AACxC;AACA,gBAAI,CAACA,KAAKG,WAAV,EAAuB,OAFiB;;AAIhCrB,gBAJgC,GAIvBkB,KAAKG,WAJkB,CAIhCrB,IAJgC;;AAMxC;AACEA,qBAAS,wBAAT;AACAA,qBAAS,WADT;AAEAA,qBAAS,wBAFT;AAGAA,qBAAS,sBAJX;AAKE;AACAM;AACAG,8BAAgB,IAAhB;AACA;AACD;;AAED,gBAAIS,KAAKG,WAAL,CAAiBC,YAArB,EAAmC;AACjCJ,mBAAKG,WAAL,CAAiBC,YAAjB,CAA8BR,OAA9B,CAAsC,UAAUO,WAAV,EAAuB;AAC3DV,mCAAmBU,YAAYE,EAA/B;AACD,eAFD;AAGD,aAJD,MAIO;AACL;AACAjB;AACD;;AAEDI,8BAAkBQ,IAAlB;AACD,WA3BD,iCAdK;;AA2CL,iDAA4B,oCAAY;AACtCX,+BAAmB,IAAnB;AACD,WAFD,mCA3CK;;AA+CL,6CAAwB,gCAAY;AAClCC,4BAAgB,IAAhB;AACD,WAFD,+BA/CK;;AAmDL,qCAAgB,uBAAY;AAC1B,gBAAIF,yBAAyB,CAAzB,IAA8B,CAACC,gBAA/B,IAAmD,CAACC,aAApD,IAAqE,CAACC,aAA1E,EAAyF;AACvFJ,sBAAQmB,MAAR,CAAed,eAAf,EAAgC,wBAAhC;AACD;AACF,WAJD,sBAnDK,EAAP;;AAyDD,KAzFc,mBAAjB","file":"prefer-default-export.js","sourcesContent":["'use strict';\n\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('prefer-default-export'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    let specifierExportCount = 0;\n    let hasDefaultExport = false;\n    let hasStarExport = false;\n    let hasTypeExport = false;\n    let namedExportNode = null;\n\n    function captureDeclaration(identifierOrPattern) {\n      if (identifierOrPattern && identifierOrPattern.type === 'ObjectPattern') {\n        // recursively capture\n        identifierOrPattern.properties\n          .forEach(function (property) {\n            captureDeclaration(property.value);\n          });\n      } else if (identifierOrPattern && identifierOrPattern.type === 'ArrayPattern') {\n        identifierOrPattern.elements\n          .forEach(captureDeclaration);\n      } else  {\n      // assume it's a single standard identifier\n        specifierExportCount++;\n      }\n    }\n\n    return {\n      'ExportDefaultSpecifier': function () {\n        hasDefaultExport = true;\n      },\n\n      'ExportSpecifier': function (node) {\n        if ((node.exported.name || node.exported.value) === 'default') {\n          hasDefaultExport = true;\n        } else {\n          specifierExportCount++;\n          namedExportNode = node;\n        }\n      },\n\n      'ExportNamedDeclaration': function (node) {\n        // if there are specifiers, node.declaration should be null\n        if (!node.declaration) return;\n\n        const { type } = node.declaration;\n\n        if (\n          type === 'TSTypeAliasDeclaration' ||\n          type === 'TypeAlias' ||\n          type === 'TSInterfaceDeclaration' ||\n          type === 'InterfaceDeclaration'\n        ) {\n          specifierExportCount++;\n          hasTypeExport = true;\n          return;\n        }\n\n        if (node.declaration.declarations) {\n          node.declaration.declarations.forEach(function (declaration) {\n            captureDeclaration(declaration.id);\n          });\n        } else {\n          // captures 'export function foo() {}' syntax\n          specifierExportCount++;\n        }\n\n        namedExportNode = node;\n      },\n\n      'ExportDefaultDeclaration': function () {\n        hasDefaultExport = true;\n      },\n\n      'ExportAllDeclaration': function () {\n        hasStarExport = true;\n      },\n\n      'Program:exit': function () {\n        if (specifierExportCount === 1 && !hasDefaultExport && !hasStarExport && !hasTypeExport) {\n          context.report(namedExportNode, 'Prefer default export.');\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-default-export.js":{"lineLengths":[194,0,18,9,23,11,60,0,17,0,0,49,27,58,18,7,0,48,243,0,14,99,82,75,47,0,84,176,84,64,79,64,93,15,15,47,0,25,3968],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-default-export.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","parserOptions","sourceType","preferNamed","noAliasDefault","local","name","ExportDefaultDeclaration","node","getSourceCode","getFirstTokens","loc","report","message","ExportNamedDeclaration","specifiers","filter","specifier","exported","value","forEach"],"mappings":"aAAA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,mBAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd;AACA,UAAIA,QAAQC,aAAR,CAAsBC,UAAtB,KAAqC,QAAzC,EAAmD;AACjD,eAAO,EAAP;AACD;;AAED,UAAMC,cAAc,uBAApB;AACA,UAAMC,8BAAiB,SAAjBA,cAAiB,YAAGC,KAAH,QAAGA,KAAH,kCAAiCA,MAAMC,IAAvC,6CAA+ED,MAAMC,IAArF,yBAAjB,yBAAN;;AAEA,aAAO;AACLC,gCADK,iDACoBC,IADpB,EAC0B;AACbR,oBAAQS,aAAR,GAAwBC,cAAxB,CAAuCF,IAAvC,EAA6C,CAA7C,KAAmD,EADtC,CACrBG,GADqB,SACrBA,GADqB;AAE7BX,oBAAQY,MAAR,CAAe,EAAEJ,UAAF,EAAQK,SAASV,WAAjB,EAA8BQ,QAA9B,EAAf;AACD,WAJI;;AAMLG,8BANK,+CAMkBN,IANlB,EAMwB;AAC3BA,iBAAKO,UAAL,CAAgBC,MAAhB,CAAuB,6BAAa,CAACC,UAAUC,QAAV,CAAmBZ,IAAnB,IAA2BW,UAAUC,QAAV,CAAmBC,KAA/C,MAA0D,SAAvE,EAAvB,EAAyGC,OAAzG,CAAiH,qBAAa;AAC5GpB,sBAAQS,aAAR,GAAwBC,cAAxB,CAAuCF,IAAvC,EAA6C,CAA7C,KAAmD,EADyD,CACpHG,GADoH,SACpHA,GADoH;AAE5H,kBAAIM,UAAUtB,IAAV,KAAmB,wBAAvB,EAAiD;AAC/CK,wBAAQY,MAAR,CAAe,EAAEJ,UAAF,EAAQK,SAASV,WAAjB,EAA8BQ,QAA9B,EAAf;AACD,eAFD,MAEO,IAAIM,UAAUtB,IAAV,KAAmB,iBAAvB,EAA0C;AAC/CK,wBAAQY,MAAR,CAAe,EAAEJ,UAAF,EAAQK,SAAST,eAAea,SAAf,CAAjB,EAA4CN,QAA5C,EAAf;AACD;AACF,aAPD;AAQD,WAfI,mCAAP;;AAiBD,KAnCc,mBAAjB","file":"no-default-export.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-default-export'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    // ignore non-modules\n    if (context.parserOptions.sourceType !== 'module') {\n      return {};\n    }\n\n    const preferNamed = 'Prefer named exports.';\n    const noAliasDefault = ({ local }) => `Do not alias \\`${local.name}\\` as \\`default\\`. Just export \\`${local.name}\\` itself instead.`;\n\n    return {\n      ExportDefaultDeclaration(node) {\n        const { loc } = context.getSourceCode().getFirstTokens(node)[1] || {};\n        context.report({ node, message: preferNamed, loc });\n      },\n\n      ExportNamedDeclaration(node) {\n        node.specifiers.filter(specifier => (specifier.exported.name || specifier.exported.value) === 'default').forEach(specifier => {\n          const { loc } = context.getSourceCode().getFirstTokens(node)[1] || {};\n          if (specifier.type === 'ExportDefaultSpecifier') {\n            context.report({ node, message: preferNamed, loc });\n          } else if (specifier.type === 'ExportSpecifier') {\n            context.report({ node, message: noAliasDefault(specifier), loc  });\n          }\n        });\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-named-export.js":{"lineLengths":[194,0,18,9,23,64,17,0,0,49,27,58,18,7,0,53,0,14,80,61,43,0,84,47,70,13,0,149,28,63,13,47,0,25,2752],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-named-export.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","parserOptions","sourceType","message","ExportAllDeclaration","node","report","ExportNamedDeclaration","specifiers","length","someNamed","some","specifier","exported","name","value"],"mappings":"aAAA,qC;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM,EAAEC,KAAK,0BAAQ,iBAAR,CAAP,EAFF;AAGJC,YAAQ,EAHJ,EADS;;;AAOfC,QAPe,+BAORC,OAPQ,EAOC;AACd;AACA,UAAIA,QAAQC,aAAR,CAAsBC,UAAtB,KAAqC,QAAzC,EAAmD;AACjD,eAAO,EAAP;AACD;;AAED,UAAMC,UAAU,gCAAhB;;AAEA,aAAO;AACLC,4BADK,6CACgBC,IADhB,EACsB;AACzBL,oBAAQM,MAAR,CAAe,EAAED,UAAF,EAAQF,gBAAR,EAAf;AACD,WAHI;;AAKLI,8BALK,+CAKkBF,IALlB,EAKwB;AAC3B,gBAAIA,KAAKG,UAAL,CAAgBC,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,qBAAOT,QAAQM,MAAR,CAAe,EAAED,UAAF,EAAQF,gBAAR,EAAf,CAAP;AACD;;AAED,gBAAMO,YAAYL,KAAKG,UAAL,CAAgBG,IAAhB,CAAqB,6BAAa,CAACC,UAAUC,QAAV,CAAmBC,IAAnB,IAA2BF,UAAUC,QAAV,CAAmBE,KAA/C,MAA0D,SAAvE,EAArB,CAAlB;AACA,gBAAIL,SAAJ,EAAe;AACbV,sBAAQM,MAAR,CAAe,EAAED,UAAF,EAAQF,gBAAR,EAAf;AACD;AACF,WAdI,mCAAP;;AAgBD,KA/Bc,mBAAjB","file":"no-named-export.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: { url: docsUrl('no-named-export') },\n    schema: [],\n  },\n\n  create(context) {\n    // ignore non-modules\n    if (context.parserOptions.sourceType !== 'module') {\n      return {};\n    }\n\n    const message = 'Named exports are not allowed.';\n\n    return {\n      ExportAllDeclaration(node) {\n        context.report({ node, message });\n      },\n\n      ExportNamedDeclaration(node) {\n        if (node.specifiers.length === 0) {\n          return context.report({ node, message });\n        }\n\n        const someNamed = node.specifiers.some(specifier => (specifier.exported.name || specifier.exported.value) !== 'default');\n        if (someNamed) {\n          context.report({ node, message });\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-dynamic-require.js":{"lineLengths":[194,0,26,16,16,38,35,29,1,0,32,16,16,32,1,0,29,34,65,1,0,79,0,18,9,23,11,61,0,13,5,21,19,19,30,0,0,39,0,0,0,0,49,45,0,14,68,73,21,13,34,37,27,76,0,13,60,37,27,54,0,13,37,72,66,21,13,35,25,52,0,41,0,25,4940],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-dynamic-require.js"],"names":["isRequire","node","callee","type","name","arguments","length","isDynamicImport","isStaticValue","arg","expressions","dynamicImportErrorMessage","module","exports","meta","docs","url","schema","properties","esmodule","additionalProperties","create","context","options","CallExpression","report","message","ImportExpression","source"],"mappings":"aAAA,qC;;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAOA;AACLA,OAAKC,MADA;AAELD,OAAKC,MAAL,CAAYC,IAAZ,KAAqB,YAFhB;AAGLF,OAAKC,MAAL,CAAYE,IAAZ,KAAqB,SAHhB;AAILH,OAAKI,SAAL,CAAeC,MAAf,IAAyB,CAJ3B;AAKD;;AAED,SAASC,eAAT,CAAyBN,IAAzB,EAA+B;AAC7B,SAAOA;AACLA,OAAKC,MADA;AAELD,OAAKC,MAAL,CAAYC,IAAZ,KAAqB,QAFvB;AAGD;;AAED,SAASK,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,SAAOA,IAAIN,IAAJ,KAAa,SAAb;AACJM,MAAIN,IAAJ,KAAa,iBAAb,IAAkCM,IAAIC,WAAJ,CAAgBJ,MAAhB,KAA2B,CADhE;AAED;;AAED,IAAMK,4BAA4B,8CAAlC;;AAEAC,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJX,UAAM,YADF;AAEJY,UAAM;AACJC,WAAK,0BAAQ,oBAAR,CADD,EAFF;;AAKJC,YAAQ;AACN;AACEd,YAAM,QADR;AAEEe,kBAAY;AACVC,kBAAU;AACRhB,gBAAM,SADE,EADA,EAFd;;;AAOEiB,4BAAsB,KAPxB,EADM,CALJ,EADS;;;;;AAmBfC,QAnBe,+BAmBRC,OAnBQ,EAmBC;AACd,UAAMC,UAAUD,QAAQC,OAAR,CAAgB,CAAhB,KAAsB,EAAtC;;AAEA,aAAO;AACLC,sBADK,uCACUvB,IADV,EACgB;AACnB,gBAAI,CAACA,KAAKI,SAAL,CAAe,CAAf,CAAD,IAAsBG,cAAcP,KAAKI,SAAL,CAAe,CAAf,CAAd,CAA1B,EAA4D;AAC1D;AACD;AACD,gBAAIL,UAAUC,IAAV,CAAJ,EAAqB;AACnB,qBAAOqB,QAAQG,MAAR,CAAe;AACpBxB,0BADoB;AAEpByB,yBAAS,+CAFW,EAAf,CAAP;;AAID;AACD,gBAAIH,QAAQJ,QAAR,IAAoBZ,gBAAgBN,IAAhB,CAAxB,EAA+C;AAC7C,qBAAOqB,QAAQG,MAAR,CAAe;AACpBxB,0BADoB;AAEpByB,yBAASf,yBAFW,EAAf,CAAP;;AAID;AACF,WAjBI;AAkBLgB,wBAlBK,yCAkBY1B,IAlBZ,EAkBkB;AACrB,gBAAI,CAACsB,QAAQJ,QAAT,IAAqBX,cAAcP,KAAK2B,MAAnB,CAAzB,EAAqD;AACnD;AACD;AACD,mBAAON,QAAQG,MAAR,CAAe;AACpBxB,wBADoB;AAEpByB,uBAASf,yBAFW,EAAf,CAAP;;AAID,WA1BI,6BAAP;;AA4BD,KAlDc,mBAAjB","file":"no-dynamic-require.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nfunction isRequire(node) {\n  return node &&\n    node.callee &&\n    node.callee.type === 'Identifier' &&\n    node.callee.name === 'require' &&\n    node.arguments.length >= 1;\n}\n\nfunction isDynamicImport(node) {\n  return node &&\n    node.callee &&\n    node.callee.type === 'Import';\n}\n\nfunction isStaticValue(arg) {\n  return arg.type === 'Literal' ||\n    (arg.type === 'TemplateLiteral' && arg.expressions.length === 0);\n}\n\nconst dynamicImportErrorMessage = 'Calls to import() should use string literals';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-dynamic-require'),\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          esmodule: {\n            type: 'boolean',\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const options = context.options[0] || {};\n\n    return {\n      CallExpression(node) {\n        if (!node.arguments[0] || isStaticValue(node.arguments[0])) {\n          return;\n        }\n        if (isRequire(node)) {\n          return context.report({\n            node,\n            message: 'Calls to require() should use string literals',\n          });\n        }\n        if (options.esmodule && isDynamicImport(node)) {\n          return context.report({\n            node,\n            message: dynamicImportErrorMessage,\n          });\n        }\n      },\n      ImportExpression(node) {\n        if (!options.esmodule || isStaticValue(node.source)) {\n          return;\n        }\n        return context.report({\n          node,\n          message: dynamicImportErrorMessage,\n        });\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/unambiguous.js":{"lineLengths":[13,0,0,0,0,62,185,254,203,211,23,11,54,0,17,0,0,49,27,58,18,7,0,14,53,51,30,26,77,0,13,32,0,0,25,1976],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/unambiguous.js"],"names":["module","exports","meta","type","docs","url","schema","create","context","parserOptions","sourceType","Program","ast","report","node","message"],"mappings":";;;;;AAKA;AACA,qC,iJANA;;;yLAQAA,OAAOC,OAAP,GAAiB,EACfC,MAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,aAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd;AACA,UAAIA,QAAQC,aAAR,CAAsBC,UAAtB,KAAqC,QAAzC,EAAmD;AACjD,eAAO,EAAP;AACD;;AAED,aAAO;AACLC,eADK,gCACGC,GADH,EACQ;AACX,gBAAI,CAAC,2BAASA,GAAT,CAAL,EAAoB;AAClBJ,sBAAQK,MAAR,CAAe;AACbC,sBAAMF,GADO;AAEbG,yBAAS,gDAFI,EAAf;;AAID;AACF,WARI,oBAAP;;;AAWD,KA1Bc,mBAAjB","file":"unambiguous.js","sourcesContent":["/**\n * @fileOverview Report modules that could parse incorrectly as scripts.\n * @author Ben Mosher\n */\n\nimport { isModule } from 'eslint-module-utils/unambiguous';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('unambiguous'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    // ignore non-modules\n    if (context.parserOptions.sourceType !== 'module') {\n      return {};\n    }\n\n    return {\n      Program(ast) {\n        if (!isModule(ast)) {\n          context.report({\n            node: ast,\n            message: 'This module could be parsed as a valid script.',\n          });\n        }\n      },\n    };\n\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-unassigned-import.js":{"lineLengths":[84,91,0,115,181,0,32,18,15,53,0,1,0,47,30,55,3,0,24,0,63,22,10,114,3,0,45,52,96,12,1,0,26,41,101,96,0,10,70,74,32,9,36,74,56,59,55,43,9,40,0,1,0,18,17,9,23,11,63,0,13,5,23,21,60,65,61,18,26,20,35,0,0,0,43,6020],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-unassigned-import.js"],"names":["report","context","node","message","testIsAllow","globs","filename","source","Array","isArray","filePath","path","resolve","dirname","find","glob","join","process","cwd","undefined","create","options","getPhysicalFilename","getFilename","isAllow","allow","ImportDeclaration","specifiers","length","value","ExpressionStatement","expression","type","arguments","module","exports","meta","docs","url","schema"],"mappings":"aAAA,4B;AACA,sC;;AAEA,sD;AACA,qC;;AAEA,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,IAAzB,EAA+B;AAC7BD,UAAQD,MAAR,CAAe;AACbE,cADa;AAEbC,aAAS,oCAFI,EAAf;;AAID;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,MAAtC,EAA8C;AAC5C,MAAI,CAACC,MAAMC,OAAN,CAAcJ,KAAd,CAAL,EAA2B;AACzB,WAAO,KAAP,CADyB,CACX;AACf;;AAED,MAAIK,iBAAJ;;AAEA,MAAIH,OAAO,CAAP,MAAc,GAAd,IAAqBA,OAAO,CAAP,MAAc,GAAvC,EAA4C,CAAE;AAC5CG,eAAWH,MAAX;AACD,GAFD,MAEO;AACLG,eAAWC,kBAAKC,OAAL,CAAaD,kBAAKE,OAAL,CAAaP,QAAb,CAAb,EAAqCC,MAArC,CAAX,CADK,CACoD;AAC1D;;AAED,SAAOF,MAAMS,IAAN,CAAW;AAChB,kCAAUJ,QAAV,EAAoBK,IAApB;AACA,kCAAUL,QAAV,EAAoBC,kBAAKK,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyBH,IAAzB,CAApB,CAFgB,GAAX;AAGAI,WAHP;AAID;;AAED,SAASC,MAAT,CAAgBnB,OAAhB,EAAyB;AACvB,MAAMoB,UAAUpB,QAAQoB,OAAR,CAAgB,CAAhB,KAAsB,EAAtC;AACA,MAAMf,WAAWL,QAAQqB,mBAAR,GAA8BrB,QAAQqB,mBAAR,EAA9B,GAA8DrB,QAAQsB,WAAR,EAA/E;AACA,MAAMC,UAAU,SAAVA,OAAU,iBAAUpB,YAAYiB,QAAQI,KAApB,EAA2BnB,QAA3B,EAAqCC,MAArC,CAAV,EAAhB;;AAEA,SAAO;AACLmB,qBADK,0CACaxB,IADb,EACmB;AACtB,YAAIA,KAAKyB,UAAL,CAAgBC,MAAhB,KAA2B,CAA3B,IAAgC,CAACJ,QAAQtB,KAAKK,MAAL,CAAYsB,KAApB,CAArC,EAAiE;AAC/D7B,iBAAOC,OAAP,EAAgBC,IAAhB;AACD;AACF,OALI;AAML4B,uBANK,4CAMe5B,IANf,EAMqB;AACxB,YAAIA,KAAK6B,UAAL,CAAgBC,IAAhB,KAAyB,gBAAzB;AACF,wCAAgB9B,KAAK6B,UAArB,CADE;AAEF,SAACP,QAAQtB,KAAK6B,UAAL,CAAgBE,SAAhB,CAA0B,CAA1B,EAA6BJ,KAArC,CAFH,EAEgD;AAC9C7B,iBAAOC,OAAP,EAAgBC,KAAK6B,UAArB;AACD;AACF,OAZI,gCAAP;;AAcD;;AAEDG,OAAOC,OAAP,GAAiB;AACff,gBADe;AAEfgB,QAAM;AACJJ,UAAM,YADF;AAEJK,UAAM;AACJC,WAAK,0BAAQ,sBAAR,CADD,EAFF;;AAKJC,YAAQ;AACN;AACE,cAAQ,QADV;AAEE,oBAAc;AACZ,2BAAmB,EAAE,QAAQ,CAAC,SAAD,EAAY,OAAZ,CAAV,EADP;AAEZ,gCAAwB,EAAE,QAAQ,CAAC,SAAD,EAAY,OAAZ,CAAV,EAFZ;AAGZ,4BAAoB,EAAE,QAAQ,CAAC,SAAD,EAAY,OAAZ,CAAV,EAHR;AAIZ,iBAAS;AACP,kBAAQ,OADD;AAEP,mBAAS;AACP,oBAAQ,QADD,EAFF,EAJG,EAFhB;;;;AAaE,8BAAwB,KAb1B,EADM,CALJ,EAFS,EAAjB","file":"no-unassigned-import.js","sourcesContent":["import path from 'path';\nimport minimatch from 'minimatch';\n\nimport isStaticRequire from '../core/staticRequire';\nimport docsUrl from '../docsUrl';\n\nfunction report(context, node) {\n  context.report({\n    node,\n    message: 'Imported module should be assigned',\n  });\n}\n\nfunction testIsAllow(globs, filename, source) {\n  if (!Array.isArray(globs)) {\n    return false; // default doesn't allow any patterns\n  }\n\n  let filePath;\n\n  if (source[0] !== '.' && source[0] !== '/') { // a node module\n    filePath = source;\n  } else {\n    filePath = path.resolve(path.dirname(filename), source); // get source absolute path\n  }\n\n  return globs.find(glob => (\n    minimatch(filePath, glob) ||\n    minimatch(filePath, path.join(process.cwd(), glob))\n  )) !== undefined;\n}\n\nfunction create(context) {\n  const options = context.options[0] || {};\n  const filename = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n  const isAllow = source => testIsAllow(options.allow, filename, source);\n\n  return {\n    ImportDeclaration(node) {\n      if (node.specifiers.length === 0 && !isAllow(node.source.value)) {\n        report(context, node);\n      }\n    },\n    ExpressionStatement(node) {\n      if (node.expression.type === 'CallExpression' &&\n        isStaticRequire(node.expression) &&\n        !isAllow(node.expression.arguments[0].value)) {\n        report(context, node.expression);\n      }\n    },\n  };\n}\n\nmodule.exports = {\n  create,\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-unassigned-import'),\n    },\n    schema: [\n      {\n        'type': 'object',\n        'properties': {\n          'devDependencies': { 'type': ['boolean', 'array'] },\n          'optionalDependencies': { 'type': ['boolean', 'array'] },\n          'peerDependencies': { 'type': ['boolean', 'array'] },\n          'allow': {\n            'type': 'array',\n            'items': {\n              'type': 'string',\n            },\n          },\n        },\n        'additionalProperties': false,\n      },\n    ],\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-useless-path-segments.js":{"lineLengths":[13,0,0,0,0,52,127,103,71,181,0,3,248,199,184,194,192,207,209,205,184,266,251,186,39,71,0,86,5,66,28,90,1,0,45,108,1,0,18,9,23,11,67,0,0,20,0,13,5,21,19,38,46,0,39,0,0,0,0,49,134,39,0,44,34,0,55,26,25,91,120,149,0,9,0,77,42,17,9,0,69,74,47,80,79,52,9,0,78,72,57,0,0,86,90,70,0,42,171,208,111,79,17,230,11,0,57,9,0,92,42,17,9,0,96,41,17,9,0,100,103,73,83,79,81,0,85,24,17,9,0,73,38,23,24,47,77,20,0,0,7,0,72,25,11940],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-useless-path-segments.js"],"names":["toRelativePath","relativePath","stripped","replace","test","normalize","fn","path","posix","countRelativeParents","pathSegments","reduce","sum","pathSegment","module","exports","meta","type","docs","url","fixable","schema","properties","commonjs","noUselessIndex","additionalProperties","create","context","currentDir","dirname","getPhysicalFilename","getFilename","options","checkSourceValue","source","importPath","value","reportWithProposedPath","proposedPath","report","node","message","fix","fixer","replaceText","JSON","stringify","startsWith","resolvedPath","normedPath","resolvedNormedPath","fileExtensions","settings","regexUnnecessaryIndex","RegExp","Array","from","join","parentDirectory","fileExtension","undefined","expected","relative","expectedSplit","split","sep","importPathSplit","countImportPathRelativeParents","countExpectedRelativeParents","diff","slice","concat"],"mappings":";;;;;AAKA;AACA,kE;AACA,sD;AACA,4B;AACA,qC;;AAEA;;;;;;;;;;;;;AAaA,SAASA,cAAT,CAAwBC,YAAxB,EAAsC;AACpC,MAAMC,WAAWD,aAAaE,OAAb,CAAqB,MAArB,EAA6B,EAA7B,CAAjB,CADoC,CACe;;AAEnD,SAAO,wBAAuBC,IAAvB,CAA4BF,QAA5B,IAAwCA,QAAxC,iBAAwDA,QAAxD,CAAP;AACD,C,CA5BD;;;KA8BA,SAASG,SAAT,CAAmBC,EAAnB,EAAuB,CACrB,OAAON,eAAeO,kBAAKC,KAAL,CAAWH,SAAX,CAAqBC,EAArB,CAAf,CAAP;AACD;;AAED,SAASG,oBAAT,CAA8BC,YAA9B,EAA4C;AAC1C,SAAOA,aAAaC,MAAb,CAAoB,UAACC,GAAD,EAAMC,WAAN,UAAsBA,gBAAgB,IAAhB,GAAuBD,MAAM,CAA7B,GAAiCA,GAAvD,EAApB,EAAgF,CAAhF,CAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJC,UAAM,YADF;AAEJC,UAAM;AACJC,WAAK,0BAAQ,0BAAR,CADD,EAFF;;;AAMJC,aAAS,MANL;;AAQJC,YAAQ;AACN;AACEJ,YAAM,QADR;AAEEK,kBAAY;AACVC,kBAAU,EAAEN,MAAM,SAAR,EADA;AAEVO,wBAAgB,EAAEP,MAAM,SAAR,EAFN,EAFd;;AAMEQ,4BAAsB,KANxB,EADM,CARJ,EADS;;;;;AAqBfC,QArBe,+BAqBRC,OArBQ,EAqBC;AACd,UAAMC,aAAarB,kBAAKsB,OAAL,CAAaF,QAAQG,mBAAR,GAA8BH,QAAQG,mBAAR,EAA9B,GAA8DH,QAAQI,WAAR,EAA3E,CAAnB;AACA,UAAMC,UAAUL,QAAQK,OAAR,CAAgB,CAAhB,CAAhB;;AAEA,eAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AACjBC,kBADiB,GACFD,MADE,CACxBE,KADwB;;AAGhC,iBAASC,sBAAT,CAAgCC,YAAhC,EAA8C;AAC5CX,kBAAQY,MAAR,CAAe;AACbC,kBAAMN,MADO;AAEb;AACAO,4DAAuCN,UAAvC,8BAAkEG,YAAlE,OAHa;AAIbI,8BAAK,4BAASJ,gBAAgBK,MAAMC,WAAN,CAAkBV,MAAlB,EAA0BW,KAAKC,SAAL,CAAeR,YAAf,CAA1B,CAAzB,EAAL,cAJa,EAAf;;AAMD;;AAED;AACA,YAAI,CAACH,WAAWY,UAAX,CAAsB,GAAtB,CAAL,EAAiC;AAC/B;AACD;;AAED;AACA,YAAMC,eAAe,0BAAQb,UAAR,EAAoBR,OAApB,CAArB;AACA,YAAMsB,aAAa5C,UAAU8B,UAAV,CAAnB;AACA,YAAMe,qBAAqB,0BAAQD,UAAR,EAAoBtB,OAApB,CAA3B;AACA,YAAIsB,eAAed,UAAf,IAA6Ba,iBAAiBE,kBAAlD,EAAsE;AACpE,iBAAOb,uBAAuBY,UAAvB,CAAP;AACD;;AAED,YAAME,iBAAiB,+BAAkBxB,QAAQyB,QAA1B,CAAvB;AACA,YAAMC,wBAAwB,IAAIC,MAAJ;AACZC,cAAMC,IAAN,CAAWL,cAAX,EAA2BM,IAA3B,CAAgC,KAAhC,CADY,UAA9B;;;AAIA;AACA,YAAIzB,WAAWA,QAAQR,cAAnB,IAAqC6B,sBAAsBjD,IAAtB,CAA2B+B,UAA3B,CAAzC,EAAiF;AAC/E,cAAMuB,kBAAkBnD,kBAAKsB,OAAL,CAAaM,UAAb,CAAxB;;AAEA;AACA,cAAIuB,oBAAoB,GAApB,IAA2BA,oBAAoB,IAAnD,EAAyD;AACvD,mCAA4BP,cAA5B,8HAA4C,KAAjCQ,aAAiC;AAC1C,oBAAI,sCAAWD,eAAX,WAA6BC,aAA7B,GAA8ChC,OAA9C,CAAJ,EAA4D;AAC1D,yBAAOU,8BAA0BqB,eAA1B,QAAP;AACD;AACF,eALsD;AAMxD;;AAED,iBAAOrB,uBAAuBqB,eAAvB,CAAP;AACD;;AAED;AACA,YAAIvB,WAAWY,UAAX,CAAsB,IAAtB,CAAJ,EAAiC;AAC/B;AACD;;AAED;AACA,YAAIC,iBAAiBY,SAArB,EAAgC;AAC9B;AACD;;AAED,YAAMC,WAAWtD,kBAAKuD,QAAL,CAAclC,UAAd,EAA0BoB,YAA1B,CAAjB,CAxDgC,CAwD0B;AAC1D,YAAMe,gBAAgBF,SAASG,KAAT,CAAezD,kBAAK0D,GAApB,CAAtB,CAzDgC,CAyDgB;AAChD,YAAMC,kBAAkB/B,WAAWhC,OAAX,CAAmB,OAAnB,EAA4B,EAA5B,EAAgC6D,KAAhC,CAAsC,GAAtC,CAAxB;AACA,YAAMG,iCAAiC1D,qBAAqByD,eAArB,CAAvC;AACA,YAAME,+BAA+B3D,qBAAqBsD,aAArB,CAArC;AACA,YAAMM,OAAOF,iCAAiCC,4BAA9C;;AAEA;AACA,YAAIC,QAAQ,CAAZ,EAAe;AACb;AACD;;AAED;AACA,eAAOhC;AACLrC;AACEkE;AACGI,aADH,CACS,CADT,EACYF,4BADZ;AAEGG,cAFH,CAEUL,gBAAgBI,KAAhB,CAAsBH,iCAAiCE,IAAvD,CAFV;AAGGZ,YAHH,CAGQ,GAHR,CADF,CADK,CAAP;;;AAQD;;AAED,aAAO,gCAAcxB,gBAAd,EAAgCD,OAAhC,CAAP;AACD,KAzGc,mBAAjB","file":"no-useless-path-segments.js","sourcesContent":["/**\n * @fileOverview Ensures that there are no useless path segments\n * @author Thomas Grainger\n */\n\nimport { getFileExtensions } from 'eslint-module-utils/ignore';\nimport moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport resolve from 'eslint-module-utils/resolve';\nimport path from 'path';\nimport docsUrl from '../docsUrl';\n\n/**\n * convert a potentially relative path from node utils into a true\n * relative path.\n *\n * ../ -> ..\n * ./ -> .\n * .foo/bar -> ./.foo/bar\n * ..foo/bar -> ./..foo/bar\n * foo/bar -> ./foo/bar\n *\n * @param relativePath {string} relative posix path potentially missing leading './'\n * @returns {string} relative posix path that always starts with a ./\n **/\nfunction toRelativePath(relativePath) {\n  const stripped = relativePath.replace(/\\/$/g, ''); // Remove trailing /\n\n  return /^((\\.\\.)|(\\.))($|\\/)/.test(stripped) ? stripped : `./${stripped}`;\n}\n\nfunction normalize(fn) {\n  return toRelativePath(path.posix.normalize(fn));\n}\n\nfunction countRelativeParents(pathSegments) {\n  return pathSegments.reduce((sum, pathSegment) => pathSegment === '..' ? sum + 1 : sum, 0);\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-useless-path-segments'),\n    },\n\n    fixable: 'code',\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          commonjs: { type: 'boolean' },\n          noUselessIndex: { type: 'boolean' },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const currentDir = path.dirname(context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename());\n    const options = context.options[0];\n\n    function checkSourceValue(source) {\n      const { value: importPath } = source;\n\n      function reportWithProposedPath(proposedPath) {\n        context.report({\n          node: source,\n          // Note: Using messageIds is not possible due to the support for ESLint 2 and 3\n          message: `Useless path segments for \"${importPath}\", should be \"${proposedPath}\"`,\n          fix: fixer => proposedPath && fixer.replaceText(source, JSON.stringify(proposedPath)),\n        });\n      }\n\n      // Only relative imports are relevant for this rule --> Skip checking\n      if (!importPath.startsWith('.')) {\n        return;\n      }\n\n      // Report rule violation if path is not the shortest possible\n      const resolvedPath = resolve(importPath, context);\n      const normedPath = normalize(importPath);\n      const resolvedNormedPath = resolve(normedPath, context);\n      if (normedPath !== importPath && resolvedPath === resolvedNormedPath) {\n        return reportWithProposedPath(normedPath);\n      }\n\n      const fileExtensions = getFileExtensions(context.settings);\n      const regexUnnecessaryIndex = new RegExp(\n        `.*\\\\/index(\\\\${Array.from(fileExtensions).join('|\\\\')})?$`,\n      );\n\n      // Check if path contains unnecessary index (including a configured extension)\n      if (options && options.noUselessIndex && regexUnnecessaryIndex.test(importPath)) {\n        const parentDirectory = path.dirname(importPath);\n\n        // Try to find ambiguous imports\n        if (parentDirectory !== '.' && parentDirectory !== '..') {\n          for (const fileExtension of fileExtensions) {\n            if (resolve(`${parentDirectory}${fileExtension}`, context)) {\n              return reportWithProposedPath(`${parentDirectory}/`);\n            }\n          }\n        }\n\n        return reportWithProposedPath(parentDirectory);\n      }\n\n      // Path is shortest possible + starts from the current directory --> Return directly\n      if (importPath.startsWith('./')) {\n        return;\n      }\n\n      // Path is not existing --> Return directly (following code requires path to be defined)\n      if (resolvedPath === undefined) {\n        return;\n      }\n\n      const expected = path.relative(currentDir, resolvedPath); // Expected import path\n      const expectedSplit = expected.split(path.sep); // Split by / or \\ (depending on OS)\n      const importPathSplit = importPath.replace(/^\\.\\//, '').split('/');\n      const countImportPathRelativeParents = countRelativeParents(importPathSplit);\n      const countExpectedRelativeParents = countRelativeParents(expectedSplit);\n      const diff = countImportPathRelativeParents - countExpectedRelativeParents;\n\n      // Same number of relative parents --> Paths are the same --> Return directly\n      if (diff <= 0) {\n        return;\n      }\n\n      // Report and propose minimal number of required relative parents\n      return reportWithProposedPath(\n        toRelativePath(\n          importPathSplit\n            .slice(0, countExpectedRelativeParents)\n            .concat(importPathSplit.slice(countImportPathRelativeParents + diff))\n            .join('/'),\n        ),\n      );\n    }\n\n    return moduleVisitor(checkSourceValue, options);\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/dynamic-import-chunkname.js":{"lineLengths":[76,181,0,18,9,23,11,67,0,14,21,19,26,24,28,18,31,0,0,33,34,0,0,0,0,0,49,48,155,178,0,51,78,103,59,0,31,49,60,85,88,0,63,26,23,95,0,17,9,0,142,0,199,43,30,27,102,0,21,13,0,58,30,27,101,0,21,13,0,17,46,105,13,27,30,27,92,0,21,13,0,57,30,27,85,44,0,21,13,0,55,40,13,226,0,34,26,23,81,40,0,9,7,0,14,72,35,39,0,68,97,21,13,0,41,39,0,25,8384],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/dynamic-import-chunkname.js"],"names":["module","exports","meta","type","docs","url","schema","properties","importFunctions","uniqueItems","items","webpackChunknameFormat","create","context","config","options","paddedCommentRegex","commentStyleRegex","chunkSubstrFormat","chunkSubstrRegex","RegExp","run","node","arg","sourceCode","getSourceCode","leadingComments","getCommentsBefore","getComments","leading","length","report","message","isChunknamePresent","comment","test","value","vm","runInNewContext","error","ImportExpression","source","CallExpression","callee","indexOf","name","arguments"],"mappings":"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","file":"dynamic-import-chunkname.js","sourcesContent":["import vm from 'vm';\nimport docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('dynamic-import-chunkname'),\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        importFunctions: {\n          type: 'array',\n          uniqueItems: true,\n          items: {\n            type: 'string',\n          },\n        },\n        webpackChunknameFormat: {\n          type: 'string',\n        },\n      },\n    }],\n  },\n\n  create(context) {\n    const config = context.options[0];\n    const { importFunctions = [] } = config || {};\n    const { webpackChunknameFormat = '[0-9a-zA-Z-_/.]+' } = config || {};\n\n    const paddedCommentRegex = /^ (\\S[\\s\\S]+\\S) $/;\n    const commentStyleRegex = /^( \\w+: ([\"'][^\"']*[\"']|\\d+|false|true),?)+ $/;\n    const chunkSubstrFormat = ` webpackChunkName: [\"']${webpackChunknameFormat}[\"'],? `;\n    const chunkSubstrRegex = new RegExp(chunkSubstrFormat);\n\n    function run(node, arg) {\n      const sourceCode = context.getSourceCode();\n      const leadingComments = sourceCode.getCommentsBefore\n        ? sourceCode.getCommentsBefore(arg) // This method is available in ESLint >= 4.\n        : sourceCode.getComments(arg).leading; // This method is deprecated in ESLint 7.\n\n      if (!leadingComments || leadingComments.length === 0) {\n        context.report({\n          node,\n          message: 'dynamic imports require a leading comment with the webpack chunkname',\n        });\n        return;\n      }\n\n      let isChunknamePresent = false;\n\n      for (const comment of leadingComments) {\n        if (comment.type !== 'Block') {\n          context.report({\n            node,\n            message: 'dynamic imports require a /* foo */ style comment, not a // foo comment',\n          });\n          return;\n        }\n\n        if (!paddedCommentRegex.test(comment.value)) {\n          context.report({\n            node,\n            message: `dynamic imports require a block comment padded with spaces - /* foo */`,\n          });\n          return;\n        }\n\n        try {\n          // just like webpack itself does\n          vm.runInNewContext(`(function() {return {${comment.value}}})()`);\n        }\n        catch (error) {\n          context.report({\n            node,\n            message: `dynamic imports require a \"webpack\" comment with valid syntax`,\n          });\n          return;\n        }\n\n        if (!commentStyleRegex.test(comment.value)) {\n          context.report({\n            node,\n            message:\n              `dynamic imports require a leading comment in the form /*${chunkSubstrFormat}*/`,\n          });\n          return;\n        }\n\n        if (chunkSubstrRegex.test(comment.value)) {\n          isChunknamePresent = true;\n        }\n      }\n\n      if (!isChunknamePresent) {\n        context.report({\n          node,\n          message:\n            `dynamic imports require a leading comment in the form /*${chunkSubstrFormat}*/`,\n        });\n      }\n    }\n\n    return {\n      ImportExpression(node) {\n        run(node, node.source);\n      },\n\n      CallExpression(node) {\n        if (node.callee.type !== 'Import' && importFunctions.indexOf(node.callee.name) < 0) {\n          return;\n        }\n\n        run(node, node.arguments[0]);\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-import-module-exports.js":{"lineLengths":[104,71,190,0,33,134,7,63,19,63,49,16,3,1,0,68,76,0,226,1,0,18,9,20,11,68,33,26,0,20,13,5,23,21,44,0,41,0,0,0,49,34,46,45,34,0,29,107,51,61,70,78,99,145,0,85,67,28,38,153,0,0,13,33,9,7,0,14,74,42,40,72,35,27,13,41,0,25,7496],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-import-module-exports.js"],"names":["getEntryPoint","context","pkgPath","cwd","getPhysicalFilename","getFilename","require","resolve","path","dirname","error","findScope","identifier","getSourceCode","scopeManager","scopes","slice","reverse","find","scope","variables","some","variable","identifiers","node","name","module","exports","meta","type","docs","description","category","recommended","fixable","schema","create","importDeclarations","entryPoint","options","alreadyReported","report","fileName","isEntryPoint","isIdentifier","object","hasKeywords","test","objectScope","hasCJSExportReference","isException","exceptions","glob","forEach","importDeclaration","message","ImportDeclaration","push","MemberExpression"],"mappings":"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","file":"no-import-module-exports.js","sourcesContent":["import minimatch from 'minimatch';\nimport path from 'path';\nimport pkgUp from 'eslint-module-utils/pkgUp';\n\nfunction getEntryPoint(context) {\n  const pkgPath = pkgUp({ cwd: context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename() });\n  try {\n    return require.resolve(path.dirname(pkgPath));\n  } catch (error) {\n    // Assume the package has no entrypoint (e.g. CLI packages)\n    // in which case require.resolve would throw.\n    return null;\n  }\n}\n\nfunction findScope(context, identifier) {\n  const { scopeManager } = context.getSourceCode();\n\n  return scopeManager && scopeManager.scopes.slice().reverse().find((scope) => scope.variables.some(variable => variable.identifiers.some((node) => node.name === identifier)));\n}\n\nmodule.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow import statements with module.exports',\n      category: 'Best Practices',\n      recommended: true,\n    },\n    fixable: 'code',\n    schema: [\n      {\n        'type': 'object',\n        'properties': {\n          'exceptions': { 'type': 'array' },\n        },\n        'additionalProperties': false,\n      },\n    ],\n  },\n  create(context) {\n    const importDeclarations = [];\n    const entryPoint = getEntryPoint(context);\n    const options = context.options[0] || {};\n    let alreadyReported = false;\n\n    function report(node) {\n      const fileName = context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename();\n      const isEntryPoint = entryPoint === fileName;\n      const isIdentifier = node.object.type === 'Identifier';\n      const hasKeywords = (/^(module|exports)$/).test(node.object.name);\n      const objectScope = hasKeywords && findScope(context, node.object.name);\n      const hasCJSExportReference = hasKeywords && (!objectScope || objectScope.type === 'module');\n      const isException = !!options.exceptions && options.exceptions.some(glob => minimatch(fileName, glob));\n\n      if (isIdentifier && hasCJSExportReference && !isEntryPoint && !isException) {\n        importDeclarations.forEach(importDeclaration => {\n          context.report({\n            node: importDeclaration,\n            message: `Cannot use import declarations in modules that export using ` +\n              `CommonJS (module.exports = 'foo' or exports.bar = 'hi')`,\n          });\n        });\n        alreadyReported = true;\n      }\n    }\n\n    return {\n      ImportDeclaration(node) {\n        importDeclarations.push(node);\n      },\n      MemberExpression(node) {\n        if (!alreadyReported) {\n          report(node);\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/exports-last.js":{"lineLengths":[194,0,58,47,38,34,1,0,18,9,23,11,55,0,17,0,0,49,14,77,113,49,31,17,27,45,0,53,109,52,36,33,91,0,19,44,13,32,0,25,3100],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/exports-last.js"],"names":["isNonExportStatement","type","module","exports","meta","docs","url","schema","create","context","Program","body","lastNonExportStatementIndex","reduce","findLastIndex","acc","item","index","slice","forEach","checkNonExport","node","report","message"],"mappings":"aAAA,qC;;AAEA,SAASA,oBAAT,OAAwC,KAARC,IAAQ,QAARA,IAAQ;AACtC,SAAOA,SAAS,0BAAT;AACLA,WAAS,wBADJ;AAELA,WAAS,sBAFX;AAGD;;AAEDC,OAAOC,OAAP,GAAiB;AACfC,QAAM;AACJH,UAAM,YADF;AAEJI,UAAM;AACJC,WAAK,0BAAQ,cAAR,CADD,EAFF;;AAKJC,YAAQ,EALJ,EADS;;;AASfC,QATe,+BASRC,OATQ,EASC;AACd,aAAO;AACLC,eADK,uCACa,KAARC,IAAQ,SAARA,IAAQ;AAChB,gBAAMC,8BAA8BD,KAAKE,MAAL,cAAY,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AACvF,oBAAIjB,qBAAqBgB,IAArB,CAAJ,EAAgC;AAC9B,yBAAOC,KAAP;AACD;AACD,uBAAOF,GAAP;AACD,eALmC,OAAqBD,aAArB,MAKjC,CAAC,CALgC,CAApC;;AAOA,gBAAIF,gCAAgC,CAAC,CAArC,EAAwC;AACtCD,mBAAKO,KAAL,CAAW,CAAX,EAAcN,2BAAd,EAA2CO,OAA3C,cAAmD,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC/E,sBAAI,CAACrB,qBAAqBqB,IAArB,CAAL,EAAiC;AAC/BZ,4BAAQa,MAAR,CAAe;AACbD,gCADa;AAEbE,+BAAS,wDAFI,EAAf;;AAID;AACF,iBAPD,OAA4DH,cAA5D;AAQD;AACF,WAnBI,oBAAP;;AAqBD,KA/Bc,mBAAjB","file":"exports-last.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nfunction isNonExportStatement({ type }) {\n  return type !== 'ExportDefaultDeclaration' &&\n    type !== 'ExportNamedDeclaration' &&\n    type !== 'ExportAllDeclaration';\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('exports-last'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      Program({ body }) {\n        const lastNonExportStatementIndex = body.reduce(function findLastIndex(acc, item, index) {\n          if (isNonExportStatement(item)) {\n            return index;\n          }\n          return acc;\n        }, -1);\n\n        if (lastNonExportStatementIndex !== -1) {\n          body.slice(0, lastNonExportStatementIndex).forEach(function checkNonExport(node) {\n            if (!isNonExportStatement(node)) {\n              context.report({\n                node,\n                message: 'Export statements should appear at the end of the file',\n              });\n            }\n          });\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/no-deprecated.js":{"lineLengths":[140,94,181,0,31,89,1,0,35,41,0,81,1,0,18,9,23,11,56,0,17,0,0,49,33,33,0,38,54,64,0,77,36,0,118,32,78,9,0,36,46,17,9,0,47,51,28,0,0,45,42,55,23,15,0,42,35,36,20,0,35,42,36,20,0,52,11,0,46,47,39,0,45,76,0,66,35,0,70,0,45,0,11,7,0,14,134,0,62,91,52,13,0,43,66,0,51,0,89,28,25,61,0,33,0,81,65,65,0,103,0,22,68,53,91,65,54,0,46,47,0,70,0,35,57,0,32,94,15,0,30,55,45,47,13,41,0,25,10996],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/no-deprecated.js"],"names":["message","deprecation","description","getDeprecation","metadata","doc","tags","find","t","title","module","exports","meta","type","docs","url","schema","create","context","deprecated","Map","namespaces","checkSpecifiers","node","source","imports","Exports","get","value","moduleDeprecation","report","errors","length","reportErrors","specifiers","forEach","im","imported","local","size","set","name","exported","namespace","body","parent","property","slice","has","dereference","object","namepath","computed","push"],"mappings":"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","file":"no-deprecated.js","sourcesContent":["import declaredScope from 'eslint-module-utils/declaredScope';\nimport Exports from '../ExportMap';\nimport docsUrl from '../docsUrl';\n\nfunction message(deprecation) {\n  return 'Deprecated' + (deprecation.description ? ': ' + deprecation.description : '.');\n}\n\nfunction getDeprecation(metadata) {\n  if (!metadata || !metadata.doc) return;\n\n  return metadata.doc.tags.find(t => t.title === 'deprecated');\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-deprecated'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    const deprecated = new Map();\n    const namespaces = new Map();\n\n    function checkSpecifiers(node) {\n      if (node.type !== 'ImportDeclaration') return;\n      if (node.source == null) return; // local export, ignore\n\n      const imports = Exports.get(node.source.value, context);\n      if (imports == null) return;\n\n      const moduleDeprecation = imports.doc && imports.doc.tags.find(t => t.title === 'deprecated');\n      if (moduleDeprecation) {\n        context.report({ node, message: message(moduleDeprecation) });\n      }\n\n      if (imports.errors.length) {\n        imports.reportErrors(context, node);\n        return;\n      }\n\n      node.specifiers.forEach(function (im) {\n        let imported; let local;\n        switch (im.type) {\n\n\n        case 'ImportNamespaceSpecifier':{\n          if (!imports.size) return;\n          namespaces.set(im.local.name, imports);\n          return;\n        }\n\n        case 'ImportDefaultSpecifier':\n          imported = 'default';\n          local = im.local.name;\n          break;\n\n        case 'ImportSpecifier':\n          imported = im.imported.name;\n          local = im.local.name;\n          break;\n\n        default: return; // can't handle this one\n        }\n\n        // unknown thing can't be deprecated\n        const exported = imports.get(imported);\n        if (exported == null) return;\n\n        // capture import of deep namespace\n        if (exported.namespace) namespaces.set(local, exported.namespace);\n\n        const deprecation = getDeprecation(imports.get(imported));\n        if (!deprecation) return;\n\n        context.report({ node: im, message: message(deprecation) });\n\n        deprecated.set(local, deprecation);\n\n      });\n    }\n\n    return {\n      'Program': ({ body }) => body.forEach(checkSpecifiers),\n\n      'Identifier': function (node) {\n        if (node.parent.type === 'MemberExpression' && node.parent.property === node) {\n          return; // handled by MemberExpression\n        }\n\n        // ignore specifier identifiers\n        if (node.parent.type.slice(0, 6) === 'Import') return;\n\n        if (!deprecated.has(node.name)) return;\n\n        if (declaredScope(context, node.name) !== 'module') return;\n        context.report({\n          node,\n          message: message(deprecated.get(node.name)),\n        });\n      },\n\n      'MemberExpression': function (dereference) {\n        if (dereference.object.type !== 'Identifier') return;\n        if (!namespaces.has(dereference.object.name)) return;\n\n        if (declaredScope(context, dereference.object.name) !== 'module') return;\n\n        // go deep\n        let namespace = namespaces.get(dereference.object.name);\n        const namepath = [dereference.object.name];\n        // while property is namespace and parent is member expression, keep validating\n        while (namespace instanceof Exports &&\n               dereference.type === 'MemberExpression') {\n\n          // ignore computed parts for now\n          if (dereference.computed) return;\n\n          const metadata = namespace.get(dereference.property.name);\n\n          if (!metadata) break;\n          const deprecation = getDeprecation(metadata);\n\n          if (deprecation) {\n            context.report({ node: dereference.property, message: message(deprecation) });\n          }\n\n          // stash and pop\n          namepath.push(dereference.property.name);\n          namespace = metadata.namespace;\n          dereference = dereference.parent;\n        }\n      },\n    };\n  },\n};\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/lib/rules/imports-first.js":{"lineLengths":[194,0,31,0,45,19,9,101,0,0,0,61,1172],"data":{"version":3,"sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-import/src/rules/imports-first.js"],"names":["first","require","newMeta","Object","assign","meta","deprecated","docs","url","module","exports"],"mappings":"aAAA,qC;;AAEA,IAAMA,QAAQC,QAAQ,SAAR,CAAd;;AAEA,IAAMC,UAAUC,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,MAAMK,IAAxB,EAA8B;AAC5CC,cAAY,IADgC;AAE5CC,QAAM;AACJC,SAAK,0BAAQ,eAAR,EAAyB,0CAAzB,CADD,EAFsC,EAA9B,CAAhB;;;;AAOAC,OAAOC,OAAP,GAAiBP,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB,EAAEK,MAAMH,OAAR,EAAzB,CAAjB","file":"imports-first.js","sourcesContent":["import docsUrl from '../docsUrl';\n\nconst first = require('./first');\n\nconst newMeta = Object.assign({}, first.meta, {\n  deprecated: true,\n  docs: {\n    url: docsUrl('imports-first', '7b25c1cb95ee18acc1531002fd343e1e6031f9ed'),\n  },\n});\n\nmodule.exports = Object.assign({}, first, { meta: newMeta });\n"],"sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/index.js":{"lineLengths":[61,13,0,62,0,114,0,58,0,3,59,59,45,40,3,48,35,0,29,22,8,22,53,49,0,62,35,29,21,13,9,19,0,16,1,0,3,37,58,124,55,3,49,18,29,0,41,26,12,31,53,5,0,27,45,31,27,9,28,5,0,15,1,0,3,39,43,71,3,25,61,1,0,3,53,63,55,3,20,26,1,0,3,54,45,60,3,30,62,1,0,3,53,45,59,3,30,61,1,0,3,57,45,63,3,34,61,1,0,3,53,45,59,3,30,61,1,0,3,68,45,74,3,37,61,1,0,3,67,45,73,3,37,61,1,0,3,71,45,77,3,39,61,1,0,3,70,45,76,3,39,61,1,0,3,62,45,68,3,37,61,1,0,3,61,45,67,3,37,61,1,0,3,55,45,61,3,32,12,32,33,32,5,1,0,45,45,53,45,59,59,63,63,59,59,49,0,3,48,49,73,30,3,52,18,64,61,1,0,3,61,49,73,69,3,52,31,21,19,0,50,78,0,37,33,15,37,42,7,33,66,12,31,66,5,0,12,40,36,5,1,0,54,0,20,37,20,37,14,39,16,39,16,13,0,35,13,16,22,17,24,25,18,19,15,20,29,20,29,17,23,23,19,19,21,21,20,19,16,24,15,14,15,14,17,17,21,19,18,16,18,17,14,17,17,22,22,21,28,20,19,18,18,6,2,28,5,22,58,16,13,19,18,27,18,27,15,17,14,22,43,30,50,15,24,21,26,24,15,23,18,28,24,24,20,22,19,17,15,15,28,29,19,15,19,22,17,42,2,33,18,29,16,3,0,3,31,44,63,3,46,19,78,59,16,20,9,37,5,15,1,0,3,40,46,65,3,33,50,37,1,0,3,47,56,77,83,3,51,25,0,47,40,0,34,37,58,81,35,27,13,46,16,71,34,27,13,42,9,5,0,20,1,0,34,41,71,60,6,0,46,36,60,9,19,6,0,41,42,71,29,23,9,0,62,64,44,36,26,92,26,92,27,64,27,64,25,62,26,63,25,62,26,63,26,63,26,63,27,64,25,62,25,62,25,62,25,62,25,62,26,71,25,62,25,62,25,62,0,29,13,9,0,19,6,0,40,39,68,0,27,57,80,37,24,47,58,23,67,21,56,76,62,0,43,54,58,68,75,25,72,53,25,21,17,20,73,37,64,67,21,46,48,55,21,52,49,21,17,13,9,0,19,6,0,47,62,27,29,64,63,9,19,6,0,45,61,6,0,36,35,62,0,32,16,35,45,50,45,15,61,13,0,25,65,45,20,33,50,74,53,19,71,17,13,9,19,6,0,19,72,80,77,23,9,36,6,0,43,62,27,16,75,76,62,15,27,13,0,68,32,28,13,9,0,19,6,0,42,66,29,77,59,13,42,62,48,0,78,62,13,9,19,6,0,41,74,33,46,9,19,6,0,39,66,68,0,45,38,40,51,13,9,0,19,6,0,42,26,0,53,51,51,31,17,49,69,55,80,51,31,17,48,23,56,66,15,49,42,32,18,39,31,17,54,20,27,13,9,0,32,6,0,44,67,50,6,0,50,60,45,35,24,10,0,49,35,71,66,0,38,63,13,9,0,19,6,0,41,77,34,52,58,40,57,13,28,9,19,6,0,41,41,29,23,9,39,39,9,0,65,26,36,25,48,25,91,25,48,25,48,30,54,0,29,13,9,0,19,6,3,0,3,56,38,77,104,3,46,76,56,5,15,1,0,3,56,38,197,104,3,52,9,50,22,19,5,1,0,3,73,38,242,59,3,57,70,65,25,63,9,26,30,9,5,0,57,47,1,0,3,73,38,267,56,3,46,24,32,32,71,13,37,0,24,32,32,66,13,46,45,13,32,0,21,5,0,15,1,0,3,52,52,60,3,40,31,22,0,62,30,5,21,29,5,25,33,5,0,50,41,15,37,42,7,44,32,9,36,34,43,34,16,34,9,12,32,5,0,18,41,12,45,0,19,37,9,5,0,50,12,51,24,43,11,47,9,12,53,26,45,11,49,9,5,0,27,1,0,46,13,13,13,12,13,12,13,13,13,14,12,12,12,12,12,12,12,12,13,6,2,76,0,3,54,37,56,3,20,76,1,0,30,40,44,34,0,51,61,13,0,66,10,0,52,34,0,71,40,0,43,50,28,46,70,27,39,25,21,27,36,60,19,31,17,13,0,24,10,0,35,24,10,32,23,10,27,23,10,54,16,57,61,79,15,27,13,66,10,26,23,10,30,24,10,28,23,10,54,42,27,13,16,57,32,48,15,27,13,66,10,54,16,57,32,43,15,27,13,66,10,25,23,10,46,16,57,32,43,15,27,13,66,10,53,45,27,13,16,57,60,48,15,27,13,66,10,28,23,10,27,23,10,6,2,0,3,57,38,57,47,131,155,120,67,3,23,9,15,76,3,26,13,60,42,5,1,0,3,67,34,44,71,71,3,49,31,0,26,30,29,80,48,34,39,17,13,23,0,32,39,48,32,39,17,13,23,0,27,30,39,58,13,23,0,32,41,58,13,23,0,31,47,58,13,23,0,29,41,58,13,23,0,16,23,5,1,0,3,54,51,44,71,74,3,3,54,44,71,58,3,25,16,21,22,3,65,42,32,32,40,28,72,9,12,18,27,38,5,0,23,20,5,0,44,8,67,68,13,33,34,46,47,51,68,19,5,0,22,1,0,3,57,55,3,0,49,0,72,31,0,3,53,43,64,57,3,32,24,72,27,5,18,1,0,3,45,55,49,78,41,3,46,22,18,0,34,21,0,7,43,45,7,28,22,22,26,22,31,22,48,22,63,22,39,33,35,17,26,13,9,5,0,41,51,64,46,5,34,0,26,1,0,3,45,55,49,82,41,3,42,22,18,0,47,51,73,46,5,34,0,26,1,0,3,62,3,22,7,31,52,54,7,52,43,73,9,43,66,9,0,28,63,38,11,5,0,7,42,46,103,7,19,56,25,26,0,30,53,58,46,28,46,13,9,5,0,7,60,47,72,7,15,37,30,24,5,0,7,30,53,165,45,7,37,45,51,59,5,1,0,75,54,0,28,28,38,26,0,50,0,3,53,52,57,3,37,12,27,37,50,5,1,0,3,83,77,38,59,3,30,31,0,36,37,74,33,23,34,77,31,23,0,16,24,5,1,0,3,25,3,24,7,31,51,45,129,130,7,16,20,9,28,75,14,7,32,39,25,60,5,0,7,50,46,118,7,40,50,47,31,59,0,45,24,13,0,51,25,21,29,20,14,9,0,51,28,59,0,45,24,13,0,51,25,21,25,21,14,9,5,0,7,50,46,118,7,37,75,63,53,24,13,0,47,31,0,37,23,25,25,31,45,18,13,77,9,5,0,7,44,46,118,7,37,51,0,46,70,24,13,47,0,43,24,13,52,36,0,37,75,13,0,55,62,61,47,31,33,51,39,55,26,21,17,20,58,55,61,34,29,27,42,52,44,60,46,31,55,22,0,30,34,28,50,76,32,58,52,31,45,29,25,21,17,13,9,5,0,7,51,74,47,46,75,118,7,73,52,18,9,42,13,58,42,28,17,50,0,53,75,17,77,13,19,37,9,5,0,7,51,58,47,46,118,7,41,59,28,37,31,9,0,35,49,41,52,57,26,17,0,80,51,41,27,37,29,35,49,22,17,55,27,25,32,18,13,18,9,47,59,79,13,18,9,46,64,23,33,25,36,46,18,13,18,9,53,40,79,79,13,18,9,50,40,79,13,18,9,51,39,77,13,9,5,0,7,55,72,47,46,118,7,57,48,73,35,55,29,25,29,25,18,13,18,9,51,60,54,0,57,28,17,0,50,51,41,27,39,39,35,49,22,17,50,35,29,32,18,13,18,9,55,80,9,5,0,7,63,82,47,46,118,7,62,40,0,78,23,49,31,50,38,22,13,0,76,47,37,23,40,25,31,45,18,13,51,68,21,29,21,14,0,18,9,0,50,51,68,21,25,21,14,18,9,0,41,49,38,22,13,0,76,47,37,23,40,25,31,45,18,13,9,5,1,0,29,29,39,27,0,3,49,36,47,46,3,37,47,1,0,13,9,14,8,17,28,28,22,20,19,24,18,17,24,26,24,17,17,19,20,27,29,27,20,20,22,27,29,27,24,24,26,24,20,21,19,9,21,2,0,20,30,18,40,20,44,24,36,58,58,46,42,40,50,38,36,50,54,50,36,36,40,42,56,60,56,42,42,46,56,60,56,50,50,54,50,42,44,33,0],"data":{"version":3,"file":"index.js","sources":["file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/get-innermost-scope.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/find-variable.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/token-predicate.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/get-function-head-location.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/get-static-value.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/get-string-if-constant.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/get-property-name.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/get-function-name-with-kind.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/has-side-effect.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/is-parenthesized.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/pattern-matcher.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/reference-tracker.js","file:///home/runner/work/deluge/deluge/node_modules/eslint-plugin-es/node_modules/eslint-utils/src/index.js"],"sourcesContent":["/**\n * Get the innermost scope which contains a given location.\n * @param {Scope} initialScope The initial scope to search.\n * @param {Node} node The location to search.\n * @returns {Scope} The innermost scope.\n */\nexport function getInnermostScope(initialScope, node) {\n    const location = node.range[0]\n\n    let scope = initialScope\n    let found = false\n    do {\n        found = false\n        for (const childScope of scope.childScopes) {\n            const range = childScope.block.range\n\n            if (range[0] <= location && location < range[1]) {\n                scope = childScope\n                found = true\n                break\n            }\n        }\n    } while (found)\n\n    return scope\n}\n","import { getInnermostScope } from \"./get-innermost-scope\"\n\n/**\n * Find the variable of a given name.\n * @param {Scope} initialScope The scope to start finding.\n * @param {string|Node} nameOrNode The variable name to find. If this is a Node object then it should be an Identifier node.\n * @returns {Variable|null} The found variable or null.\n */\nexport function findVariable(initialScope, nameOrNode) {\n    let name = \"\"\n    let scope = initialScope\n\n    if (typeof nameOrNode === \"string\") {\n        name = nameOrNode\n    } else {\n        name = nameOrNode.name\n        scope = getInnermostScope(scope, nameOrNode)\n    }\n\n    while (scope != null) {\n        const variable = scope.set.get(name)\n        if (variable != null) {\n            return variable\n        }\n        scope = scope.upper\n    }\n\n    return null\n}\n","/**\n * Negate the result of `this` calling.\n * @param {Token} token The token to check.\n * @returns {boolean} `true` if the result of `this(token)` is `false`.\n */\nfunction negate0(token) {\n    return !this(token) //eslint-disable-line no-invalid-this\n}\n\n/**\n * Creates the negate function of the given function.\n * @param {function(Token):boolean} f - The function to negate.\n * @returns {function(Token):boolean} Negated function.\n */\nfunction negate(f) {\n    return negate0.bind(f)\n}\n\n/**\n * Checks if the given token is an arrow token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an arrow token.\n */\nexport function isArrowToken(token) {\n    return token.value === \"=>\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is a comma token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a comma token.\n */\nexport function isCommaToken(token) {\n    return token.value === \",\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is a semicolon token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a semicolon token.\n */\nexport function isSemicolonToken(token) {\n    return token.value === \";\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is a colon token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a colon token.\n */\nexport function isColonToken(token) {\n    return token.value === \":\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is an opening parenthesis token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an opening parenthesis token.\n */\nexport function isOpeningParenToken(token) {\n    return token.value === \"(\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is a closing parenthesis token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a closing parenthesis token.\n */\nexport function isClosingParenToken(token) {\n    return token.value === \")\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is an opening square bracket token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an opening square bracket token.\n */\nexport function isOpeningBracketToken(token) {\n    return token.value === \"[\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is a closing square bracket token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a closing square bracket token.\n */\nexport function isClosingBracketToken(token) {\n    return token.value === \"]\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is an opening brace token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is an opening brace token.\n */\nexport function isOpeningBraceToken(token) {\n    return token.value === \"{\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is a closing brace token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a closing brace token.\n */\nexport function isClosingBraceToken(token) {\n    return token.value === \"}\" && token.type === \"Punctuator\"\n}\n\n/**\n * Checks if the given token is a comment token or not.\n * @param {Token} token - The token to check.\n * @returns {boolean} `true` if the token is a comment token.\n */\nexport function isCommentToken(token) {\n    return (\n        token.type === \"Line\" ||\n        token.type === \"Block\" ||\n        token.type === \"Shebang\"\n    )\n}\n\nexport const isNotArrowToken = negate(isArrowToken)\nexport const isNotCommaToken = negate(isCommaToken)\nexport const isNotSemicolonToken = negate(isSemicolonToken)\nexport const isNotColonToken = negate(isColonToken)\nexport const isNotOpeningParenToken = negate(isOpeningParenToken)\nexport const isNotClosingParenToken = negate(isClosingParenToken)\nexport const isNotOpeningBracketToken = negate(isOpeningBracketToken)\nexport const isNotClosingBracketToken = negate(isClosingBracketToken)\nexport const isNotOpeningBraceToken = negate(isOpeningBraceToken)\nexport const isNotClosingBraceToken = negate(isClosingBraceToken)\nexport const isNotCommentToken = negate(isCommentToken)\n","import { isArrowToken, isOpeningParenToken } from \"./token-predicate\"\n\n/**\n * Get the `(` token of the given function node.\n * @param {Node} node - The function node to get.\n * @param {SourceCode} sourceCode - The source code object to get tokens.\n * @returns {Token} `(` token.\n */\nfunction getOpeningParenOfParams(node, sourceCode) {\n    return node.id\n        ? sourceCode.getTokenAfter(node.id, isOpeningParenToken)\n        : sourceCode.getFirstToken(node, isOpeningParenToken)\n}\n\n/**\n * Get the location of the given function node for reporting.\n * @param {Node} node - The function node to get.\n * @param {SourceCode} sourceCode - The source code object to get tokens.\n * @returns {string} The location of the function node for reporting.\n */\nexport function getFunctionHeadLocation(node, sourceCode) {\n    const parent = node.parent\n    let start = null\n    let end = null\n\n    if (node.type === \"ArrowFunctionExpression\") {\n        const arrowToken = sourceCode.getTokenBefore(node.body, isArrowToken)\n\n        start = arrowToken.loc.start\n        end = arrowToken.loc.end\n    } else if (\n        parent.type === \"Property\" ||\n        parent.type === \"MethodDefinition\"\n    ) {\n        start = parent.loc.start\n        end = getOpeningParenOfParams(node, sourceCode).loc.start\n    } else {\n        start = node.loc.start\n        end = getOpeningParenOfParams(node, sourceCode).loc.start\n    }\n\n    return {\n        start: Object.assign({}, start),\n        end: Object.assign({}, end),\n    }\n}\n","/* globals BigInt, globalThis, global, self, window */\n\nimport { findVariable } from \"./find-variable\"\n\nconst globalObject =\n    typeof globalThis !== \"undefined\"\n        ? globalThis\n        : typeof self !== \"undefined\"\n        ? self\n        : typeof window !== \"undefined\"\n        ? window\n        : typeof global !== \"undefined\"\n        ? global\n        : {}\n\nconst builtinNames = Object.freeze(\n    new Set([\n        \"Array\",\n        \"ArrayBuffer\",\n        \"BigInt\",\n        \"BigInt64Array\",\n        \"BigUint64Array\",\n        \"Boolean\",\n        \"DataView\",\n        \"Date\",\n        \"decodeURI\",\n        \"decodeURIComponent\",\n        \"encodeURI\",\n        \"encodeURIComponent\",\n        \"escape\",\n        \"Float32Array\",\n        \"Float64Array\",\n        \"Function\",\n        \"Infinity\",\n        \"Int16Array\",\n        \"Int32Array\",\n        \"Int8Array\",\n        \"isFinite\",\n        \"isNaN\",\n        \"isPrototypeOf\",\n        \"JSON\",\n        \"Map\",\n        \"Math\",\n        \"NaN\",\n        \"Number\",\n        \"Object\",\n        \"parseFloat\",\n        \"parseInt\",\n        \"Promise\",\n        \"Proxy\",\n        \"Reflect\",\n        \"RegExp\",\n        \"Set\",\n        \"String\",\n        \"Symbol\",\n        \"Uint16Array\",\n        \"Uint32Array\",\n        \"Uint8Array\",\n        \"Uint8ClampedArray\",\n        \"undefined\",\n        \"unescape\",\n        \"WeakMap\",\n        \"WeakSet\",\n    ])\n)\nconst callAllowed = new Set(\n    [\n        Array.isArray,\n        typeof BigInt === \"function\" ? BigInt : undefined,\n        Boolean,\n        Date,\n        Date.parse,\n        decodeURI,\n        decodeURIComponent,\n        encodeURI,\n        encodeURIComponent,\n        escape,\n        isFinite,\n        isNaN,\n        isPrototypeOf,\n        ...Object.getOwnPropertyNames(Math)\n            .map(k => Math[k])\n            .filter(f => typeof f === \"function\"),\n        Number,\n        Number.isFinite,\n        Number.isNaN,\n        Number.parseFloat,\n        Number.parseInt,\n        Object,\n        Object.entries,\n        Object.is,\n        Object.isExtensible,\n        Object.isFrozen,\n        Object.isSealed,\n        Object.keys,\n        Object.values,\n        parseFloat,\n        parseInt,\n        RegExp,\n        String,\n        String.fromCharCode,\n        String.fromCodePoint,\n        String.raw,\n        Symbol,\n        Symbol.for,\n        Symbol.keyFor,\n        unescape,\n    ].filter(f => typeof f === \"function\")\n)\nconst callPassThrough = new Set([\n    Object.freeze,\n    Object.preventExtensions,\n    Object.seal,\n])\n\n/**\n * Get the property descriptor.\n * @param {object} object The object to get.\n * @param {string|number|symbol} name The property name to get.\n */\nfunction getPropertyDescriptor(object, name) {\n    let x = object\n    while ((typeof x === \"object\" || typeof x === \"function\") && x !== null) {\n        const d = Object.getOwnPropertyDescriptor(x, name)\n        if (d) {\n            return d\n        }\n        x = Object.getPrototypeOf(x)\n    }\n    return null\n}\n\n/**\n * Check if a property is getter or not.\n * @param {object} object The object to check.\n * @param {string|number|symbol} name The property name to check.\n */\nfunction isGetter(object, name) {\n    const d = getPropertyDescriptor(object, name)\n    return d != null && d.get != null\n}\n\n/**\n * Get the element values of a given node list.\n * @param {Node[]} nodeList The node list to get values.\n * @param {Scope|undefined} initialScope The initial scope to find variables.\n * @returns {any[]|null} The value list if all nodes are constant. Otherwise, null.\n */\nfunction getElementValues(nodeList, initialScope) {\n    const valueList = []\n\n    for (let i = 0; i < nodeList.length; ++i) {\n        const elementNode = nodeList[i]\n\n        if (elementNode == null) {\n            valueList.length = i + 1\n        } else if (elementNode.type === \"SpreadElement\") {\n            const argument = getStaticValueR(elementNode.argument, initialScope)\n            if (argument == null) {\n                return null\n            }\n            valueList.push(...argument.value)\n        } else {\n            const element = getStaticValueR(elementNode, initialScope)\n            if (element == null) {\n                return null\n            }\n            valueList.push(element.value)\n        }\n    }\n\n    return valueList\n}\n\nconst operations = Object.freeze({\n    ArrayExpression(node, initialScope) {\n        const elements = getElementValues(node.elements, initialScope)\n        return elements != null ? { value: elements } : null\n    },\n\n    AssignmentExpression(node, initialScope) {\n        if (node.operator === \"=\") {\n            return getStaticValueR(node.right, initialScope)\n        }\n        return null\n    },\n\n    //eslint-disable-next-line complexity\n    BinaryExpression(node, initialScope) {\n        if (node.operator === \"in\" || node.operator === \"instanceof\") {\n            // Not supported.\n            return null\n        }\n\n        const left = getStaticValueR(node.left, initialScope)\n        const right = getStaticValueR(node.right, initialScope)\n        if (left != null && right != null) {\n            switch (node.operator) {\n                case \"==\":\n                    return { value: left.value == right.value } //eslint-disable-line eqeqeq\n                case \"!=\":\n                    return { value: left.value != right.value } //eslint-disable-line eqeqeq\n                case \"===\":\n                    return { value: left.value === right.value }\n                case \"!==\":\n                    return { value: left.value !== right.value }\n                case \"<\":\n                    return { value: left.value < right.value }\n                case \"<=\":\n                    return { value: left.value <= right.value }\n                case \">\":\n                    return { value: left.value > right.value }\n                case \">=\":\n                    return { value: left.value >= right.value }\n                case \"<<\":\n                    return { value: left.value << right.value }\n                case \">>\":\n                    return { value: left.value >> right.value }\n                case \">>>\":\n                    return { value: left.value >>> right.value }\n                case \"+\":\n                    return { value: left.value + right.value }\n                case \"-\":\n                    return { value: left.value - right.value }\n                case \"*\":\n                    return { value: left.value * right.value }\n                case \"/\":\n                    return { value: left.value / right.value }\n                case \"%\":\n                    return { value: left.value % right.value }\n                case \"**\":\n                    return { value: Math.pow(left.value, right.value) }\n                case \"|\":\n                    return { value: left.value | right.value }\n                case \"^\":\n                    return { value: left.value ^ right.value }\n                case \"&\":\n                    return { value: left.value & right.value }\n\n                // no default\n            }\n        }\n\n        return null\n    },\n\n    CallExpression(node, initialScope) {\n        const calleeNode = node.callee\n        const args = getElementValues(node.arguments, initialScope)\n\n        if (args != null) {\n            if (calleeNode.type === \"MemberExpression\") {\n                const object = getStaticValueR(calleeNode.object, initialScope)\n                if (object != null) {\n                    if (\n                        object.value == null &&\n                        (object.optional || node.optional)\n                    ) {\n                        return { value: undefined, optional: true }\n                    }\n                    const property = calleeNode.computed\n                        ? getStaticValueR(calleeNode.property, initialScope)\n                        : { value: calleeNode.property.name }\n\n                    if (property != null) {\n                        const receiver = object.value\n                        const methodName = property.value\n                        if (callAllowed.has(receiver[methodName])) {\n                            return { value: receiver[methodName](...args) }\n                        }\n                        if (callPassThrough.has(receiver[methodName])) {\n                            return { value: args[0] }\n                        }\n                    }\n                }\n            } else {\n                const callee = getStaticValueR(calleeNode, initialScope)\n                if (callee != null) {\n                    if (callee.value == null && node.optional) {\n                        return { value: undefined, optional: true }\n                    }\n                    const func = callee.value\n                    if (callAllowed.has(func)) {\n                        return { value: func(...args) }\n                    }\n                    if (callPassThrough.has(func)) {\n                        return { value: args[0] }\n                    }\n                }\n            }\n        }\n\n        return null\n    },\n\n    ConditionalExpression(node, initialScope) {\n        const test = getStaticValueR(node.test, initialScope)\n        if (test != null) {\n            return test.value\n                ? getStaticValueR(node.consequent, initialScope)\n                : getStaticValueR(node.alternate, initialScope)\n        }\n        return null\n    },\n\n    ExpressionStatement(node, initialScope) {\n        return getStaticValueR(node.expression, initialScope)\n    },\n\n    Identifier(node, initialScope) {\n        if (initialScope != null) {\n            const variable = findVariable(initialScope, node)\n\n            // Built-in globals.\n            if (\n                variable != null &&\n                variable.defs.length === 0 &&\n                builtinNames.has(variable.name) &&\n                variable.name in globalObject\n            ) {\n                return { value: globalObject[variable.name] }\n            }\n\n            // Constants.\n            if (variable != null && variable.defs.length === 1) {\n                const def = variable.defs[0]\n                if (\n                    def.parent &&\n                    def.parent.kind === \"const\" &&\n                    // TODO(mysticatea): don't support destructuring here.\n                    def.node.id.type === \"Identifier\"\n                ) {\n                    return getStaticValueR(def.node.init, initialScope)\n                }\n            }\n        }\n        return null\n    },\n\n    Literal(node) {\n        //istanbul ignore if : this is implementation-specific behavior.\n        if ((node.regex != null || node.bigint != null) && node.value == null) {\n            // It was a RegExp/BigInt literal, but Node.js didn't support it.\n            return null\n        }\n        return { value: node.value }\n    },\n\n    LogicalExpression(node, initialScope) {\n        const left = getStaticValueR(node.left, initialScope)\n        if (left != null) {\n            if (\n                (node.operator === \"||\" && Boolean(left.value) === true) ||\n                (node.operator === \"&&\" && Boolean(left.value) === false) ||\n                (node.operator === \"??\" && left.value != null)\n            ) {\n                return left\n            }\n\n            const right = getStaticValueR(node.right, initialScope)\n            if (right != null) {\n                return right\n            }\n        }\n\n        return null\n    },\n\n    MemberExpression(node, initialScope) {\n        const object = getStaticValueR(node.object, initialScope)\n        if (object != null) {\n            if (object.value == null && (object.optional || node.optional)) {\n                return { value: undefined, optional: true }\n            }\n            const property = node.computed\n                ? getStaticValueR(node.property, initialScope)\n                : { value: node.property.name }\n\n            if (property != null && !isGetter(object.value, property.value)) {\n                return { value: object.value[property.value] }\n            }\n        }\n        return null\n    },\n\n    ChainExpression(node, initialScope) {\n        const expression = getStaticValueR(node.expression, initialScope)\n        if (expression != null) {\n            return { value: expression.value }\n        }\n        return null\n    },\n\n    NewExpression(node, initialScope) {\n        const callee = getStaticValueR(node.callee, initialScope)\n        const args = getElementValues(node.arguments, initialScope)\n\n        if (callee != null && args != null) {\n            const Func = callee.value\n            if (callAllowed.has(Func)) {\n                return { value: new Func(...args) }\n            }\n        }\n\n        return null\n    },\n\n    ObjectExpression(node, initialScope) {\n        const object = {}\n\n        for (const propertyNode of node.properties) {\n            if (propertyNode.type === \"Property\") {\n                if (propertyNode.kind !== \"init\") {\n                    return null\n                }\n                const key = propertyNode.computed\n                    ? getStaticValueR(propertyNode.key, initialScope)\n                    : { value: propertyNode.key.name }\n                const value = getStaticValueR(propertyNode.value, initialScope)\n                if (key == null || value == null) {\n                    return null\n                }\n                object[key.value] = value.value\n            } else if (\n                propertyNode.type === \"SpreadElement\" ||\n                propertyNode.type === \"ExperimentalSpreadProperty\"\n            ) {\n                const argument = getStaticValueR(\n                    propertyNode.argument,\n                    initialScope\n                )\n                if (argument == null) {\n                    return null\n                }\n                Object.assign(object, argument.value)\n            } else {\n                return null\n            }\n        }\n\n        return { value: object }\n    },\n\n    SequenceExpression(node, initialScope) {\n        const last = node.expressions[node.expressions.length - 1]\n        return getStaticValueR(last, initialScope)\n    },\n\n    TaggedTemplateExpression(node, initialScope) {\n        const tag = getStaticValueR(node.tag, initialScope)\n        const expressions = getElementValues(\n            node.quasi.expressions,\n            initialScope\n        )\n\n        if (tag != null && expressions != null) {\n            const func = tag.value\n            const strings = node.quasi.quasis.map(q => q.value.cooked)\n            strings.raw = node.quasi.quasis.map(q => q.value.raw)\n\n            if (func === String.raw) {\n                return { value: func(strings, ...expressions) }\n            }\n        }\n\n        return null\n    },\n\n    TemplateLiteral(node, initialScope) {\n        const expressions = getElementValues(node.expressions, initialScope)\n        if (expressions != null) {\n            let value = node.quasis[0].value.cooked\n            for (let i = 0; i < expressions.length; ++i) {\n                value += expressions[i]\n                value += node.quasis[i + 1].value.cooked\n            }\n            return { value }\n        }\n        return null\n    },\n\n    UnaryExpression(node, initialScope) {\n        if (node.operator === \"delete\") {\n            // Not supported.\n            return null\n        }\n        if (node.operator === \"void\") {\n            return { value: undefined }\n        }\n\n        const arg = getStaticValueR(node.argument, initialScope)\n        if (arg != null) {\n            switch (node.operator) {\n                case \"-\":\n                    return { value: -arg.value }\n                case \"+\":\n                    return { value: +arg.value } //eslint-disable-line no-implicit-coercion\n                case \"!\":\n                    return { value: !arg.value }\n                case \"~\":\n                    return { value: ~arg.value }\n                case \"typeof\":\n                    return { value: typeof arg.value }\n\n                // no default\n            }\n        }\n\n        return null\n    },\n})\n\n/**\n * Get the value of a given node if it's a static value.\n * @param {Node} node The node to get.\n * @param {Scope|undefined} initialScope The scope to start finding variable.\n * @returns {{value:any}|{value:undefined,optional?:true}|null} The static value of the node, or `null`.\n */\nfunction getStaticValueR(node, initialScope) {\n    if (node != null && Object.hasOwnProperty.call(operations, node.type)) {\n        return operations[node.type](node, initialScope)\n    }\n    return null\n}\n\n/**\n * Get the value of a given node if it's a static value.\n * @param {Node} node The node to get.\n * @param {Scope} [initialScope] The scope to start finding variable. Optional. If this scope was given, this tries to resolve identifier references which are in the given node as much as possible.\n * @returns {{value:any}|{value:undefined,optional?:true}|null} The static value of the node, or `null`.\n */\nexport function getStaticValue(node, initialScope = null) {\n    try {\n        return getStaticValueR(node, initialScope)\n    } catch (_error) {\n        return null\n    }\n}\n","import { getStaticValue } from \"./get-static-value\"\n\n/**\n * Get the value of a given node if it's a literal or a template literal.\n * @param {Node} node The node to get.\n * @param {Scope} [initialScope] The scope to start finding variable. Optional. If the node is an Identifier node and this scope was given, this checks the variable of the identifier, and returns the value of it if the variable is a constant.\n * @returns {string|null} The value of the node, or `null`.\n */\nexport function getStringIfConstant(node, initialScope = null) {\n    // Handle the literals that the platform doesn't support natively.\n    if (node && node.type === \"Literal\" && node.value === null) {\n        if (node.regex) {\n            return `/${node.regex.pattern}/${node.regex.flags}`\n        }\n        if (node.bigint) {\n            return node.bigint\n        }\n    }\n\n    const evaluated = getStaticValue(node, initialScope)\n    return evaluated && String(evaluated.value)\n}\n","import { getStringIfConstant } from \"./get-string-if-constant\"\n\n/**\n * Get the property name from a MemberExpression node or a Property node.\n * @param {Node} node The node to get.\n * @param {Scope} [initialScope] The scope to start finding variable. Optional. If the node is a computed property node and this scope was given, this checks the computed property name by the `getStringIfConstant` function with the scope, and returns the value of it.\n * @returns {string|null} The property name of the node.\n */\nexport function getPropertyName(node, initialScope) {\n    switch (node.type) {\n        case \"MemberExpression\":\n            if (node.computed) {\n                return getStringIfConstant(node.property, initialScope)\n            }\n            return node.property.name\n\n        case \"Property\":\n        case \"MethodDefinition\":\n            if (node.computed) {\n                return getStringIfConstant(node.key, initialScope)\n            }\n            if (node.key.type === \"Literal\") {\n                return String(node.key.value)\n            }\n            return node.key.name\n\n        // no default\n    }\n\n    return null\n}\n","import { getPropertyName } from \"./get-property-name\"\n\n/**\n * Get the name and kind of the given function node.\n * @param {ASTNode} node - The function node to get.\n * @returns {string} The name and kind of the function node.\n */\nexport function getFunctionNameWithKind(node) {\n    const parent = node.parent\n    const tokens = []\n\n    if (parent.type === \"MethodDefinition\" && parent.static) {\n        tokens.push(\"static\")\n    }\n    if (node.async) {\n        tokens.push(\"async\")\n    }\n    if (node.generator) {\n        tokens.push(\"generator\")\n    }\n\n    if (node.type === \"ArrowFunctionExpression\") {\n        tokens.push(\"arrow\", \"function\")\n    } else if (\n        parent.type === \"Property\" ||\n        parent.type === \"MethodDefinition\"\n    ) {\n        if (parent.kind === \"constructor\") {\n            return \"constructor\"\n        }\n        if (parent.kind === \"get\") {\n            tokens.push(\"getter\")\n        } else if (parent.kind === \"set\") {\n            tokens.push(\"setter\")\n        } else {\n            tokens.push(\"method\")\n        }\n    } else {\n        tokens.push(\"function\")\n    }\n\n    if (node.id) {\n        tokens.push(`'${node.id.name}'`)\n    } else {\n        const name = getPropertyName(parent)\n\n        if (name) {\n            tokens.push(`'${name}'`)\n        }\n    }\n\n    if (node.type === \"ArrowFunctionExpression\") {\n        if (\n            parent.type === \"VariableDeclarator\" &&\n            parent.id &&\n            parent.id.type === \"Identifier\"\n        ) {\n            tokens.push(`'${parent.id.name}'`)\n        }\n        if (\n            parent.type === \"AssignmentExpression\" &&\n            parent.left &&\n            parent.left.type === \"Identifier\"\n        ) {\n            tokens.push(`'${parent.left.name}'`)\n        }\n    }\n\n    return tokens.join(\" \")\n}\n","import evk from \"eslint-visitor-keys\"\n\nconst typeConversionBinaryOps = Object.freeze(\n    new Set([\n        \"==\",\n        \"!=\",\n        \"<\",\n        \"<=\",\n        \">\",\n        \">=\",\n        \"<<\",\n        \">>\",\n        \">>>\",\n        \"+\",\n        \"-\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \"|\",\n        \"^\",\n        \"&\",\n        \"in\",\n    ])\n)\nconst typeConversionUnaryOps = Object.freeze(new Set([\"-\", \"+\", \"!\", \"~\"]))\n\n/**\n * Check whether the given value is an ASTNode or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an ASTNode.\n */\nfunction isNode(x) {\n    return x !== null && typeof x === \"object\" && typeof x.type === \"string\"\n}\n\nconst visitor = Object.freeze(\n    Object.assign(Object.create(null), {\n        $visit(node, options, visitorKeys) {\n            const { type } = node\n\n            if (typeof this[type] === \"function\") {\n                return this[type](node, options, visitorKeys)\n            }\n\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n\n        $visitChildren(node, options, visitorKeys) {\n            const { type } = node\n\n            for (const key of visitorKeys[type] || evk.getKeys(node)) {\n                const value = node[key]\n\n                if (Array.isArray(value)) {\n                    for (const element of value) {\n                        if (\n                            isNode(element) &&\n                            this.$visit(element, options, visitorKeys)\n                        ) {\n                            return true\n                        }\n                    }\n                } else if (\n                    isNode(value) &&\n                    this.$visit(value, options, visitorKeys)\n                ) {\n                    return true\n                }\n            }\n\n            return false\n        },\n\n        ArrowFunctionExpression() {\n            return false\n        },\n        AssignmentExpression() {\n            return true\n        },\n        AwaitExpression() {\n            return true\n        },\n        BinaryExpression(node, options, visitorKeys) {\n            if (\n                options.considerImplicitTypeConversion &&\n                typeConversionBinaryOps.has(node.operator) &&\n                (node.left.type !== \"Literal\" || node.right.type !== \"Literal\")\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        CallExpression() {\n            return true\n        },\n        FunctionExpression() {\n            return false\n        },\n        ImportExpression() {\n            return true\n        },\n        MemberExpression(node, options, visitorKeys) {\n            if (options.considerGetters) {\n                return true\n            }\n            if (\n                options.considerImplicitTypeConversion &&\n                node.computed &&\n                node.property.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        MethodDefinition(node, options, visitorKeys) {\n            if (\n                options.considerImplicitTypeConversion &&\n                node.computed &&\n                node.key.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        NewExpression() {\n            return true\n        },\n        Property(node, options, visitorKeys) {\n            if (\n                options.considerImplicitTypeConversion &&\n                node.computed &&\n                node.key.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        UnaryExpression(node, options, visitorKeys) {\n            if (node.operator === \"delete\") {\n                return true\n            }\n            if (\n                options.considerImplicitTypeConversion &&\n                typeConversionUnaryOps.has(node.operator) &&\n                node.argument.type !== \"Literal\"\n            ) {\n                return true\n            }\n            return this.$visitChildren(node, options, visitorKeys)\n        },\n        UpdateExpression() {\n            return true\n        },\n        YieldExpression() {\n            return true\n        },\n    })\n)\n\n/**\n * Check whether a given node has any side effect or not.\n * @param {Node} node The node to get.\n * @param {SourceCode} sourceCode The source code object.\n * @param {object} [options] The option object.\n * @param {boolean} [options.considerGetters=false] If `true` then it considers member accesses as the node which has side effects.\n * @param {boolean} [options.considerImplicitTypeConversion=false] If `true` then it considers implicit type conversion as the node which has side effects.\n * @param {object} [options.visitorKeys=evk.KEYS] The keys to traverse nodes. Use `context.getSourceCode().visitorKeys`.\n * @returns {boolean} `true` if the node has a certain side effect.\n */\nexport function hasSideEffect(\n    node,\n    sourceCode,\n    { considerGetters = false, considerImplicitTypeConversion = false } = {}\n) {\n    return visitor.$visit(\n        node,\n        { considerGetters, considerImplicitTypeConversion },\n        sourceCode.visitorKeys || evk.KEYS\n    )\n}\n","import { isClosingParenToken, isOpeningParenToken } from \"./token-predicate\"\n\n/**\n * Get the left parenthesis of the parent node syntax if it exists.\n * E.g., `if (a) {}` then the `(`.\n * @param {Node} node The AST node to check.\n * @param {SourceCode} sourceCode The source code object to get tokens.\n * @returns {Token|null} The left parenthesis of the parent node syntax\n */\nfunction getParentSyntaxParen(node, sourceCode) {\n    const parent = node.parent\n\n    switch (parent.type) {\n        case \"CallExpression\":\n        case \"NewExpression\":\n            if (parent.arguments.length === 1 && parent.arguments[0] === node) {\n                return sourceCode.getTokenAfter(\n                    parent.callee,\n                    isOpeningParenToken\n                )\n            }\n            return null\n\n        case \"DoWhileStatement\":\n            if (parent.test === node) {\n                return sourceCode.getTokenAfter(\n                    parent.body,\n                    isOpeningParenToken\n                )\n            }\n            return null\n\n        case \"IfStatement\":\n        case \"WhileStatement\":\n            if (parent.test === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        case \"ImportExpression\":\n            if (parent.source === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        case \"SwitchStatement\":\n            if (parent.discriminant === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        case \"WithStatement\":\n            if (parent.object === node) {\n                return sourceCode.getFirstToken(parent, 1)\n            }\n            return null\n\n        default:\n            return null\n    }\n}\n\n/**\n * Check whether a given node is parenthesized or not.\n * @param {number} times The number of parantheses.\n * @param {Node} node The AST node to check.\n * @param {SourceCode} sourceCode The source code object to get tokens.\n * @returns {boolean} `true` if the node is parenthesized the given times.\n */\n/**\n * Check whether a given node is parenthesized or not.\n * @param {Node} node The AST node to check.\n * @param {SourceCode} sourceCode The source code object to get tokens.\n * @returns {boolean} `true` if the node is parenthesized.\n */\nexport function isParenthesized(\n    timesOrNode,\n    nodeOrSourceCode,\n    optionalSourceCode\n) {\n    let times, node, sourceCode, maybeLeftParen, maybeRightParen\n    if (typeof timesOrNode === \"number\") {\n        times = timesOrNode | 0\n        node = nodeOrSourceCode\n        sourceCode = optionalSourceCode\n        if (!(times >= 1)) {\n            throw new TypeError(\"'times' should be a positive integer.\")\n        }\n    } else {\n        times = 1\n        node = timesOrNode\n        sourceCode = nodeOrSourceCode\n    }\n\n    if (node == null) {\n        return false\n    }\n\n    maybeLeftParen = maybeRightParen = node\n    do {\n        maybeLeftParen = sourceCode.getTokenBefore(maybeLeftParen)\n        maybeRightParen = sourceCode.getTokenAfter(maybeRightParen)\n    } while (\n        maybeLeftParen != null &&\n        maybeRightParen != null &&\n        isOpeningParenToken(maybeLeftParen) &&\n        isClosingParenToken(maybeRightParen) &&\n        // Avoid false positive such as `if (a) {}`\n        maybeLeftParen !== getParentSyntaxParen(node, sourceCode) &&\n        --times > 0\n    )\n\n    return times === 0\n}\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\nconst placeholder = /\\$(?:[$&`']|[1-9][0-9]?)/gu\n\n/** @type {WeakMap<PatternMatcher, {pattern:RegExp,escaped:boolean}>} */\nconst internal = new WeakMap()\n\n/**\n * Check whether a given character is escaped or not.\n * @param {string} str The string to check.\n * @param {number} index The location of the character to check.\n * @returns {boolean} `true` if the character is escaped.\n */\nfunction isEscaped(str, index) {\n    let escaped = false\n    for (let i = index - 1; i >= 0 && str.charCodeAt(i) === 0x5c; --i) {\n        escaped = !escaped\n    }\n    return escaped\n}\n\n/**\n * Replace a given string by a given matcher.\n * @param {PatternMatcher} matcher The pattern matcher.\n * @param {string} str The string to be replaced.\n * @param {string} replacement The new substring to replace each matched part.\n * @returns {string} The replaced string.\n */\nfunction replaceS(matcher, str, replacement) {\n    const chunks = []\n    let index = 0\n\n    /** @type {RegExpExecArray} */\n    let match = null\n\n    /**\n     * @param {string} key The placeholder.\n     * @returns {string} The replaced string.\n     */\n    function replacer(key) {\n        switch (key) {\n            case \"$$\":\n                return \"$\"\n            case \"$&\":\n                return match[0]\n            case \"$`\":\n                return str.slice(0, match.index)\n            case \"$'\":\n                return str.slice(match.index + match[0].length)\n            default: {\n                const i = key.slice(1)\n                if (i in match) {\n                    return match[i]\n                }\n                return key\n            }\n        }\n    }\n\n    for (match of matcher.execAll(str)) {\n        chunks.push(str.slice(index, match.index))\n        chunks.push(replacement.replace(placeholder, replacer))\n        index = match.index + match[0].length\n    }\n    chunks.push(str.slice(index))\n\n    return chunks.join(\"\")\n}\n\n/**\n * Replace a given string by a given matcher.\n * @param {PatternMatcher} matcher The pattern matcher.\n * @param {string} str The string to be replaced.\n * @param {(...strs[])=>string} replace The function to replace each matched part.\n * @returns {string} The replaced string.\n */\nfunction replaceF(matcher, str, replace) {\n    const chunks = []\n    let index = 0\n\n    for (const match of matcher.execAll(str)) {\n        chunks.push(str.slice(index, match.index))\n        chunks.push(String(replace(...match, match.index, match.input)))\n        index = match.index + match[0].length\n    }\n    chunks.push(str.slice(index))\n\n    return chunks.join(\"\")\n}\n\n/**\n * The class to find patterns as considering escape sequences.\n */\nexport class PatternMatcher {\n    /**\n     * Initialize this matcher.\n     * @param {RegExp} pattern The pattern to match.\n     * @param {{escaped:boolean}} options The options.\n     */\n    constructor(pattern, { escaped = false } = {}) {\n        if (!(pattern instanceof RegExp)) {\n            throw new TypeError(\"'pattern' should be a RegExp instance.\")\n        }\n        if (!pattern.flags.includes(\"g\")) {\n            throw new Error(\"'pattern' should contains 'g' flag.\")\n        }\n\n        internal.set(this, {\n            pattern: new RegExp(pattern.source, pattern.flags),\n            escaped: Boolean(escaped),\n        })\n    }\n\n    /**\n     * Find the pattern in a given string.\n     * @param {string} str The string to find.\n     * @returns {IterableIterator<RegExpExecArray>} The iterator which iterate the matched information.\n     */\n    *execAll(str) {\n        const { pattern, escaped } = internal.get(this)\n        let match = null\n        let lastIndex = 0\n\n        pattern.lastIndex = 0\n        while ((match = pattern.exec(str)) != null) {\n            if (escaped || !isEscaped(str, match.index)) {\n                lastIndex = pattern.lastIndex\n                yield match\n                pattern.lastIndex = lastIndex\n            }\n        }\n    }\n\n    /**\n     * Check whether the pattern is found in a given string.\n     * @param {string} str The string to check.\n     * @returns {boolean} `true` if the pattern was found in the string.\n     */\n    test(str) {\n        const it = this.execAll(str)\n        const ret = it.next()\n        return !ret.done\n    }\n\n    /**\n     * Replace a given string.\n     * @param {string} str The string to be replaced.\n     * @param {(string|((...strs:string[])=>string))} replacer The string or function to replace. This is the same as the 2nd argument of `String.prototype.replace`.\n     * @returns {string} The replaced string.\n     */\n    [Symbol.replace](str, replacer) {\n        return typeof replacer === \"function\"\n            ? replaceF(this, String(str), replacer)\n            : replaceS(this, String(str), String(replacer))\n    }\n}\n","import { findVariable } from \"./find-variable\"\nimport { getPropertyName } from \"./get-property-name\"\nimport { getStringIfConstant } from \"./get-string-if-constant\"\n\nconst IMPORT_TYPE = /^(?:Import|Export(?:All|Default|Named))Declaration$/u\nconst has = Function.call.bind(Object.hasOwnProperty)\n\nexport const READ = Symbol(\"read\")\nexport const CALL = Symbol(\"call\")\nexport const CONSTRUCT = Symbol(\"construct\")\nexport const ESM = Symbol(\"esm\")\n\nconst requireCall = { require: { [CALL]: true } }\n\n/**\n * Check whether a given variable is modified or not.\n * @param {Variable} variable The variable to check.\n * @returns {boolean} `true` if the variable is modified.\n */\nfunction isModifiedGlobal(variable) {\n    return (\n        variable == null ||\n        variable.defs.length !== 0 ||\n        variable.references.some(r => r.isWrite())\n    )\n}\n\n/**\n * Check if the value of a given node is passed through to the parent syntax as-is.\n * For example, `a` and `b` in (`a || b` and `c ? a : b`) are passed through.\n * @param {Node} node A node to check.\n * @returns {boolean} `true` if the node is passed through.\n */\nfunction isPassThrough(node) {\n    const parent = node.parent\n\n    switch (parent && parent.type) {\n        case \"ConditionalExpression\":\n            return parent.consequent === node || parent.alternate === node\n        case \"LogicalExpression\":\n            return true\n        case \"SequenceExpression\":\n            return parent.expressions[parent.expressions.length - 1] === node\n        case \"ChainExpression\":\n            return true\n\n        default:\n            return false\n    }\n}\n\n/**\n * The reference tracker.\n */\nexport class ReferenceTracker {\n    /**\n     * Initialize this tracker.\n     * @param {Scope} globalScope The global scope.\n     * @param {object} [options] The options.\n     * @param {\"legacy\"|\"strict\"} [options.mode=\"strict\"] The mode to determine the ImportDeclaration's behavior for CJS modules.\n     * @param {string[]} [options.globalObjectNames=[\"global\",\"globalThis\",\"self\",\"window\"]] The variable names for Global Object.\n     */\n    constructor(\n        globalScope,\n        {\n            mode = \"strict\",\n            globalObjectNames = [\"global\", \"globalThis\", \"self\", \"window\"],\n        } = {}\n    ) {\n        this.variableStack = []\n        this.globalScope = globalScope\n        this.mode = mode\n        this.globalObjectNames = globalObjectNames.slice(0)\n    }\n\n    /**\n     * Iterate the references of global variables.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *iterateGlobalReferences(traceMap) {\n        for (const key of Object.keys(traceMap)) {\n            const nextTraceMap = traceMap[key]\n            const path = [key]\n            const variable = this.globalScope.set.get(key)\n\n            if (isModifiedGlobal(variable)) {\n                continue\n            }\n\n            yield* this._iterateVariableReferences(\n                variable,\n                path,\n                nextTraceMap,\n                true\n            )\n        }\n\n        for (const key of this.globalObjectNames) {\n            const path = []\n            const variable = this.globalScope.set.get(key)\n\n            if (isModifiedGlobal(variable)) {\n                continue\n            }\n\n            yield* this._iterateVariableReferences(\n                variable,\n                path,\n                traceMap,\n                false\n            )\n        }\n    }\n\n    /**\n     * Iterate the references of CommonJS modules.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *iterateCjsReferences(traceMap) {\n        for (const { node } of this.iterateGlobalReferences(requireCall)) {\n            const key = getStringIfConstant(node.arguments[0])\n            if (key == null || !has(traceMap, key)) {\n                continue\n            }\n\n            const nextTraceMap = traceMap[key]\n            const path = [key]\n\n            if (nextTraceMap[READ]) {\n                yield {\n                    node,\n                    path,\n                    type: READ,\n                    info: nextTraceMap[READ],\n                }\n            }\n            yield* this._iteratePropertyReferences(node, path, nextTraceMap)\n        }\n    }\n\n    /**\n     * Iterate the references of ES modules.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *iterateEsmReferences(traceMap) {\n        const programNode = this.globalScope.block\n\n        for (const node of programNode.body) {\n            if (!IMPORT_TYPE.test(node.type) || node.source == null) {\n                continue\n            }\n            const moduleId = node.source.value\n\n            if (!has(traceMap, moduleId)) {\n                continue\n            }\n            const nextTraceMap = traceMap[moduleId]\n            const path = [moduleId]\n\n            if (nextTraceMap[READ]) {\n                yield { node, path, type: READ, info: nextTraceMap[READ] }\n            }\n\n            if (node.type === \"ExportAllDeclaration\") {\n                for (const key of Object.keys(nextTraceMap)) {\n                    const exportTraceMap = nextTraceMap[key]\n                    if (exportTraceMap[READ]) {\n                        yield {\n                            node,\n                            path: path.concat(key),\n                            type: READ,\n                            info: exportTraceMap[READ],\n                        }\n                    }\n                }\n            } else {\n                for (const specifier of node.specifiers) {\n                    const esm = has(nextTraceMap, ESM)\n                    const it = this._iterateImportReferences(\n                        specifier,\n                        path,\n                        esm\n                            ? nextTraceMap\n                            : this.mode === \"legacy\"\n                            ? Object.assign(\n                                  { default: nextTraceMap },\n                                  nextTraceMap\n                              )\n                            : { default: nextTraceMap }\n                    )\n\n                    if (esm) {\n                        yield* it\n                    } else {\n                        for (const report of it) {\n                            report.path = report.path.filter(exceptDefault)\n                            if (\n                                report.path.length >= 2 ||\n                                report.type !== READ\n                            ) {\n                                yield report\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Iterate the references for a given variable.\n     * @param {Variable} variable The variable to iterate that references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @param {boolean} shouldReport = The flag to report those references.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *_iterateVariableReferences(variable, path, traceMap, shouldReport) {\n        if (this.variableStack.includes(variable)) {\n            return\n        }\n        this.variableStack.push(variable)\n        try {\n            for (const reference of variable.references) {\n                if (!reference.isRead()) {\n                    continue\n                }\n                const node = reference.identifier\n\n                if (shouldReport && traceMap[READ]) {\n                    yield { node, path, type: READ, info: traceMap[READ] }\n                }\n                yield* this._iteratePropertyReferences(node, path, traceMap)\n            }\n        } finally {\n            this.variableStack.pop()\n        }\n    }\n\n    /**\n     * Iterate the references for a given AST node.\n     * @param rootNode The AST node to iterate references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    //eslint-disable-next-line complexity\n    *_iteratePropertyReferences(rootNode, path, traceMap) {\n        let node = rootNode\n        while (isPassThrough(node)) {\n            node = node.parent\n        }\n\n        const parent = node.parent\n        if (parent.type === \"MemberExpression\") {\n            if (parent.object === node) {\n                const key = getPropertyName(parent)\n                if (key == null || !has(traceMap, key)) {\n                    return\n                }\n\n                path = path.concat(key) //eslint-disable-line no-param-reassign\n                const nextTraceMap = traceMap[key]\n                if (nextTraceMap[READ]) {\n                    yield {\n                        node: parent,\n                        path,\n                        type: READ,\n                        info: nextTraceMap[READ],\n                    }\n                }\n                yield* this._iteratePropertyReferences(\n                    parent,\n                    path,\n                    nextTraceMap\n                )\n            }\n            return\n        }\n        if (parent.type === \"CallExpression\") {\n            if (parent.callee === node && traceMap[CALL]) {\n                yield { node: parent, path, type: CALL, info: traceMap[CALL] }\n            }\n            return\n        }\n        if (parent.type === \"NewExpression\") {\n            if (parent.callee === node && traceMap[CONSTRUCT]) {\n                yield {\n                    node: parent,\n                    path,\n                    type: CONSTRUCT,\n                    info: traceMap[CONSTRUCT],\n                }\n            }\n            return\n        }\n        if (parent.type === \"AssignmentExpression\") {\n            if (parent.right === node) {\n                yield* this._iterateLhsReferences(parent.left, path, traceMap)\n                yield* this._iteratePropertyReferences(parent, path, traceMap)\n            }\n            return\n        }\n        if (parent.type === \"AssignmentPattern\") {\n            if (parent.right === node) {\n                yield* this._iterateLhsReferences(parent.left, path, traceMap)\n            }\n            return\n        }\n        if (parent.type === \"VariableDeclarator\") {\n            if (parent.init === node) {\n                yield* this._iterateLhsReferences(parent.id, path, traceMap)\n            }\n        }\n    }\n\n    /**\n     * Iterate the references for a given Pattern node.\n     * @param {Node} patternNode The Pattern node to iterate references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *_iterateLhsReferences(patternNode, path, traceMap) {\n        if (patternNode.type === \"Identifier\") {\n            const variable = findVariable(this.globalScope, patternNode)\n            if (variable != null) {\n                yield* this._iterateVariableReferences(\n                    variable,\n                    path,\n                    traceMap,\n                    false\n                )\n            }\n            return\n        }\n        if (patternNode.type === \"ObjectPattern\") {\n            for (const property of patternNode.properties) {\n                const key = getPropertyName(property)\n\n                if (key == null || !has(traceMap, key)) {\n                    continue\n                }\n\n                const nextPath = path.concat(key)\n                const nextTraceMap = traceMap[key]\n                if (nextTraceMap[READ]) {\n                    yield {\n                        node: property,\n                        path: nextPath,\n                        type: READ,\n                        info: nextTraceMap[READ],\n                    }\n                }\n                yield* this._iterateLhsReferences(\n                    property.value,\n                    nextPath,\n                    nextTraceMap\n                )\n            }\n            return\n        }\n        if (patternNode.type === \"AssignmentPattern\") {\n            yield* this._iterateLhsReferences(patternNode.left, path, traceMap)\n        }\n    }\n\n    /**\n     * Iterate the references for a given ModuleSpecifier node.\n     * @param {Node} specifierNode The ModuleSpecifier node to iterate references.\n     * @param {string[]} path The current path.\n     * @param {object} traceMap The trace map.\n     * @returns {IterableIterator<{node:Node,path:string[],type:symbol,info:any}>} The iterator to iterate references.\n     */\n    *_iterateImportReferences(specifierNode, path, traceMap) {\n        const type = specifierNode.type\n\n        if (type === \"ImportSpecifier\" || type === \"ImportDefaultSpecifier\") {\n            const key =\n                type === \"ImportDefaultSpecifier\"\n                    ? \"default\"\n                    : specifierNode.imported.name\n            if (!has(traceMap, key)) {\n                return\n            }\n\n            path = path.concat(key) //eslint-disable-line no-param-reassign\n            const nextTraceMap = traceMap[key]\n            if (nextTraceMap[READ]) {\n                yield {\n                    node: specifierNode,\n                    path,\n                    type: READ,\n                    info: nextTraceMap[READ],\n                }\n            }\n            yield* this._iterateVariableReferences(\n                findVariable(this.globalScope, specifierNode.local),\n                path,\n                nextTraceMap,\n                false\n            )\n\n            return\n        }\n\n        if (type === \"ImportNamespaceSpecifier\") {\n            yield* this._iterateVariableReferences(\n                findVariable(this.globalScope, specifierNode.local),\n                path,\n                traceMap,\n                false\n            )\n            return\n        }\n\n        if (type === \"ExportSpecifier\") {\n            const key = specifierNode.local.name\n            if (!has(traceMap, key)) {\n                return\n            }\n\n            path = path.concat(key) //eslint-disable-line no-param-reassign\n            const nextTraceMap = traceMap[key]\n            if (nextTraceMap[READ]) {\n                yield {\n                    node: specifierNode,\n                    path,\n                    type: READ,\n                    info: nextTraceMap[READ],\n                }\n            }\n        }\n    }\n}\n\nReferenceTracker.READ = READ\nReferenceTracker.CALL = CALL\nReferenceTracker.CONSTRUCT = CONSTRUCT\nReferenceTracker.ESM = ESM\n\n/**\n * This is a predicate function for Array#filter.\n * @param {string} name A name part.\n * @param {number} index The index of the name.\n * @returns {boolean} `false` if it's default.\n */\nfunction exceptDefault(name, index) {\n    return !(index === 1 && name === \"default\")\n}\n","import { findVariable } from \"./find-variable\"\nimport { getFunctionHeadLocation } from \"./get-function-head-location\"\nimport { getFunctionNameWithKind } from \"./get-function-name-with-kind\"\nimport { getInnermostScope } from \"./get-innermost-scope\"\nimport { getPropertyName } from \"./get-property-name\"\nimport { getStaticValue } from \"./get-static-value\"\nimport { getStringIfConstant } from \"./get-string-if-constant\"\nimport { hasSideEffect } from \"./has-side-effect\"\nimport { isParenthesized } from \"./is-parenthesized\"\nimport { PatternMatcher } from \"./pattern-matcher\"\nimport {\n    CALL,\n    CONSTRUCT,\n    ESM,\n    READ,\n    ReferenceTracker,\n} from \"./reference-tracker\"\nimport {\n    isArrowToken,\n    isClosingBraceToken,\n    isClosingBracketToken,\n    isClosingParenToken,\n    isColonToken,\n    isCommaToken,\n    isCommentToken,\n    isNotArrowToken,\n    isNotClosingBraceToken,\n    isNotClosingBracketToken,\n    isNotClosingParenToken,\n    isNotColonToken,\n    isNotCommaToken,\n    isNotCommentToken,\n    isNotOpeningBraceToken,\n    isNotOpeningBracketToken,\n    isNotOpeningParenToken,\n    isNotSemicolonToken,\n    isOpeningBraceToken,\n    isOpeningBracketToken,\n    isOpeningParenToken,\n    isSemicolonToken,\n} from \"./token-predicate\"\n\nexport default {\n    CALL,\n    CONSTRUCT,\n    ESM,\n    findVariable,\n    getFunctionHeadLocation,\n    getFunctionNameWithKind,\n    getInnermostScope,\n    getPropertyName,\n    getStaticValue,\n    getStringIfConstant,\n    hasSideEffect,\n    isArrowToken,\n    isClosingBraceToken,\n    isClosingBracketToken,\n    isClosingParenToken,\n    isColonToken,\n    isCommaToken,\n    isCommentToken,\n    isNotArrowToken,\n    isNotClosingBraceToken,\n    isNotClosingBracketToken,\n    isNotClosingParenToken,\n    isNotColonToken,\n    isNotCommaToken,\n    isNotCommentToken,\n    isNotOpeningBraceToken,\n    isNotOpeningBracketToken,\n    isNotOpeningParenToken,\n    isNotSemicolonToken,\n    isOpeningBraceToken,\n    isOpeningBracketToken,\n    isOpeningParenToken,\n    isParenthesized,\n    isSemicolonToken,\n    PatternMatcher,\n    READ,\n    ReferenceTracker,\n}\nexport {\n    CALL,\n    CONSTRUCT,\n    ESM,\n    findVariable,\n    getFunctionHeadLocation,\n    getFunctionNameWithKind,\n    getInnermostScope,\n    getPropertyName,\n    getStaticValue,\n    getStringIfConstant,\n    hasSideEffect,\n    isArrowToken,\n    isClosingBraceToken,\n    isClosingBracketToken,\n    isClosingParenToken,\n    isColonToken,\n    isCommaToken,\n    isCommentToken,\n    isNotArrowToken,\n    isNotClosingBraceToken,\n    isNotClosingBracketToken,\n    isNotClosingParenToken,\n    isNotColonToken,\n    isNotCommaToken,\n    isNotCommentToken,\n    isNotOpeningBraceToken,\n    isNotOpeningBracketToken,\n    isNotOpeningParenToken,\n    isNotSemicolonToken,\n    isOpeningBraceToken,\n    isOpeningBracketToken,\n    isOpeningParenToken,\n    isParenthesized,\n    isSemicolonToken,\n    PatternMatcher,\n    READ,\n    ReferenceTracker,\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/deluge/deluge/node_modules/regexpp/index.js":{"lineLengths":[61,13,0,62,0,0,0,38,0,3,0,35,38,24,18,21,18,20,18,21,18,20,30,1,27,18,21,18,20,18,21,18,20,20,20,18,21,18,20,55,1,29,96,1,32,49,63,1,35,2759,1,38,1573,1,32,68,19,30,28,32,23,18,9,28,22,9,14,24,9,5,17,1,30,17,67,1,0,15,53,32,32,32,32,5,18,86,5,18,86,5,18,86,5,18,86,5,1,54,72,706,2290,1090,55,30,64,5,30,69,65,65,64,5,17,1,53,69,65,64,1,0,23,33,22,28,22,28,29,24,29,30,22,22,19,25,22,21,23,22,24,23,19,26,24,29,26,33,33,33,33,33,33,33,33,21,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,28,32,30,30,26,31,34,31,29,34,26,30,30,75,66,1,31,50,1,29,51,1,27,55,71,66,1,33,32,34,33,37,1,31,56,1,27,65,45,5,69,47,5,28,1,32,44,1,33,44,1,44,64,1,0,20,19,46,6,14,17,6,2,21,19,47,6,14,34,6,2,14,19,32,21,20,22,23,21,23,21,23,21,23,5,18,23,5,17,23,5,28,25,5,25,25,5,26,25,5,26,25,5,38,54,25,24,27,5,19,32,24,55,41,66,41,77,41,88,5,15,31,36,32,34,32,34,45,34,45,94,9,5,13,31,27,24,9,21,5,20,53,27,27,24,9,21,5,25,74,27,27,27,24,9,21,5,1,0,45,48,21,42,58,13,35,9,65,27,5,1,0,32,38,28,32,26,26,26,30,33,34,35,36,34,35,29,1,38,64,1,37,31,28,25,36,32,1,45,47,1,46,68,1,23,26,36,28,28,31,31,31,32,32,32,50,37,37,45,38,5,61,42,39,35,77,41,58,55,74,9,32,32,9,14,66,54,9,40,5,59,40,27,31,30,27,28,27,31,43,46,42,61,13,36,45,30,13,50,34,13,50,33,13,78,31,13,78,30,13,78,30,13,78,34,13,18,58,13,9,101,5,76,56,56,39,30,27,39,40,31,31,34,9,5,18,60,5,23,49,5,27,43,48,9,5,32,43,53,9,5,93,36,114,9,5,27,43,48,9,5,32,43,53,9,5,31,47,52,9,5,36,47,57,9,5,38,47,59,9,5,43,47,64,9,5,25,41,46,9,5,30,41,51,9,5,40,50,61,9,5,45,50,66,9,5,48,41,69,9,5,53,55,74,9,5,58,55,79,9,5,39,44,60,9,5,55,52,76,9,5,41,46,62,9,5,52,49,73,9,5,73,58,94,9,5,36,40,57,9,5,38,44,59,9,5,42,50,63,9,5,47,50,68,9,5,49,50,70,9,5,18,35,5,17,34,5,28,45,5,25,42,5,26,43,5,26,43,5,31,60,5,19,35,5,15,31,5,13,36,5,20,43,5,25,48,5,20,83,5,21,33,28,28,18,45,52,80,51,13,26,32,13,45,31,13,48,31,13,49,32,13,52,60,22,13,27,9,36,5,22,33,63,33,41,35,34,41,43,42,44,13,40,51,13,72,55,13,47,54,9,54,46,63,13,9,47,5,28,33,28,28,22,19,53,26,32,13,45,31,13,48,31,13,49,32,13,46,27,55,60,61,68,27,13,27,9,27,21,5,26,33,18,39,12,41,41,43,44,9,41,51,9,51,5,27,33,42,68,9,54,5,19,41,46,74,9,43,50,53,78,5,33,33,20,5,24,33,50,41,61,24,9,35,59,24,9,61,74,24,9,59,75,24,9,55,82,31,79,69,69,42,50,53,17,80,81,28,13,31,9,21,5,42,33,20,20,27,33,20,43,9,38,20,43,9,42,20,20,9,55,37,37,9,14,25,9,41,25,67,9,20,5,34,33,41,35,58,42,77,38,64,44,51,17,50,78,76,21,32,17,13,59,52,13,31,9,21,5,19,49,32,53,43,45,42,5,18,33,70,24,9,21,5,39,33,39,43,28,13,31,9,21,5,31,33,62,37,38,46,49,13,49,24,9,21,5,29,33,40,28,43,51,46,17,13,62,44,13,52,38,46,49,13,64,24,9,21,5,27,36,53,54,43,45,43,52,52,5,40,33,55,55,55,27,64,24,9,21,5,38,45,44,9,21,5,31,33,41,50,27,52,24,9,21,5,39,33,41,24,38,32,36,30,30,30,34,37,38,39,34,27,52,24,9,21,5,29,37,38,64,61,32,17,59,13,40,9,21,5,25,42,49,44,56,24,9,41,41,9,21,5,28,33,38,41,48,63,28,13,45,45,13,31,9,21,5,35,33,42,36,77,24,9,44,36,76,24,9,42,36,77,24,9,44,36,76,24,9,42,36,76,24,9,44,36,75,24,9,27,26,39,43,60,36,45,59,46,142,28,13,48,9,21,5,30,33,38,39,29,42,52,28,31,55,39,72,24,9,21,5,25,33,42,38,53,56,71,28,13,50,9,21,5,29,33,42,54,54,38,48,59,13,66,24,9,21,5,26,50,18,42,43,22,13,43,41,25,13,70,43,22,13,43,43,29,58,17,25,13,28,68,13,73,9,5,24,33,41,78,27,36,68,24,9,39,44,28,13,78,52,72,28,13,45,45,13,31,9,21,5,26,33,42,43,72,24,9,51,45,72,24,9,19,27,27,58,76,27,27,43,72,24,9,85,5,20,37,78,28,13,53,9,21,5,31,46,74,52,79,13,24,9,21,5,32,33,68,39,23,36,62,36,9,30,34,54,65,27,9,42,36,24,9,35,31,9,21,5,31,33,68,39,23,36,62,36,9,30,34,54,65,27,9,41,36,24,9,35,31,9,21,5,25,33,42,42,28,13,31,9,21,5,15,50,50,35,27,24,9,21,5,24,42,42,24,9,42,42,24,9,42,48,24,9,42,53,24,9,42,48,24,9,21,5,24,41,32,27,43,24,9,21,5,56,33,48,42,72,44,68,28,13,39,53,13,31,9,21,5,43,33,40,44,40,43,46,44,49,46,75,32,17,13,31,9,21,5,39,33,41,34,42,49,24,9,27,21,5,25,41,45,36,27,24,9,21,5,31,24,25,9,26,59,9,26,37,9,26,75,9,40,5,24,31,39,48,16,80,31,65,33,24,9,21,5,41,33,68,52,49,56,103,32,17,52,13,9,27,55,51,92,56,49,28,13,76,49,40,28,13,48,9,21,5,30,32,71,78,27,9,41,5,31,32,72,78,27,9,41,5,41,46,5,28,33,42,44,28,13,45,45,13,31,9,21,5,24,33,31,55,32,76,27,9,36,5,20,33,31,51,32,76,27,9,36,5,36,35,42,39,46,54,79,17,22,53,17,13,18,40,13,24,9,21,5,21,41,31,27,48,24,9,31,21,5,31,33,31,42,45,34,35,29,13,74,27,9,20,5,1,0,24,22,31,25,26,34,33,34,35,25,57,68,5,19,44,44,9,26,5,17,43,44,9,27,5,93,23,26,25,18,16,47,19,23,22,20,19,19,23,10,5,27,22,28,25,18,23,20,29,10,40,41,5,32,29,55,55,38,49,48,66,39,45,9,5,31,34,42,47,38,40,44,9,22,32,19,18,23,20,25,10,45,5,36,32,42,44,9,23,49,33,5,25,34,44,44,9,22,26,19,18,23,20,29,10,41,5,30,32,74,44,9,23,49,33,5,40,34,44,44,9,22,35,19,18,23,20,17,29,27,10,41,47,5,39,32,45,49,44,9,23,49,33,5,48,34,44,44,9,46,30,44,77,44,9,22,31,19,33,16,55,16,16,19,20,10,35,30,5,53,34,44,44,9,36,30,19,18,23,20,17,19,29,11,35,5,44,32,78,44,9,23,49,33,5,39,34,44,44,9,30,30,19,18,16,47,17,11,5,55,34,44,44,9,30,30,19,18,16,47,17,19,11,5,41,34,44,44,9,30,33,19,18,16,47,17,11,5,52,34,80,44,9,30,33,19,18,16,47,17,19,11,5,73,34,80,44,9,30,33,19,18,16,47,17,16,18,19,11,5,36,34,80,44,9,30,30,19,18,16,47,18,11,5,38,34,44,44,9,22,34,19,18,16,47,16,42,10,35,40,5,42,34,44,44,9,22,35,19,18,23,20,19,25,10,41,5,39,32,45,49,44,9,23,49,33,5,39,34,47,44,9,41,35,38,35,19,19,22,39,39,42,43,44,9,22,40,19,18,16,47,16,16,10,26,26,28,5,1,20,26,53,59,5,58,36,60,44,40,25,34,25,18,16,24,20,18,10,33,31,23,5,56,36,58,33,5,73,36,67,35,5,1,0,21,27,34,5,17,28,31,44,22,29,42,22,33,46,22,34,47,22,29,42,22,34,47,22,39,52,22,32,45,22,25,38,22,25,38,22,27,40,22,30,43,22,33,46,22,20,62,9,5,28,48,52,9,48,48,52,9,5,26,46,50,9,70,56,9,46,50,9,5,30,50,54,9,50,54,9,5,31,51,55,9,52,51,55,9,5,26,46,50,9,46,50,9,5,31,51,55,9,48,51,55,9,5,36,56,60,9,38,38,56,60,9,5,29,49,53,9,49,53,9,5,22,42,46,9,42,46,9,5,22,42,46,9,52,42,46,9,5,24,44,48,9,52,44,48,9,5,27,47,51,9,33,47,51,9,5,30,50,54,9,40,36,50,54,9,5,1,0,46,66,1,49,64,1,41,44,1,0,18,36,42,48,54,40,33,0],"data":{"version":3,"file":"index.js.map","sources":["file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/unicode/src/unicode/ids.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/unicode/src/unicode/properties.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/unicode/src/unicode/index.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/src/reader.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/src/regexp-syntax-error.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/src/validator.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/src/parser.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/src/visitor.ts","file:///home/runner/work/deluge/deluge/node_modules/regexpp/.temp/src/index.ts"],"sourcesContent":[{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\unicode\\src\\unicode\\ids.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\unicode\\src\\unicode\\properties.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\unicode\\src\\unicode\\index.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\reader.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\regexp-syntax-error.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\validator.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\parser.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\visitor.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\index.ts"}],"names":[],"mappings":"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","sourceRoot":""},"url":null}}}